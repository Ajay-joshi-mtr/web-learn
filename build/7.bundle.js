(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{107:function(e,t){function n(e,t,n){var r,s,o,i,a;function c(){var u=Date.now()-i;u<t&&u>=0?r=setTimeout(c,t-u):(r=null,n||(a=e.apply(o,s),o=s=null))}null==t&&(t=100);var u=function(){o=this,s=arguments,i=Date.now();var u=n&&!r;return r||(r=setTimeout(c,t)),u&&(a=e.apply(o,s),o=s=null),a};return u.clear=function(){r&&(clearTimeout(r),r=null)},u.flush=function(){r&&(a=e.apply(o,s),o=s=null,clearTimeout(r),r=null)},u}n.debounce=n,e.exports=n},108:function(e,t,n){"use strict";var r=n(73);n.n(r).a},109:function(e,t,n){(e.exports=n(5)(!1)).push([e.i,".Typeahead{position:relative;z-index:5;flex-grow:1 !important}.Typeahead__list{background-color:white;position:absolute;top:45px;left:30px;width:80%;text-align:left;border-radius:2px;color:#0a0a0a}.control{margin-bottom:0 !important}.panel-block{border-bottom:none !important}.nav-left{overflow:visible !important;overflow-x:visible !important}.Typeahead__list-item{display:block;box-sizing:border-box;width:100%;color:#4a4a4a;padding:7px 15px 6px 10px;cursor:pointer}.Typeahead__list-item--current{background-color:#eee}\n",""])},110:function(e,t,n){var r=n(111)("jsonp");e.exports=function(e,t,n){"function"==typeof t&&(n=t,t={});t||(t={});var i,a,c=t.prefix||"__jp",u=t.name||c+s++,l=t.param||"callback",p=null!=t.timeout?t.timeout:6e4,d=encodeURIComponent,f=document.getElementsByTagName("script")[0]||document.head;p&&(a=setTimeout(function(){h(),n&&n(new Error("Timeout"))},p));function h(){i.parentNode&&i.parentNode.removeChild(i),window[u]=o,a&&clearTimeout(a)}return window[u]=function(e){r("jsonp got",e),h(),n&&n(null,e)},e=(e+=(~e.indexOf("?")?"&":"?")+l+"="+d(u)).replace("?&","?"),r('jsonp req "%s"',e),(i=document.createElement("script")).src=e,f.parentNode.insertBefore(i,f),function(){window[u]&&h()}};var s=0;function o(){}},111:function(e,t,n){(function(r){function s(){var e;try{e=t.storage.debug}catch(e){}return!e&&void 0!==r&&"env"in r&&(e=Object({NODE_ENV:"production"}).DEBUG),e}(t=e.exports=n(112)).log=function(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)},t.formatArgs=function(e){var n=this.useColors;if(e[0]=(n?"%c":"")+this.namespace+(n?" %c":" ")+e[0]+(n?"%c ":" ")+"+"+t.humanize(this.diff),!n)return;var r="color: "+this.color;e.splice(1,0,r,"color: inherit");var s=0,o=0;e[0].replace(/%[a-zA-Z%]/g,function(e){"%%"!==e&&(s++,"%c"===e&&(o=s))}),e.splice(o,0,r)},t.save=function(e){try{null==e?t.storage.removeItem("debug"):t.storage.debug=e}catch(e){}},t.load=s,t.useColors=function(){if("undefined"!=typeof window&&window.process&&"renderer"===window.process.type)return!0;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},t.storage="undefined"!=typeof chrome&&void 0!==chrome.storage?chrome.storage.local:function(){try{return window.localStorage}catch(e){}}(),t.colors=["lightseagreen","forestgreen","goldenrod","dodgerblue","darkorchid","crimson"],t.formatters.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}},t.enable(s())}).call(this,n(12))},112:function(e,t,n){var r;function s(e){function n(){if(n.enabled){var e=n,s=+new Date,o=s-(r||s);e.diff=o,e.prev=r,e.curr=s,r=s;for(var i=new Array(arguments.length),a=0;a<i.length;a++)i[a]=arguments[a];i[0]=t.coerce(i[0]),"string"!=typeof i[0]&&i.unshift("%O");var c=0;i[0]=i[0].replace(/%([a-zA-Z%])/g,function(n,r){if("%%"===n)return n;c++;var s=t.formatters[r];if("function"==typeof s){var o=i[c];n=s.call(e,o),i.splice(c,1),c--}return n}),t.formatArgs.call(e,i),(n.log||t.log||console.log.bind(console)).apply(e,i)}}return n.namespace=e,n.enabled=t.enabled(e),n.useColors=t.useColors(),n.color=function(e){var n,r=0;for(n in e)r=(r<<5)-r+e.charCodeAt(n),r|=0;return t.colors[Math.abs(r)%t.colors.length]}(e),"function"==typeof t.init&&t.init(n),n}(t=e.exports=s.debug=s.default=s).coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){t.enable("")},t.enable=function(e){t.save(e),t.names=[],t.skips=[];for(var n=("string"==typeof e?e:"").split(/[\s,]+/),r=n.length,s=0;s<r;s++)n[s]&&("-"===(e=n[s].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.substr(1)+"$")):t.names.push(new RegExp("^"+e+"$")))},t.enabled=function(e){var n,r;for(n=0,r=t.skips.length;n<r;n++)if(t.skips[n].test(e))return!1;for(n=0,r=t.names.length;n<r;n++)if(t.names[n].test(e))return!0;return!1},t.humanize=n(113),t.names=[],t.skips=[],t.formatters={}},113:function(e,t){var n=1e3,r=60*n,s=60*r,o=24*s,i=365.25*o;function a(e,t,n){if(!(e<t))return e<1.5*t?Math.floor(e/t)+" "+n:Math.ceil(e/t)+" "+n+"s"}e.exports=function(e,t){t=t||{};var c,u=typeof e;if("string"===u&&e.length>0)return function(e){if((e=String(e)).length>100)return;var t=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);if(!t)return;var a=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return a*i;case"days":case"day":case"d":return a*o;case"hours":case"hour":case"hrs":case"hr":case"h":return a*s;case"minutes":case"minute":case"mins":case"min":case"m":return a*r;case"seconds":case"second":case"secs":case"sec":case"s":return a*n;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return a;default:return}}(e);if("number"===u&&!1===isNaN(e))return t.long?a(c=e,o,"day")||a(c,s,"hour")||a(c,r,"minute")||a(c,n,"second")||c+" ms":function(e){if(e>=o)return Math.round(e/o)+"d";if(e>=s)return Math.round(e/s)+"h";if(e>=r)return Math.round(e/r)+"m";if(e>=n)return Math.round(e/n)+"s";return e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},114:function(e,t,n){"use strict";var r=n(74);n.n(r).a},115:function(e,t,n){(e.exports=n(5)(!1)).push([e.i,".Search{position:relative;flex-grow:1 !important}\n",""])},116:function(e,t,n){"use strict";var r=n(75);n.n(r).a},117:function(e,t,n){(e.exports=n(5)(!1)).push([e.i,".header[data-v-0e34edb4]{min-height:70px;background-color:white;position:fixed !important;top:0;left:0;right:0;z-index:4}.logo img[data-v-0e34edb4]{max-height:35px}.nav-left[data-v-0e34edb4]{flex-basis:auto}.social-buttons[data-v-0e34edb4]{margin-right:6px}.social-buttons .button[data-v-0e34edb4]{color:#4a4a4a}\n",""])},173:function(e,t,n){"use strict";n.r(t);var r=n(3),s=n(107),o=n.n(s),i={props:{items:{type:Array,required:!0},placeholder:String},data:function(){return{current:-1,query:"",show:!1}},computed:{selected:function(){return-1!==this.current?this.items[this.current]:this.query},hasItems:function(){return this.items.length>0}},methods:{isCurrent:function(e){return this.current==e},setCurrent:function(e){this.current=e},hit:function(){this.query&&(this.query=this.selected,this.reset(),this.$emit("hit",this.selected,this.current))},update:function(e){(e.keyCode>=48&&e.keyCode<=90||8==e.keyCode||32==e.keyCode)&&(console.log(this.query),this.show=!0,this.$emit("type",this.query))},up:function(){this.current>0?this.current--:-1===this.current?this.current=this.items.length-1:this.current=-1},down:function(){this.current<this.items.length-1?this.current++:this.current=-1},reset:function(){this.show=!1,this.current=-1}},watch:{selected:function(e){}},created:function(){this.update=o()(this.update,300)}},a=(n(108),n(4)),c=Object(a.a)(i,function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"Typeahead"},[n("div",{staticClass:"control has-icon is-fullwidth"},[n("input",{directives:[{name:"model",rawName:"v-model",value:e.query,expression:"query"}],staticClass:"input is-medium is-expanded",attrs:{type:"text",autocomplete:"off",placeholder:e.placeholder,"aria-label":"search"},domProps:{value:e.query},on:{keyup:[function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.hit(t)},function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"esc",27,t.key,["Esc","Escape"])?null:e.reset(t)},function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"down",40,t.key,["Down","ArrowDown"])?null:e.down(t)},function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"up",38,t.key,["Up","ArrowUp"])?null:e.up(t)},e.update],input:function(t){t.target.composing||(e.query=t.target.value)}}}),n("i",{staticClass:"fa ion-ios-search-strong"})]),e.hasItems&&e.show?n("div",{staticClass:"Typeahead__list panel"},e._l(e.items,function(t,r){return n("a",{key:r,staticClass:"Typeahead__list-item",class:{"Typeahead__list-item--current":e.isCurrent(r)},on:{mousemove:function(t){return e.setCurrent(r)},click:function(t){return t.preventDefault(),e.hit(t)}}},[e._v(e._s(t))])}),0):e._e()])},[],!1,null,null,null).exports,u=n(110),l=n.n(u),p={components:{Typeahead:c},data:function(){return{suggestions:[]}},methods:{fetchSuggestions:function(e){var t=this;l()("https://suggestqueries.google.com/complete/search?client=chrome&ds=yt&q="+e,function(e,n){if(e)throw e;t.suggestions=t.limitBy(n[1],5)})},search:function(e){this.$router.push({path:"/search",query:{q:e.trim()}})}}},d=(n(114),{components:{Search:Object(a.a)(p,function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"Search"},[t("typeahead",{attrs:{items:this.suggestions,placeholder:"Search topics, channels, and videos"},on:{hit:this.search,type:this.fetchSuggestions}})],1)},[],!1,null,null,null).exports},computed:{app:function(){return r.a.app}}}),f=(n(116),Object(a.a)(d,function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("header",{staticClass:"nav header"},[n("div",{staticClass:"container"},[n("div",{staticClass:"nav-left"},[n("router-link",{staticClass:"logo nav-item is-brand",attrs:{to:"/"}},[n("img",{staticClass:"is-hidden-mobile",attrs:{src:e.app.logo.normal,alt:e.app.name+" logo"}}),n("img",{staticClass:"is-hidden-tablet",attrs:{src:e.app.logo.mini,alt:e.app.name+" logo"}})]),n("search",{staticClass:"nav-item"})],1),n("div",{staticClass:"nav-right is-hidden-mobile"},[n("div",{staticClass:"nav-item social-buttons"},[n("a",{staticClass:"button",attrs:{href:"https://github.com/"+e.app.github.repo,target:"_blank",rel:"noopener noreferrer"}},[e._m(0),n("span",[e._v("GitHub")])]),n("a",{staticClass:"button",attrs:{href:"https://twitter.com/intent/tweet?text="+e.app.twitter.tweet+"&url="+e.app.url+"&via="+e.app.twitter.username,target:"_blank",rel:"noopener noreferrer"}},[e._m(1),n("span",[e._v("Tweet")])])])])])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("span",{staticClass:"icon"},[t("i",{staticClass:"ion-social-github"})])},function(){var e=this.$createElement,t=this._self._c||e;return t("span",{staticClass:"icon"},[t("i",{staticClass:"ion-social-twitter"})])}],!1,null,"0e34edb4",null));t.default=f.exports},73:function(e,t,n){var r=n(109);"string"==typeof r&&(r=[[e.i,r,""]]);n(6)(r,{});r.locals&&(e.exports=r.locals)},74:function(e,t,n){var r=n(115);"string"==typeof r&&(r=[[e.i,r,""]]);n(6)(r,{});r.locals&&(e.exports=r.locals)},75:function(e,t,n){var r=n(117);"string"==typeof r&&(r=[[e.i,r,""]]);n(6)(r,{});r.locals&&(e.exports=r.locals)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVib3VuY2UvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvVHlwZWFoZWFkLnZ1ZT81NjAyIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1R5cGVhaGVhZC52dWU/MGI0YSIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvanNvbnAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlYnVnL3NyYy9icm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWJ1Zy9zcmMvZGVidWcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlYnVnL25vZGVfbW9kdWxlcy9tcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9TZWFyY2gudnVlPzgxMmIiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvU2VhcmNoLnZ1ZT82M2NjIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0hlYWRlci52dWU/YTdhMCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9IZWFkZXIudnVlPzMzYTIiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvSGVhZGVyLnZ1ZT82ZTQ0Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1R5cGVhaGVhZC52dWU/ZGZmZCIsIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvVHlwZWFoZWFkLnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9UeXBlYWhlYWQudnVlIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1R5cGVhaGVhZC52dWU/ODM5ZCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9TZWFyY2gudnVlPzdhNjYiLCJ3ZWJwYWNrOi8vL3NyYy9jb21wb25lbnRzL1NlYXJjaC52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvSGVhZGVyLnZ1ZT9iNWE2Iiwid2VicGFjazovLy9zcmMvY29tcG9uZW50cy9IZWFkZXIudnVlIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1NlYXJjaC52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvU2VhcmNoLnZ1ZT9hMTlkIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0hlYWRlci52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvVHlwZWFoZWFkLnZ1ZT83YjJlIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1NlYXJjaC52dWU/ZDliNSIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9IZWFkZXIudnVlPzEwZWUiXSwibmFtZXMiOlsiZGVib3VuY2UiLCJmdW5jIiwid2FpdCIsImltbWVkaWF0ZSIsInRpbWVvdXQiLCJhcmdzIiwiY29udGV4dCIsInRpbWVzdGFtcCIsInJlc3VsdCIsImxhdGVyIiwibGFzdCIsIkRhdGUiLCJub3ciLCJzZXRUaW1lb3V0IiwiYXBwbHkiLCJkZWJvdW5jZWQiLCJ0aGlzIiwiYXJndW1lbnRzIiwiY2FsbE5vdyIsImNsZWFyIiwiY2xlYXJUaW1lb3V0IiwiZmx1c2giLCJtb2R1bGUiLCJleHBvcnRzIiwicHVzaCIsImkiLCJkZWJ1ZyIsInVybCIsIm9wdHMiLCJmbiIsInNjcmlwdCIsInRpbWVyIiwicHJlZml4IiwiaWQiLCJuYW1lIiwiY291bnQiLCJwYXJhbSIsImVuYyIsImVuY29kZVVSSUNvbXBvbmVudCIsInRhcmdldCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJoZWFkIiwiY2xlYW51cCIsIkVycm9yIiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwid2luZG93Iiwibm9vcCIsImRhdGEiLCJpbmRleE9mIiwicmVwbGFjZSIsImNyZWF0ZUVsZW1lbnQiLCJzcmMiLCJpbnNlcnRCZWZvcmUiLCJsb2FkIiwiciIsInN0b3JhZ2UiLCJlIiwicHJvY2VzcyIsIkRFQlVHIiwibG9nIiwiY29uc29sZSIsIkZ1bmN0aW9uIiwicHJvdG90eXBlIiwiY2FsbCIsImZvcm1hdEFyZ3MiLCJ1c2VDb2xvcnMiLCJuYW1lc3BhY2UiLCJodW1hbml6ZSIsImRpZmYiLCJjIiwiY29sb3IiLCJzcGxpY2UiLCJpbmRleCIsImxhc3RDIiwibWF0Y2giLCJzYXZlIiwibmFtZXNwYWNlcyIsInJlbW92ZUl0ZW0iLCJ0eXBlIiwiZG9jdW1lbnRFbGVtZW50Iiwic3R5bGUiLCJXZWJraXRBcHBlYXJhbmNlIiwiZmlyZWJ1ZyIsImV4Y2VwdGlvbiIsInRhYmxlIiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwidG9Mb3dlckNhc2UiLCJwYXJzZUludCIsIlJlZ0V4cCIsIiQxIiwiY2hyb21lIiwibG9jYWwiLCJsb2NhbFN0b3JhZ2UiLCJsb2NhbHN0b3JhZ2UiLCJjb2xvcnMiLCJmb3JtYXR0ZXJzIiwiaiIsInYiLCJKU09OIiwic3RyaW5naWZ5IiwiZXJyIiwibWVzc2FnZSIsImVuYWJsZSIsInByZXZUaW1lIiwiY3JlYXRlRGVidWciLCJlbmFibGVkIiwic2VsZiIsImN1cnIiLCJtcyIsInByZXYiLCJBcnJheSIsImxlbmd0aCIsImNvZXJjZSIsInVuc2hpZnQiLCJmb3JtYXQiLCJmb3JtYXR0ZXIiLCJ2YWwiLCJiaW5kIiwiaGFzaCIsImNoYXJDb2RlQXQiLCJNYXRoIiwiYWJzIiwic2VsZWN0Q29sb3IiLCJpbml0Iiwic3RhY2siLCJkaXNhYmxlIiwibmFtZXMiLCJza2lwcyIsInNwbGl0IiwibGVuIiwic3Vic3RyIiwidGVzdCIsInMiLCJtIiwiaCIsImQiLCJ5IiwicGx1cmFsIiwibiIsImZsb29yIiwiY2VpbCIsIm9wdGlvbnMiLCJzdHIiLCJTdHJpbmciLCJleGVjIiwicGFyc2VGbG9hdCIsInBhcnNlIiwiaXNOYU4iLCJsb25nIiwicm91bmQiLCJmbXRTaG9ydCIsInByb3BzIiwiaXRlbXMiLCJyZXF1aXJlZCIsInBsYWNlaG9sZGVyIiwiY3VycmVudCIsInF1ZXJ5Iiwic2hvdyIsImNvbXB1dGVkIiwic2VsZWN0ZWQiLCJoYXNJdGVtcyIsIm1ldGhvZHMiLCJpc0N1cnJlbnQiLCJzZXRDdXJyZW50IiwiaGl0IiwicmVzZXQiLCIkZW1pdCIsInVwZGF0ZSIsInVwIiwiZG93biIsIndhdGNoIiwiY3JlYXRlZCIsIl92bSIsIl9oIiwiJGNyZWF0ZUVsZW1lbnQiLCJfYyIsIl9zZWxmIiwic3RhdGljQ2xhc3MiLCJkaXJlY3RpdmVzIiwicmF3TmFtZSIsInZhbHVlIiwiZXhwcmVzc2lvbiIsImF0dHJzIiwiZG9tUHJvcHMiLCJvbiIsIiRldmVudCIsIl9rIiwia2V5Q29kZSIsImtleSIsImNvbXBvc2luZyIsIl9sIiwiaXRlbSIsImNsYXNzIiwicHJldmVudERlZmF1bHQiLCJfdiIsIl9zIiwiX2UiLCJjb21wb25lbnRzIiwic3VnZ2VzdGlvbnMiLCJmZXRjaFN1Z2dlc3Rpb25zIiwic2VhcmNoIiwiJHJvdXRlciIsImFwcCIsImxvZ28iLCJub3JtYWwiLCJtaW5pIiwiZ2l0aHViIiwicmVwbyIsIl9tIiwidHdpdHRlciIsInR3ZWV0IiwidXNlcm5hbWUiLCJjb250ZW50IiwibG9jYWxzIl0sIm1hcHBpbmdzIjoiMkVBY0EsU0FBU0EsRUFBU0MsRUFBTUMsRUFBTUMsR0FDNUIsSUFBSUMsRUFBU0MsRUFBTUMsRUFBU0MsRUFBV0MsRUFHdkMsU0FBU0MsSUFDUCxJQUFJQyxFQUFPQyxLQUFLQyxNQUFRTCxFQUVwQkcsRUFBT1IsR0FBUVEsR0FBUSxFQUN6Qk4sRUFBVVMsV0FBV0osRUFBT1AsRUFBT1EsSUFFbkNOLEVBQVUsS0FDTEQsSUFDSEssRUFBU1AsRUFBS2EsTUFBTVIsRUFBU0QsR0FDN0JDLEVBQVVELEVBQU8sT0FYbkIsTUFBUUgsSUFBTUEsRUFBTyxLQWdCekIsSUFBSWEsRUFBWSxXQUNkVCxFQUFVVSxLQUNWWCxFQUFPWSxVQUNQVixFQUFZSSxLQUFLQyxNQUNqQixJQUFJTSxFQUFVZixJQUFjQyxFQU81QixPQU5LQSxJQUFTQSxFQUFVUyxXQUFXSixFQUFPUCxJQUN0Q2dCLElBQ0ZWLEVBQVNQLEVBQUthLE1BQU1SLEVBQVNELEdBQzdCQyxFQUFVRCxFQUFPLE1BR1pHLEdBb0JULE9BakJBTyxFQUFVSSxNQUFRLFdBQ1pmLElBQ0ZnQixhQUFhaEIsR0FDYkEsRUFBVSxPQUlkVyxFQUFVTSxNQUFRLFdBQ1pqQixJQUNGSSxFQUFTUCxFQUFLYSxNQUFNUixFQUFTRCxHQUM3QkMsRUFBVUQsRUFBTyxLQUVqQmUsYUFBYWhCLEdBQ2JBLEVBQVUsT0FJUFcsRUFJVGYsRUFBU0EsU0FBV0EsRUFFcEJzQixFQUFPQyxRQUFVdkIsRyxpQ0NyRWpCLG1CQUFrVyxHLHFCQ0F4VnNCLEVBQU9DLFFBQVUsRUFBUSxFQUFSLEVBQTZELElBRWhGQyxLQUFLLENBQUNGLEVBQU9HLEVBQUksOGdCQUErZ0IsTSxvQkNFeGlCLElBQUlDLEVBQVEsRUFBUSxJQUFSLENBQWlCLFNBTTdCSixFQUFPQyxRQTRCUCxTQUFlSSxFQUFLQyxFQUFNQyxHQUNwQixtQkFBcUJELElBQ3ZCQyxFQUFLRCxFQUNMQSxFQUFPLElBRUpBLElBQU1BLEVBQU8sSUFFbEIsSUFVSUUsRUFDQUMsRUFYQUMsRUFBU0osRUFBS0ksUUFBVSxPQUl4QkMsRUFBS0wsRUFBS00sTUFBU0YsRUFBVUcsSUFFN0JDLEVBQVFSLEVBQUtRLE9BQVMsV0FDdEJoQyxFQUFVLE1BQVF3QixFQUFLeEIsUUFBVXdCLEVBQUt4QixRQUFVLElBQ2hEaUMsRUFBTUMsbUJBQ05DLEVBQVNDLFNBQVNDLHFCQUFxQixVQUFVLElBQU1ELFNBQVNFLEtBS2hFdEMsSUFDRjJCLEVBQVFsQixXQUFXLFdBQ2pCOEIsSUFDSWQsR0FBSUEsRUFBRyxJQUFJZSxNQUFNLGFBQ3BCeEMsSUFHTCxTQUFTdUMsSUFDSGIsRUFBT2UsWUFBWWYsRUFBT2UsV0FBV0MsWUFBWWhCLEdBQ3JEaUIsT0FBT2QsR0FBTWUsRUFDVGpCLEdBQU9YLGFBQWFXLEdBMEIxQixPQWpCQWdCLE9BQU9kLEdBQU0sU0FBU2dCLEdBQ3BCdkIsRUFBTSxZQUFhdUIsR0FDbkJOLElBQ0lkLEdBQUlBLEVBQUcsS0FBTW9CLElBS25CdEIsR0FEQUEsS0FBU0EsRUFBSXVCLFFBQVEsS0FBTyxJQUFNLEtBQU9kLEVBQVEsSUFBTUMsRUFBSUosSUFDakRrQixRQUFRLEtBQU0sS0FFeEJ6QixFQUFNLGlCQUFrQkMsSUFHeEJHLEVBQVNVLFNBQVNZLGNBQWMsV0FDekJDLElBQU0xQixFQUNiWSxFQUFPTSxXQUFXUyxhQUFheEIsRUFBUVMsR0FyQnZDLFdBQ01RLE9BQU9kLElBQ1RVLE1BMUROLElBQUlSLEVBQVEsRUFNWixTQUFTYSxPLHFCQ3RCVCxZQXFKQSxTQUFTTyxJQUNQLElBQUlDLEVBQ0osSUFDRUEsRUFBSWpDLEVBQVFrQyxRQUFRL0IsTUFDcEIsTUFBTWdDLElBT1IsT0FKS0YsUUFBd0IsSUFBWkcsR0FBMkIsUUFBU0EsSUFDbkRILEVBQUksZ0NBQVlJLE9BR1hKLEdBMUpUakMsRUFBVUQsRUFBT0MsUUFBVSxFQUFRLE1BQzNCc0MsSUE4R1IsV0FHRSxNQUFPLGlCQUFvQkMsU0FDdEJBLFFBQVFELEtBQ1JFLFNBQVNDLFVBQVVsRCxNQUFNbUQsS0FBS0gsUUFBUUQsSUFBS0MsUUFBUzdDLFlBbEgzRE0sRUFBUTJDLFdBcUVSLFNBQW9CN0QsR0FDbEIsSUFBSThELEVBQVluRCxLQUFLbUQsVUFTckIsR0FQQTlELEVBQUssSUFBTThELEVBQVksS0FBTyxJQUMxQm5ELEtBQUtvRCxXQUNKRCxFQUFZLE1BQVEsS0FDckI5RCxFQUFLLElBQ0o4RCxFQUFZLE1BQVEsS0FDckIsSUFBTTVDLEVBQVE4QyxTQUFTckQsS0FBS3NELE9BRTNCSCxFQUFXLE9BRWhCLElBQUlJLEVBQUksVUFBWXZELEtBQUt3RCxNQUN6Qm5FLEVBQUtvRSxPQUFPLEVBQUcsRUFBR0YsRUFBRyxrQkFLckIsSUFBSUcsRUFBUSxFQUNSQyxFQUFRLEVBQ1p0RSxFQUFLLEdBQUc4QyxRQUFRLGNBQWUsU0FBU3lCLEdBQ2xDLE9BQVNBLElBQ2JGLElBQ0ksT0FBU0UsSUFHWEQsRUFBUUQsTUFJWnJFLEVBQUtvRSxPQUFPRSxFQUFPLEVBQUdKLElBbEd4QmhELEVBQVFzRCxLQTJIUixTQUFjQyxHQUNaLElBQ00sTUFBUUEsRUFDVnZELEVBQVFrQyxRQUFRc0IsV0FBVyxTQUUzQnhELEVBQVFrQyxRQUFRL0IsTUFBUW9ELEVBRTFCLE1BQU1wQixNQWpJVm5DLEVBQVFnQyxLQUFPQSxFQUNmaEMsRUFBUTRDLFVBMkJSLFdBSUUsR0FBc0Isb0JBQVhwQixRQUEwQkEsT0FBT1ksU0FBbUMsYUFBeEJaLE9BQU9ZLFFBQVFxQixLQUNwRSxPQUFPLEVBS1QsTUFBNEIsb0JBQWJ4QyxVQUE0QkEsU0FBU3lDLGlCQUFtQnpDLFNBQVN5QyxnQkFBZ0JDLE9BQVMxQyxTQUFTeUMsZ0JBQWdCQyxNQUFNQyxrQkFFbkgsb0JBQVhwQyxRQUEwQkEsT0FBT2UsVUFBWWYsT0FBT2UsUUFBUXNCLFNBQVlyQyxPQUFPZSxRQUFRdUIsV0FBYXRDLE9BQU9lLFFBQVF3QixRQUdyRyxvQkFBZEMsV0FBNkJBLFVBQVVDLFdBQWFELFVBQVVDLFVBQVVDLGNBQWNiLE1BQU0sbUJBQXFCYyxTQUFTQyxPQUFPQyxHQUFJLEtBQU8sSUFFOUgsb0JBQWRMLFdBQTZCQSxVQUFVQyxXQUFhRCxVQUFVQyxVQUFVQyxjQUFjYixNQUFNLHVCQTNDeEdyRCxFQUFRa0MsUUFBVSxvQkFBc0JvQyxhQUN0QixJQUFzQkEsT0FBT3BDLFFBQzNCb0MsT0FBT3BDLFFBQVFxQyxNQXNLbkMsV0FDRSxJQUNFLE9BQU8vQyxPQUFPZ0QsYUFDZCxNQUFPckMsS0F4S1NzQyxHQU1wQnpFLEVBQVEwRSxPQUFTLENBQ2YsZ0JBQ0EsY0FDQSxZQUNBLGFBQ0EsYUFDQSxXQW1DRjFFLEVBQVEyRSxXQUFXQyxFQUFJLFNBQVNDLEdBQzlCLElBQ0UsT0FBT0MsS0FBS0MsVUFBVUYsR0FDdEIsTUFBT0csR0FDUCxNQUFPLCtCQUFpQ0EsRUFBSUMsVUFxR2hEakYsRUFBUWtGLE9BQU9sRCxPLHNDQ3JJZixJQUFJbUQsRUE0QkosU0FBU0MsRUFBWXZDLEdBRW5CLFNBQVMxQyxJQUVQLEdBQUtBLEVBQU1rRixRQUFYLENBRUEsSUFBSUMsRUFBT25GLEVBR1BvRixHQUFRLElBQUluRyxLQUNab0csRUFBS0QsR0FBUUosR0FBWUksR0FDN0JELEVBQUt2QyxLQUFPeUMsRUFDWkYsRUFBS0csS0FBT04sRUFDWkcsRUFBS0MsS0FBT0EsRUFDWkosRUFBV0ksRUFJWCxJQURBLElBQUl6RyxFQUFPLElBQUk0RyxNQUFNaEcsVUFBVWlHLFFBQ3RCekYsRUFBSSxFQUFHQSxFQUFJcEIsRUFBSzZHLE9BQVF6RixJQUMvQnBCLEVBQUtvQixHQUFLUixVQUFVUSxHQUd0QnBCLEVBQUssR0FBS2tCLEVBQVE0RixPQUFPOUcsRUFBSyxJQUUxQixpQkFBb0JBLEVBQUssSUFFM0JBLEVBQUsrRyxRQUFRLE1BSWYsSUFBSTFDLEVBQVEsRUFDWnJFLEVBQUssR0FBS0EsRUFBSyxHQUFHOEMsUUFBUSxnQkFBaUIsU0FBU3lCLEVBQU95QyxHQUV6RCxHQUFjLE9BQVZ6QyxFQUFnQixPQUFPQSxFQUMzQkYsSUFDQSxJQUFJNEMsRUFBWS9GLEVBQVEyRSxXQUFXbUIsR0FDbkMsR0FBSSxtQkFBc0JDLEVBQVcsQ0FDbkMsSUFBSUMsRUFBTWxILEVBQUtxRSxHQUNmRSxFQUFRMEMsRUFBVXJELEtBQUs0QyxFQUFNVSxHQUc3QmxILEVBQUtvRSxPQUFPQyxFQUFPLEdBQ25CQSxJQUVGLE9BQU9FLElBSVRyRCxFQUFRMkMsV0FBV0QsS0FBSzRDLEVBQU14RyxJQUVsQnFCLEVBQU1tQyxLQUFPdEMsRUFBUXNDLEtBQU9DLFFBQVFELElBQUkyRCxLQUFLMUQsVUFDbkRoRCxNQUFNK0YsRUFBTXhHLElBYXBCLE9BVkFxQixFQUFNMEMsVUFBWUEsRUFDbEIxQyxFQUFNa0YsUUFBVXJGLEVBQVFxRixRQUFReEMsR0FDaEMxQyxFQUFNeUMsVUFBWTVDLEVBQVE0QyxZQUMxQnpDLEVBQU04QyxNQTVFUixTQUFxQkosR0FDbkIsSUFBYzNDLEVBQVZnRyxFQUFPLEVBRVgsSUFBS2hHLEtBQUsyQyxFQUNScUQsR0FBVUEsR0FBUSxHQUFLQSxFQUFRckQsRUFBVXNELFdBQVdqRyxHQUNwRGdHLEdBQVEsRUFHVixPQUFPbEcsRUFBUTBFLE9BQU8wQixLQUFLQyxJQUFJSCxHQUFRbEcsRUFBUTBFLE9BQU9pQixRQW9FeENXLENBQVl6RCxHQUd0QixtQkFBc0I3QyxFQUFRdUcsTUFDaEN2RyxFQUFRdUcsS0FBS3BHLEdBR1JBLEdBdEhUSCxFQUFVRCxFQUFPQyxRQUFVb0YsRUFBWWpGLE1BQVFpRixFQUFxQixRQUFJQSxHQUNoRVEsT0E2TFIsU0FBZ0JJLEdBQ2QsT0FBSUEsYUFBZTNFLE1BQWMyRSxFQUFJUSxPQUFTUixFQUFJZixRQUMzQ2UsR0E5TFRoRyxFQUFReUcsUUF5SlIsV0FDRXpHLEVBQVFrRixPQUFPLEtBekpqQmxGLEVBQVFrRixPQThIUixTQUFnQjNCLEdBQ2R2RCxFQUFRc0QsS0FBS0MsR0FFYnZELEVBQVEwRyxNQUFRLEdBQ2hCMUcsRUFBUTJHLE1BQVEsR0FLaEIsSUFIQSxJQUFJQyxHQUErQixpQkFBZnJELEVBQTBCQSxFQUFhLElBQUlxRCxNQUFNLFVBQ2pFQyxFQUFNRCxFQUFNakIsT0FFUHpGLEVBQUksRUFBR0EsRUFBSTJHLEVBQUszRyxJQUNsQjBHLEVBQU0xRyxLQUVXLE9BRHRCcUQsRUFBYXFELEVBQU0xRyxHQUFHMEIsUUFBUSxNQUFPLFFBQ3RCLEdBQ2I1QixFQUFRMkcsTUFBTTFHLEtBQUssSUFBSW1FLE9BQU8sSUFBTWIsRUFBV3VELE9BQU8sR0FBSyxNQUUzRDlHLEVBQVEwRyxNQUFNekcsS0FBSyxJQUFJbUUsT0FBTyxJQUFNYixFQUFhLFFBNUl2RHZELEVBQVFxRixRQW1LUixTQUFpQjFFLEdBQ2YsSUFBSVQsRUFBRzJHLEVBQ1AsSUFBSzNHLEVBQUksRUFBRzJHLEVBQU03RyxFQUFRMkcsTUFBTWhCLE9BQVF6RixFQUFJMkcsRUFBSzNHLElBQy9DLEdBQUlGLEVBQVEyRyxNQUFNekcsR0FBRzZHLEtBQUtwRyxHQUN4QixPQUFPLEVBR1gsSUFBS1QsRUFBSSxFQUFHMkcsRUFBTTdHLEVBQVEwRyxNQUFNZixPQUFRekYsRUFBSTJHLEVBQUszRyxJQUMvQyxHQUFJRixFQUFRMEcsTUFBTXhHLEdBQUc2RyxLQUFLcEcsR0FDeEIsT0FBTyxFQUdYLE9BQU8sR0E5S1RYLEVBQVE4QyxTQUFXLEVBQVEsS0FNM0I5QyxFQUFRMEcsTUFBUSxHQUNoQjFHLEVBQVEyRyxNQUFRLEdBUWhCM0csRUFBUTJFLFdBQWEsSSxrQkN4QnJCLElBQUlxQyxFQUFJLElBQ0pDLEVBQVEsR0FBSkQsRUFDSkUsRUFBUSxHQUFKRCxFQUNKRSxFQUFRLEdBQUpELEVBQ0pFLEVBQVEsT0FBSkQsRUF1SVIsU0FBU0UsRUFBTzdCLEVBQUk4QixFQUFHM0csR0FDckIsS0FBSTZFLEVBQUs4QixHQUdULE9BQUk5QixFQUFTLElBQUo4QixFQUNBbEIsS0FBS21CLE1BQU0vQixFQUFLOEIsR0FBSyxJQUFNM0csRUFFN0J5RixLQUFLb0IsS0FBS2hDLEVBQUs4QixHQUFLLElBQU0zRyxFQUFPLElBOUgxQ1osRUFBT0MsUUFBVSxTQUFTZ0csRUFBS3lCLEdBQzdCQSxFQUFVQSxHQUFXLEdBQ3JCLElBeUdlakMsRUF6R1gvQixTQUFjdUMsRUFDbEIsR0FBYSxXQUFUdkMsR0FBcUJ1QyxFQUFJTCxPQUFTLEVBQ3BDLE9Ba0JKLFNBQWUrQixHQUViLElBREFBLEVBQU1DLE9BQU9ELElBQ0wvQixPQUFTLElBQ2YsT0FFRixJQUFJdEMsRUFBUSx3SEFBd0h1RSxLQUNsSUYsR0FFRixJQUFLckUsRUFDSCxPQUVGLElBQUlpRSxFQUFJTyxXQUFXeEUsRUFBTSxJQUV6QixRQURZQSxFQUFNLElBQU0sTUFBTWEsZUFFNUIsSUFBSyxRQUNMLElBQUssT0FDTCxJQUFLLE1BQ0wsSUFBSyxLQUNMLElBQUssSUFDSCxPQUFPb0QsRUFBSUYsRUFDYixJQUFLLE9BQ0wsSUFBSyxNQUNMLElBQUssSUFDSCxPQUFPRSxFQUFJSCxFQUNiLElBQUssUUFDTCxJQUFLLE9BQ0wsSUFBSyxNQUNMLElBQUssS0FDTCxJQUFLLElBQ0gsT0FBT0csRUFBSUosRUFDYixJQUFLLFVBQ0wsSUFBSyxTQUNMLElBQUssT0FDTCxJQUFLLE1BQ0wsSUFBSyxJQUNILE9BQU9JLEVBQUlMLEVBQ2IsSUFBSyxVQUNMLElBQUssU0FDTCxJQUFLLE9BQ0wsSUFBSyxNQUNMLElBQUssSUFDSCxPQUFPSyxFQUFJTixFQUNiLElBQUssZUFDTCxJQUFLLGNBQ0wsSUFBSyxRQUNMLElBQUssT0FDTCxJQUFLLEtBQ0gsT0FBT00sRUFDVCxRQUNFLFFBbkVLUSxDQUFNOUIsR0FDUixHQUFhLFdBQVR2QyxJQUFvQyxJQUFmc0UsTUFBTS9CLEdBQ3BDLE9BQU95QixFQUFRTyxLQXNHVlgsRUFEUTdCLEVBckdpQlEsRUFzR2RtQixFQUFHLFFBQ25CRSxFQUFPN0IsRUFBSTBCLEVBQUcsU0FDZEcsRUFBTzdCLEVBQUl5QixFQUFHLFdBQ2RJLEVBQU83QixFQUFJd0IsRUFBRyxXQUNkeEIsRUFBSyxNQTdCVCxTQUFrQkEsR0FDaEIsR0FBSUEsR0FBTTJCLEVBQ1IsT0FBT2YsS0FBSzZCLE1BQU16QyxFQUFLMkIsR0FBSyxJQUU5QixHQUFJM0IsR0FBTTBCLEVBQ1IsT0FBT2QsS0FBSzZCLE1BQU16QyxFQUFLMEIsR0FBSyxJQUU5QixHQUFJMUIsR0FBTXlCLEVBQ1IsT0FBT2IsS0FBSzZCLE1BQU16QyxFQUFLeUIsR0FBSyxJQUU5QixHQUFJekIsR0FBTXdCLEVBQ1IsT0FBT1osS0FBSzZCLE1BQU16QyxFQUFLd0IsR0FBSyxJQUU5QixPQUFPeEIsRUFBSyxLQTFGMkIwQyxDQUFTbEMsR0FFaEQsTUFBTSxJQUFJM0UsTUFDUix3REFDRXlELEtBQUtDLFVBQVVpQixNLGlDQ2xDckIsbUJBQStWLEcscUJDQXJWakcsRUFBT0MsUUFBVSxFQUFRLEVBQVIsRUFBNkQsSUFFaEZDLEtBQUssQ0FBQ0YsRUFBT0csRUFBSSxzREFBdUQsTSxpQ0NGaEYsbUJBQXVYLEcscUJDQTdXSCxFQUFPQyxRQUFVLEVBQVEsRUFBUixFQUE2RCxJQUVoRkMsS0FBSyxDQUFDRixFQUFPRyxFQUFJLDZUQUE4VCxNLHdDQ0Z2VixJLHlCQ0F5TCxFQzZCekwsQ0FDRWlJLE1BQU8sQ0FDTEMsTUFBTyxDQUNMM0UsS0FBTWlDLE1BQ04yQyxVQUFVLEdBRVpDLFlBQWFYLFFBRWZqRyxLQVJGLFdBU0ksTUFBTyxDQUNMNkcsU0FBVSxFQUNWQyxNQUFPLEdBQ1BDLE1BQU0sSUFHVkMsU0FBVSxDQUNSQyxTQURKLFdBRU0sT0FBTixpQkFDZWxKLEtBQUsySSxNQUFNM0ksS0FBSzhJLFNBR2xCOUksS0FBSytJLE9BRWRJLFNBUkosV0FTTSxPQUFPbkosS0FBSzJJLE1BQU16QyxPQUFTLElBRy9Ca0QsUUFBUyxDQUNQQyxVQURKLFNBQ0EsR0FDTSxPQUFPckosS0FBSzhJLFNBQVdwRixHQUV6QjRGLFdBSkosU0FJQSxHQUNNdEosS0FBSzhJLFFBQVVwRixHQUVqQjZGLElBUEosV0FRQSxhQUNRdkosS0FBSytJLE1BQVEvSSxLQUFLa0osU0FDbEJsSixLQUFLd0osUUFDTHhKLEtBQUt5SixNQUFNLE1BQU96SixLQUFLa0osU0FBVWxKLEtBQUs4SSxXQUcxQ1ksT0FkSixTQWNBLElBQ0EsNkRBQ1E1RyxRQUFRRCxJQUFJN0MsS0FBSytJLE9BQ2pCL0ksS0FBS2dKLE1BQU8sRUFDWmhKLEtBQUt5SixNQUFNLE9BQVF6SixLQUFLK0ksU0FHNUJZLEdBckJKLFdBc0JVM0osS0FBSzhJLFFBQVUsRUFDakI5SSxLQUFLOEksV0FDYixpQkFDUTlJLEtBQUs4SSxRQUFVOUksS0FBSzJJLE1BQU16QyxPQUFTLEVBRW5DbEcsS0FBSzhJLFNBQVcsR0FHcEJjLEtBOUJKLFdBK0JVNUosS0FBSzhJLFFBQVU5SSxLQUFLMkksTUFBTXpDLE9BQVMsRUFDckNsRyxLQUFLOEksVUFFTDlJLEtBQUs4SSxTQUFXLEdBR3BCVSxNQXJDSixXQXNDTXhKLEtBQUtnSixNQUFPLEVBQ1poSixLQUFLOEksU0FBVyxJQUdwQmUsTUFBTyxDQUNMWCxTQURKLFNBQ0EsTUFJRVksUUExRUYsV0EyRUk5SixLQUFLMEosT0FBUyxJQUFsQixtQixnQkNyRmUsRUFYQyxZQUNkLEVDVFcsV0FBYSxJQUFJSyxFQUFJL0osS0FBU2dLLEVBQUdELEVBQUlFLGVBQW1CQyxFQUFHSCxFQUFJSSxNQUFNRCxJQUFJRixFQUFHLE9BQU9FLEVBQUcsTUFBTSxDQUFDRSxZQUFZLGFBQWEsQ0FBQ0YsRUFBRyxNQUFNLENBQUNFLFlBQVksaUNBQWlDLENBQUNGLEVBQUcsUUFBUSxDQUFDRyxXQUFXLENBQUMsQ0FBQ25KLEtBQUssUUFBUW9KLFFBQVEsVUFBVUMsTUFBT1IsRUFBUyxNQUFFUyxXQUFXLFVBQVVKLFlBQVksOEJBQThCSyxNQUFNLENBQUMsS0FBTyxPQUFPLGFBQWUsTUFBTSxZQUFjVixFQUFJbEIsWUFBWSxhQUFhLFVBQVU2QixTQUFTLENBQUMsTUFBU1gsRUFBUyxPQUFHWSxHQUFHLENBQUMsTUFBUSxDQUFDLFNBQVNDLEdBQVEsT0FBSUEsRUFBTzVHLEtBQUs5QixRQUFRLFFBQVE2SCxFQUFJYyxHQUFHRCxFQUFPRSxRQUFRLFFBQVEsR0FBR0YsRUFBT0csSUFBSSxTQUFrQixLQUFjaEIsRUFBSVIsSUFBSXFCLElBQVMsU0FBU0EsR0FBUSxPQUFJQSxFQUFPNUcsS0FBSzlCLFFBQVEsUUFBUTZILEVBQUljLEdBQUdELEVBQU9FLFFBQVEsTUFBTSxHQUFHRixFQUFPRyxJQUFJLENBQUMsTUFBTSxXQUFvQixLQUFjaEIsRUFBSVAsTUFBTW9CLElBQVMsU0FBU0EsR0FBUSxPQUFJQSxFQUFPNUcsS0FBSzlCLFFBQVEsUUFBUTZILEVBQUljLEdBQUdELEVBQU9FLFFBQVEsT0FBTyxHQUFHRixFQUFPRyxJQUFJLENBQUMsT0FBTyxjQUF1QixLQUFjaEIsRUFBSUgsS0FBS2dCLElBQVMsU0FBU0EsR0FBUSxPQUFJQSxFQUFPNUcsS0FBSzlCLFFBQVEsUUFBUTZILEVBQUljLEdBQUdELEVBQU9FLFFBQVEsS0FBSyxHQUFHRixFQUFPRyxJQUFJLENBQUMsS0FBSyxZQUFxQixLQUFjaEIsRUFBSUosR0FBR2lCLElBQVNiLEVBQUlMLFFBQVEsTUFBUSxTQUFTa0IsR0FBV0EsRUFBT3JKLE9BQU95SixZQUFxQmpCLEVBQUloQixNQUFNNkIsRUFBT3JKLE9BQU9nSixXQUFVTCxFQUFHLElBQUksQ0FBQ0UsWUFBWSwrQkFBZ0NMLEVBQUlaLFVBQVlZLEVBQUlmLEtBQU1rQixFQUFHLE1BQU0sQ0FBQ0UsWUFBWSx5QkFBeUJMLEVBQUlrQixHQUFJbEIsRUFBUyxNQUFFLFNBQVNtQixFQUFLeEgsR0FBTyxPQUFPd0csRUFBRyxJQUFJLENBQUNhLElBQUlySCxFQUFNMEcsWUFBWSx1QkFBdUJlLE1BQU0sQ0FBRSxnQ0FBaUNwQixFQUFJVixVQUFVM0YsSUFBU2lILEdBQUcsQ0FBQyxVQUFZLFNBQVNDLEdBQVEsT0FBT2IsRUFBSVQsV0FBVzVGLElBQVEsTUFBUSxTQUFTa0gsR0FBZ0MsT0FBeEJBLEVBQU9RLGlCQUF3QnJCLEVBQUlSLElBQUlxQixNQUFXLENBQUNiLEVBQUlzQixHQUFHdEIsRUFBSXVCLEdBQUdKLFFBQVcsR0FBR25CLEVBQUl3QixRQUN0a0QsSURXcEIsRUFDQSxLQUNBLEtBQ0EsTSwwQkVmb0wsRUNjdEwsQ0FDRUMsV0FBWSxDQUFkLGFBQ0V2SixLQUZGLFdBR0ksTUFBTyxDQUNMd0osWUFBYSxLQUdqQnJDLFFBQVMsQ0FDUHNDLGlCQURKLFNBQ0EsY0FDTSxJQUFOLDJGQUNRLEdBQUluRyxFQUFLLE1BQU1BLEVBQ2YsRUFBUixpQ0FHSW9HLE9BUEosU0FPQSxHQUNNM0wsS0FBSzRMLFFBQVFwTCxLQUFLLENBQXhCLHVDQzdCc0wsRyxPQ3dCdEwsQ0FDRWdMLFdBQVksQ0FBZCxPQ2pCZ0IsWUFDZCxFQ1RXLFdBQWEsSUFBaUJ4QixFQUFUaEssS0FBZ0JpSyxlQUFtQkMsRUFBbkNsSyxLQUEwQ21LLE1BQU1ELElBQUlGLEVBQUcsT0FBT0UsRUFBRyxNQUFNLENBQUNFLFlBQVksVUFBVSxDQUFDRixFQUFHLFlBQVksQ0FBQ08sTUFBTSxDQUFDLE1BQXRIekssS0FBa0l5TCxZQUFZLFlBQWMsdUNBQXVDZCxHQUFHLENBQUMsSUFBdk0zSyxLQUFpTjJMLE9BQU8sS0FBeE4zTCxLQUFtTzBMLHFCQUFxQixJQUNwUSxJRFdwQixFQUNBLEtBQ0EsS0FDQSxNLFNEV0F6QyxTQUFVLENBQ1I0QyxJQURKLFdBRU0sT0FBTyxFQUFiLFVHcEJJLEcsT0FBWSxZQUNkLEVYVFcsV0FBYSxJQUFJOUIsRUFBSS9KLEtBQVNnSyxFQUFHRCxFQUFJRSxlQUFtQkMsRUFBR0gsRUFBSUksTUFBTUQsSUFBSUYsRUFBRyxPQUFPRSxFQUFHLFNBQVMsQ0FBQ0UsWUFBWSxjQUFjLENBQUNGLEVBQUcsTUFBTSxDQUFDRSxZQUFZLGFBQWEsQ0FBQ0YsRUFBRyxNQUFNLENBQUNFLFlBQVksWUFBWSxDQUFDRixFQUFHLGNBQWMsQ0FBQ0UsWUFBWSx5QkFBeUJLLE1BQU0sQ0FBQyxHQUFLLE1BQU0sQ0FBQ1AsRUFBRyxNQUFNLENBQUNFLFlBQVksbUJBQW1CSyxNQUFNLENBQUMsSUFBTVYsRUFBSThCLElBQUlDLEtBQUtDLE9BQU8sSUFBTWhDLEVBQUk4QixJQUFJM0ssS0FBTyxXQUFXZ0osRUFBRyxNQUFNLENBQUNFLFlBQVksbUJBQW1CSyxNQUFNLENBQUMsSUFBTVYsRUFBSThCLElBQUlDLEtBQUtFLEtBQUssSUFBTWpDLEVBQUk4QixJQUFJM0ssS0FBTyxhQUFhZ0osRUFBRyxTQUFTLENBQUNFLFlBQVksY0FBYyxHQUFHRixFQUFHLE1BQU0sQ0FBQ0UsWUFBWSw4QkFBOEIsQ0FBQ0YsRUFBRyxNQUFNLENBQUNFLFlBQVksMkJBQTJCLENBQUNGLEVBQUcsSUFBSSxDQUFDRSxZQUFZLFNBQVNLLE1BQU0sQ0FBQyxLQUFPLHNCQUF3QlYsRUFBSThCLElBQUlJLE9BQU9DLEtBQUssT0FBUyxTQUFTLElBQU0sd0JBQXdCLENBQUNuQyxFQUFJb0MsR0FBRyxHQUFHakMsRUFBRyxPQUFPLENBQUNILEVBQUlzQixHQUFHLGNBQWNuQixFQUFHLElBQUksQ0FBQ0UsWUFBWSxTQUFTSyxNQUFNLENBQUMsS0FBTyx5Q0FBMkNWLEVBQUk4QixJQUFJTyxRQUFRQyxNQUFRLFFBQVV0QyxFQUFJOEIsSUFBSWxMLElBQU0sUUFBVW9KLEVBQUk4QixJQUFJTyxRQUFRRSxTQUFTLE9BQVMsU0FBUyxJQUFNLHdCQUF3QixDQUFDdkMsRUFBSW9DLEdBQUcsR0FBR2pDLEVBQUcsT0FBTyxDQUFDSCxFQUFJc0IsR0FBRyxzQkFDaGhDLENBQUMsV0FBYSxJQUFpQnJCLEVBQVRoSyxLQUFnQmlLLGVBQW1CQyxFQUFuQ2xLLEtBQTBDbUssTUFBTUQsSUFBSUYsRUFBRyxPQUFPRSxFQUFHLE9BQU8sQ0FBQ0UsWUFBWSxRQUFRLENBQUNGLEVBQUcsSUFBSSxDQUFDRSxZQUFZLHlCQUF5QixXQUFhLElBQWlCSixFQUFUaEssS0FBZ0JpSyxlQUFtQkMsRUFBbkNsSyxLQUEwQ21LLE1BQU1ELElBQUlGLEVBQUcsT0FBT0UsRUFBRyxPQUFPLENBQUNFLFlBQVksUUFBUSxDQUFDRixFQUFHLElBQUksQ0FBQ0UsWUFBWSw0QldXNVQsRUFDQSxLQUNBLFdBQ0EsT0FJYSxZLDRCQ2hCZixJQUFJbUMsRUFBVSxFQUFRLEtBQ0EsaUJBQVpBLElBQXNCQSxFQUFVLENBQUMsQ0FBQ2pNLEVBQU9HLEVBQUk4TCxFQUFTLE1BRW5ELEVBQVEsRUFBUixDQUF5REEsRUFBUyxJQUM1RUEsRUFBUUMsU0FBUWxNLEVBQU9DLFFBQVVnTSxFQUFRQyxTLG1CQ0o1QyxJQUFJRCxFQUFVLEVBQVEsS0FDQSxpQkFBWkEsSUFBc0JBLEVBQVUsQ0FBQyxDQUFDak0sRUFBT0csRUFBSThMLEVBQVMsTUFFbkQsRUFBUSxFQUFSLENBQXlEQSxFQUFTLElBQzVFQSxFQUFRQyxTQUFRbE0sRUFBT0MsUUFBVWdNLEVBQVFDLFMsbUJDSjVDLElBQUlELEVBQVUsRUFBUSxLQUNBLGlCQUFaQSxJQUFzQkEsRUFBVSxDQUFDLENBQUNqTSxFQUFPRyxFQUFJOEwsRUFBUyxNQUVuRCxFQUFRLEVBQVIsQ0FBeURBLEVBQVMsSUFDNUVBLEVBQVFDLFNBQVFsTSxFQUFPQyxRQUFVZ00sRUFBUUMiLCJmaWxlIjoiNy5idW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiwgdGhhdCwgYXMgbG9uZyBhcyBpdCBjb250aW51ZXMgdG8gYmUgaW52b2tlZCwgd2lsbCBub3RcbiAqIGJlIHRyaWdnZXJlZC4gVGhlIGZ1bmN0aW9uIHdpbGwgYmUgY2FsbGVkIGFmdGVyIGl0IHN0b3BzIGJlaW5nIGNhbGxlZCBmb3JcbiAqIE4gbWlsbGlzZWNvbmRzLiBJZiBgaW1tZWRpYXRlYCBpcyBwYXNzZWQsIHRyaWdnZXIgdGhlIGZ1bmN0aW9uIG9uIHRoZVxuICogbGVhZGluZyBlZGdlLCBpbnN0ZWFkIG9mIHRoZSB0cmFpbGluZy4gVGhlIGZ1bmN0aW9uIGFsc28gaGFzIGEgcHJvcGVydHkgJ2NsZWFyJyBcbiAqIHRoYXQgaXMgYSBmdW5jdGlvbiB3aGljaCB3aWxsIGNsZWFyIHRoZSB0aW1lciB0byBwcmV2ZW50IHByZXZpb3VzbHkgc2NoZWR1bGVkIGV4ZWN1dGlvbnMuIFxuICpcbiAqIEBzb3VyY2UgdW5kZXJzY29yZS5qc1xuICogQHNlZSBodHRwOi8vdW5zY3JpcHRhYmxlLmNvbS8yMDA5LzAzLzIwL2RlYm91bmNpbmctamF2YXNjcmlwdC1tZXRob2RzL1xuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuY3Rpb24gdG8gd3JhcFxuICogQHBhcmFtIHtOdW1iZXJ9IHRpbWVvdXQgaW4gbXMgKGAxMDBgKVxuICogQHBhcmFtIHtCb29sZWFufSB3aGV0aGVyIHRvIGV4ZWN1dGUgYXQgdGhlIGJlZ2lubmluZyAoYGZhbHNlYClcbiAqIEBhcGkgcHVibGljXG4gKi9cbmZ1bmN0aW9uIGRlYm91bmNlKGZ1bmMsIHdhaXQsIGltbWVkaWF0ZSl7XG4gIHZhciB0aW1lb3V0LCBhcmdzLCBjb250ZXh0LCB0aW1lc3RhbXAsIHJlc3VsdDtcbiAgaWYgKG51bGwgPT0gd2FpdCkgd2FpdCA9IDEwMDtcblxuICBmdW5jdGlvbiBsYXRlcigpIHtcbiAgICB2YXIgbGFzdCA9IERhdGUubm93KCkgLSB0aW1lc3RhbXA7XG5cbiAgICBpZiAobGFzdCA8IHdhaXQgJiYgbGFzdCA+PSAwKSB7XG4gICAgICB0aW1lb3V0ID0gc2V0VGltZW91dChsYXRlciwgd2FpdCAtIGxhc3QpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aW1lb3V0ID0gbnVsbDtcbiAgICAgIGlmICghaW1tZWRpYXRlKSB7XG4gICAgICAgIHJlc3VsdCA9IGZ1bmMuYXBwbHkoY29udGV4dCwgYXJncyk7XG4gICAgICAgIGNvbnRleHQgPSBhcmdzID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgdmFyIGRlYm91bmNlZCA9IGZ1bmN0aW9uKCl7XG4gICAgY29udGV4dCA9IHRoaXM7XG4gICAgYXJncyA9IGFyZ3VtZW50cztcbiAgICB0aW1lc3RhbXAgPSBEYXRlLm5vdygpO1xuICAgIHZhciBjYWxsTm93ID0gaW1tZWRpYXRlICYmICF0aW1lb3V0O1xuICAgIGlmICghdGltZW91dCkgdGltZW91dCA9IHNldFRpbWVvdXQobGF0ZXIsIHdhaXQpO1xuICAgIGlmIChjYWxsTm93KSB7XG4gICAgICByZXN1bHQgPSBmdW5jLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xuICAgICAgY29udGV4dCA9IGFyZ3MgPSBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG5cbiAgZGVib3VuY2VkLmNsZWFyID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRpbWVvdXQpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgICAgIHRpbWVvdXQgPSBudWxsO1xuICAgIH1cbiAgfTtcbiAgXG4gIGRlYm91bmNlZC5mbHVzaCA9IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aW1lb3V0KSB7XG4gICAgICByZXN1bHQgPSBmdW5jLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xuICAgICAgY29udGV4dCA9IGFyZ3MgPSBudWxsO1xuICAgICAgXG4gICAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gICAgICB0aW1lb3V0ID0gbnVsbDtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGRlYm91bmNlZDtcbn07XG5cbi8vIEFkZHMgY29tcGF0aWJpbGl0eSBmb3IgRVMgbW9kdWxlc1xuZGVib3VuY2UuZGVib3VuY2UgPSBkZWJvdW5jZTtcblxubW9kdWxlLmV4cG9ydHMgPSBkZWJvdW5jZTtcbiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzP2luZGVudGVkU3ludGF4IS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vVHlwZWFoZWFkLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmxhbmc9c2FzcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanM/aW5kZW50ZWRTeW50YXghLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9UeXBlYWhlYWQudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1zYXNzJlwiIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuVHlwZWFoZWFke3Bvc2l0aW9uOnJlbGF0aXZlO3otaW5kZXg6NTtmbGV4LWdyb3c6MSAhaW1wb3J0YW50fS5UeXBlYWhlYWRfX2xpc3R7YmFja2dyb3VuZC1jb2xvcjp3aGl0ZTtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6NDVweDtsZWZ0OjMwcHg7d2lkdGg6ODAlO3RleHQtYWxpZ246bGVmdDtib3JkZXItcmFkaXVzOjJweDtjb2xvcjojMGEwYTBhfS5jb250cm9se21hcmdpbi1ib3R0b206MCAhaW1wb3J0YW50fS5wYW5lbC1ibG9ja3tib3JkZXItYm90dG9tOm5vbmUgIWltcG9ydGFudH0ubmF2LWxlZnR7b3ZlcmZsb3c6dmlzaWJsZSAhaW1wb3J0YW50O292ZXJmbG93LXg6dmlzaWJsZSAhaW1wb3J0YW50fS5UeXBlYWhlYWRfX2xpc3QtaXRlbXtkaXNwbGF5OmJsb2NrO2JveC1zaXppbmc6Ym9yZGVyLWJveDt3aWR0aDoxMDAlO2NvbG9yOiM0YTRhNGE7cGFkZGluZzo3cHggMTVweCA2cHggMTBweDtjdXJzb3I6cG9pbnRlcn0uVHlwZWFoZWFkX19saXN0LWl0ZW0tLWN1cnJlbnR7YmFja2dyb3VuZC1jb2xvcjojZWVlfVxcblwiLCBcIlwiXSk7XG4iLCIvKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXNcbiAqL1xuXG52YXIgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdqc29ucCcpO1xuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0ganNvbnA7XG5cbi8qKlxuICogQ2FsbGJhY2sgaW5kZXguXG4gKi9cblxudmFyIGNvdW50ID0gMDtcblxuLyoqXG4gKiBOb29wIGZ1bmN0aW9uLlxuICovXG5cbmZ1bmN0aW9uIG5vb3AoKXt9XG5cbi8qKlxuICogSlNPTlAgaGFuZGxlclxuICpcbiAqIE9wdGlvbnM6XG4gKiAgLSBwYXJhbSB7U3RyaW5nfSBxcyBwYXJhbWV0ZXIgKGBjYWxsYmFja2ApXG4gKiAgLSBwcmVmaXgge1N0cmluZ30gcXMgcGFyYW1ldGVyIChgX19qcGApXG4gKiAgLSBuYW1lIHtTdHJpbmd9IHFzIHBhcmFtZXRlciAoYHByZWZpeGAgKyBpbmNyKVxuICogIC0gdGltZW91dCB7TnVtYmVyfSBob3cgbG9uZyBhZnRlciBhIHRpbWVvdXQgZXJyb3IgaXMgZW1pdHRlZCAoYDYwMDAwYClcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdXJsXG4gKiBAcGFyYW0ge09iamVjdHxGdW5jdGlvbn0gb3B0aW9uYWwgb3B0aW9ucyAvIGNhbGxiYWNrXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBvcHRpb25hbCBjYWxsYmFja1xuICovXG5cbmZ1bmN0aW9uIGpzb25wKHVybCwgb3B0cywgZm4pe1xuICBpZiAoJ2Z1bmN0aW9uJyA9PSB0eXBlb2Ygb3B0cykge1xuICAgIGZuID0gb3B0cztcbiAgICBvcHRzID0ge307XG4gIH1cbiAgaWYgKCFvcHRzKSBvcHRzID0ge307XG5cbiAgdmFyIHByZWZpeCA9IG9wdHMucHJlZml4IHx8ICdfX2pwJztcblxuICAvLyB1c2UgdGhlIGNhbGxiYWNrIG5hbWUgdGhhdCB3YXMgcGFzc2VkIGlmIG9uZSB3YXMgcHJvdmlkZWQuXG4gIC8vIG90aGVyd2lzZSBnZW5lcmF0ZSBhIHVuaXF1ZSBuYW1lIGJ5IGluY3JlbWVudGluZyBvdXIgY291bnRlci5cbiAgdmFyIGlkID0gb3B0cy5uYW1lIHx8IChwcmVmaXggKyAoY291bnQrKykpO1xuXG4gIHZhciBwYXJhbSA9IG9wdHMucGFyYW0gfHwgJ2NhbGxiYWNrJztcbiAgdmFyIHRpbWVvdXQgPSBudWxsICE9IG9wdHMudGltZW91dCA/IG9wdHMudGltZW91dCA6IDYwMDAwO1xuICB2YXIgZW5jID0gZW5jb2RlVVJJQ29tcG9uZW50O1xuICB2YXIgdGFyZ2V0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3NjcmlwdCcpWzBdIHx8IGRvY3VtZW50LmhlYWQ7XG4gIHZhciBzY3JpcHQ7XG4gIHZhciB0aW1lcjtcblxuXG4gIGlmICh0aW1lb3V0KSB7XG4gICAgdGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgICBjbGVhbnVwKCk7XG4gICAgICBpZiAoZm4pIGZuKG5ldyBFcnJvcignVGltZW91dCcpKTtcbiAgICB9LCB0aW1lb3V0KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNsZWFudXAoKXtcbiAgICBpZiAoc2NyaXB0LnBhcmVudE5vZGUpIHNjcmlwdC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHNjcmlwdCk7XG4gICAgd2luZG93W2lkXSA9IG5vb3A7XG4gICAgaWYgKHRpbWVyKSBjbGVhclRpbWVvdXQodGltZXIpO1xuICB9XG5cbiAgZnVuY3Rpb24gY2FuY2VsKCl7XG4gICAgaWYgKHdpbmRvd1tpZF0pIHtcbiAgICAgIGNsZWFudXAoKTtcbiAgICB9XG4gIH1cblxuICB3aW5kb3dbaWRdID0gZnVuY3Rpb24oZGF0YSl7XG4gICAgZGVidWcoJ2pzb25wIGdvdCcsIGRhdGEpO1xuICAgIGNsZWFudXAoKTtcbiAgICBpZiAoZm4pIGZuKG51bGwsIGRhdGEpO1xuICB9O1xuXG4gIC8vIGFkZCBxcyBjb21wb25lbnRcbiAgdXJsICs9ICh+dXJsLmluZGV4T2YoJz8nKSA/ICcmJyA6ICc/JykgKyBwYXJhbSArICc9JyArIGVuYyhpZCk7XG4gIHVybCA9IHVybC5yZXBsYWNlKCc/JicsICc/Jyk7XG5cbiAgZGVidWcoJ2pzb25wIHJlcSBcIiVzXCInLCB1cmwpO1xuXG4gIC8vIGNyZWF0ZSBzY3JpcHRcbiAgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG4gIHNjcmlwdC5zcmMgPSB1cmw7XG4gIHRhcmdldC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShzY3JpcHQsIHRhcmdldCk7XG5cbiAgcmV0dXJuIGNhbmNlbDtcbn1cbiIsIi8qKlxuICogVGhpcyBpcyB0aGUgd2ViIGJyb3dzZXIgaW1wbGVtZW50YXRpb24gb2YgYGRlYnVnKClgLlxuICpcbiAqIEV4cG9zZSBgZGVidWcoKWAgYXMgdGhlIG1vZHVsZS5cbiAqL1xuXG5leHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2RlYnVnJyk7XG5leHBvcnRzLmxvZyA9IGxvZztcbmV4cG9ydHMuZm9ybWF0QXJncyA9IGZvcm1hdEFyZ3M7XG5leHBvcnRzLnNhdmUgPSBzYXZlO1xuZXhwb3J0cy5sb2FkID0gbG9hZDtcbmV4cG9ydHMudXNlQ29sb3JzID0gdXNlQ29sb3JzO1xuZXhwb3J0cy5zdG9yYWdlID0gJ3VuZGVmaW5lZCcgIT0gdHlwZW9mIGNocm9tZVxuICAgICAgICAgICAgICAgJiYgJ3VuZGVmaW5lZCcgIT0gdHlwZW9mIGNocm9tZS5zdG9yYWdlXG4gICAgICAgICAgICAgICAgICA/IGNocm9tZS5zdG9yYWdlLmxvY2FsXG4gICAgICAgICAgICAgICAgICA6IGxvY2Fsc3RvcmFnZSgpO1xuXG4vKipcbiAqIENvbG9ycy5cbiAqL1xuXG5leHBvcnRzLmNvbG9ycyA9IFtcbiAgJ2xpZ2h0c2VhZ3JlZW4nLFxuICAnZm9yZXN0Z3JlZW4nLFxuICAnZ29sZGVucm9kJyxcbiAgJ2RvZGdlcmJsdWUnLFxuICAnZGFya29yY2hpZCcsXG4gICdjcmltc29uJ1xuXTtcblxuLyoqXG4gKiBDdXJyZW50bHkgb25seSBXZWJLaXQtYmFzZWQgV2ViIEluc3BlY3RvcnMsIEZpcmVmb3ggPj0gdjMxLFxuICogYW5kIHRoZSBGaXJlYnVnIGV4dGVuc2lvbiAoYW55IEZpcmVmb3ggdmVyc2lvbikgYXJlIGtub3duXG4gKiB0byBzdXBwb3J0IFwiJWNcIiBDU1MgY3VzdG9taXphdGlvbnMuXG4gKlxuICogVE9ETzogYWRkIGEgYGxvY2FsU3RvcmFnZWAgdmFyaWFibGUgdG8gZXhwbGljaXRseSBlbmFibGUvZGlzYWJsZSBjb2xvcnNcbiAqL1xuXG5mdW5jdGlvbiB1c2VDb2xvcnMoKSB7XG4gIC8vIE5COiBJbiBhbiBFbGVjdHJvbiBwcmVsb2FkIHNjcmlwdCwgZG9jdW1lbnQgd2lsbCBiZSBkZWZpbmVkIGJ1dCBub3QgZnVsbHlcbiAgLy8gaW5pdGlhbGl6ZWQuIFNpbmNlIHdlIGtub3cgd2UncmUgaW4gQ2hyb21lLCB3ZSdsbCBqdXN0IGRldGVjdCB0aGlzIGNhc2VcbiAgLy8gZXhwbGljaXRseVxuICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LnByb2Nlc3MgJiYgd2luZG93LnByb2Nlc3MudHlwZSA9PT0gJ3JlbmRlcmVyJykge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgLy8gaXMgd2Via2l0PyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8xNjQ1OTYwNi8zNzY3NzNcbiAgLy8gZG9jdW1lbnQgaXMgdW5kZWZpbmVkIGluIHJlYWN0LW5hdGl2ZTogaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0LW5hdGl2ZS9wdWxsLzE2MzJcbiAgcmV0dXJuICh0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCAmJiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLldlYmtpdEFwcGVhcmFuY2UpIHx8XG4gICAgLy8gaXMgZmlyZWJ1Zz8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMzk4MTIwLzM3Njc3M1xuICAgICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuY29uc29sZSAmJiAod2luZG93LmNvbnNvbGUuZmlyZWJ1ZyB8fCAod2luZG93LmNvbnNvbGUuZXhjZXB0aW9uICYmIHdpbmRvdy5jb25zb2xlLnRhYmxlKSkpIHx8XG4gICAgLy8gaXMgZmlyZWZveCA+PSB2MzE/XG4gICAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9Ub29scy9XZWJfQ29uc29sZSNTdHlsaW5nX21lc3NhZ2VzXG4gICAgKHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIG5hdmlnYXRvci51c2VyQWdlbnQgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpLm1hdGNoKC9maXJlZm94XFwvKFxcZCspLykgJiYgcGFyc2VJbnQoUmVnRXhwLiQxLCAxMCkgPj0gMzEpIHx8XG4gICAgLy8gZG91YmxlIGNoZWNrIHdlYmtpdCBpbiB1c2VyQWdlbnQganVzdCBpbiBjYXNlIHdlIGFyZSBpbiBhIHdvcmtlclxuICAgICh0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiBuYXZpZ2F0b3IudXNlckFnZW50ICYmIG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKS5tYXRjaCgvYXBwbGV3ZWJraXRcXC8oXFxkKykvKSk7XG59XG5cbi8qKlxuICogTWFwICVqIHRvIGBKU09OLnN0cmluZ2lmeSgpYCwgc2luY2Ugbm8gV2ViIEluc3BlY3RvcnMgZG8gdGhhdCBieSBkZWZhdWx0LlxuICovXG5cbmV4cG9ydHMuZm9ybWF0dGVycy5qID0gZnVuY3Rpb24odikge1xuICB0cnkge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh2KTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmV0dXJuICdbVW5leHBlY3RlZEpTT05QYXJzZUVycm9yXTogJyArIGVyci5tZXNzYWdlO1xuICB9XG59O1xuXG5cbi8qKlxuICogQ29sb3JpemUgbG9nIGFyZ3VtZW50cyBpZiBlbmFibGVkLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gZm9ybWF0QXJncyhhcmdzKSB7XG4gIHZhciB1c2VDb2xvcnMgPSB0aGlzLnVzZUNvbG9ycztcblxuICBhcmdzWzBdID0gKHVzZUNvbG9ycyA/ICclYycgOiAnJylcbiAgICArIHRoaXMubmFtZXNwYWNlXG4gICAgKyAodXNlQ29sb3JzID8gJyAlYycgOiAnICcpXG4gICAgKyBhcmdzWzBdXG4gICAgKyAodXNlQ29sb3JzID8gJyVjICcgOiAnICcpXG4gICAgKyAnKycgKyBleHBvcnRzLmh1bWFuaXplKHRoaXMuZGlmZik7XG5cbiAgaWYgKCF1c2VDb2xvcnMpIHJldHVybjtcblxuICB2YXIgYyA9ICdjb2xvcjogJyArIHRoaXMuY29sb3I7XG4gIGFyZ3Muc3BsaWNlKDEsIDAsIGMsICdjb2xvcjogaW5oZXJpdCcpXG5cbiAgLy8gdGhlIGZpbmFsIFwiJWNcIiBpcyBzb21ld2hhdCB0cmlja3ksIGJlY2F1c2UgdGhlcmUgY291bGQgYmUgb3RoZXJcbiAgLy8gYXJndW1lbnRzIHBhc3NlZCBlaXRoZXIgYmVmb3JlIG9yIGFmdGVyIHRoZSAlYywgc28gd2UgbmVlZCB0b1xuICAvLyBmaWd1cmUgb3V0IHRoZSBjb3JyZWN0IGluZGV4IHRvIGluc2VydCB0aGUgQ1NTIGludG9cbiAgdmFyIGluZGV4ID0gMDtcbiAgdmFyIGxhc3RDID0gMDtcbiAgYXJnc1swXS5yZXBsYWNlKC8lW2EtekEtWiVdL2csIGZ1bmN0aW9uKG1hdGNoKSB7XG4gICAgaWYgKCclJScgPT09IG1hdGNoKSByZXR1cm47XG4gICAgaW5kZXgrKztcbiAgICBpZiAoJyVjJyA9PT0gbWF0Y2gpIHtcbiAgICAgIC8vIHdlIG9ubHkgYXJlIGludGVyZXN0ZWQgaW4gdGhlICpsYXN0KiAlY1xuICAgICAgLy8gKHRoZSB1c2VyIG1heSBoYXZlIHByb3ZpZGVkIHRoZWlyIG93bilcbiAgICAgIGxhc3RDID0gaW5kZXg7XG4gICAgfVxuICB9KTtcblxuICBhcmdzLnNwbGljZShsYXN0QywgMCwgYyk7XG59XG5cbi8qKlxuICogSW52b2tlcyBgY29uc29sZS5sb2coKWAgd2hlbiBhdmFpbGFibGUuXG4gKiBOby1vcCB3aGVuIGBjb25zb2xlLmxvZ2AgaXMgbm90IGEgXCJmdW5jdGlvblwiLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gbG9nKCkge1xuICAvLyB0aGlzIGhhY2tlcnkgaXMgcmVxdWlyZWQgZm9yIElFOC85LCB3aGVyZVxuICAvLyB0aGUgYGNvbnNvbGUubG9nYCBmdW5jdGlvbiBkb2Vzbid0IGhhdmUgJ2FwcGx5J1xuICByZXR1cm4gJ29iamVjdCcgPT09IHR5cGVvZiBjb25zb2xlXG4gICAgJiYgY29uc29sZS5sb2dcbiAgICAmJiBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHkuY2FsbChjb25zb2xlLmxvZywgY29uc29sZSwgYXJndW1lbnRzKTtcbn1cblxuLyoqXG4gKiBTYXZlIGBuYW1lc3BhY2VzYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZXNwYWNlc1xuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gc2F2ZShuYW1lc3BhY2VzKSB7XG4gIHRyeSB7XG4gICAgaWYgKG51bGwgPT0gbmFtZXNwYWNlcykge1xuICAgICAgZXhwb3J0cy5zdG9yYWdlLnJlbW92ZUl0ZW0oJ2RlYnVnJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGV4cG9ydHMuc3RvcmFnZS5kZWJ1ZyA9IG5hbWVzcGFjZXM7XG4gICAgfVxuICB9IGNhdGNoKGUpIHt9XG59XG5cbi8qKlxuICogTG9hZCBgbmFtZXNwYWNlc2AuXG4gKlxuICogQHJldHVybiB7U3RyaW5nfSByZXR1cm5zIHRoZSBwcmV2aW91c2x5IHBlcnNpc3RlZCBkZWJ1ZyBtb2Rlc1xuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gbG9hZCgpIHtcbiAgdmFyIHI7XG4gIHRyeSB7XG4gICAgciA9IGV4cG9ydHMuc3RvcmFnZS5kZWJ1ZztcbiAgfSBjYXRjaChlKSB7fVxuXG4gIC8vIElmIGRlYnVnIGlzbid0IHNldCBpbiBMUywgYW5kIHdlJ3JlIGluIEVsZWN0cm9uLCB0cnkgdG8gbG9hZCAkREVCVUdcbiAgaWYgKCFyICYmIHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiAnZW52JyBpbiBwcm9jZXNzKSB7XG4gICAgciA9IHByb2Nlc3MuZW52LkRFQlVHO1xuICB9XG5cbiAgcmV0dXJuIHI7XG59XG5cbi8qKlxuICogRW5hYmxlIG5hbWVzcGFjZXMgbGlzdGVkIGluIGBsb2NhbFN0b3JhZ2UuZGVidWdgIGluaXRpYWxseS5cbiAqL1xuXG5leHBvcnRzLmVuYWJsZShsb2FkKCkpO1xuXG4vKipcbiAqIExvY2Fsc3RvcmFnZSBhdHRlbXB0cyB0byByZXR1cm4gdGhlIGxvY2Fsc3RvcmFnZS5cbiAqXG4gKiBUaGlzIGlzIG5lY2Vzc2FyeSBiZWNhdXNlIHNhZmFyaSB0aHJvd3NcbiAqIHdoZW4gYSB1c2VyIGRpc2FibGVzIGNvb2tpZXMvbG9jYWxzdG9yYWdlXG4gKiBhbmQgeW91IGF0dGVtcHQgdG8gYWNjZXNzIGl0LlxuICpcbiAqIEByZXR1cm4ge0xvY2FsU3RvcmFnZX1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGxvY2Fsc3RvcmFnZSgpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gd2luZG93LmxvY2FsU3RvcmFnZTtcbiAgfSBjYXRjaCAoZSkge31cbn1cbiIsIlxuLyoqXG4gKiBUaGlzIGlzIHRoZSBjb21tb24gbG9naWMgZm9yIGJvdGggdGhlIE5vZGUuanMgYW5kIHdlYiBicm93c2VyXG4gKiBpbXBsZW1lbnRhdGlvbnMgb2YgYGRlYnVnKClgLlxuICpcbiAqIEV4cG9zZSBgZGVidWcoKWAgYXMgdGhlIG1vZHVsZS5cbiAqL1xuXG5leHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBjcmVhdGVEZWJ1Zy5kZWJ1ZyA9IGNyZWF0ZURlYnVnWydkZWZhdWx0J10gPSBjcmVhdGVEZWJ1ZztcbmV4cG9ydHMuY29lcmNlID0gY29lcmNlO1xuZXhwb3J0cy5kaXNhYmxlID0gZGlzYWJsZTtcbmV4cG9ydHMuZW5hYmxlID0gZW5hYmxlO1xuZXhwb3J0cy5lbmFibGVkID0gZW5hYmxlZDtcbmV4cG9ydHMuaHVtYW5pemUgPSByZXF1aXJlKCdtcycpO1xuXG4vKipcbiAqIFRoZSBjdXJyZW50bHkgYWN0aXZlIGRlYnVnIG1vZGUgbmFtZXMsIGFuZCBuYW1lcyB0byBza2lwLlxuICovXG5cbmV4cG9ydHMubmFtZXMgPSBbXTtcbmV4cG9ydHMuc2tpcHMgPSBbXTtcblxuLyoqXG4gKiBNYXAgb2Ygc3BlY2lhbCBcIiVuXCIgaGFuZGxpbmcgZnVuY3Rpb25zLCBmb3IgdGhlIGRlYnVnIFwiZm9ybWF0XCIgYXJndW1lbnQuXG4gKlxuICogVmFsaWQga2V5IG5hbWVzIGFyZSBhIHNpbmdsZSwgbG93ZXIgb3IgdXBwZXItY2FzZSBsZXR0ZXIsIGkuZS4gXCJuXCIgYW5kIFwiTlwiLlxuICovXG5cbmV4cG9ydHMuZm9ybWF0dGVycyA9IHt9O1xuXG4vKipcbiAqIFByZXZpb3VzIGxvZyB0aW1lc3RhbXAuXG4gKi9cblxudmFyIHByZXZUaW1lO1xuXG4vKipcbiAqIFNlbGVjdCBhIGNvbG9yLlxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWVzcGFjZVxuICogQHJldHVybiB7TnVtYmVyfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gc2VsZWN0Q29sb3IobmFtZXNwYWNlKSB7XG4gIHZhciBoYXNoID0gMCwgaTtcblxuICBmb3IgKGkgaW4gbmFtZXNwYWNlKSB7XG4gICAgaGFzaCAgPSAoKGhhc2ggPDwgNSkgLSBoYXNoKSArIG5hbWVzcGFjZS5jaGFyQ29kZUF0KGkpO1xuICAgIGhhc2ggfD0gMDsgLy8gQ29udmVydCB0byAzMmJpdCBpbnRlZ2VyXG4gIH1cblxuICByZXR1cm4gZXhwb3J0cy5jb2xvcnNbTWF0aC5hYnMoaGFzaCkgJSBleHBvcnRzLmNvbG9ycy5sZW5ndGhdO1xufVxuXG4vKipcbiAqIENyZWF0ZSBhIGRlYnVnZ2VyIHdpdGggdGhlIGdpdmVuIGBuYW1lc3BhY2VgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lc3BhY2VcbiAqIEByZXR1cm4ge0Z1bmN0aW9ufVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBjcmVhdGVEZWJ1ZyhuYW1lc3BhY2UpIHtcblxuICBmdW5jdGlvbiBkZWJ1ZygpIHtcbiAgICAvLyBkaXNhYmxlZD9cbiAgICBpZiAoIWRlYnVnLmVuYWJsZWQpIHJldHVybjtcblxuICAgIHZhciBzZWxmID0gZGVidWc7XG5cbiAgICAvLyBzZXQgYGRpZmZgIHRpbWVzdGFtcFxuICAgIHZhciBjdXJyID0gK25ldyBEYXRlKCk7XG4gICAgdmFyIG1zID0gY3VyciAtIChwcmV2VGltZSB8fCBjdXJyKTtcbiAgICBzZWxmLmRpZmYgPSBtcztcbiAgICBzZWxmLnByZXYgPSBwcmV2VGltZTtcbiAgICBzZWxmLmN1cnIgPSBjdXJyO1xuICAgIHByZXZUaW1lID0gY3VycjtcblxuICAgIC8vIHR1cm4gdGhlIGBhcmd1bWVudHNgIGludG8gYSBwcm9wZXIgQXJyYXlcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspIHtcbiAgICAgIGFyZ3NbaV0gPSBhcmd1bWVudHNbaV07XG4gICAgfVxuXG4gICAgYXJnc1swXSA9IGV4cG9ydHMuY29lcmNlKGFyZ3NbMF0pO1xuXG4gICAgaWYgKCdzdHJpbmcnICE9PSB0eXBlb2YgYXJnc1swXSkge1xuICAgICAgLy8gYW55dGhpbmcgZWxzZSBsZXQncyBpbnNwZWN0IHdpdGggJU9cbiAgICAgIGFyZ3MudW5zaGlmdCgnJU8nKTtcbiAgICB9XG5cbiAgICAvLyBhcHBseSBhbnkgYGZvcm1hdHRlcnNgIHRyYW5zZm9ybWF0aW9uc1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgYXJnc1swXSA9IGFyZ3NbMF0ucmVwbGFjZSgvJShbYS16QS1aJV0pL2csIGZ1bmN0aW9uKG1hdGNoLCBmb3JtYXQpIHtcbiAgICAgIC8vIGlmIHdlIGVuY291bnRlciBhbiBlc2NhcGVkICUgdGhlbiBkb24ndCBpbmNyZWFzZSB0aGUgYXJyYXkgaW5kZXhcbiAgICAgIGlmIChtYXRjaCA9PT0gJyUlJykgcmV0dXJuIG1hdGNoO1xuICAgICAgaW5kZXgrKztcbiAgICAgIHZhciBmb3JtYXR0ZXIgPSBleHBvcnRzLmZvcm1hdHRlcnNbZm9ybWF0XTtcbiAgICAgIGlmICgnZnVuY3Rpb24nID09PSB0eXBlb2YgZm9ybWF0dGVyKSB7XG4gICAgICAgIHZhciB2YWwgPSBhcmdzW2luZGV4XTtcbiAgICAgICAgbWF0Y2ggPSBmb3JtYXR0ZXIuY2FsbChzZWxmLCB2YWwpO1xuXG4gICAgICAgIC8vIG5vdyB3ZSBuZWVkIHRvIHJlbW92ZSBgYXJnc1tpbmRleF1gIHNpbmNlIGl0J3MgaW5saW5lZCBpbiB0aGUgYGZvcm1hdGBcbiAgICAgICAgYXJncy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICBpbmRleC0tO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG1hdGNoO1xuICAgIH0pO1xuXG4gICAgLy8gYXBwbHkgZW52LXNwZWNpZmljIGZvcm1hdHRpbmcgKGNvbG9ycywgZXRjLilcbiAgICBleHBvcnRzLmZvcm1hdEFyZ3MuY2FsbChzZWxmLCBhcmdzKTtcblxuICAgIHZhciBsb2dGbiA9IGRlYnVnLmxvZyB8fCBleHBvcnRzLmxvZyB8fCBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpO1xuICAgIGxvZ0ZuLmFwcGx5KHNlbGYsIGFyZ3MpO1xuICB9XG5cbiAgZGVidWcubmFtZXNwYWNlID0gbmFtZXNwYWNlO1xuICBkZWJ1Zy5lbmFibGVkID0gZXhwb3J0cy5lbmFibGVkKG5hbWVzcGFjZSk7XG4gIGRlYnVnLnVzZUNvbG9ycyA9IGV4cG9ydHMudXNlQ29sb3JzKCk7XG4gIGRlYnVnLmNvbG9yID0gc2VsZWN0Q29sb3IobmFtZXNwYWNlKTtcblxuICAvLyBlbnYtc3BlY2lmaWMgaW5pdGlhbGl6YXRpb24gbG9naWMgZm9yIGRlYnVnIGluc3RhbmNlc1xuICBpZiAoJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIGV4cG9ydHMuaW5pdCkge1xuICAgIGV4cG9ydHMuaW5pdChkZWJ1Zyk7XG4gIH1cblxuICByZXR1cm4gZGVidWc7XG59XG5cbi8qKlxuICogRW5hYmxlcyBhIGRlYnVnIG1vZGUgYnkgbmFtZXNwYWNlcy4gVGhpcyBjYW4gaW5jbHVkZSBtb2Rlc1xuICogc2VwYXJhdGVkIGJ5IGEgY29sb24gYW5kIHdpbGRjYXJkcy5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZXNwYWNlc1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBlbmFibGUobmFtZXNwYWNlcykge1xuICBleHBvcnRzLnNhdmUobmFtZXNwYWNlcyk7XG5cbiAgZXhwb3J0cy5uYW1lcyA9IFtdO1xuICBleHBvcnRzLnNraXBzID0gW107XG5cbiAgdmFyIHNwbGl0ID0gKHR5cGVvZiBuYW1lc3BhY2VzID09PSAnc3RyaW5nJyA/IG5hbWVzcGFjZXMgOiAnJykuc3BsaXQoL1tcXHMsXSsvKTtcbiAgdmFyIGxlbiA9IHNwbGl0Lmxlbmd0aDtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgaWYgKCFzcGxpdFtpXSkgY29udGludWU7IC8vIGlnbm9yZSBlbXB0eSBzdHJpbmdzXG4gICAgbmFtZXNwYWNlcyA9IHNwbGl0W2ldLnJlcGxhY2UoL1xcKi9nLCAnLio/Jyk7XG4gICAgaWYgKG5hbWVzcGFjZXNbMF0gPT09ICctJykge1xuICAgICAgZXhwb3J0cy5za2lwcy5wdXNoKG5ldyBSZWdFeHAoJ14nICsgbmFtZXNwYWNlcy5zdWJzdHIoMSkgKyAnJCcpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZXhwb3J0cy5uYW1lcy5wdXNoKG5ldyBSZWdFeHAoJ14nICsgbmFtZXNwYWNlcyArICckJykpO1xuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIERpc2FibGUgZGVidWcgb3V0cHV0LlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gZGlzYWJsZSgpIHtcbiAgZXhwb3J0cy5lbmFibGUoJycpO1xufVxuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgZ2l2ZW4gbW9kZSBuYW1lIGlzIGVuYWJsZWQsIGZhbHNlIG90aGVyd2lzZS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZVxuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gZW5hYmxlZChuYW1lKSB7XG4gIHZhciBpLCBsZW47XG4gIGZvciAoaSA9IDAsIGxlbiA9IGV4cG9ydHMuc2tpcHMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICBpZiAoZXhwb3J0cy5za2lwc1tpXS50ZXN0KG5hbWUpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIGZvciAoaSA9IDAsIGxlbiA9IGV4cG9ydHMubmFtZXMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICBpZiAoZXhwb3J0cy5uYW1lc1tpXS50ZXN0KG5hbWUpKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG4vKipcbiAqIENvZXJjZSBgdmFsYC5cbiAqXG4gKiBAcGFyYW0ge01peGVkfSB2YWxcbiAqIEByZXR1cm4ge01peGVkfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gY29lcmNlKHZhbCkge1xuICBpZiAodmFsIGluc3RhbmNlb2YgRXJyb3IpIHJldHVybiB2YWwuc3RhY2sgfHwgdmFsLm1lc3NhZ2U7XG4gIHJldHVybiB2YWw7XG59XG4iLCIvKipcbiAqIEhlbHBlcnMuXG4gKi9cblxudmFyIHMgPSAxMDAwO1xudmFyIG0gPSBzICogNjA7XG52YXIgaCA9IG0gKiA2MDtcbnZhciBkID0gaCAqIDI0O1xudmFyIHkgPSBkICogMzY1LjI1O1xuXG4vKipcbiAqIFBhcnNlIG9yIGZvcm1hdCB0aGUgZ2l2ZW4gYHZhbGAuXG4gKlxuICogT3B0aW9uczpcbiAqXG4gKiAgLSBgbG9uZ2AgdmVyYm9zZSBmb3JtYXR0aW5nIFtmYWxzZV1cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ3xOdW1iZXJ9IHZhbFxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICogQHRocm93cyB7RXJyb3J9IHRocm93IGFuIGVycm9yIGlmIHZhbCBpcyBub3QgYSBub24tZW1wdHkgc3RyaW5nIG9yIGEgbnVtYmVyXG4gKiBAcmV0dXJuIHtTdHJpbmd8TnVtYmVyfVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHZhbCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsO1xuICBpZiAodHlwZSA9PT0gJ3N0cmluZycgJiYgdmFsLmxlbmd0aCA+IDApIHtcbiAgICByZXR1cm4gcGFyc2UodmFsKTtcbiAgfSBlbHNlIGlmICh0eXBlID09PSAnbnVtYmVyJyAmJiBpc05hTih2YWwpID09PSBmYWxzZSkge1xuICAgIHJldHVybiBvcHRpb25zLmxvbmcgPyBmbXRMb25nKHZhbCkgOiBmbXRTaG9ydCh2YWwpO1xuICB9XG4gIHRocm93IG5ldyBFcnJvcihcbiAgICAndmFsIGlzIG5vdCBhIG5vbi1lbXB0eSBzdHJpbmcgb3IgYSB2YWxpZCBudW1iZXIuIHZhbD0nICtcbiAgICAgIEpTT04uc3RyaW5naWZ5KHZhbClcbiAgKTtcbn07XG5cbi8qKlxuICogUGFyc2UgdGhlIGdpdmVuIGBzdHJgIGFuZCByZXR1cm4gbWlsbGlzZWNvbmRzLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiAqIEByZXR1cm4ge051bWJlcn1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHBhcnNlKHN0cikge1xuICBzdHIgPSBTdHJpbmcoc3RyKTtcbiAgaWYgKHN0ci5sZW5ndGggPiAxMDApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdmFyIG1hdGNoID0gL14oKD86XFxkKyk/XFwuP1xcZCspICoobWlsbGlzZWNvbmRzP3xtc2Vjcz98bXN8c2Vjb25kcz98c2Vjcz98c3xtaW51dGVzP3xtaW5zP3xtfGhvdXJzP3xocnM/fGh8ZGF5cz98ZHx5ZWFycz98eXJzP3x5KT8kL2kuZXhlYyhcbiAgICBzdHJcbiAgKTtcbiAgaWYgKCFtYXRjaCkge1xuICAgIHJldHVybjtcbiAgfVxuICB2YXIgbiA9IHBhcnNlRmxvYXQobWF0Y2hbMV0pO1xuICB2YXIgdHlwZSA9IChtYXRjaFsyXSB8fCAnbXMnKS50b0xvd2VyQ2FzZSgpO1xuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlICd5ZWFycyc6XG4gICAgY2FzZSAneWVhcic6XG4gICAgY2FzZSAneXJzJzpcbiAgICBjYXNlICd5cic6XG4gICAgY2FzZSAneSc6XG4gICAgICByZXR1cm4gbiAqIHk7XG4gICAgY2FzZSAnZGF5cyc6XG4gICAgY2FzZSAnZGF5JzpcbiAgICBjYXNlICdkJzpcbiAgICAgIHJldHVybiBuICogZDtcbiAgICBjYXNlICdob3Vycyc6XG4gICAgY2FzZSAnaG91cic6XG4gICAgY2FzZSAnaHJzJzpcbiAgICBjYXNlICdocic6XG4gICAgY2FzZSAnaCc6XG4gICAgICByZXR1cm4gbiAqIGg7XG4gICAgY2FzZSAnbWludXRlcyc6XG4gICAgY2FzZSAnbWludXRlJzpcbiAgICBjYXNlICdtaW5zJzpcbiAgICBjYXNlICdtaW4nOlxuICAgIGNhc2UgJ20nOlxuICAgICAgcmV0dXJuIG4gKiBtO1xuICAgIGNhc2UgJ3NlY29uZHMnOlxuICAgIGNhc2UgJ3NlY29uZCc6XG4gICAgY2FzZSAnc2Vjcyc6XG4gICAgY2FzZSAnc2VjJzpcbiAgICBjYXNlICdzJzpcbiAgICAgIHJldHVybiBuICogcztcbiAgICBjYXNlICdtaWxsaXNlY29uZHMnOlxuICAgIGNhc2UgJ21pbGxpc2Vjb25kJzpcbiAgICBjYXNlICdtc2Vjcyc6XG4gICAgY2FzZSAnbXNlYyc6XG4gICAgY2FzZSAnbXMnOlxuICAgICAgcmV0dXJuIG47XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cbn1cblxuLyoqXG4gKiBTaG9ydCBmb3JtYXQgZm9yIGBtc2AuXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IG1zXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBmbXRTaG9ydChtcykge1xuICBpZiAobXMgPj0gZCkge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKG1zIC8gZCkgKyAnZCc7XG4gIH1cbiAgaWYgKG1zID49IGgpIHtcbiAgICByZXR1cm4gTWF0aC5yb3VuZChtcyAvIGgpICsgJ2gnO1xuICB9XG4gIGlmIChtcyA+PSBtKSB7XG4gICAgcmV0dXJuIE1hdGgucm91bmQobXMgLyBtKSArICdtJztcbiAgfVxuICBpZiAobXMgPj0gcykge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKG1zIC8gcykgKyAncyc7XG4gIH1cbiAgcmV0dXJuIG1zICsgJ21zJztcbn1cblxuLyoqXG4gKiBMb25nIGZvcm1hdCBmb3IgYG1zYC5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gbXNcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGZtdExvbmcobXMpIHtcbiAgcmV0dXJuIHBsdXJhbChtcywgZCwgJ2RheScpIHx8XG4gICAgcGx1cmFsKG1zLCBoLCAnaG91cicpIHx8XG4gICAgcGx1cmFsKG1zLCBtLCAnbWludXRlJykgfHxcbiAgICBwbHVyYWwobXMsIHMsICdzZWNvbmQnKSB8fFxuICAgIG1zICsgJyBtcyc7XG59XG5cbi8qKlxuICogUGx1cmFsaXphdGlvbiBoZWxwZXIuXG4gKi9cblxuZnVuY3Rpb24gcGx1cmFsKG1zLCBuLCBuYW1lKSB7XG4gIGlmIChtcyA8IG4pIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKG1zIDwgbiAqIDEuNSkge1xuICAgIHJldHVybiBNYXRoLmZsb29yKG1zIC8gbikgKyAnICcgKyBuYW1lO1xuICB9XG4gIHJldHVybiBNYXRoLmNlaWwobXMgLyBuKSArICcgJyArIG5hbWUgKyAncyc7XG59XG4iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz9pbmRlbnRlZFN5bnRheCEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1NlYXJjaC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZsYW5nPXNhc3MmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzP2luZGVudGVkU3ludGF4IS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vU2VhcmNoLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmxhbmc9c2FzcyZcIiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLlNlYXJjaHtwb3NpdGlvbjpyZWxhdGl2ZTtmbGV4LWdyb3c6MSAhaW1wb3J0YW50fVxcblwiLCBcIlwiXSk7XG4iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz9pbmRlbnRlZFN5bnRheCEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0hlYWRlci52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0wZTM0ZWRiNCZsYW5nPXNhc3Mmc2NvcGVkPXRydWUmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzP2luZGVudGVkU3ludGF4IS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vSGVhZGVyLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTBlMzRlZGI0Jmxhbmc9c2FzcyZzY29wZWQ9dHJ1ZSZcIiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmhlYWRlcltkYXRhLXYtMGUzNGVkYjRde21pbi1oZWlnaHQ6NzBweDtiYWNrZ3JvdW5kLWNvbG9yOndoaXRlO3Bvc2l0aW9uOmZpeGVkICFpbXBvcnRhbnQ7dG9wOjA7bGVmdDowO3JpZ2h0OjA7ei1pbmRleDo0fS5sb2dvIGltZ1tkYXRhLXYtMGUzNGVkYjRde21heC1oZWlnaHQ6MzVweH0ubmF2LWxlZnRbZGF0YS12LTBlMzRlZGI0XXtmbGV4LWJhc2lzOmF1dG99LnNvY2lhbC1idXR0b25zW2RhdGEtdi0wZTM0ZWRiNF17bWFyZ2luLXJpZ2h0OjZweH0uc29jaWFsLWJ1dHRvbnMgLmJ1dHRvbltkYXRhLXYtMGUzNGVkYjRde2NvbG9yOiM0YTRhNGF9XFxuXCIsIFwiXCJdKTtcbiIsInZhciByZW5kZXIgPSBmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdoZWFkZXInLHtzdGF0aWNDbGFzczpcIm5hdiBoZWFkZXJcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImNvbnRhaW5lclwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwibmF2LWxlZnRcIn0sW19jKCdyb3V0ZXItbGluaycse3N0YXRpY0NsYXNzOlwibG9nbyBuYXYtaXRlbSBpcy1icmFuZFwiLGF0dHJzOntcInRvXCI6XCIvXCJ9fSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOlwiaXMtaGlkZGVuLW1vYmlsZVwiLGF0dHJzOntcInNyY1wiOl92bS5hcHAubG9nby5ub3JtYWwsXCJhbHRcIjpfdm0uYXBwLm5hbWUgKyAnIGxvZ28nfX0pLF9jKCdpbWcnLHtzdGF0aWNDbGFzczpcImlzLWhpZGRlbi10YWJsZXRcIixhdHRyczp7XCJzcmNcIjpfdm0uYXBwLmxvZ28ubWluaSxcImFsdFwiOl92bS5hcHAubmFtZSArICcgbG9nbyd9fSldKSxfYygnc2VhcmNoJyx7c3RhdGljQ2xhc3M6XCJuYXYtaXRlbVwifSldLDEpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcIm5hdi1yaWdodCBpcy1oaWRkZW4tbW9iaWxlXCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJuYXYtaXRlbSBzb2NpYWwtYnV0dG9uc1wifSxbX2MoJ2EnLHtzdGF0aWNDbGFzczpcImJ1dHRvblwiLGF0dHJzOntcImhyZWZcIjonaHR0cHM6Ly9naXRodWIuY29tLycgKyBfdm0uYXBwLmdpdGh1Yi5yZXBvLFwidGFyZ2V0XCI6XCJfYmxhbmtcIixcInJlbFwiOlwibm9vcGVuZXIgbm9yZWZlcnJlclwifX0sW192bS5fbSgwKSxfYygnc3BhbicsW192bS5fdihcIkdpdEh1YlwiKV0pXSksX2MoJ2EnLHtzdGF0aWNDbGFzczpcImJ1dHRvblwiLGF0dHJzOntcImhyZWZcIjonaHR0cHM6Ly90d2l0dGVyLmNvbS9pbnRlbnQvdHdlZXQ/dGV4dD0nICsgX3ZtLmFwcC50d2l0dGVyLnR3ZWV0ICsgJyZ1cmw9JyArIF92bS5hcHAudXJsICsgJyZ2aWE9JyArIF92bS5hcHAudHdpdHRlci51c2VybmFtZSxcInRhcmdldFwiOlwiX2JsYW5rXCIsXCJyZWxcIjpcIm5vb3BlbmVyIG5vcmVmZXJyZXJcIn19LFtfdm0uX20oMSksX2MoJ3NwYW4nLFtfdm0uX3YoXCJUd2VldFwiKV0pXSldKV0pXSldKX1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnc3Bhbicse3N0YXRpY0NsYXNzOlwiaWNvblwifSxbX2MoJ2knLHtzdGF0aWNDbGFzczpcImlvbi1zb2NpYWwtZ2l0aHViXCJ9KV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJpY29uXCJ9LFtfYygnaScse3N0YXRpY0NsYXNzOlwiaW9uLXNvY2lhbC10d2l0dGVyXCJ9KV0pfV1cblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9UeXBlYWhlYWQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vVHlwZWFoZWFkLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsIjx0ZW1wbGF0ZSBsYW5nPVwicHVnXCI+XG4uVHlwZWFoZWFkXG4gIC5jb250cm9sLmhhcy1pY29uLmlzLWZ1bGx3aWR0aFxuICAgIGlucHV0LmlucHV0LmlzLW1lZGl1bS5pcy1leHBhbmRlZChcbiAgICAgIHR5cGU9XCJ0ZXh0XCIsXG4gICAgICBhdXRvY29tcGxldGU9XCJvZmZcIixcbiAgICAgIDpwbGFjZWhvbGRlcj1cInBsYWNlaG9sZGVyXCIsXG4gICAgICB2LW1vZGVsPVwicXVlcnlcIixcbiAgICAgIEBrZXl1cC5lbnRlcj1cImhpdFwiLFxuICAgICAgQGtleXVwLmVzYz1cInJlc2V0XCIsXG4gICAgICBAa2V5dXAuZG93bj1cImRvd25cIixcbiAgICAgIEBrZXl1cC51cD1cInVwXCJcbiAgICAgIEBrZXl1cD1cInVwZGF0ZVwiLFxuICAgICAgYXJpYS1sYWJlbD1cInNlYXJjaFwiXG4gICAgKVxuICAgIGkuZmEuaW9uLWlvcy1zZWFyY2gtc3Ryb25nXG4gIC5UeXBlYWhlYWRfX2xpc3QucGFuZWwodi1pZj1cImhhc0l0ZW1zICYmIHNob3dcIilcbiAgICBhLlR5cGVhaGVhZF9fbGlzdC1pdGVtKFxuICAgICAgdi1mb3I9XCIoaXRlbSwgaW5kZXgpIGluIGl0ZW1zXCIsXG4gICAgICA6a2V5PVwiaW5kZXhcIixcbiAgICAgIDpjbGFzcz1cInsgJ1R5cGVhaGVhZF9fbGlzdC1pdGVtLS1jdXJyZW50JzogaXNDdXJyZW50KGluZGV4KSB9XCIsXG4gICAgICBAbW91c2Vtb3ZlPVwic2V0Q3VycmVudChpbmRleClcIixcbiAgICAgIEBjbGljay5wcmV2ZW50PVwiaGl0XCJcbiAgICApIHt7IGl0ZW0gfX1cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQgZGVib3VuY2UgZnJvbSAnZGVib3VuY2UnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgcHJvcHM6IHtcbiAgICBpdGVtczoge1xuICAgICAgdHlwZTogQXJyYXksXG4gICAgICByZXF1aXJlZDogdHJ1ZVxuICAgIH0sXG4gICAgcGxhY2Vob2xkZXI6IFN0cmluZ1xuICB9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBjdXJyZW50OiAtMSxcbiAgICAgIHF1ZXJ5OiAnJyxcbiAgICAgIHNob3c6IGZhbHNlXG4gICAgfVxuICB9LFxuICBjb21wdXRlZDoge1xuICAgIHNlbGVjdGVkKCkge1xuICAgICAgaWYodGhpcy5jdXJyZW50ICE9PSAtMSkge1xuICAgICAgICByZXR1cm4gdGhpcy5pdGVtc1t0aGlzLmN1cnJlbnRdXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLnF1ZXJ5XG4gICAgfSxcbiAgICBoYXNJdGVtcyAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5pdGVtcy5sZW5ndGggPiAwXG4gICAgfSxcbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIGlzQ3VycmVudChpbmRleCkge1xuICAgICAgcmV0dXJuIHRoaXMuY3VycmVudCA9PSBpbmRleFxuICAgIH0sXG4gICAgc2V0Q3VycmVudChpbmRleCkge1xuICAgICAgdGhpcy5jdXJyZW50ID0gaW5kZXhcbiAgICB9LFxuICAgIGhpdCgpIHtcbiAgICAgIGlmKHRoaXMucXVlcnkpIHtcbiAgICAgICAgdGhpcy5xdWVyeSA9IHRoaXMuc2VsZWN0ZWRcbiAgICAgICAgdGhpcy5yZXNldCgpXG4gICAgICAgIHRoaXMuJGVtaXQoJ2hpdCcsIHRoaXMuc2VsZWN0ZWQsIHRoaXMuY3VycmVudClcbiAgICAgIH1cbiAgICB9LFxuICAgIHVwZGF0ZShlKSB7XG4gICAgICBpZihlLmtleUNvZGUgPj0gNDggJiYgZS5rZXlDb2RlIDw9IDkwIHx8IGUua2V5Q29kZSA9PSA4IHx8IGUua2V5Q29kZSA9PSAzMikge1xuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnF1ZXJ5KVxuICAgICAgICB0aGlzLnNob3cgPSB0cnVlXG4gICAgICAgIHRoaXMuJGVtaXQoJ3R5cGUnLCB0aGlzLnF1ZXJ5KVxuICAgICAgfVxuICAgIH0sXG4gICAgdXAgKCkge1xuICAgICAgaWYgKHRoaXMuY3VycmVudCA+IDApIHtcbiAgICAgICAgdGhpcy5jdXJyZW50LS1cbiAgICAgIH0gZWxzZSBpZiAodGhpcy5jdXJyZW50ID09PSAtMSkge1xuICAgICAgICB0aGlzLmN1cnJlbnQgPSB0aGlzLml0ZW1zLmxlbmd0aCAtIDFcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuY3VycmVudCA9IC0xXG4gICAgICB9XG4gICAgfSxcbiAgICBkb3duKCkge1xuICAgICAgaWYgKHRoaXMuY3VycmVudCA8IHRoaXMuaXRlbXMubGVuZ3RoIC0gMSkge1xuICAgICAgICB0aGlzLmN1cnJlbnQrK1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5jdXJyZW50ID0gLTFcbiAgICAgIH1cbiAgICB9LFxuICAgIHJlc2V0KCkge1xuICAgICAgdGhpcy5zaG93ID0gZmFsc2VcbiAgICAgIHRoaXMuY3VycmVudCA9IC0xXG4gICAgfVxuICB9LFxuICB3YXRjaDoge1xuICAgIHNlbGVjdGVkKHZhbCkge1xuICAgICAgLy8gY29uc29sZS5sb2codmFsKVxuICAgIH1cbiAgfSxcbiAgY3JlYXRlZCgpIHtcbiAgICB0aGlzLnVwZGF0ZSA9IGRlYm91bmNlKHRoaXMudXBkYXRlLCAzMDApXG4gIH1cbn1cbjwvc2NyaXB0PlxuXG48c3R5bGUgbGFuZz1cInNhc3NcIj5cbi5UeXBlYWhlYWRcbiAgcG9zaXRpb246IHJlbGF0aXZlXG4gIHotaW5kZXg6IDVcbiAgZmxleC1ncm93OiAxICFpbXBvcnRhbnRcblxuLlR5cGVhaGVhZF9fbGlzdFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZVxuICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgdG9wOiA0NXB4XG4gIGxlZnQ6IDMwcHhcbiAgd2lkdGg6IDgwJVxuICB0ZXh0LWFsaWduOiBsZWZ0XG4gIGJvcmRlci1yYWRpdXM6IDJweFxuICBjb2xvcjogIzBhMGEwYVxuXG4uY29udHJvbFxuICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnRcblxuLnBhbmVsLWJsb2NrXG4gIGJvcmRlci1ib3R0b206IG5vbmUgIWltcG9ydGFudFxuXG4ubmF2LWxlZnQgXG4gIG92ZXJmbG93OiB2aXNpYmxlICFpbXBvcnRhbnRcbiAgb3ZlcmZsb3cteDogdmlzaWJsZSAhaW1wb3J0YW50XG5cbi5UeXBlYWhlYWRfX2xpc3QtaXRlbVxuICBkaXNwbGF5OiBibG9ja1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94XG4gIHdpZHRoOiAxMDAlXG4gIGNvbG9yOiAjNGE0YTRhXG4gIHBhZGRpbmc6IDdweCAxNXB4IDZweCAxMHB4XG4gIGN1cnNvcjogcG9pbnRlclxuXG4uVHlwZWFoZWFkX19saXN0LWl0ZW0tLWN1cnJlbnRcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VlZVxuPC9zdHlsZT4iLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL1R5cGVhaGVhZC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9Mjg0ZWE1MDYmbGFuZz1wdWcmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vVHlwZWFoZWFkLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vVHlwZWFoZWFkLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9UeXBlYWhlYWQudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1zYXNzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJUeXBlYWhlYWRcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImNvbnRyb2wgaGFzLWljb24gaXMtZnVsbHdpZHRoXCJ9LFtfYygnaW5wdXQnLHtkaXJlY3RpdmVzOlt7bmFtZTpcIm1vZGVsXCIscmF3TmFtZTpcInYtbW9kZWxcIix2YWx1ZTooX3ZtLnF1ZXJ5KSxleHByZXNzaW9uOlwicXVlcnlcIn1dLHN0YXRpY0NsYXNzOlwiaW5wdXQgaXMtbWVkaXVtIGlzLWV4cGFuZGVkXCIsYXR0cnM6e1widHlwZVwiOlwidGV4dFwiLFwiYXV0b2NvbXBsZXRlXCI6XCJvZmZcIixcInBsYWNlaG9sZGVyXCI6X3ZtLnBsYWNlaG9sZGVyLFwiYXJpYS1sYWJlbFwiOlwic2VhcmNoXCJ9LGRvbVByb3BzOntcInZhbHVlXCI6KF92bS5xdWVyeSl9LG9uOntcImtleXVwXCI6W2Z1bmN0aW9uKCRldmVudCl7aWYoISRldmVudC50eXBlLmluZGV4T2YoJ2tleScpJiZfdm0uX2soJGV2ZW50LmtleUNvZGUsXCJlbnRlclwiLDEzLCRldmVudC5rZXksXCJFbnRlclwiKSl7IHJldHVybiBudWxsOyB9cmV0dXJuIF92bS5oaXQoJGV2ZW50KX0sZnVuY3Rpb24oJGV2ZW50KXtpZighJGV2ZW50LnR5cGUuaW5kZXhPZigna2V5JykmJl92bS5faygkZXZlbnQua2V5Q29kZSxcImVzY1wiLDI3LCRldmVudC5rZXksW1wiRXNjXCIsXCJFc2NhcGVcIl0pKXsgcmV0dXJuIG51bGw7IH1yZXR1cm4gX3ZtLnJlc2V0KCRldmVudCl9LGZ1bmN0aW9uKCRldmVudCl7aWYoISRldmVudC50eXBlLmluZGV4T2YoJ2tleScpJiZfdm0uX2soJGV2ZW50LmtleUNvZGUsXCJkb3duXCIsNDAsJGV2ZW50LmtleSxbXCJEb3duXCIsXCJBcnJvd0Rvd25cIl0pKXsgcmV0dXJuIG51bGw7IH1yZXR1cm4gX3ZtLmRvd24oJGV2ZW50KX0sZnVuY3Rpb24oJGV2ZW50KXtpZighJGV2ZW50LnR5cGUuaW5kZXhPZigna2V5JykmJl92bS5faygkZXZlbnQua2V5Q29kZSxcInVwXCIsMzgsJGV2ZW50LmtleSxbXCJVcFwiLFwiQXJyb3dVcFwiXSkpeyByZXR1cm4gbnVsbDsgfXJldHVybiBfdm0udXAoJGV2ZW50KX0sX3ZtLnVwZGF0ZV0sXCJpbnB1dFwiOmZ1bmN0aW9uKCRldmVudCl7aWYoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpeyByZXR1cm47IH1fdm0ucXVlcnk9JGV2ZW50LnRhcmdldC52YWx1ZX19fSksX2MoJ2knLHtzdGF0aWNDbGFzczpcImZhIGlvbi1pb3Mtc2VhcmNoLXN0cm9uZ1wifSldKSwoX3ZtLmhhc0l0ZW1zICYmIF92bS5zaG93KT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJUeXBlYWhlYWRfX2xpc3QgcGFuZWxcIn0sX3ZtLl9sKChfdm0uaXRlbXMpLGZ1bmN0aW9uKGl0ZW0saW5kZXgpe3JldHVybiBfYygnYScse2tleTppbmRleCxzdGF0aWNDbGFzczpcIlR5cGVhaGVhZF9fbGlzdC1pdGVtXCIsY2xhc3M6eyAnVHlwZWFoZWFkX19saXN0LWl0ZW0tLWN1cnJlbnQnOiBfdm0uaXNDdXJyZW50KGluZGV4KSB9LG9uOntcIm1vdXNlbW92ZVwiOmZ1bmN0aW9uKCRldmVudCl7cmV0dXJuIF92bS5zZXRDdXJyZW50KGluZGV4KX0sXCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7JGV2ZW50LnByZXZlbnREZWZhdWx0KCk7cmV0dXJuIF92bS5oaXQoJGV2ZW50KX19fSxbX3ZtLl92KF92bS5fcyhpdGVtKSldKX0pLDApOl92bS5fZSgpXSl9XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9TZWFyY2gudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vU2VhcmNoLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsIjx0ZW1wbGF0ZSBsYW5nPVwicHVnXCI+XG4uU2VhcmNoXG4gIHR5cGVhaGVhZChcbiAgICA6aXRlbXM9XCJzdWdnZXN0aW9uc1wiLFxuICAgIHBsYWNlaG9sZGVyPVwiU2VhcmNoIHRvcGljcywgY2hhbm5lbHMsIGFuZCB2aWRlb3NcIlxuICAgIEBoaXQ9XCJzZWFyY2hcIixcbiAgICBAdHlwZT1cImZldGNoU3VnZ2VzdGlvbnNcIlxuICApXG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IFR5cGVhaGVhZCBmcm9tICd+Y29tcG9uZW50cy9UeXBlYWhlYWQudnVlJ1xuaW1wb3J0IGpzb25wIGZyb20gJ2pzb25wJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGNvbXBvbmVudHM6IHsgVHlwZWFoZWFkIH0sXG4gIGRhdGEgKCkge1xuICAgIHJldHVybiB7XG4gICAgICBzdWdnZXN0aW9uczogW11cbiAgICB9XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBmZXRjaFN1Z2dlc3Rpb25zKGlucHV0KSB7XG4gICAgICBqc29ucCgnaHR0cHM6Ly9zdWdnZXN0cXVlcmllcy5nb29nbGUuY29tL2NvbXBsZXRlL3NlYXJjaD9jbGllbnQ9Y2hyb21lJmRzPXl0JnE9JyArIGlucHV0LCAoZXJyLCBzdWdnZXN0aW9ucykgPT4ge1xuICAgICAgICBpZiAoZXJyKSB0aHJvdyBlcnJcbiAgICAgICAgdGhpcy5zdWdnZXN0aW9ucyA9IHRoaXMubGltaXRCeShzdWdnZXN0aW9uc1sxXSwgNSlcbiAgICAgIH0pXG4gICAgfSxcbiAgICBzZWFyY2gocXVlcnkpIHtcbiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgcGF0aDogJy9zZWFyY2gnLCBxdWVyeTogeyBxOiBxdWVyeS50cmltKCkgfSB9KVxuICAgIH1cbiAgfVxufVxuPC9zY3JpcHQ+XG5cbjxzdHlsZSBsYW5nPVwic2Fzc1wiPlxuLlNlYXJjaFxuICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgZmxleC1ncm93OiAxICFpbXBvcnRhbnRcbjwvc3R5bGU+IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0hlYWRlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9IZWFkZXIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiPHRlbXBsYXRlIGxhbmc9XCJwdWdcIj5cbmhlYWRlci5uYXYuaGVhZGVyXG4gIC5jb250YWluZXJcbiAgICAubmF2LWxlZnRcbiAgICAgIHJvdXRlci1saW5rKHRvPVwiL1wiKS5sb2dvLm5hdi1pdGVtLmlzLWJyYW5kXG4gICAgICAgIGltZy5pcy1oaWRkZW4tbW9iaWxlKDpzcmM9XCJhcHAubG9nby5ub3JtYWxcIiw6YWx0PVwiYXBwLm5hbWUgKyAnIGxvZ28nXCIpXG4gICAgICAgIGltZy5pcy1oaWRkZW4tdGFibGV0KDpzcmM9XCJhcHAubG9nby5taW5pXCIsOmFsdD1cImFwcC5uYW1lICsgJyBsb2dvJ1wiKVxuICAgICAgc2VhcmNoLm5hdi1pdGVtXG4gICAgLm5hdi1yaWdodC5pcy1oaWRkZW4tbW9iaWxlXG4gICAgICAubmF2LWl0ZW0uc29jaWFsLWJ1dHRvbnNcbiAgICAgICAgYS5idXR0b24oOmhyZWY9XCInaHR0cHM6Ly9naXRodWIuY29tLycgKyBhcHAuZ2l0aHViLnJlcG9cIiwgdGFyZ2V0PVwiX2JsYW5rXCIsIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIilcbiAgICAgICAgICBzcGFuLmljb25cbiAgICAgICAgICAgIGkuaW9uLXNvY2lhbC1naXRodWJcbiAgICAgICAgICBzcGFuIEdpdEh1YlxuICAgICAgICBhLmJ1dHRvbig6aHJlZj1cIidodHRwczovL3R3aXR0ZXIuY29tL2ludGVudC90d2VldD90ZXh0PScgKyBhcHAudHdpdHRlci50d2VldCArICcmdXJsPScgKyBhcHAudXJsICsgJyZ2aWE9JyArIGFwcC50d2l0dGVyLnVzZXJuYW1lXCIsIHRhcmdldD1cIl9ibGFua1wiLCByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCIpXG4gICAgICAgICAgc3Bhbi5pY29uXG4gICAgICAgICAgICBpLmlvbi1zb2NpYWwtdHdpdHRlclxuICAgICAgICAgIHNwYW4gVHdlZXRcbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQgY29uZmlnIGZyb20gJ35jb25maWcnXG5pbXBvcnQgU2VhcmNoIGZyb20gJ35jb21wb25lbnRzL1NlYXJjaC52dWUnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgY29tcG9uZW50czogeyBTZWFyY2ggfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICBhcHAoKSB7XG4gICAgICByZXR1cm4gY29uZmlnLmFwcFxuICAgIH1cbiAgfVxufVxuPC9zY3JpcHQ+XG5cbjxzdHlsZSBsYW5nPVwic2Fzc1wiIHNjb3BlZD5cbi5oZWFkZXJcbiAgbWluLWhlaWdodDogNzBweFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZVxuICBwb3NpdGlvbjogZml4ZWQgIWltcG9ydGFudFxuICB0b3A6IDBcbiAgbGVmdDogMFxuICByaWdodDogMFxuICB6LWluZGV4OiA0XG4ubG9nb1xuICBpbWdcbiAgICBtYXgtaGVpZ2h0OiAzNXB4XG5cbi5uYXYtbGVmdFxuICBmbGV4LWJhc2lzOiBhdXRvXG5cbi5zb2NpYWwtYnV0dG9uc1xuICBtYXJnaW4tcmlnaHQ6IDZweFxuICAuYnV0dG9uXG4gICAgY29sb3I6ICM0YTRhNGFcbjwvc3R5bGU+XG4iLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL1NlYXJjaC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NDhjMmQ4YmMmbGFuZz1wdWcmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vU2VhcmNoLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vU2VhcmNoLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9TZWFyY2gudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1zYXNzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJTZWFyY2hcIn0sW19jKCd0eXBlYWhlYWQnLHthdHRyczp7XCJpdGVtc1wiOl92bS5zdWdnZXN0aW9ucyxcInBsYWNlaG9sZGVyXCI6XCJTZWFyY2ggdG9waWNzLCBjaGFubmVscywgYW5kIHZpZGVvc1wifSxvbjp7XCJoaXRcIjpfdm0uc2VhcmNoLFwidHlwZVwiOl92bS5mZXRjaFN1Z2dlc3Rpb25zfX0pXSwxKX1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9IZWFkZXIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTBlMzRlZGI0JnNjb3BlZD10cnVlJmxhbmc9cHVnJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL0hlYWRlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL0hlYWRlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vSGVhZGVyLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTBlMzRlZGI0Jmxhbmc9c2FzcyZzY29wZWQ9dHJ1ZSZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiMGUzNGVkYjRcIixcbiAgbnVsbFxuICBcbilcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz9pbmRlbnRlZFN5bnRheCEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1R5cGVhaGVhZC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZsYW5nPXNhc3MmXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCB7fSk7XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcblx0Ly8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0aWYoIWNvbnRlbnQubG9jYWxzKSB7XG5cdFx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanM/aW5kZW50ZWRTeW50YXghLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9UeXBlYWhlYWQudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1zYXNzJlwiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz9pbmRlbnRlZFN5bnRheCEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1R5cGVhaGVhZC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZsYW5nPXNhc3MmXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz9pbmRlbnRlZFN5bnRheCEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1NlYXJjaC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZsYW5nPXNhc3MmXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCB7fSk7XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcblx0Ly8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0aWYoIWNvbnRlbnQubG9jYWxzKSB7XG5cdFx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanM/aW5kZW50ZWRTeW50YXghLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9TZWFyY2gudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1zYXNzJlwiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz9pbmRlbnRlZFN5bnRheCEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1NlYXJjaC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZsYW5nPXNhc3MmXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz9pbmRlbnRlZFN5bnRheCEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0hlYWRlci52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0wZTM0ZWRiNCZsYW5nPXNhc3Mmc2NvcGVkPXRydWUmXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCB7fSk7XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcblx0Ly8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0aWYoIWNvbnRlbnQubG9jYWxzKSB7XG5cdFx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanM/aW5kZW50ZWRTeW50YXghLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9IZWFkZXIudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9MGUzNGVkYjQmbGFuZz1zYXNzJnNjb3BlZD10cnVlJlwiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz9pbmRlbnRlZFN5bnRheCEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0hlYWRlci52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0wZTM0ZWRiNCZsYW5nPXNhc3Mmc2NvcGVkPXRydWUmXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iXSwic291cmNlUm9vdCI6IiJ9