(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{152:function(a,t,i){var n=i(173);"string"==typeof n&&(n=[[a.i,n,""]]);i(6)(n,{});n.locals&&(a.exports=n.locals)},172:function(a,t,i){"use strict";var n=i(152);i.n(n).a},173:function(a,t,i){(a.exports=i(5)(!1)).push([a.i,".hero[data-v-6a8aa9da]{background-size:cover}@media (min-width: 769px){.hero.is-medium .hero-body[data-v-6a8aa9da]{padding:90px}}.info[data-v-6a8aa9da]{padding:20px 20px 0}@media (min-width: 769px){.info .container[data-v-6a8aa9da]{height:60px}}.logo[data-v-6a8aa9da]{background-color:#fff;border-radius:50%;width:64px;height:64px}@media (min-width: 769px){.logo[data-v-6a8aa9da]{z-index:2;border:5px solid #fff;top:-150px;width:200px;height:200px}}.logo__wrapper[data-v-6a8aa9da]{display:inline-block;height:100%;vertical-align:middle}.logo img[data-v-6a8aa9da]{display:inline-block;vertical-align:middle;border-radius:50%;max-height:100%;max-width:100%}.media-left[data-v-6a8aa9da]{margin-right:20px}@media (min-width: 769px){.media-left[data-v-6a8aa9da]{margin-right:30px}}.channel-title[data-v-6a8aa9da]{display:inline-flex;align-items:center}.ext-link[data-v-6a8aa9da]{border-bottom:none !important;display:inline-flex}.ext-link>.icon[data-v-6a8aa9da]{color:#bbbbbb;font-weight:600;font-size:24px;margin-left:10px}\n",""])},180:function(a,t,i){"use strict";i.r(t);var n=function(){var a=this,t=a.$createElement,i=a._self._c||t;return i("main",[a.channel?i("section",[i("div",{staticClass:"hero is-medium",style:a.channelStyle},[i("div",{staticClass:"hero-body"})]),i("div",{staticClass:"info"},[i("div",{staticClass:"container"},[i("div",{staticClass:"media"},[i("div",{staticClass:"media-left"},[i("div",{staticClass:"image logo"},[i("span",{staticClass:"logo__wrapper"}),i("img",{attrs:{src:a.channel.thumbnails.medium.url,alt:a.channel.title+" channel logo"}})])]),i("div",{staticClass:"media-content"},[i("div",{staticClass:"content"},[i("div",{staticClass:"title is-3 channel-title"},[i("strong",[a._v(a._s(a.channel.title))]),a._v(" "),i("a",{staticClass:"ext-link",attrs:{href:a.channelLink,target:"_blank",rel:"noopener noreferrer"}},[i("span",{staticClass:"icon"},[i("ion-icon",{attrs:{name:"link"}})],1)])])])])])])]),i("nav",{staticClass:"nav has-underline"},[i("div",{staticClass:"container"},[i("div",{staticClass:"nav-center"},[i("router-link",{staticClass:"nav-item is-tab",attrs:{to:{name:"channel-about"}}},[a._v("About")]),i("router-link",{staticClass:"nav-item is-tab",attrs:{to:{name:"channel-recent-videos"}}},[a._v("Uploads")])],1)])]),i("router-view")],1):a._e()])};n._withStripped=!0;var e=i(21),s=i(0),l={data:function(){return{channel:null,params:{title:"",description:""}}},computed:{channelStyle:function(){return this.channel.image?{backgroundImage:"url("+this.channel.image.bannerTabletImageUrl+")"}:{backgroundColor:this.channel.profileColor}},channelLink:function(){return"https://www.youtube.com/channel/".concat(this.channel.id)}},created:function(){this.$Progress.start(),this.loadChannel()},watch:{$route:function(){this.loadChannel()}},methods:{loadChannel:function(){var a=this;e.a.fetchChannel(this.$route.params.id).then(function(t){a.params.title=t.title,a.params.description="".concat(t.title," videos"),a.channel=t,a.$emit("updateHead")}).catch(function(){a.$Progress.fail()})}},head:{title:function(){return{inner:this.params.title,separator:"-",complement:s.a.app.name}},meta:function(){return[{id:"description",name:"description",content:this.params.description}]}}},o=(i(172),i(1)),r=Object(o.a)(l,n,[],!1,null,"6a8aa9da",null);r.options.__file="src/pages/channels/single.vue";t.default=r.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,