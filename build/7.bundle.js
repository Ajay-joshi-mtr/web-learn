(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{107:function(e,t){function n(e,t,n){var r,s,o,i,a;function c(){var u=Date.now()-i;u<t&&u>=0?r=setTimeout(c,t-u):(r=null,n||(a=e.apply(o,s),o=s=null))}null==t&&(t=100);var u=function(){o=this,s=arguments,i=Date.now();var u=n&&!r;return r||(r=setTimeout(c,t)),u&&(a=e.apply(o,s),o=s=null),a};return u.clear=function(){r&&(clearTimeout(r),r=null)},u.flush=function(){r&&(a=e.apply(o,s),o=s=null,clearTimeout(r),r=null)},u}n.debounce=n,e.exports=n},108:function(e,t,n){"use strict";var r=n(73);n.n(r).a},109:function(e,t,n){(e.exports=n(5)(!1)).push([e.i,".Typeahead{position:relative;z-index:5;flex-grow:1 !important}.Typeahead__list{background-color:white;position:absolute;top:45px;left:30px;width:80%;text-align:left;border-radius:2px;color:#0a0a0a}.control{margin-bottom:0 !important}.panel-block{border-bottom:none !important}.nav-left{overflow:visible !important;overflow-x:visible !important}.Typeahead__list-item{display:block;box-sizing:border-box;width:100%;color:#4a4a4a;padding:7px 15px 6px 10px;cursor:pointer}.Typeahead__list-item--current{background-color:#eee}\n",""])},110:function(e,t,n){var r=n(111)("jsonp");e.exports=function(e,t,n){"function"==typeof t&&(n=t,t={});t||(t={});var i,a,c=t.prefix||"__jp",u=t.name||c+s++,l=t.param||"callback",p=null!=t.timeout?t.timeout:6e4,d=encodeURIComponent,f=document.getElementsByTagName("script")[0]||document.head;p&&(a=setTimeout(function(){h(),n&&n(new Error("Timeout"))},p));function h(){i.parentNode&&i.parentNode.removeChild(i),window[u]=o,a&&clearTimeout(a)}return window[u]=function(e){r("jsonp got",e),h(),n&&n(null,e)},e=(e+=(~e.indexOf("?")?"&":"?")+l+"="+d(u)).replace("?&","?"),r('jsonp req "%s"',e),(i=document.createElement("script")).src=e,f.parentNode.insertBefore(i,f),function(){window[u]&&h()}};var s=0;function o(){}},111:function(e,t,n){(function(r){function s(){var e;try{e=t.storage.debug}catch(e){}return!e&&void 0!==r&&"env"in r&&(e=Object({NODE_ENV:"production"}).DEBUG),e}(t=e.exports=n(112)).log=function(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)},t.formatArgs=function(e){var n=this.useColors;if(e[0]=(n?"%c":"")+this.namespace+(n?" %c":" ")+e[0]+(n?"%c ":" ")+"+"+t.humanize(this.diff),!n)return;var r="color: "+this.color;e.splice(1,0,r,"color: inherit");var s=0,o=0;e[0].replace(/%[a-zA-Z%]/g,function(e){"%%"!==e&&(s++,"%c"===e&&(o=s))}),e.splice(o,0,r)},t.save=function(e){try{null==e?t.storage.removeItem("debug"):t.storage.debug=e}catch(e){}},t.load=s,t.useColors=function(){if("undefined"!=typeof window&&window.process&&"renderer"===window.process.type)return!0;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},t.storage="undefined"!=typeof chrome&&void 0!==chrome.storage?chrome.storage.local:function(){try{return window.localStorage}catch(e){}}(),t.colors=["lightseagreen","forestgreen","goldenrod","dodgerblue","darkorchid","crimson"],t.formatters.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}},t.enable(s())}).call(this,n(12))},112:function(e,t,n){var r;function s(e){function n(){if(n.enabled){var e=n,s=+new Date,o=s-(r||s);e.diff=o,e.prev=r,e.curr=s,r=s;for(var i=new Array(arguments.length),a=0;a<i.length;a++)i[a]=arguments[a];i[0]=t.coerce(i[0]),"string"!=typeof i[0]&&i.unshift("%O");var c=0;i[0]=i[0].replace(/%([a-zA-Z%])/g,function(n,r){if("%%"===n)return n;c++;var s=t.formatters[r];if("function"==typeof s){var o=i[c];n=s.call(e,o),i.splice(c,1),c--}return n}),t.formatArgs.call(e,i),(n.log||t.log||console.log.bind(console)).apply(e,i)}}return n.namespace=e,n.enabled=t.enabled(e),n.useColors=t.useColors(),n.color=function(e){var n,r=0;for(n in e)r=(r<<5)-r+e.charCodeAt(n),r|=0;return t.colors[Math.abs(r)%t.colors.length]}(e),"function"==typeof t.init&&t.init(n),n}(t=e.exports=s.debug=s.default=s).coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){t.enable("")},t.enable=function(e){t.save(e),t.names=[],t.skips=[];for(var n=("string"==typeof e?e:"").split(/[\s,]+/),r=n.length,s=0;s<r;s++)n[s]&&("-"===(e=n[s].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.substr(1)+"$")):t.names.push(new RegExp("^"+e+"$")))},t.enabled=function(e){var n,r;for(n=0,r=t.skips.length;n<r;n++)if(t.skips[n].test(e))return!1;for(n=0,r=t.names.length;n<r;n++)if(t.names[n].test(e))return!0;return!1},t.humanize=n(113),t.names=[],t.skips=[],t.formatters={}},113:function(e,t){var n=1e3,r=60*n,s=60*r,o=24*s,i=365.25*o;function a(e,t,n){if(!(e<t))return e<1.5*t?Math.floor(e/t)+" "+n:Math.ceil(e/t)+" "+n+"s"}e.exports=function(e,t){t=t||{};var c,u=typeof e;if("string"===u&&e.length>0)return function(e){if((e=String(e)).length>100)return;var t=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);if(!t)return;var a=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return a*i;case"days":case"day":case"d":return a*o;case"hours":case"hour":case"hrs":case"hr":case"h":return a*s;case"minutes":case"minute":case"mins":case"min":case"m":return a*r;case"seconds":case"second":case"secs":case"sec":case"s":return a*n;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return a;default:return}}(e);if("number"===u&&!1===isNaN(e))return t.long?a(c=e,o,"day")||a(c,s,"hour")||a(c,r,"minute")||a(c,n,"second")||c+" ms":function(e){if(e>=o)return Math.round(e/o)+"d";if(e>=s)return Math.round(e/s)+"h";if(e>=r)return Math.round(e/r)+"m";if(e>=n)return Math.round(e/n)+"s";return e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},114:function(e,t,n){"use strict";var r=n(74);n.n(r).a},115:function(e,t,n){(e.exports=n(5)(!1)).push([e.i,".Search{position:relative;flex-grow:1 !important}\n",""])},116:function(e,t,n){"use strict";var r=n(75);n.n(r).a},117:function(e,t,n){(e.exports=n(5)(!1)).push([e.i,".header[data-v-63dbde6f]{min-height:70px;background-color:white;position:fixed !important;top:0;left:0;right:0;z-index:4}.logo img[data-v-63dbde6f]{max-height:35px}.nav-left[data-v-63dbde6f]{flex-basis:auto}.social-buttons[data-v-63dbde6f]{margin-right:6px}\n",""])},173:function(e,t,n){"use strict";n.r(t);var r=n(3),s=n(107),o=n.n(s),i={props:{items:{type:Array,required:!0},placeholder:String},data:function(){return{current:-1,query:"",show:!1}},computed:{selected:function(){return-1!==this.current?this.items[this.current]:this.query},hasItems:function(){return this.items.length>0}},methods:{isCurrent:function(e){return this.current==e},setCurrent:function(e){this.current=e},hit:function(){this.query&&(this.query=this.selected,this.reset(),this.$emit("hit",this.selected,this.current))},update:function(e){(e.keyCode>=48&&e.keyCode<=90||8==e.keyCode||32==e.keyCode)&&(console.log(this.query),this.show=!0,this.$emit("type",this.query))},up:function(){this.current>0?this.current--:-1===this.current?this.current=this.items.length-1:this.current=-1},down:function(){this.current<this.items.length-1?this.current++:this.current=-1},reset:function(){this.show=!1,this.current=-1}},watch:{selected:function(e){}},created:function(){this.update=o()(this.update,300)}},a=(n(108),n(4)),c=Object(a.a)(i,function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"Typeahead"},[n("div",{staticClass:"control has-icon is-fullwidth"},[n("input",{directives:[{name:"model",rawName:"v-model",value:e.query,expression:"query"}],staticClass:"input is-medium is-expanded",attrs:{type:"text",autocomplete:"off",placeholder:e.placeholder},domProps:{value:e.query},on:{keyup:[function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.hit(t)},function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"esc",27,t.key,["Esc","Escape"])?null:e.reset(t)},function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"down",40,t.key,["Down","ArrowDown"])?null:e.down(t)},function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"up",38,t.key,["Up","ArrowUp"])?null:e.up(t)},e.update],input:function(t){t.target.composing||(e.query=t.target.value)}}}),n("i",{staticClass:"fa ion-ios-search-strong"})]),e.hasItems&&e.show?n("div",{staticClass:"Typeahead__list panel"},e._l(e.items,function(t,r){return n("a",{key:r,staticClass:"Typeahead__list-item",class:{"Typeahead__list-item--current":e.isCurrent(r)},on:{mousemove:function(t){return e.setCurrent(r)},click:function(t){return t.preventDefault(),e.hit(t)}}},[e._v(e._s(t))])}),0):e._e()])},[],!1,null,null,null).exports,u=n(110),l=n.n(u),p={components:{Typeahead:c},data:function(){return{suggestions:[]}},methods:{fetchSuggestions:function(e){var t=this;l()("https://suggestqueries.google.com/complete/search?client=chrome&ds=yt&q="+e,function(e,n){if(e)throw e;t.suggestions=t.limitBy(n[1],5)})},search:function(e){this.$router.push({path:"/search",query:{q:e.trim()}})}}},d=(n(114),{components:{Search:Object(a.a)(p,function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"Search"},[t("typeahead",{attrs:{items:this.suggestions,placeholder:"Search topics, channels, and videos"},on:{hit:this.search,type:this.fetchSuggestions}})],1)},[],!1,null,null,null).exports},computed:{app:function(){return r.a.app}}}),f=(n(116),Object(a.a)(d,function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("header",{staticClass:"nav header"},[n("div",{staticClass:"container"},[n("div",{staticClass:"nav-left"},[n("router-link",{staticClass:"logo nav-item is-brand",attrs:{to:"/"}},[n("img",{staticClass:"is-hidden-mobile",attrs:{src:e.app.logo.normal,alt:e.app.name}}),n("img",{staticClass:"is-hidden-tablet",attrs:{src:e.app.logo.mini,alt:e.app.name}})]),n("search",{staticClass:"nav-item"})],1),n("div",{staticClass:"nav-right is-hidden-mobile"},[n("div",{staticClass:"nav-item social-buttons"},[n("a",{staticClass:"button",attrs:{href:"https://github.com/"+e.app.github.repo,target:"_blank",rel:"noopener noreferrer"}},[e._m(0),n("span",[e._v("GitHub")])]),n("a",{staticClass:"button",attrs:{href:"https://twitter.com/intent/tweet?text="+e.app.twitter.tweet+"&url="+e.app.url+"&via="+e.app.twitter.username,target:"_blank",rel:"noopener noreferrer"}},[e._m(1),n("span",[e._v("Tweet")])])])])])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("span",{staticClass:"icon"},[t("i",{staticClass:"ion-social-github"})])},function(){var e=this.$createElement,t=this._self._c||e;return t("span",{staticClass:"icon"},[t("i",{staticClass:"ion-social-twitter"})])}],!1,null,"63dbde6f",null));t.default=f.exports},73:function(e,t,n){var r=n(109);"string"==typeof r&&(r=[[e.i,r,""]]);n(6)(r,{});r.locals&&(e.exports=r.locals)},74:function(e,t,n){var r=n(115);"string"==typeof r&&(r=[[e.i,r,""]]);n(6)(r,{});r.locals&&(e.exports=r.locals)},75:function(e,t,n){var r=n(117);"string"==typeof r&&(r=[[e.i,r,""]]);n(6)(r,{});r.locals&&(e.exports=r.locals)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,