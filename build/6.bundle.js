(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{132:function(t,e,a){var i=a(141);"string"==typeof i&&(i=[[t.i,i,""]]);a(6)(i,{});i.locals&&(t.exports=i.locals)},133:function(t,e){var a=1/0,i=9007199254740991,r=17976931348623157e292,n=NaN,s="[object Function]",o="[object GeneratorFunction]",l="[object Symbol]",u=/^\s+|\s+$/g,c=/^[-+]0x[0-9a-f]+$/i,d=/^0b[01]+$/i,p=/^0o[0-7]+$/i,f=/^(?:0|[1-9]\d*)$/,h=parseInt,v=Object.prototype.toString,g=Math.ceil,m=Math.max;function y(t,e,a){var i=-1,r=t.length;e<0&&(e=-e>r?0:r+e),(a=a>r?r:a)<0&&(a+=r),r=e>a?0:a-e>>>0,e>>>=0;for(var n=Array(r);++i<r;)n[i]=t[i+e];return n}function b(t,e,a){if(!x(a))return!1;var r=typeof e;return!!("number"==r?function(t){return null!=t&&function(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=i}(t.length)&&!function(t){var e=x(t)?v.call(t):"";return e==s||e==o}(t)}(a)&&function(t,e){return!!(e=null==e?i:e)&&("number"==typeof t||f.test(t))&&t>-1&&t%1==0&&t<e}(e,a.length):"string"==r&&e in a)&&function(t,e){return t===e||t!=t&&e!=e}(a[e],t)}function x(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}t.exports=function(t,e,i){e=(i?b(t,e,i):void 0===e)?1:m(function(t){var e=function(t){if(!t)return 0===t?t:0;if((t=function(t){if("number"==typeof t)return t;if(function(t){return"symbol"==typeof t||function(t){return!!t&&"object"==typeof t}(t)&&v.call(t)==l}(t))return n;if(x(t)){var e="function"==typeof t.valueOf?t.valueOf():t;t=x(e)?e+"":e}if("string"!=typeof t)return 0===t?t:+t;t=t.replace(u,"");var a=d.test(t);return a||p.test(t)?h(t.slice(2),a?2:8):c.test(t)?n:+t}(t))===a||t===-a){return(t<0?-1:1)*r}return t==t?t:0}(t),i=e%1;return e==e?i?e-i:e:0}(e),0);var s=t?t.length:0;if(!s||e<1)return[];for(var o=0,f=0,w=Array(g(s/e));o<s;)w[f++]=y(t,o,o+=e);return w}},135:function(t,e,a){"use strict";var i=a(137),r=a.n(i),n=[{title:"All Time",value:""},{title:"Today",value:r()().subtract(1,"days").toISOString()},{title:"This Week",value:r()().subtract(7,"days").toISOString()},{title:"This Month",value:r()().subtract(30,"days").toISOString()},{title:"This Year",value:r()().subtract(365,"days").toISOString()}];e.a={order:[{title:"By views",value:"viewCount",field:"viewCount"},{title:"By rating",value:"rating",field:"rating"},{title:"By date",value:"date",field:"publishedAt"},{title:"By relevance",value:"relevance",field:"viewCount"}],language:[{title:"Czech",value:"cs"},{title:"English",value:"en"},{title:"French",value:"fr"},{title:"Hebrew",value:"he"},{title:"Polish",value:"pl"},{title:"Portuguese",value:"pt"},{title:"Russian",value:"ru"}],timeframe:n}},138:function(t,e,a){t.exports=function(){"use strict";return function(t,e,a){var i=e.prototype;a.en.relativeTime={future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"};var r=function(t,e,i,r){for(var n,s,o=i.$locale().relativeTime,l=[{l:"s",r:44,d:"second"},{l:"m",r:89},{l:"mm",r:44,d:"minute"},{l:"h",r:89},{l:"hh",r:21,d:"hour"},{l:"d",r:35},{l:"dd",r:25,d:"day"},{l:"M",r:45},{l:"MM",r:10,d:"month"},{l:"y",r:17},{l:"yy",d:"year"}],u=l.length,c=0;c<u;c+=1){var d=l[c];d.d&&(n=r?a(t).diff(i,d.d,!0):i.diff(t,d.d,!0));var p=Math.round(Math.abs(n));if(p<=d.r||!d.r){1===p&&c>0&&(d=l[c-1]),s=o[d.l].replace("%d",p);break}}return e?s:(n>0?o.future:o.past).replace("%s",s)};i.to=function(t,e){return r(t,e,this,!0)},i.from=function(t,e){return r(t,e,this)},i.toNow=function(t){return this.to(a(),t)},i.fromNow=function(t){return this.from(a(),t)}}}()},139:function(t,e,a){"use strict";t.exports=function(t,e){for(var a=[],i=0,r=t.match(/P(?:(\d*)Y)?(?:(\d*)M)?(?:(\d*)W)?(?:(\d*)D)?T?(?:(\d*)H)?(?:(\d*)M)?(?:(\d*)S)?/i),n=[{pos:1,multiplier:31536e3},{pos:2,multiplier:2592e3},{pos:3,multiplier:604800},{pos:4,multiplier:86400},{pos:5,multiplier:3600},{pos:6,multiplier:60},{pos:7,multiplier:1}],s=0;s<n.length;s++)void 0!==r[n[s].pos]&&(i+=parseInt(r[n[s].pos])*n[s].multiplier);var o=i;return i>3599&&(a.push(parseInt(i/3600)),i%=3600),a.push(("0"+parseInt(i/60)).slice(-2)),a.push(("0"+i%60).slice(-2)),void 0===e?a.join(":"):"sec"===e?o:void 0}},140:function(t,e,a){"use strict";var i=a(132);a.n(i).a},141:function(t,e,a){(t.exports=a(5)(!1)).push([t.i,".spinner__wrapper[data-v-39432f99]{margin-top:40px;height:30px}.spinner[data-v-39432f99]{animation:rotator-data-v-39432f99 1.4s linear infinite}@keyframes rotator-data-v-39432f99{0%{transform:rotate(0deg)}100%{transform:rotate(270deg)}}.path[data-v-39432f99]{stroke-dasharray:187;stroke-dashoffset:0;transform-origin:center;stroke:#4a8bfa;animation:dash-data-v-39432f99 1.4s ease-in-out infinite}@keyframes dash-data-v-39432f99{0%{stroke-dashoffset:187}50%{stroke-dashoffset:46.75;transform:rotate(135deg)}100%{stroke-dashoffset:187;transform:rotate(450deg)}}\n",""])},142:function(t,e,a){"use strict";var i=function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"level spinner__wrapper"},[e("div",{staticClass:"level-item has-text-centered"},[this.show?e("svg",{staticClass:"spinner",attrs:{width:"30px",height:"30px",viewBox:"0 0 66 66",xmlns:"http://www.w3.org/2000/svg"}},[e("circle",{staticClass:"path",attrs:{fill:"none","stroke-width":"6","stroke-linecap":"round",cx:"33",cy:"33",r:"30"}})]):this._e()])])};i._withStripped=!0;var r={props:{show:{type:Boolean,default:!1}}},n=(a(140),a(1)),s=Object(n.a)(r,i,[],!1,null,"39432f99",null);s.options.__file="src/components/Spinner.vue";e.a=s.exports},148:function(t,e,a){var i=a(165);"string"==typeof i&&(i=[[t.i,i,""]]);a(6)(i,{});i.locals&&(t.exports=i.locals)},154:function(t,e,a){"use strict";var i=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"control"},[a("span",{staticClass:"select"},[a("select",{directives:[{name:"model",rawName:"v-model",value:t.selected,expression:"selected"}],class:{"is-disabled":t.disabled},attrs:{"aria-label":t.ariaLabel},on:{change:function(e){var a=Array.prototype.filter.call(e.target.options,function(t){return t.selected}).map(function(t){return"_value"in t?t._value:t.value});t.selected=e.target.multiple?a:a[0]}}},[t.placeholder?a("option",{attrs:{value:""}},[t._v(t._s(t.placeholder))]):t._e(),t._l(t.options,function(e){return a("option",{domProps:{value:e.value}},[t._v(t._s(e.title))])})],2)])])};i._withStripped=!0;var r={props:{options:Array,disabled:Boolean,placeholder:String,default:String,ariaLabel:String},data:function(){return{selected:this.default||""}},watch:{selected:function(){this.$emit("option-selected",this.selected)}}},n=a(1),s=Object(n.a)(r,i,[],!1,null,null,null);s.options.__file="src/components/Select.vue";e.a=s.exports},164:function(t,e,a){"use strict";var i=a(148);a.n(i).a},165:function(t,e,a){(t.exports=a(5)(!1)).push([t.i,".no-results[data-v-625e212c]{width:100px;margin:0 auto;text-align:center}.no-results img[data-v-625e212c]{float:left;display:inline-block;width:100%;height:30px;margin-bottom:10px}.no-results span[data-v-625e212c]{display:inline-block}.tooltip[data-v-625e212c]{position:relative;display:inline-block}.tooltip:hover .tooltip-text[data-v-625e212c]{opacity:1}.tooltip .tooltip-text[data-v-625e212c]{transition:opacity .2s ease-in-out;opacity:0;background-color:rgba(0,0,0,0.85);color:#fff;text-align:center;padding:5px;border-radius:4px;position:absolute;z-index:1}\n",""])},184:function(t,e,a){"use strict";a.r(e);var i=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("main",[a("section",{directives:[{name:"infinite-scroll",rawName:"v-infinite-scroll",value:t.loadMore,expression:"loadMore"}],staticClass:"section",attrs:{"infinite-scroll-disabled":"loading"}},[a("div",{staticClass:"container"},[a("div",{staticClass:"level"},[a("div",{staticClass:"level-left"},[a("h2",{staticClass:"title is-4"},[t._v("Search for "),a("strong",[t._v(t._s(t.query))])])]),a("div",{staticClass:"level-right"},[a("div",{staticClass:"control is-grouped"},[a("v-select",{attrs:{options:t.orderOptions,default:t.order,"aria-label":"order"},on:{"option-selected":t.changeOrder}}),a("v-select",{attrs:{options:t.timeframeOptions,default:t.timeframe,"aria-label":"timeframe"},on:{"option-selected":t.changeTimeframe}}),a("div",{staticClass:"tooltip"},[a("v-select",{attrs:{options:t.languageOptions,disabled:"",placeholder:"Language","aria-label":"language"},on:{"option-selected":t.changeLanguage}}),t._m(0)],1)],1)])]),a("video-list",{attrs:{videos:t.results}}),a("spinner",{attrs:{show:t.loading}}),a("div",{directives:[{name:"show",rawName:"v-show",value:t.noResults,expression:"noResults"}],staticClass:"no-results"},[a("router-link",{attrs:{to:"/"}},[a("img",{attrs:{src:t.logo,alt:t.appName+" logo"}})]),a("span",[t._v("No results.")])],1)],1)])])};i._withStripped=!0;var r=a(135),n=a(21),s=a(0),o=a(154),l=a(142),u=a(134),c={components:{vSelect:o.a,VideoList:u.a,Spinner:l.a},data:function(){return{orderOptions:r.a.order,languageOptions:r.a.language,timeframeOptions:r.a.timeframe,results:[],language:"",timeframe:r.a.timeframe[0].value,order:r.a.order[0].value,limit:28,loading:!1,nextPage:null,noResults:!1,params:{title:""}}},computed:{query:function(){return this.$route.query.q},logo:function(){return s.a.app.brand.logoMini},appName:function(){return s.a.app.name}},head:{title:function(){return{inner:this.params.title,separator:"-",complement:s.a.app.name}},meta:function(){return[{id:"description",name:"description",content:"Site search"}]}},created:function(){this.$Progress.start(),this.nextPage=null,this.loadResults()},watch:{order:function(){this.results=[],this.nextPage=null,this.loadResults()},language:function(){this.results=[],this.nextPage=null,this.loadResults()},timeframe:function(){this.results=[],this.nextPage=null,this.loadResults()},$route:function(){this.results=[],this.nextPage=null,this.loadResults()}},methods:{changeOrder:function(t){this.order=t},changeLanguage:function(t){this.language=t},changeTimeframe:function(t){this.timeframe=t},loadResults:function(){var t=this;this.noResults=!1,this.loading=!0,this.params.title=this.query,this.$emit("updateHead");var e={q:"($q)".replace(/\$q/g,this.query),order:this.order,maxResults:this.limit,videoCategoryId:27,pageToken:this.nextPage,publishedAfter:this.timeframe||null,relevanceLanguage:this.language||null};n.a.fetchVideos(e).then(function(e){if(t.loading=!1,t.$Progress.finish(),!e.videos.length)return t.noResults=!t.results.length,void(t.nextPage=null);t.nextPage=e.nextPageToken,e.videos.map(function(e){t.results.push(e)})}).catch(function(){t.loading=!1,t.$Progress.fail()})},loadMore:function(){this.nextPage&&this.loadResults()}}},d=(a(164),a(1)),p=Object(d.a)(c,i,[function(){var t=this.$createElement,e=this._self._c||t;return e("span",{staticClass:"tooltip-text"},[this._v("Not work only because YouTube API "),e("a",{attrs:{href:"https://code.google.com/p/gdata-issues/issues/detail?id=4110&q=relevanceLanguage&colspec=API%20ID%20Type%20Status%20Priority%20Stars%20Summary",target:"_blank",rel:"noopener"}},[this._v("issue")])])}],!1,null,"625e212c",null);p.options.__file="src/pages/search.vue";e.default=p.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,