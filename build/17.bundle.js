(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{193:function(e,t,i){"use strict";i.r(t);var a=i(23),l=i(69),n={components:{VideoList:i(107).default},props:{channel:Object},data:function(){return{videos:[],limit:6}},created:function(){this.loadVideos()},watch:{$route:"loadVideos"},methods:{loadVideos:function(){var e=this,t={channelId:this.channel.id,order:l.a.order[2].value,maxResults:this.limit};a.a.fetchVideos(t).then(function(t){e.videos=t.videos})}}},s=i(4),o=Object(s.a)(n,function(){var e=this,t=e.$createElement,i=e._self._c||t;return e.channel&&e.videos.length?i("section",{staticClass:"section is-paddingless"},[i("hr"),i("div",{staticClass:"container"},[i("strong",[e._v("More from "),i("router-link",{attrs:{to:{name:"channel",params:{id:e.channel.id}}}},[e._v(e._s(e.channel.title))])],1),i("div",{staticClass:"has-margintop"},[i("video-list",{attrs:{videos:e.videos,columns:e.limit}})],1)])]):e._e()},[],!1,null,null,null);t.default=o.exports},69:function(e,t,i){"use strict";var a=i(68),l=i.n(a),n=[{title:"All Time",value:""},{title:"Today",value:l()().subtract(1,"days").toISOString()},{title:"This Week",value:l()().subtract(7,"days").toISOString()},{title:"This Month",value:l()().subtract(30,"days").toISOString()},{title:"This Year",value:l()().subtract(365,"days").toISOString()}];t.a={order:[{title:"By views",value:"viewCount",field:"viewCount"},{title:"By rating",value:"rating",field:"rating"},{title:"By date",value:"date",field:"publishedAt"},{title:"By relevance",value:"relevance",field:"viewCount"}],language:[{title:"Czech",value:"cs"},{title:"English",value:"en"},{title:"French",value:"fr"},{title:"Hebrew",value:"he"},{title:"Polish",value:"pl"},{title:"Portuguese",value:"pt"},{title:"Russian",value:"ru"}],timeframe:n}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,