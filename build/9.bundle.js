(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{135:function(t,e,i){"use strict";var a=i(137),s=i.n(a),n=[{title:"All Time",value:""},{title:"Today",value:s()().subtract(1,"days").toISOString()},{title:"This Week",value:s()().subtract(7,"days").toISOString()},{title:"This Month",value:s()().subtract(30,"days").toISOString()},{title:"This Year",value:s()().subtract(365,"days").toISOString()}];e.a={order:[{title:"By views",value:"viewCount",field:"viewCount"},{title:"By rating",value:"rating",field:"rating"},{title:"By date",value:"date",field:"publishedAt"},{title:"By relevance",value:"relevance",field:"viewCount"}],language:[{title:"Czech",value:"cs"},{title:"English",value:"en"},{title:"French",value:"fr"},{title:"Hebrew",value:"he"},{title:"Polish",value:"pl"},{title:"Portuguese",value:"pt"},{title:"Russian",value:"ru"}],timeframe:n}},136:function(t,e,i){"use strict";var a=i(22),s=i.n(a);e.a={prepareQuery:function(t){var e="";t.constructor===Array?e=(e=s()(t,"title").join("|")).replace(/\./g,""):t.constructor===Object&&(e=t.title);return"$1".replace(/\$1/,e)}}},147:function(t,e,i){var a=i(163);"string"==typeof a&&(a=[[t.i,a,""]]);i(6)(a,{});a.locals&&(t.exports=a.locals)},162:function(t,e,i){"use strict";var a=i(147);i.n(a).a},163:function(t,e,i){(t.exports=i(5)(!1)).push([t.i,".player[data-v-68eae891]{margin:0 auto;max-width:100vw}@media screen and (min-width: 769px){.player[data-v-68eae891]{max-width:64vw}}.player__wrapper[data-v-68eae891]{position:relative;padding-bottom:56.25%;padding-top:35px;height:0;overflow:hidden}.player iframe[data-v-68eae891]{position:absolute;top:0;left:0;width:100%;height:100%;border:0}\n",""])},176:function(t,e,i){"use strict";i.r(e);var a=function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("main",[t.loaded&&t.video&&!t.error?i("div",{staticClass:"hero is-black is-large"},[i("div",{staticClass:"hero-body is-paddingless"},[i("div",{staticClass:"container"},[i("player",{attrs:{id:t.video.id,autoplay:""}})],1)])]):t._e(),t.loaded&&t.video&&!t.error?i("section",{staticClass:"section"},[i("div",{staticClass:"container"},[i("div",{staticClass:"media"},[i("div",{staticClass:"media-left"},[t.video.channel?i("figure",{staticClass:"image is-48x48"},[i("img",{staticClass:"is-circle",attrs:{src:t.video.channel.thumbnails.default.url,alt:t.video.channelTitle+" channel logo"}})]):t._e()]),i("div",{staticClass:"media-content"},[i("div",{staticClass:"content"},[i("h2",{staticClass:"title is-5"},[i("strong",[t._v(t._s(t.video.title))])]),i("p",{staticClass:"subtitle is-6"},[i("router-link",{attrs:{to:{name:"channel",params:{id:t.video.channelId}}}},[t._v(t._s(t.video.channelTitle))]),t._v(" * "+t._s(t.publishedAt))],1)])]),i("div",{staticClass:"media-right"},[i("span",[t._v(t._s(t.viewCount))])])]),i("div",{staticClass:"content has-margintop"},[i("p",{domProps:{innerHTML:t._s(t.description)}}),i("div",{staticClass:"control is-grouped"},t._l(t.video.topics,function(e){return i("div",{staticClass:"control"},[i("router-link",{staticClass:"button",attrs:{to:{name:"topic",params:{id:e.id}},exact:""}},[t._v(t._s(e.title))])],1)}),0)])]),t._l(t.video.topics,function(t){return i("div",[i("topic-related-videos",{attrs:{topic:t}})],1)}),i("channel-recent-videos",{attrs:{channel:t.video.channel}})],2):t._e(),t.loaded&&t.error?i("div",{staticClass:"hero is-large"},[t._m(0)]):t._e()])};a._withStripped=!0;var s=i(137),n=i.n(s),o=i(143),r=i.n(o),l=i(31),d=i.n(l),c=i(32),u=i.n(c),h=i(161),p=i.n(h),v=i(21),m=i(0),f=function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"player",style:this.style},[e("div",{staticClass:"player__wrapper"},[e("iframe",{attrs:{src:this.src,frameborder:"0",allowfullscreen:"",title:"YouTube Player"}})])])};f._withStripped=!0;var g={data:function(){return{baseUrl:"https://www.youtube.com/embed/$id?$params"}},props:{id:{type:String,required:!0},width:{type:Number},height:{type:Number},autoplay:{type:Boolean,default:!1}},computed:{src:function(){return this.baseUrl.replace("$id",this.id).replace("$params",this.getParams())},style:function(){return(this.width?"width:"+this.width+"px;":"")+(this.height?"height:"+this.height+"px;":"")},settings:function(){return{autoplay:this.autoplay}}},methods:{getParams:function(){var t="";for(var e in this.settings)""!==t&&(t+="&"),t+=e+"="+encodeURIComponent(this.settings[e]);return t}}},_=(i(162),i(1)),w=Object(_.a)(g,f,[],!1,null,"68eae891",null);w.options.__file="src/components/Player.vue";var C=w.exports,b=function(){var t=this,e=t.$createElement,i=t._self._c||e;return t.channel&&t.videos.length?i("section",{staticClass:"section is-paddingless"},[i("hr"),i("div",{staticClass:"container"},[i("strong",[t._v("More from "),i("router-link",{attrs:{to:{name:"channel",params:{id:t.channel.id}}}},[t._v(t._s(t.channel.title))])],1),i("div",{staticClass:"has-margintop"},[i("video-list",{attrs:{videos:t.videos,columns:t.limit}})],1)])]):t._e()};b._withStripped=!0;var y=i(135),V=i(134),x={components:{VideoList:V.a},props:{channel:Object},data:function(){return{videos:[],limit:6}},created:function(){this.loadVideos()},watch:{$route:"loadVideos"},methods:{loadVideos:function(){var t=this,e={channelId:this.channel.id,order:y.a.order[2].value,maxResults:this.limit};v.a.fetchVideos(e).then(function(e){t.videos=e.videos})}}},$=Object(_.a)(x,b,[],!1,null,null,null);$.options.__file="src/widgets/ChannelRecentVideos.vue";var S=$.exports,T=function(){var t=this,e=t.$createElement,i=t._self._c||e;return t.topic&&t.videos.length?i("section",{staticClass:"section is-paddingless"},[i("hr"),i("div",{staticClass:"container"},[i("strong",[t._v("More from "),i("router-link",{attrs:{to:{name:"topic",params:{id:t.topic.id}}}},[t._v(t._s(t.topic.title))])],1),i("div",{staticClass:"has-margintop"},[i("video-list",{attrs:{videos:t.videos,columns:t.limit}})],1)])]):t._e()};T._withStripped=!0;var O=i(136),j={components:{VideoList:V.a},props:{topic:Object},data:function(){return{videos:[],limit:6}},created:function(){this.loadVideos()},watch:{$route:"loadVideos"},methods:{loadVideos:function(){var t=this,e={q:O.a.prepareQuery(this.topic),order:y.a.order[3].value,maxResults:this.limit};v.a.fetchVideos(e).then(function(e){t.videos=e.videos})}}},P=Object(_.a)(j,T,[],!1,null,null,null);P.options.__file="src/widgets/TopicRelatedVideos.vue";var k={components:{Player:C,ChannelRecentVideos:S,TopicRelatedVideos:P.exports},data:function(){return{video:null,loaded:!1,params:{title:"",description:""},error:null}},computed:{publishedAt:function(){return"Published on "+n()(this.video.publishedAt).format("MMM D, YYYY")},viewCount:function(){return r()(this.video.viewCount).format("0,0")+" views"},description:function(){return d()(u()(this.video.description,{attributes:{rel:"noopener"}}))}},created:function(){this.video=null,this.loaded=!1,this.loadVideo()},watch:{$route:function(){this.video=null,this.loaded=!1,this.loadVideo()}},methods:{loadVideo:function(){var t=this;v.a.fetchVideo(this.$route.params.id).then(function(e){v.a.fetchChannel(e.channelId).then(function(i){e.channel=i,e.topics=[],t.video=e,t.loaded=!0,t.params.title=e.title,t.params.description=p()(e.description.replace(/\r?\n|\r/g,""),{length:155,separator:" "}),t.$emit("updateHead");var a=e.tags.join(",");a&&v.a.fetchTopics({id:a}).then(function(e){t.video.topics=e})})}).catch(function(e){t.loaded=!0,t.error=e.message})}},head:{title:function(){return{inner:this.params.title,separator:"-",complement:m.a.app.name}},meta:function(){return[{id:"description",name:"description",content:this.params.description}]}}},I=Object(_.a)(k,a,[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"hero-body"},[e("div",{staticClass:"container has-text-centered"},[e("h2",{staticClass:"title is-3"},[this._v("Sorry, but this video is somehow not loaded ðŸ˜ž")])])])}],!1,null,null,null);I.options.__file="src/pages/videos/single.vue";e.default=I.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,