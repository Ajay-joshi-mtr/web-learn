(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{133:function(t,e,r){var n=r(142);"string"==typeof n&&(n=[[t.i,n,""]]);r(6)(n,{});n.locals&&(t.exports=n.locals)},134:function(t,e){var r=1/0,n=9007199254740991,i=17976931348623157e292,o=NaN,a="[object Function]",s="[object GeneratorFunction]",u="[object Symbol]",l=/^\s+|\s+$/g,c=/^[-+]0x[0-9a-f]+$/i,f=/^0b[01]+$/i,d=/^0o[0-7]+$/i,p=/^(?:0|[1-9]\d*)$/,h=parseInt,v=Object.prototype.toString,m=Math.ceil,g=Math.max;function y(t,e,r){var n=-1,i=t.length;e<0&&(e=-e>i?0:i+e),(r=r>i?i:r)<0&&(r+=i),i=e>r?0:r-e>>>0,e>>>=0;for(var o=Array(i);++n<i;)o[n]=t[n+e];return o}function x(t,e,r){if(!w(r))return!1;var i=typeof e;return!!("number"==i?function(t){return null!=t&&function(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=n}(t.length)&&!function(t){var e=w(t)?v.call(t):"";return e==a||e==s}(t)}(r)&&function(t,e){return!!(e=null==e?n:e)&&("number"==typeof t||p.test(t))&&t>-1&&t%1==0&&t<e}(e,r.length):"string"==i&&e in r)&&function(t,e){return t===e||t!=t&&e!=e}(r[e],t)}function w(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}t.exports=function(t,e,n){e=(n?x(t,e,n):void 0===e)?1:g(function(t){var e=function(t){if(!t)return 0===t?t:0;if((t=function(t){if("number"==typeof t)return t;if(function(t){return"symbol"==typeof t||function(t){return!!t&&"object"==typeof t}(t)&&v.call(t)==u}(t))return o;if(w(t)){var e="function"==typeof t.valueOf?t.valueOf():t;t=w(e)?e+"":e}if("string"!=typeof t)return 0===t?t:+t;t=t.replace(l,"");var r=f.test(t);return r||d.test(t)?h(t.slice(2),r?2:8):c.test(t)?o:+t}(t))===r||t===-r){return(t<0?-1:1)*i}return t==t?t:0}(t),n=e%1;return e==e?n?e-n:e:0}(e),0);var a=t?t.length:0;if(!a||e<1)return[];for(var s=0,p=0,b=Array(m(a/e));s<a;)b[p++]=y(t,s,s+=e);return b}},137:function(t,e,r){"use strict";var n=r(22),i=r.n(n);e.a={prepareQuery:function(t){var e="";t.constructor===Array?e=(e=i()(t,"title").join("|")).replace(/\./g,""):t.constructor===Object&&(e=t.title);return"$1".replace(/\$1/,e)}}},139:function(t,e,r){t.exports=function(){"use strict";return function(t,e,r){var n=e.prototype;r.en.relativeTime={future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"};var i=function(t,e,n,i){for(var o,a,s=n.$locale().relativeTime,u=[{l:"s",r:44,d:"second"},{l:"m",r:89},{l:"mm",r:44,d:"minute"},{l:"h",r:89},{l:"hh",r:21,d:"hour"},{l:"d",r:35},{l:"dd",r:25,d:"day"},{l:"M",r:45},{l:"MM",r:10,d:"month"},{l:"y",r:17},{l:"yy",d:"year"}],l=u.length,c=0;c<l;c+=1){var f=u[c];f.d&&(o=i?r(t).diff(n,f.d,!0):n.diff(t,f.d,!0));var d=Math.round(Math.abs(o));if(d<=f.r||!f.r){1===d&&c>0&&(f=u[c-1]),a=s[f.l].replace("%d",d);break}}return e?a:(o>0?s.future:s.past).replace("%s",a)};n.to=function(t,e){return i(t,e,this,!0)},n.from=function(t,e){return i(t,e,this)},n.toNow=function(t){return this.to(r(),t)},n.fromNow=function(t){return this.from(r(),t)}}}()},140:function(t,e,r){"use strict";t.exports=function(t,e){for(var r=[],n=0,i=t.match(/P(?:(\d*)Y)?(?:(\d*)M)?(?:(\d*)W)?(?:(\d*)D)?T?(?:(\d*)H)?(?:(\d*)M)?(?:(\d*)S)?/i),o=[{pos:1,multiplier:31536e3},{pos:2,multiplier:2592e3},{pos:3,multiplier:604800},{pos:4,multiplier:86400},{pos:5,multiplier:3600},{pos:6,multiplier:60},{pos:7,multiplier:1}],a=0;a<o.length;a++)void 0!==i[o[a].pos]&&(n+=parseInt(i[o[a].pos])*o[a].multiplier);var s=n;return n>3599&&(r.push(parseInt(n/3600)),n%=3600),r.push(("0"+parseInt(n/60)).slice(-2)),r.push(("0"+n%60).slice(-2)),void 0===e?r.join(":"):"sec"===e?s:void 0}},141:function(t,e,r){"use strict";var n=r(133);r.n(n).a},142:function(t,e,r){(t.exports=r(5)(!1)).push([t.i,".spinner__wrapper[data-v-54c7522e]{margin-top:40px;height:30px}.spinner[data-v-54c7522e]{animation:rotator-data-v-54c7522e 1.4s linear infinite}@keyframes rotator-data-v-54c7522e{0%{transform:rotate(0deg)}100%{transform:rotate(270deg)}}.path[data-v-54c7522e]{stroke-dasharray:187;stroke-dashoffset:0;transform-origin:center;stroke:#4a8bfa;animation:dash-data-v-54c7522e 1.4s ease-in-out infinite}@keyframes dash-data-v-54c7522e{0%{stroke-dashoffset:187}50%{stroke-dashoffset:46.75;transform:rotate(135deg)}100%{stroke-dashoffset:187;transform:rotate(450deg)}}\n",""])},143:function(t,e,r){"use strict";var n={props:{show:{type:Boolean,default:!1}}},i=(r(141),r(1)),o=Object(i.a)(n,function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"level spinner__wrapper"},[e("div",{staticClass:"level-item has-text-centered"},[this.show?e("svg",{staticClass:"spinner",attrs:{width:"30px",height:"30px",viewBox:"0 0 66 66",xmlns:"http://www.w3.org/2000/svg"}},[e("circle",{staticClass:"path",attrs:{fill:"none","stroke-width":"6","stroke-linecap":"round",cx:"33",cy:"33",r:"30"}})]):this._e()])])},[],!1,null,"54c7522e",null);e.a=o.exports},182:function(t,e,r){"use strict";r.r(e);var n=r(21),i=r(137),o=r(135),a=r(143),s={components:{VideoList:o.a,Spinner:a.a},data:function(){return{videos:[],loading:!1,nextPage:null,limit:20}},created:function(){this.videos=[],this.nextPage=null,this.loadVideos()},watch:{$route:function(){this.videos=[],this.nextPage=null,this.loadVideos()}},methods:{loadVideos:function(){var t=this;this.loading=!0,n.a.fetchTopic(this.$route.params.id).then(function(e){var r={q:i.a.prepareQuery(e),order:t.$route.meta.order,maxResults:t.limit,pageToken:t.nextPage,videoCategoryId:27};n.a.fetchVideos(r).then(function(e){t.loading=!1,t.$Progress.finish(),e.videos.length?(t.nextPage=e.nextPageToken,e.videos.forEach(function(e){t.videos.push(e)})):t.nextPage=null}).catch(function(){t.loading=!1,t.$Progress.fail()})}).catch(function(){t.loading=!1,t.$Progress.fail()})},loadMore:function(){this.nextPage&&this.loadVideos()}}},u=r(1),l=Object(u.a)(s,function(){var t=this.$createElement,e=this._self._c||t;return e("section",{directives:[{name:"infinite-scroll",rawName:"v-infinite-scroll",value:this.loadMore,expression:"loadMore"}],staticClass:"section",attrs:{"infinite-scroll-disabled":"loading"}},[e("div",{staticClass:"container"},[e("video-list",{attrs:{videos:this.videos}}),e("spinner",{attrs:{show:this.loading}})],1)])},[],!1,null,null,null);e.default=l.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,