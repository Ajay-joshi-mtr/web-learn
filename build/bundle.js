!function(e){function t(t){for(var n,i,r=t[0],a=t[1],s=0,c=[];s<r.length;s++)i=r[s],Object.prototype.hasOwnProperty.call(o,i)&&o[i]&&c.push(o[i][0]),o[i]=0;for(n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n]);for(l&&l(t);c.length;)c.shift()()}var n={},o={17:0};function i(t){if(n[t])return n[t].exports;var o=n[t]={i:t,l:!1,exports:{}};return e[t].call(o.exports,o,o.exports,i),o.l=!0,o.exports}i.e=function(e){var t=[],n=o[e];if(0!==n)if(n)t.push(n[2]);else{var r=new Promise(function(t,i){n=o[e]=[t,i]});t.push(n[2]=r);var a,s=document.createElement("script");s.charset="utf-8",s.timeout=120,i.nc&&s.setAttribute("nonce",i.nc),s.src=function(e){return i.p+""+e+".bundle.js"}(e);var l=new Error;a=function(t){s.onerror=s.onload=null,clearTimeout(c);var n=o[e];if(0!==n){if(n){var i=t&&("load"===t.type?"missing":t.type),r=t&&t.target&&t.target.src;l.message="Loading chunk "+e+" failed.\n("+i+": "+r+")",l.name="ChunkLoadError",l.type=i,l.request=r,n[1](l)}o[e]=void 0}};var c=setTimeout(function(){a({type:"timeout",target:s})},12e4);s.onerror=s.onload=a,document.head.appendChild(s)}return Promise.all(t)},i.m=e,i.c=n,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)i.d(n,o,function(t){return e[t]}.bind(null,o));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="/build/",i.oe=function(e){throw console.error(e),e};var r=window.webpackJsonp=window.webpackJsonp||[],a=r.push.bind(r);r.push=t,r=r.slice();for(var s=0;s<r.length;s++)t(r[s]);var l=a;i(i.s=20)}([function(e,t,n){"use strict";(function(e,n){
/*!
 * Vue.js v2.6.10
 * (c) 2014-2019 Evan You
 * Released under the MIT License.
 */
var o=Object.freeze({});function i(e){return null==e}function r(e){return null!=e}function a(e){return!0===e}function s(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function l(e){return null!==e&&"object"==typeof e}var c=Object.prototype.toString;function d(e){return"[object Object]"===c.call(e)}function f(e){return"[object RegExp]"===c.call(e)}function u(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function p(e){return r(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function h(e){return null==e?"":Array.isArray(e)||d(e)&&e.toString===c?JSON.stringify(e,null,2):String(e)}function m(e){var t=parseFloat(e);return isNaN(t)?e:t}function g(e,t){for(var n=Object.create(null),o=e.split(","),i=0;i<o.length;i++)n[o[i]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}g("slot,component",!0);var b=g("key,ref,slot,slot-scope,is");function v(e,t){if(e.length){var n=e.indexOf(t);if(n>-1)return e.splice(n,1)}}var x=Object.prototype.hasOwnProperty;function y(e,t){return x.call(e,t)}function w(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var k=/-(\w)/g,_=w(function(e){return e.replace(k,function(e,t){return t?t.toUpperCase():""})}),A=w(function(e){return e.charAt(0).toUpperCase()+e.slice(1)}),O=/\B([A-Z])/g,C=w(function(e){return e.replace(O,"-$1").toLowerCase()});var $=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var o=arguments.length;return o?o>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function T(e,t){t=t||0;for(var n=e.length-t,o=new Array(n);n--;)o[n]=e[n+t];return o}function j(e,t){for(var n in t)e[n]=t[n];return e}function S(e){for(var t={},n=0;n<e.length;n++)e[n]&&j(t,e[n]);return t}function R(e,t,n){}var E=function(e,t,n){return!1},z=function(e){return e};function N(e,t){if(e===t)return!0;var n=l(e),o=l(t);if(!n||!o)return!n&&!o&&String(e)===String(t);try{var i=Array.isArray(e),r=Array.isArray(t);if(i&&r)return e.length===t.length&&e.every(function(e,n){return N(e,t[n])});if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(i||r)return!1;var a=Object.keys(e),s=Object.keys(t);return a.length===s.length&&a.every(function(n){return N(e[n],t[n])})}catch(e){return!1}}function I(e,t){for(var n=0;n<e.length;n++)if(N(e[n],t))return n;return-1}function L(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}var D="data-server-rendered",P=["component","directive","filter"],M=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],B={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:E,isReservedAttr:E,isUnknownElement:E,getTagNamespace:R,parsePlatformTagName:z,mustUseProp:E,async:!0,_lifecycleHooks:M},F=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function U(e,t,n,o){Object.defineProperty(e,t,{value:n,enumerable:!!o,writable:!0,configurable:!0})}var q=new RegExp("[^"+F.source+".$_\\d]");var G,H="__proto__"in{},V="undefined"!=typeof window,W="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,K=W&&WXEnvironment.platform.toLowerCase(),Y=V&&window.navigator.userAgent.toLowerCase(),J=Y&&/msie|trident/.test(Y),X=Y&&Y.indexOf("msie 9.0")>0,Q=Y&&Y.indexOf("edge/")>0,Z=(Y&&Y.indexOf("android"),Y&&/iphone|ipad|ipod|ios/.test(Y)||"ios"===K),ee=(Y&&/chrome\/\d+/.test(Y),Y&&/phantomjs/.test(Y),Y&&Y.match(/firefox\/(\d+)/)),te={}.watch,ne=!1;if(V)try{var oe={};Object.defineProperty(oe,"passive",{get:function(){ne=!0}}),window.addEventListener("test-passive",null,oe)}catch(e){}var ie=function(){return void 0===G&&(G=!V&&!W&&void 0!==e&&(e.process&&"server"===e.process.env.VUE_ENV)),G},re=V&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function ae(e){return"function"==typeof e&&/native code/.test(e.toString())}var se,le="undefined"!=typeof Symbol&&ae(Symbol)&&"undefined"!=typeof Reflect&&ae(Reflect.ownKeys);se="undefined"!=typeof Set&&ae(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var ce=R,de=0,fe=function(){this.id=de++,this.subs=[]};fe.prototype.addSub=function(e){this.subs.push(e)},fe.prototype.removeSub=function(e){v(this.subs,e)},fe.prototype.depend=function(){fe.target&&fe.target.addDep(this)},fe.prototype.notify=function(){var e=this.subs.slice();for(var t=0,n=e.length;t<n;t++)e[t].update()},fe.target=null;var ue=[];function pe(e){ue.push(e),fe.target=e}function he(){ue.pop(),fe.target=ue[ue.length-1]}var me=function(e,t,n,o,i,r,a,s){this.tag=e,this.data=t,this.children=n,this.text=o,this.elm=i,this.ns=void 0,this.context=r,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=a,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},ge={child:{configurable:!0}};ge.child.get=function(){return this.componentInstance},Object.defineProperties(me.prototype,ge);var be=function(e){void 0===e&&(e="");var t=new me;return t.text=e,t.isComment=!0,t};function ve(e){return new me(void 0,void 0,void 0,String(e))}function xe(e){var t=new me(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}var ye=Array.prototype,we=Object.create(ye);["push","pop","shift","unshift","splice","sort","reverse"].forEach(function(e){var t=ye[e];U(we,e,function(){for(var n=[],o=arguments.length;o--;)n[o]=arguments[o];var i,r=t.apply(this,n),a=this.__ob__;switch(e){case"push":case"unshift":i=n;break;case"splice":i=n.slice(2)}return i&&a.observeArray(i),a.dep.notify(),r})});var ke=Object.getOwnPropertyNames(we),_e=!0;function Ae(e){_e=e}var Oe=function(e){this.value=e,this.dep=new fe,this.vmCount=0,U(e,"__ob__",this),Array.isArray(e)?(H?function(e,t){e.__proto__=t}(e,we):function(e,t,n){for(var o=0,i=n.length;o<i;o++){var r=n[o];U(e,r,t[r])}}(e,we,ke),this.observeArray(e)):this.walk(e)};function Ce(e,t){var n;if(l(e)&&!(e instanceof me))return y(e,"__ob__")&&e.__ob__ instanceof Oe?n=e.__ob__:_e&&!ie()&&(Array.isArray(e)||d(e))&&Object.isExtensible(e)&&!e._isVue&&(n=new Oe(e)),t&&n&&n.vmCount++,n}function $e(e,t,n,o,i){var r=new fe,a=Object.getOwnPropertyDescriptor(e,t);if(!a||!1!==a.configurable){var s=a&&a.get,l=a&&a.set;s&&!l||2!==arguments.length||(n=e[t]);var c=!i&&Ce(n);Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=s?s.call(e):n;return fe.target&&(r.depend(),c&&(c.dep.depend(),Array.isArray(t)&&function e(t){for(var n=void 0,o=0,i=t.length;o<i;o++)(n=t[o])&&n.__ob__&&n.__ob__.dep.depend(),Array.isArray(n)&&e(n)}(t))),t},set:function(t){var o=s?s.call(e):n;t===o||t!=t&&o!=o||s&&!l||(l?l.call(e,t):n=t,c=!i&&Ce(t),r.notify())}})}}function Te(e,t,n){if(Array.isArray(e)&&u(t))return e.length=Math.max(e.length,t),e.splice(t,1,n),n;if(t in e&&!(t in Object.prototype))return e[t]=n,n;var o=e.__ob__;return e._isVue||o&&o.vmCount?n:o?($e(o.value,t,n),o.dep.notify(),n):(e[t]=n,n)}function je(e,t){if(Array.isArray(e)&&u(t))e.splice(t,1);else{var n=e.__ob__;e._isVue||n&&n.vmCount||y(e,t)&&(delete e[t],n&&n.dep.notify())}}Oe.prototype.walk=function(e){for(var t=Object.keys(e),n=0;n<t.length;n++)$e(e,t[n])},Oe.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)Ce(e[t])};var Se=B.optionMergeStrategies;function Re(e,t){if(!t)return e;for(var n,o,i,r=le?Reflect.ownKeys(t):Object.keys(t),a=0;a<r.length;a++)"__ob__"!==(n=r[a])&&(o=e[n],i=t[n],y(e,n)?o!==i&&d(o)&&d(i)&&Re(o,i):Te(e,n,i));return e}function Ee(e,t,n){return n?function(){var o="function"==typeof t?t.call(n,n):t,i="function"==typeof e?e.call(n,n):e;return o?Re(o,i):i}:t?e?function(){return Re("function"==typeof t?t.call(this,this):t,"function"==typeof e?e.call(this,this):e)}:t:e}function ze(e,t){var n=t?e?e.concat(t):Array.isArray(t)?t:[t]:e;return n?function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(n):n}function Ne(e,t,n,o){var i=Object.create(e||null);return t?j(i,t):i}Se.data=function(e,t,n){return n?Ee(e,t,n):t&&"function"!=typeof t?e:Ee(e,t)},M.forEach(function(e){Se[e]=ze}),P.forEach(function(e){Se[e+"s"]=Ne}),Se.watch=function(e,t,n,o){if(e===te&&(e=void 0),t===te&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var i={};for(var r in j(i,e),t){var a=i[r],s=t[r];a&&!Array.isArray(a)&&(a=[a]),i[r]=a?a.concat(s):Array.isArray(s)?s:[s]}return i},Se.props=Se.methods=Se.inject=Se.computed=function(e,t,n,o){if(!e)return t;var i=Object.create(null);return j(i,e),t&&j(i,t),i},Se.provide=Ee;var Ie=function(e,t){return void 0===t?e:t};function Le(e,t,n){if("function"==typeof t&&(t=t.options),function(e,t){var n=e.props;if(n){var o,i,r={};if(Array.isArray(n))for(o=n.length;o--;)"string"==typeof(i=n[o])&&(r[_(i)]={type:null});else if(d(n))for(var a in n)i=n[a],r[_(a)]=d(i)?i:{type:i};else 0;e.props=r}}(t),function(e,t){var n=e.inject;if(n){var o=e.inject={};if(Array.isArray(n))for(var i=0;i<n.length;i++)o[n[i]]={from:n[i]};else if(d(n))for(var r in n){var a=n[r];o[r]=d(a)?j({from:r},a):{from:a}}else 0}}(t),function(e){var t=e.directives;if(t)for(var n in t){var o=t[n];"function"==typeof o&&(t[n]={bind:o,update:o})}}(t),!t._base&&(t.extends&&(e=Le(e,t.extends,n)),t.mixins))for(var o=0,i=t.mixins.length;o<i;o++)e=Le(e,t.mixins[o],n);var r,a={};for(r in e)s(r);for(r in t)y(e,r)||s(r);function s(o){var i=Se[o]||Ie;a[o]=i(e[o],t[o],n,o)}return a}function De(e,t,n,o){if("string"==typeof n){var i=e[t];if(y(i,n))return i[n];var r=_(n);if(y(i,r))return i[r];var a=A(r);return y(i,a)?i[a]:i[n]||i[r]||i[a]}}function Pe(e,t,n,o){var i=t[e],r=!y(n,e),a=n[e],s=Fe(Boolean,i.type);if(s>-1)if(r&&!y(i,"default"))a=!1;else if(""===a||a===C(e)){var l=Fe(String,i.type);(l<0||s<l)&&(a=!0)}if(void 0===a){a=function(e,t,n){if(!y(t,"default"))return;var o=t.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n])return e._props[n];return"function"==typeof o&&"Function"!==Me(t.type)?o.call(e):o}(o,i,e);var c=_e;Ae(!0),Ce(a),Ae(c)}return a}function Me(e){var t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:""}function Be(e,t){return Me(e)===Me(t)}function Fe(e,t){if(!Array.isArray(t))return Be(t,e)?0:-1;for(var n=0,o=t.length;n<o;n++)if(Be(t[n],e))return n;return-1}function Ue(e,t,n){pe();try{if(t)for(var o=t;o=o.$parent;){var i=o.$options.errorCaptured;if(i)for(var r=0;r<i.length;r++)try{if(!1===i[r].call(o,e,t,n))return}catch(e){Ge(e,o,"errorCaptured hook")}}Ge(e,t,n)}finally{he()}}function qe(e,t,n,o,i){var r;try{(r=n?e.apply(t,n):e.call(t))&&!r._isVue&&p(r)&&!r._handled&&(r.catch(function(e){return Ue(e,o,i+" (Promise/async)")}),r._handled=!0)}catch(e){Ue(e,o,i)}return r}function Ge(e,t,n){if(B.errorHandler)try{return B.errorHandler.call(null,e,t,n)}catch(t){t!==e&&He(t,null,"config.errorHandler")}He(e,t,n)}function He(e,t,n){if(!V&&!W||"undefined"==typeof console)throw e;console.error(e)}var Ve,We=!1,Ke=[],Ye=!1;function Je(){Ye=!1;var e=Ke.slice(0);Ke.length=0;for(var t=0;t<e.length;t++)e[t]()}if("undefined"!=typeof Promise&&ae(Promise)){var Xe=Promise.resolve();Ve=function(){Xe.then(Je),Z&&setTimeout(R)},We=!0}else if(J||"undefined"==typeof MutationObserver||!ae(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Ve=void 0!==n&&ae(n)?function(){n(Je)}:function(){setTimeout(Je,0)};else{var Qe=1,Ze=new MutationObserver(Je),et=document.createTextNode(String(Qe));Ze.observe(et,{characterData:!0}),Ve=function(){Qe=(Qe+1)%2,et.data=String(Qe)},We=!0}function tt(e,t){var n;if(Ke.push(function(){if(e)try{e.call(t)}catch(e){Ue(e,t,"nextTick")}else n&&n(t)}),Ye||(Ye=!0,Ve()),!e&&"undefined"!=typeof Promise)return new Promise(function(e){n=e})}var nt=new se;function ot(e){!function e(t,n){var o,i;var r=Array.isArray(t);if(!r&&!l(t)||Object.isFrozen(t)||t instanceof me)return;if(t.__ob__){var a=t.__ob__.dep.id;if(n.has(a))return;n.add(a)}if(r)for(o=t.length;o--;)e(t[o],n);else for(i=Object.keys(t),o=i.length;o--;)e(t[i[o]],n)}(e,nt),nt.clear()}var it=w(function(e){var t="&"===e.charAt(0),n="~"===(e=t?e.slice(1):e).charAt(0),o="!"===(e=n?e.slice(1):e).charAt(0);return{name:e=o?e.slice(1):e,once:n,capture:o,passive:t}});function rt(e,t){function n(){var e=arguments,o=n.fns;if(!Array.isArray(o))return qe(o,null,arguments,t,"v-on handler");for(var i=o.slice(),r=0;r<i.length;r++)qe(i[r],null,e,t,"v-on handler")}return n.fns=e,n}function at(e,t,n,o,r,s){var l,c,d,f;for(l in e)c=e[l],d=t[l],f=it(l),i(c)||(i(d)?(i(c.fns)&&(c=e[l]=rt(c,s)),a(f.once)&&(c=e[l]=r(f.name,c,f.capture)),n(f.name,c,f.capture,f.passive,f.params)):c!==d&&(d.fns=c,e[l]=d));for(l in t)i(e[l])&&o((f=it(l)).name,t[l],f.capture)}function st(e,t,n){var o;e instanceof me&&(e=e.data.hook||(e.data.hook={}));var s=e[t];function l(){n.apply(this,arguments),v(o.fns,l)}i(s)?o=rt([l]):r(s.fns)&&a(s.merged)?(o=s).fns.push(l):o=rt([s,l]),o.merged=!0,e[t]=o}function lt(e,t,n,o,i){if(r(t)){if(y(t,n))return e[n]=t[n],i||delete t[n],!0;if(y(t,o))return e[n]=t[o],i||delete t[o],!0}return!1}function ct(e){return s(e)?[ve(e)]:Array.isArray(e)?function e(t,n){var o=[];var l,c,d,f;for(l=0;l<t.length;l++)i(c=t[l])||"boolean"==typeof c||(d=o.length-1,f=o[d],Array.isArray(c)?c.length>0&&(dt((c=e(c,(n||"")+"_"+l))[0])&&dt(f)&&(o[d]=ve(f.text+c[0].text),c.shift()),o.push.apply(o,c)):s(c)?dt(f)?o[d]=ve(f.text+c):""!==c&&o.push(ve(c)):dt(c)&&dt(f)?o[d]=ve(f.text+c.text):(a(t._isVList)&&r(c.tag)&&i(c.key)&&r(n)&&(c.key="__vlist"+n+"_"+l+"__"),o.push(c)));return o}(e):void 0}function dt(e){return r(e)&&r(e.text)&&!1===e.isComment}function ft(e,t){if(e){for(var n=Object.create(null),o=le?Reflect.ownKeys(e):Object.keys(e),i=0;i<o.length;i++){var r=o[i];if("__ob__"!==r){for(var a=e[r].from,s=t;s;){if(s._provided&&y(s._provided,a)){n[r]=s._provided[a];break}s=s.$parent}if(!s)if("default"in e[r]){var l=e[r].default;n[r]="function"==typeof l?l.call(t):l}else 0}}return n}}function ut(e,t){if(!e||!e.length)return{};for(var n={},o=0,i=e.length;o<i;o++){var r=e[o],a=r.data;if(a&&a.attrs&&a.attrs.slot&&delete a.attrs.slot,r.context!==t&&r.fnContext!==t||!a||null==a.slot)(n.default||(n.default=[])).push(r);else{var s=a.slot,l=n[s]||(n[s]=[]);"template"===r.tag?l.push.apply(l,r.children||[]):l.push(r)}}for(var c in n)n[c].every(pt)&&delete n[c];return n}function pt(e){return e.isComment&&!e.asyncFactory||" "===e.text}function ht(e,t,n){var i,r=Object.keys(t).length>0,a=e?!!e.$stable:!r,s=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(a&&n&&n!==o&&s===n.$key&&!r&&!n.$hasNormal)return n;for(var l in i={},e)e[l]&&"$"!==l[0]&&(i[l]=mt(t,l,e[l]))}else i={};for(var c in t)c in i||(i[c]=gt(t,c));return e&&Object.isExtensible(e)&&(e._normalized=i),U(i,"$stable",a),U(i,"$key",s),U(i,"$hasNormal",r),i}function mt(e,t,n){var o=function(){var e=arguments.length?n.apply(null,arguments):n({});return(e=e&&"object"==typeof e&&!Array.isArray(e)?[e]:ct(e))&&(0===e.length||1===e.length&&e[0].isComment)?void 0:e};return n.proxy&&Object.defineProperty(e,t,{get:o,enumerable:!0,configurable:!0}),o}function gt(e,t){return function(){return e[t]}}function bt(e,t){var n,o,i,a,s;if(Array.isArray(e)||"string"==typeof e)for(n=new Array(e.length),o=0,i=e.length;o<i;o++)n[o]=t(e[o],o);else if("number"==typeof e)for(n=new Array(e),o=0;o<e;o++)n[o]=t(o+1,o);else if(l(e))if(le&&e[Symbol.iterator]){n=[];for(var c=e[Symbol.iterator](),d=c.next();!d.done;)n.push(t(d.value,n.length)),d=c.next()}else for(a=Object.keys(e),n=new Array(a.length),o=0,i=a.length;o<i;o++)s=a[o],n[o]=t(e[s],s,o);return r(n)||(n=[]),n._isVList=!0,n}function vt(e,t,n,o){var i,r=this.$scopedSlots[e];r?(n=n||{},o&&(n=j(j({},o),n)),i=r(n)||t):i=this.$slots[e]||t;var a=n&&n.slot;return a?this.$createElement("template",{slot:a},i):i}function xt(e){return De(this.$options,"filters",e)||z}function yt(e,t){return Array.isArray(e)?-1===e.indexOf(t):e!==t}function wt(e,t,n,o,i){var r=B.keyCodes[t]||n;return i&&o&&!B.keyCodes[t]?yt(i,o):r?yt(r,e):o?C(o)!==t:void 0}function kt(e,t,n,o,i){if(n)if(l(n)){var r;Array.isArray(n)&&(n=S(n));var a=function(a){if("class"===a||"style"===a||b(a))r=e;else{var s=e.attrs&&e.attrs.type;r=o||B.mustUseProp(t,s,a)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var l=_(a),c=C(a);l in r||c in r||(r[a]=n[a],i&&((e.on||(e.on={}))["update:"+a]=function(e){n[a]=e}))};for(var s in n)a(s)}else;return e}function _t(e,t){var n=this._staticTrees||(this._staticTrees=[]),o=n[e];return o&&!t?o:(Ot(o=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,null,this),"__static__"+e,!1),o)}function At(e,t,n){return Ot(e,"__once__"+t+(n?"_"+n:""),!0),e}function Ot(e,t,n){if(Array.isArray(e))for(var o=0;o<e.length;o++)e[o]&&"string"!=typeof e[o]&&Ct(e[o],t+"_"+o,n);else Ct(e,t,n)}function Ct(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function $t(e,t){if(t)if(d(t)){var n=e.on=e.on?j({},e.on):{};for(var o in t){var i=n[o],r=t[o];n[o]=i?[].concat(i,r):r}}else;return e}function Tt(e,t,n,o){t=t||{$stable:!n};for(var i=0;i<e.length;i++){var r=e[i];Array.isArray(r)?Tt(r,t,n):r&&(r.proxy&&(r.fn.proxy=!0),t[r.key]=r.fn)}return o&&(t.$key=o),t}function jt(e,t){for(var n=0;n<t.length;n+=2){var o=t[n];"string"==typeof o&&o&&(e[t[n]]=t[n+1])}return e}function St(e,t){return"string"==typeof e?t+e:e}function Rt(e){e._o=At,e._n=m,e._s=h,e._l=bt,e._t=vt,e._q=N,e._i=I,e._m=_t,e._f=xt,e._k=wt,e._b=kt,e._v=ve,e._e=be,e._u=Tt,e._g=$t,e._d=jt,e._p=St}function Et(e,t,n,i,r){var s,l=this,c=r.options;y(i,"_uid")?(s=Object.create(i))._original=i:(s=i,i=i._original);var d=a(c._compiled),f=!d;this.data=e,this.props=t,this.children=n,this.parent=i,this.listeners=e.on||o,this.injections=ft(c.inject,i),this.slots=function(){return l.$slots||ht(e.scopedSlots,l.$slots=ut(n,i)),l.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return ht(e.scopedSlots,this.slots())}}),d&&(this.$options=c,this.$slots=this.slots(),this.$scopedSlots=ht(e.scopedSlots,this.$slots)),c._scopeId?this._c=function(e,t,n,o){var r=Ft(s,e,t,n,o,f);return r&&!Array.isArray(r)&&(r.fnScopeId=c._scopeId,r.fnContext=i),r}:this._c=function(e,t,n,o){return Ft(s,e,t,n,o,f)}}function zt(e,t,n,o,i){var r=xe(e);return r.fnContext=n,r.fnOptions=o,t.slot&&((r.data||(r.data={})).slot=t.slot),r}function Nt(e,t){for(var n in t)e[_(n)]=t[n]}Rt(Et.prototype);var It={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var n=e;It.prepatch(n,n)}else{(e.componentInstance=function(e,t){var n={_isComponent:!0,_parentVnode:e,parent:t},o=e.data.inlineTemplate;r(o)&&(n.render=o.render,n.staticRenderFns=o.staticRenderFns);return new e.componentOptions.Ctor(n)}(e,Xt)).$mount(t?e.elm:void 0,t)}},prepatch:function(e,t){var n=t.componentOptions;!function(e,t,n,i,r){0;var a=i.data.scopedSlots,s=e.$scopedSlots,l=!!(a&&!a.$stable||s!==o&&!s.$stable||a&&e.$scopedSlots.$key!==a.$key),c=!!(r||e.$options._renderChildren||l);e.$options._parentVnode=i,e.$vnode=i,e._vnode&&(e._vnode.parent=i);if(e.$options._renderChildren=r,e.$attrs=i.data.attrs||o,e.$listeners=n||o,t&&e.$options.props){Ae(!1);for(var d=e._props,f=e.$options._propKeys||[],u=0;u<f.length;u++){var p=f[u],h=e.$options.props;d[p]=Pe(p,h,t,e)}Ae(!0),e.$options.propsData=t}n=n||o;var m=e.$options._parentListeners;e.$options._parentListeners=n,Jt(e,n,m),c&&(e.$slots=ut(r,i.context),e.$forceUpdate());0}(t.componentInstance=e.componentInstance,n.propsData,n.listeners,t,n.children)},insert:function(e){var t,n=e.context,o=e.componentInstance;o._isMounted||(o._isMounted=!0,tn(o,"mounted")),e.data.keepAlive&&(n._isMounted?((t=o)._inactive=!1,on.push(t)):en(o,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?function e(t,n){if(n&&(t._directInactive=!0,Zt(t)))return;if(!t._inactive){t._inactive=!0;for(var o=0;o<t.$children.length;o++)e(t.$children[o]);tn(t,"deactivated")}}(t,!0):t.$destroy())}},Lt=Object.keys(It);function Dt(e,t,n,s,c){if(!i(e)){var d=n.$options._base;if(l(e)&&(e=d.extend(e)),"function"==typeof e){var f;if(i(e.cid)&&void 0===(e=function(e,t){if(a(e.error)&&r(e.errorComp))return e.errorComp;if(r(e.resolved))return e.resolved;var n=qt;n&&r(e.owners)&&-1===e.owners.indexOf(n)&&e.owners.push(n);if(a(e.loading)&&r(e.loadingComp))return e.loadingComp;if(n&&!r(e.owners)){var o=e.owners=[n],s=!0,c=null,d=null;n.$on("hook:destroyed",function(){return v(o,n)});var f=function(e){for(var t=0,n=o.length;t<n;t++)o[t].$forceUpdate();e&&(o.length=0,null!==c&&(clearTimeout(c),c=null),null!==d&&(clearTimeout(d),d=null))},u=L(function(n){e.resolved=Gt(n,t),s?o.length=0:f(!0)}),h=L(function(t){r(e.errorComp)&&(e.error=!0,f(!0))}),m=e(u,h);return l(m)&&(p(m)?i(e.resolved)&&m.then(u,h):p(m.component)&&(m.component.then(u,h),r(m.error)&&(e.errorComp=Gt(m.error,t)),r(m.loading)&&(e.loadingComp=Gt(m.loading,t),0===m.delay?e.loading=!0:c=setTimeout(function(){c=null,i(e.resolved)&&i(e.error)&&(e.loading=!0,f(!1))},m.delay||200)),r(m.timeout)&&(d=setTimeout(function(){d=null,i(e.resolved)&&h(null)},m.timeout)))),s=!1,e.loading?e.loadingComp:e.resolved}}(f=e,d)))return function(e,t,n,o,i){var r=be();return r.asyncFactory=e,r.asyncMeta={data:t,context:n,children:o,tag:i},r}(f,t,n,s,c);t=t||{},An(e),r(t.model)&&function(e,t){var n=e.model&&e.model.prop||"value",o=e.model&&e.model.event||"input";(t.attrs||(t.attrs={}))[n]=t.model.value;var i=t.on||(t.on={}),a=i[o],s=t.model.callback;r(a)?(Array.isArray(a)?-1===a.indexOf(s):a!==s)&&(i[o]=[s].concat(a)):i[o]=s}(e.options,t);var u=function(e,t,n){var o=t.options.props;if(!i(o)){var a={},s=e.attrs,l=e.props;if(r(s)||r(l))for(var c in o){var d=C(c);lt(a,l,c,d,!0)||lt(a,s,c,d,!1)}return a}}(t,e);if(a(e.options.functional))return function(e,t,n,i,a){var s=e.options,l={},c=s.props;if(r(c))for(var d in c)l[d]=Pe(d,c,t||o);else r(n.attrs)&&Nt(l,n.attrs),r(n.props)&&Nt(l,n.props);var f=new Et(n,l,a,i,e),u=s.render.call(null,f._c,f);if(u instanceof me)return zt(u,n,f.parent,s,f);if(Array.isArray(u)){for(var p=ct(u)||[],h=new Array(p.length),m=0;m<p.length;m++)h[m]=zt(p[m],n,f.parent,s,f);return h}}(e,u,t,n,s);var h=t.on;if(t.on=t.nativeOn,a(e.options.abstract)){var m=t.slot;t={},m&&(t.slot=m)}!function(e){for(var t=e.hook||(e.hook={}),n=0;n<Lt.length;n++){var o=Lt[n],i=t[o],r=It[o];i===r||i&&i._merged||(t[o]=i?Pt(r,i):r)}}(t);var g=e.options.name||c;return new me("vue-component-"+e.cid+(g?"-"+g:""),t,void 0,void 0,void 0,n,{Ctor:e,propsData:u,listeners:h,tag:c,children:s},f)}}}function Pt(e,t){var n=function(n,o){e(n,o),t(n,o)};return n._merged=!0,n}var Mt=1,Bt=2;function Ft(e,t,n,o,c,d){return(Array.isArray(n)||s(n))&&(c=o,o=n,n=void 0),a(d)&&(c=Bt),function(e,t,n,o,s){if(r(n)&&r(n.__ob__))return be();r(n)&&r(n.is)&&(t=n.is);if(!t)return be();0;Array.isArray(o)&&"function"==typeof o[0]&&((n=n||{}).scopedSlots={default:o[0]},o.length=0);s===Bt?o=ct(o):s===Mt&&(o=function(e){for(var t=0;t<e.length;t++)if(Array.isArray(e[t]))return Array.prototype.concat.apply([],e);return e}(o));var c,d;if("string"==typeof t){var f;d=e.$vnode&&e.$vnode.ns||B.getTagNamespace(t),c=B.isReservedTag(t)?new me(B.parsePlatformTagName(t),n,o,void 0,void 0,e):n&&n.pre||!r(f=De(e.$options,"components",t))?new me(t,n,o,void 0,void 0,e):Dt(f,n,e,o,t)}else c=Dt(t,n,e,o);return Array.isArray(c)?c:r(c)?(r(d)&&function e(t,n,o){t.ns=n;"foreignObject"===t.tag&&(n=void 0,o=!0);if(r(t.children))for(var s=0,l=t.children.length;s<l;s++){var c=t.children[s];r(c.tag)&&(i(c.ns)||a(o)&&"svg"!==c.tag)&&e(c,n,o)}}(c,d),r(n)&&function(e){l(e.style)&&ot(e.style);l(e.class)&&ot(e.class)}(n),c):be()}(e,t,n,o,c)}var Ut,qt=null;function Gt(e,t){return(e.__esModule||le&&"Module"===e[Symbol.toStringTag])&&(e=e.default),l(e)?t.extend(e):e}function Ht(e){return e.isComment&&e.asyncFactory}function Vt(e){if(Array.isArray(e))for(var t=0;t<e.length;t++){var n=e[t];if(r(n)&&(r(n.componentOptions)||Ht(n)))return n}}function Wt(e,t){Ut.$on(e,t)}function Kt(e,t){Ut.$off(e,t)}function Yt(e,t){var n=Ut;return function o(){var i=t.apply(null,arguments);null!==i&&n.$off(e,o)}}function Jt(e,t,n){Ut=e,at(t,n||{},Wt,Kt,Yt,e),Ut=void 0}var Xt=null;function Qt(e){var t=Xt;return Xt=e,function(){Xt=t}}function Zt(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function en(e,t){if(t){if(e._directInactive=!1,Zt(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)en(e.$children[n]);tn(e,"activated")}}function tn(e,t){pe();var n=e.$options[t],o=t+" hook";if(n)for(var i=0,r=n.length;i<r;i++)qe(n[i],e,null,e,o);e._hasHookEvent&&e.$emit("hook:"+t),he()}var nn=[],on=[],rn={},an=!1,sn=!1,ln=0;var cn=0,dn=Date.now;if(V&&!J){var fn=window.performance;fn&&"function"==typeof fn.now&&dn()>document.createEvent("Event").timeStamp&&(dn=function(){return fn.now()})}function un(){var e,t;for(cn=dn(),sn=!0,nn.sort(function(e,t){return e.id-t.id}),ln=0;ln<nn.length;ln++)(e=nn[ln]).before&&e.before(),t=e.id,rn[t]=null,e.run();var n=on.slice(),o=nn.slice();ln=nn.length=on.length=0,rn={},an=sn=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,en(e[t],!0)}(n),function(e){var t=e.length;for(;t--;){var n=e[t],o=n.vm;o._watcher===n&&o._isMounted&&!o._isDestroyed&&tn(o,"updated")}}(o),re&&B.devtools&&re.emit("flush")}var pn=0,hn=function(e,t,n,o,i){this.vm=e,i&&(e._watcher=this),e._watchers.push(this),o?(this.deep=!!o.deep,this.user=!!o.user,this.lazy=!!o.lazy,this.sync=!!o.sync,this.before=o.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++pn,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new se,this.newDepIds=new se,this.expression="","function"==typeof t?this.getter=t:(this.getter=function(e){if(!q.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}(t),this.getter||(this.getter=R)),this.value=this.lazy?void 0:this.get()};hn.prototype.get=function(){var e;pe(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;Ue(e,t,'getter for watcher "'+this.expression+'"')}finally{this.deep&&ot(e),he(),this.cleanupDeps()}return e},hn.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},hn.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},hn.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(e){var t=e.id;if(null==rn[t]){if(rn[t]=!0,sn){for(var n=nn.length-1;n>ln&&nn[n].id>e.id;)n--;nn.splice(n+1,0,e)}else nn.push(e);an||(an=!0,tt(un))}}(this)},hn.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||l(e)||this.deep){var t=this.value;if(this.value=e,this.user)try{this.cb.call(this.vm,e,t)}catch(e){Ue(e,this.vm,'callback for watcher "'+this.expression+'"')}else this.cb.call(this.vm,e,t)}}},hn.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},hn.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},hn.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||v(this.vm._watchers,this);for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1}};var mn={enumerable:!0,configurable:!0,get:R,set:R};function gn(e,t,n){mn.get=function(){return this[t][n]},mn.set=function(e){this[t][n]=e},Object.defineProperty(e,n,mn)}function bn(e){e._watchers=[];var t=e.$options;t.props&&function(e,t){var n=e.$options.propsData||{},o=e._props={},i=e.$options._propKeys=[];e.$parent&&Ae(!1);var r=function(r){i.push(r);var a=Pe(r,t,n,e);$e(o,r,a),r in e||gn(e,"_props",r)};for(var a in t)r(a);Ae(!0)}(e,t.props),t.methods&&function(e,t){e.$options.props;for(var n in t)e[n]="function"!=typeof t[n]?R:$(t[n],e)}(e,t.methods),t.data?function(e){var t=e.$options.data;d(t=e._data="function"==typeof t?function(e,t){pe();try{return e.call(t,t)}catch(e){return Ue(e,t,"data()"),{}}finally{he()}}(t,e):t||{})||(t={});var n=Object.keys(t),o=e.$options.props,i=(e.$options.methods,n.length);for(;i--;){var r=n[i];0,o&&y(o,r)||(a=void 0,36!==(a=(r+"").charCodeAt(0))&&95!==a&&gn(e,"_data",r))}var a;Ce(t,!0)}(e):Ce(e._data={},!0),t.computed&&function(e,t){var n=e._computedWatchers=Object.create(null),o=ie();for(var i in t){var r=t[i],a="function"==typeof r?r:r.get;0,o||(n[i]=new hn(e,a||R,R,vn)),i in e||xn(e,i,r)}}(e,t.computed),t.watch&&t.watch!==te&&function(e,t){for(var n in t){var o=t[n];if(Array.isArray(o))for(var i=0;i<o.length;i++)kn(e,n,o[i]);else kn(e,n,o)}}(e,t.watch)}var vn={lazy:!0};function xn(e,t,n){var o=!ie();"function"==typeof n?(mn.get=o?yn(t):wn(n),mn.set=R):(mn.get=n.get?o&&!1!==n.cache?yn(t):wn(n.get):R,mn.set=n.set||R),Object.defineProperty(e,t,mn)}function yn(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),fe.target&&t.depend(),t.value}}function wn(e){return function(){return e.call(this,this)}}function kn(e,t,n,o){return d(n)&&(o=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,o)}var _n=0;function An(e){var t=e.options;if(e.super){var n=An(e.super);if(n!==e.superOptions){e.superOptions=n;var o=function(e){var t,n=e.options,o=e.sealedOptions;for(var i in n)n[i]!==o[i]&&(t||(t={}),t[i]=n[i]);return t}(e);o&&j(e.extendOptions,o),(t=e.options=Le(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function On(e){this._init(e)}function Cn(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,o=n.cid,i=e._Ctor||(e._Ctor={});if(i[o])return i[o];var r=e.name||n.options.name;var a=function(e){this._init(e)};return(a.prototype=Object.create(n.prototype)).constructor=a,a.cid=t++,a.options=Le(n.options,e),a.super=n,a.options.props&&function(e){var t=e.options.props;for(var n in t)gn(e.prototype,"_props",n)}(a),a.options.computed&&function(e){var t=e.options.computed;for(var n in t)xn(e.prototype,n,t[n])}(a),a.extend=n.extend,a.mixin=n.mixin,a.use=n.use,P.forEach(function(e){a[e]=n[e]}),r&&(a.options.components[r]=a),a.superOptions=n.options,a.extendOptions=e,a.sealedOptions=j({},a.options),i[o]=a,a}}function $n(e){return e&&(e.Ctor.options.name||e.tag)}function Tn(e,t){return Array.isArray(e)?e.indexOf(t)>-1:"string"==typeof e?e.split(",").indexOf(t)>-1:!!f(e)&&e.test(t)}function jn(e,t){var n=e.cache,o=e.keys,i=e._vnode;for(var r in n){var a=n[r];if(a){var s=$n(a.componentOptions);s&&!t(s)&&Sn(n,r,o,i)}}}function Sn(e,t,n,o){var i=e[t];!i||o&&i.tag===o.tag||i.componentInstance.$destroy(),e[t]=null,v(n,t)}!function(e){e.prototype._init=function(e){var t=this;t._uid=_n++,t._isVue=!0,e&&e._isComponent?function(e,t){var n=e.$options=Object.create(e.constructor.options),o=t._parentVnode;n.parent=t.parent,n._parentVnode=o;var i=o.componentOptions;n.propsData=i.propsData,n._parentListeners=i.listeners,n._renderChildren=i.children,n._componentTag=i.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}(t,e):t.$options=Le(An(t.constructor),e||{},t),t._renderProxy=t,t._self=t,function(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(t),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&Jt(e,t)}(t),function(e){e._vnode=null,e._staticTrees=null;var t=e.$options,n=e.$vnode=t._parentVnode,i=n&&n.context;e.$slots=ut(t._renderChildren,i),e.$scopedSlots=o,e._c=function(t,n,o,i){return Ft(e,t,n,o,i,!1)},e.$createElement=function(t,n,o,i){return Ft(e,t,n,o,i,!0)};var r=n&&n.data;$e(e,"$attrs",r&&r.attrs||o,null,!0),$e(e,"$listeners",t._parentListeners||o,null,!0)}(t),tn(t,"beforeCreate"),function(e){var t=ft(e.$options.inject,e);t&&(Ae(!1),Object.keys(t).forEach(function(n){$e(e,n,t[n])}),Ae(!0))}(t),bn(t),function(e){var t=e.$options.provide;t&&(e._provided="function"==typeof t?t.call(e):t)}(t),tn(t,"created"),t.$options.el&&t.$mount(t.$options.el)}}(On),function(e){var t={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",t),Object.defineProperty(e.prototype,"$props",n),e.prototype.$set=Te,e.prototype.$delete=je,e.prototype.$watch=function(e,t,n){if(d(t))return kn(this,e,t,n);(n=n||{}).user=!0;var o=new hn(this,e,t,n);if(n.immediate)try{t.call(this,o.value)}catch(e){Ue(e,this,'callback for immediate watcher "'+o.expression+'"')}return function(){o.teardown()}}}(On),function(e){var t=/^hook:/;e.prototype.$on=function(e,n){var o=this;if(Array.isArray(e))for(var i=0,r=e.length;i<r;i++)o.$on(e[i],n);else(o._events[e]||(o._events[e]=[])).push(n),t.test(e)&&(o._hasHookEvent=!0);return o},e.prototype.$once=function(e,t){var n=this;function o(){n.$off(e,o),t.apply(n,arguments)}return o.fn=t,n.$on(e,o),n},e.prototype.$off=function(e,t){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(e)){for(var o=0,i=e.length;o<i;o++)n.$off(e[o],t);return n}var r,a=n._events[e];if(!a)return n;if(!t)return n._events[e]=null,n;for(var s=a.length;s--;)if((r=a[s])===t||r.fn===t){a.splice(s,1);break}return n},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?T(n):n;for(var o=T(arguments,1),i='event handler for "'+e+'"',r=0,a=n.length;r<a;r++)qe(n[r],t,o,t,i)}return t}}(On),function(e){e.prototype._update=function(e,t){var n=this,o=n.$el,i=n._vnode,r=Qt(n);n._vnode=e,n.$el=i?n.__patch__(i,e):n.__patch__(n.$el,e,t,!1),r(),o&&(o.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){tn(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||v(t.$children,e),e._watcher&&e._watcher.teardown();for(var n=e._watchers.length;n--;)e._watchers[n].teardown();e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),tn(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(On),function(e){Rt(e.prototype),e.prototype.$nextTick=function(e){return tt(e,this)},e.prototype._render=function(){var e,t=this,n=t.$options,o=n.render,i=n._parentVnode;i&&(t.$scopedSlots=ht(i.data.scopedSlots,t.$slots,t.$scopedSlots)),t.$vnode=i;try{qt=t,e=o.call(t._renderProxy,t.$createElement)}catch(n){Ue(n,t,"render"),e=t._vnode}finally{qt=null}return Array.isArray(e)&&1===e.length&&(e=e[0]),e instanceof me||(e=be()),e.parent=i,e}}(On);var Rn=[String,RegExp,Array],En={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Rn,exclude:Rn,max:[String,Number]},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)Sn(this.cache,e,this.keys)},mounted:function(){var e=this;this.$watch("include",function(t){jn(e,function(e){return Tn(t,e)})}),this.$watch("exclude",function(t){jn(e,function(e){return!Tn(t,e)})})},render:function(){var e=this.$slots.default,t=Vt(e),n=t&&t.componentOptions;if(n){var o=$n(n),i=this.include,r=this.exclude;if(i&&(!o||!Tn(i,o))||r&&o&&Tn(r,o))return t;var a=this.cache,s=this.keys,l=null==t.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):t.key;a[l]?(t.componentInstance=a[l].componentInstance,v(s,l),s.push(l)):(a[l]=t,s.push(l),this.max&&s.length>parseInt(this.max)&&Sn(a,s[0],s,this._vnode)),t.data.keepAlive=!0}return t||e&&e[0]}}};!function(e){var t={get:function(){return B}};Object.defineProperty(e,"config",t),e.util={warn:ce,extend:j,mergeOptions:Le,defineReactive:$e},e.set=Te,e.delete=je,e.nextTick=tt,e.observable=function(e){return Ce(e),e},e.options=Object.create(null),P.forEach(function(t){e.options[t+"s"]=Object.create(null)}),e.options._base=e,j(e.options.components,En),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=T(arguments,1);return n.unshift(this),"function"==typeof e.install?e.install.apply(e,n):"function"==typeof e&&e.apply(null,n),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=Le(this.options,e),this}}(e),Cn(e),function(e){P.forEach(function(t){e[t]=function(e,n){return n?("component"===t&&d(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&"function"==typeof n&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}})}(e)}(On),Object.defineProperty(On.prototype,"$isServer",{get:ie}),Object.defineProperty(On.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(On,"FunctionalRenderContext",{value:Et}),On.version="2.6.10";var zn=g("style,class"),Nn=g("input,textarea,option,select,progress"),In=g("contenteditable,draggable,spellcheck"),Ln=g("events,caret,typing,plaintext-only"),Dn=function(e,t){return Un(t)||"false"===t?"false":"contenteditable"===e&&Ln(t)?t:"true"},Pn=g("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"),Mn="http://www.w3.org/1999/xlink",Bn=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},Fn=function(e){return Bn(e)?e.slice(6,e.length):""},Un=function(e){return null==e||!1===e};function qn(e){for(var t=e.data,n=e,o=e;r(o.componentInstance);)(o=o.componentInstance._vnode)&&o.data&&(t=Gn(o.data,t));for(;r(n=n.parent);)n&&n.data&&(t=Gn(t,n.data));return function(e,t){if(r(e)||r(t))return Hn(e,Vn(t));return""}(t.staticClass,t.class)}function Gn(e,t){return{staticClass:Hn(e.staticClass,t.staticClass),class:r(e.class)?[e.class,t.class]:t.class}}function Hn(e,t){return e?t?e+" "+t:e:t||""}function Vn(e){return Array.isArray(e)?function(e){for(var t,n="",o=0,i=e.length;o<i;o++)r(t=Vn(e[o]))&&""!==t&&(n&&(n+=" "),n+=t);return n}(e):l(e)?function(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}(e):"string"==typeof e?e:""}var Wn={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Kn=g("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Yn=g("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Jn=function(e){return Kn(e)||Yn(e)};var Xn=Object.create(null);var Qn=g("text,number,password,search,email,tel,url");var Zn=Object.freeze({createElement:function(e,t){var n=document.createElement(e);return"select"!==e?n:(t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n)},createElementNS:function(e,t){return document.createElementNS(Wn[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setStyleScope:function(e,t){e.setAttribute(t,"")}}),eo={create:function(e,t){to(t)},update:function(e,t){e.data.ref!==t.data.ref&&(to(e,!0),to(t))},destroy:function(e){to(e,!0)}};function to(e,t){var n=e.data.ref;if(r(n)){var o=e.context,i=e.componentInstance||e.elm,a=o.$refs;t?Array.isArray(a[n])?v(a[n],i):a[n]===i&&(a[n]=void 0):e.data.refInFor?Array.isArray(a[n])?a[n].indexOf(i)<0&&a[n].push(i):a[n]=[i]:a[n]=i}}var no=new me("",{},[]),oo=["create","activate","update","remove","destroy"];function io(e,t){return e.key===t.key&&(e.tag===t.tag&&e.isComment===t.isComment&&r(e.data)===r(t.data)&&function(e,t){if("input"!==e.tag)return!0;var n,o=r(n=e.data)&&r(n=n.attrs)&&n.type,i=r(n=t.data)&&r(n=n.attrs)&&n.type;return o===i||Qn(o)&&Qn(i)}(e,t)||a(e.isAsyncPlaceholder)&&e.asyncFactory===t.asyncFactory&&i(t.asyncFactory.error))}function ro(e,t,n){var o,i,a={};for(o=t;o<=n;++o)r(i=e[o].key)&&(a[i]=o);return a}var ao={create:so,update:so,destroy:function(e){so(e,no)}};function so(e,t){(e.data.directives||t.data.directives)&&function(e,t){var n,o,i,r=e===no,a=t===no,s=co(e.data.directives,e.context),l=co(t.data.directives,t.context),c=[],d=[];for(n in l)o=s[n],i=l[n],o?(i.oldValue=o.value,i.oldArg=o.arg,uo(i,"update",t,e),i.def&&i.def.componentUpdated&&d.push(i)):(uo(i,"bind",t,e),i.def&&i.def.inserted&&c.push(i));if(c.length){var f=function(){for(var n=0;n<c.length;n++)uo(c[n],"inserted",t,e)};r?st(t,"insert",f):f()}d.length&&st(t,"postpatch",function(){for(var n=0;n<d.length;n++)uo(d[n],"componentUpdated",t,e)});if(!r)for(n in s)l[n]||uo(s[n],"unbind",e,e,a)}(e,t)}var lo=Object.create(null);function co(e,t){var n,o,i=Object.create(null);if(!e)return i;for(n=0;n<e.length;n++)(o=e[n]).modifiers||(o.modifiers=lo),i[fo(o)]=o,o.def=De(t.$options,"directives",o.name);return i}function fo(e){return e.rawName||e.name+"."+Object.keys(e.modifiers||{}).join(".")}function uo(e,t,n,o,i){var r=e.def&&e.def[t];if(r)try{r(n.elm,e,n,o,i)}catch(o){Ue(o,n.context,"directive "+e.name+" "+t+" hook")}}var po=[eo,ao];function ho(e,t){var n=t.componentOptions;if(!(r(n)&&!1===n.Ctor.options.inheritAttrs||i(e.data.attrs)&&i(t.data.attrs))){var o,a,s=t.elm,l=e.data.attrs||{},c=t.data.attrs||{};for(o in r(c.__ob__)&&(c=t.data.attrs=j({},c)),c)a=c[o],l[o]!==a&&mo(s,o,a);for(o in(J||Q)&&c.value!==l.value&&mo(s,"value",c.value),l)i(c[o])&&(Bn(o)?s.removeAttributeNS(Mn,Fn(o)):In(o)||s.removeAttribute(o))}}function mo(e,t,n){e.tagName.indexOf("-")>-1?go(e,t,n):Pn(t)?Un(n)?e.removeAttribute(t):(n="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,n)):In(t)?e.setAttribute(t,Dn(t,n)):Bn(t)?Un(n)?e.removeAttributeNS(Mn,Fn(t)):e.setAttributeNS(Mn,t,n):go(e,t,n)}function go(e,t,n){if(Un(n))e.removeAttribute(t);else{if(J&&!X&&"TEXTAREA"===e.tagName&&"placeholder"===t&&""!==n&&!e.__ieph){var o=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",o)};e.addEventListener("input",o),e.__ieph=!0}e.setAttribute(t,n)}}var bo={create:ho,update:ho};function vo(e,t){var n=t.elm,o=t.data,a=e.data;if(!(i(o.staticClass)&&i(o.class)&&(i(a)||i(a.staticClass)&&i(a.class)))){var s=qn(t),l=n._transitionClasses;r(l)&&(s=Hn(s,Vn(l))),s!==n._prevClass&&(n.setAttribute("class",s),n._prevClass=s)}}var xo,yo={create:vo,update:vo},wo="__r",ko="__c";function _o(e,t,n){var o=xo;return function i(){var r=t.apply(null,arguments);null!==r&&Co(e,i,n,o)}}var Ao=We&&!(ee&&Number(ee[1])<=53);function Oo(e,t,n,o){if(Ao){var i=cn,r=t;t=r._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=i||e.timeStamp<=0||e.target.ownerDocument!==document)return r.apply(this,arguments)}}xo.addEventListener(e,t,ne?{capture:n,passive:o}:n)}function Co(e,t,n,o){(o||xo).removeEventListener(e,t._wrapper||t,n)}function $o(e,t){if(!i(e.data.on)||!i(t.data.on)){var n=t.data.on||{},o=e.data.on||{};xo=t.elm,function(e){if(r(e[wo])){var t=J?"change":"input";e[t]=[].concat(e[wo],e[t]||[]),delete e[wo]}r(e[ko])&&(e.change=[].concat(e[ko],e.change||[]),delete e[ko])}(n),at(n,o,Oo,Co,_o,t.context),xo=void 0}}var To,jo={create:$o,update:$o};function So(e,t){if(!i(e.data.domProps)||!i(t.data.domProps)){var n,o,a=t.elm,s=e.data.domProps||{},l=t.data.domProps||{};for(n in r(l.__ob__)&&(l=t.data.domProps=j({},l)),s)n in l||(a[n]="");for(n in l){if(o=l[n],"textContent"===n||"innerHTML"===n){if(t.children&&(t.children.length=0),o===s[n])continue;1===a.childNodes.length&&a.removeChild(a.childNodes[0])}if("value"===n&&"PROGRESS"!==a.tagName){a._value=o;var c=i(o)?"":String(o);Ro(a,c)&&(a.value=c)}else if("innerHTML"===n&&Yn(a.tagName)&&i(a.innerHTML)){(To=To||document.createElement("div")).innerHTML="<svg>"+o+"</svg>";for(var d=To.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;d.firstChild;)a.appendChild(d.firstChild)}else if(o!==s[n])try{a[n]=o}catch(e){}}}}function Ro(e,t){return!e.composing&&("OPTION"===e.tagName||function(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}(e,t)||function(e,t){var n=e.value,o=e._vModifiers;if(r(o)){if(o.number)return m(n)!==m(t);if(o.trim)return n.trim()!==t.trim()}return n!==t}(e,t))}var Eo={create:So,update:So},zo=w(function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach(function(e){if(e){var o=e.split(n);o.length>1&&(t[o[0].trim()]=o[1].trim())}}),t});function No(e){var t=Io(e.style);return e.staticStyle?j(e.staticStyle,t):t}function Io(e){return Array.isArray(e)?S(e):"string"==typeof e?zo(e):e}var Lo,Do=/^--/,Po=/\s*!important$/,Mo=function(e,t,n){if(Do.test(t))e.style.setProperty(t,n);else if(Po.test(n))e.style.setProperty(C(t),n.replace(Po,""),"important");else{var o=Fo(t);if(Array.isArray(n))for(var i=0,r=n.length;i<r;i++)e.style[o]=n[i];else e.style[o]=n}},Bo=["Webkit","Moz","ms"],Fo=w(function(e){if(Lo=Lo||document.createElement("div").style,"filter"!==(e=_(e))&&e in Lo)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<Bo.length;n++){var o=Bo[n]+t;if(o in Lo)return o}});function Uo(e,t){var n=t.data,o=e.data;if(!(i(n.staticStyle)&&i(n.style)&&i(o.staticStyle)&&i(o.style))){var a,s,l=t.elm,c=o.staticStyle,d=o.normalizedStyle||o.style||{},f=c||d,u=Io(t.data.style)||{};t.data.normalizedStyle=r(u.__ob__)?j({},u):u;var p=function(e,t){var n,o={};if(t)for(var i=e;i.componentInstance;)(i=i.componentInstance._vnode)&&i.data&&(n=No(i.data))&&j(o,n);(n=No(e.data))&&j(o,n);for(var r=e;r=r.parent;)r.data&&(n=No(r.data))&&j(o,n);return o}(t,!0);for(s in f)i(p[s])&&Mo(l,s,"");for(s in p)(a=p[s])!==f[s]&&Mo(l,s,null==a?"":a)}}var qo={create:Uo,update:Uo},Go=/\s+/;function Ho(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(Go).forEach(function(t){return e.classList.add(t)}):e.classList.add(t);else{var n=" "+(e.getAttribute("class")||"")+" ";n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function Vo(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(Go).forEach(function(t){return e.classList.remove(t)}):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{for(var n=" "+(e.getAttribute("class")||"")+" ",o=" "+t+" ";n.indexOf(o)>=0;)n=n.replace(o," ");(n=n.trim())?e.setAttribute("class",n):e.removeAttribute("class")}}function Wo(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&j(t,Ko(e.name||"v")),j(t,e),t}return"string"==typeof e?Ko(e):void 0}}var Ko=w(function(e){return{enterClass:e+"-enter",enterToClass:e+"-enter-to",enterActiveClass:e+"-enter-active",leaveClass:e+"-leave",leaveToClass:e+"-leave-to",leaveActiveClass:e+"-leave-active"}}),Yo=V&&!X,Jo="transition",Xo="animation",Qo="transition",Zo="transitionend",ei="animation",ti="animationend";Yo&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Qo="WebkitTransition",Zo="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(ei="WebkitAnimation",ti="webkitAnimationEnd"));var ni=V?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function oi(e){ni(function(){ni(e)})}function ii(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),Ho(e,t))}function ri(e,t){e._transitionClasses&&v(e._transitionClasses,t),Vo(e,t)}function ai(e,t,n){var o=li(e,t),i=o.type,r=o.timeout,a=o.propCount;if(!i)return n();var s=i===Jo?Zo:ti,l=0,c=function(){e.removeEventListener(s,d),n()},d=function(t){t.target===e&&++l>=a&&c()};setTimeout(function(){l<a&&c()},r+1),e.addEventListener(s,d)}var si=/\b(transform|all)(,|$)/;function li(e,t){var n,o=window.getComputedStyle(e),i=(o[Qo+"Delay"]||"").split(", "),r=(o[Qo+"Duration"]||"").split(", "),a=ci(i,r),s=(o[ei+"Delay"]||"").split(", "),l=(o[ei+"Duration"]||"").split(", "),c=ci(s,l),d=0,f=0;return t===Jo?a>0&&(n=Jo,d=a,f=r.length):t===Xo?c>0&&(n=Xo,d=c,f=l.length):f=(n=(d=Math.max(a,c))>0?a>c?Jo:Xo:null)?n===Jo?r.length:l.length:0,{type:n,timeout:d,propCount:f,hasTransform:n===Jo&&si.test(o[Qo+"Property"])}}function ci(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map(function(t,n){return di(t)+di(e[n])}))}function di(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function fi(e,t){var n=e.elm;r(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var o=Wo(e.data.transition);if(!i(o)&&!r(n._enterCb)&&1===n.nodeType){for(var a=o.css,s=o.type,c=o.enterClass,d=o.enterToClass,f=o.enterActiveClass,u=o.appearClass,p=o.appearToClass,h=o.appearActiveClass,g=o.beforeEnter,b=o.enter,v=o.afterEnter,x=o.enterCancelled,y=o.beforeAppear,w=o.appear,k=o.afterAppear,_=o.appearCancelled,A=o.duration,O=Xt,C=Xt.$vnode;C&&C.parent;)O=C.context,C=C.parent;var $=!O._isMounted||!e.isRootInsert;if(!$||w||""===w){var T=$&&u?u:c,j=$&&h?h:f,S=$&&p?p:d,R=$&&y||g,E=$&&"function"==typeof w?w:b,z=$&&k||v,N=$&&_||x,I=m(l(A)?A.enter:A);0;var D=!1!==a&&!X,P=hi(E),M=n._enterCb=L(function(){D&&(ri(n,S),ri(n,j)),M.cancelled?(D&&ri(n,T),N&&N(n)):z&&z(n),n._enterCb=null});e.data.show||st(e,"insert",function(){var t=n.parentNode,o=t&&t._pending&&t._pending[e.key];o&&o.tag===e.tag&&o.elm._leaveCb&&o.elm._leaveCb(),E&&E(n,M)}),R&&R(n),D&&(ii(n,T),ii(n,j),oi(function(){ri(n,T),M.cancelled||(ii(n,S),P||(pi(I)?setTimeout(M,I):ai(n,s,M)))})),e.data.show&&(t&&t(),E&&E(n,M)),D||P||M()}}}function ui(e,t){var n=e.elm;r(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var o=Wo(e.data.transition);if(i(o)||1!==n.nodeType)return t();if(!r(n._leaveCb)){var a=o.css,s=o.type,c=o.leaveClass,d=o.leaveToClass,f=o.leaveActiveClass,u=o.beforeLeave,p=o.leave,h=o.afterLeave,g=o.leaveCancelled,b=o.delayLeave,v=o.duration,x=!1!==a&&!X,y=hi(p),w=m(l(v)?v.leave:v);0;var k=n._leaveCb=L(function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[e.key]=null),x&&(ri(n,d),ri(n,f)),k.cancelled?(x&&ri(n,c),g&&g(n)):(t(),h&&h(n)),n._leaveCb=null});b?b(_):_()}function _(){k.cancelled||(!e.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[e.key]=e),u&&u(n),x&&(ii(n,c),ii(n,f),oi(function(){ri(n,c),k.cancelled||(ii(n,d),y||(pi(w)?setTimeout(k,w):ai(n,s,k)))})),p&&p(n,k),x||y||k())}}function pi(e){return"number"==typeof e&&!isNaN(e)}function hi(e){if(i(e))return!1;var t=e.fns;return r(t)?hi(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function mi(e,t){!0!==t.data.show&&fi(t)}var gi=function(e){var t,n,o={},l=e.modules,c=e.nodeOps;for(t=0;t<oo.length;++t)for(o[oo[t]]=[],n=0;n<l.length;++n)r(l[n][oo[t]])&&o[oo[t]].push(l[n][oo[t]]);function d(e){var t=c.parentNode(e);r(t)&&c.removeChild(t,e)}function f(e,t,n,i,s,l,d){if(r(e.elm)&&r(l)&&(e=l[d]=xe(e)),e.isRootInsert=!s,!function(e,t,n,i){var s=e.data;if(r(s)){var l=r(e.componentInstance)&&s.keepAlive;if(r(s=s.hook)&&r(s=s.init)&&s(e,!1),r(e.componentInstance))return u(e,t),p(n,e.elm,i),a(l)&&function(e,t,n,i){var a,s=e;for(;s.componentInstance;)if(s=s.componentInstance._vnode,r(a=s.data)&&r(a=a.transition)){for(a=0;a<o.activate.length;++a)o.activate[a](no,s);t.push(s);break}p(n,e.elm,i)}(e,t,n,i),!0}}(e,t,n,i)){var f=e.data,m=e.children,g=e.tag;r(g)?(e.elm=e.ns?c.createElementNS(e.ns,g):c.createElement(g,e),v(e),h(e,m,t),r(f)&&b(e,t),p(n,e.elm,i)):a(e.isComment)?(e.elm=c.createComment(e.text),p(n,e.elm,i)):(e.elm=c.createTextNode(e.text),p(n,e.elm,i))}}function u(e,t){r(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,m(e)?(b(e,t),v(e)):(to(e),t.push(e))}function p(e,t,n){r(e)&&(r(n)?c.parentNode(n)===e&&c.insertBefore(e,t,n):c.appendChild(e,t))}function h(e,t,n){if(Array.isArray(t)){0;for(var o=0;o<t.length;++o)f(t[o],n,e.elm,null,!0,t,o)}else s(e.text)&&c.appendChild(e.elm,c.createTextNode(String(e.text)))}function m(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return r(e.tag)}function b(e,n){for(var i=0;i<o.create.length;++i)o.create[i](no,e);r(t=e.data.hook)&&(r(t.create)&&t.create(no,e),r(t.insert)&&n.push(e))}function v(e){var t;if(r(t=e.fnScopeId))c.setStyleScope(e.elm,t);else for(var n=e;n;)r(t=n.context)&&r(t=t.$options._scopeId)&&c.setStyleScope(e.elm,t),n=n.parent;r(t=Xt)&&t!==e.context&&t!==e.fnContext&&r(t=t.$options._scopeId)&&c.setStyleScope(e.elm,t)}function x(e,t,n,o,i,r){for(;o<=i;++o)f(n[o],r,e,t,!1,n,o)}function y(e){var t,n,i=e.data;if(r(i))for(r(t=i.hook)&&r(t=t.destroy)&&t(e),t=0;t<o.destroy.length;++t)o.destroy[t](e);if(r(t=e.children))for(n=0;n<e.children.length;++n)y(e.children[n])}function w(e,t,n,o){for(;n<=o;++n){var i=t[n];r(i)&&(r(i.tag)?(k(i),y(i)):d(i.elm))}}function k(e,t){if(r(t)||r(e.data)){var n,i=o.remove.length+1;for(r(t)?t.listeners+=i:t=function(e,t){function n(){0==--n.listeners&&d(e)}return n.listeners=t,n}(e.elm,i),r(n=e.componentInstance)&&r(n=n._vnode)&&r(n.data)&&k(n,t),n=0;n<o.remove.length;++n)o.remove[n](e,t);r(n=e.data.hook)&&r(n=n.remove)?n(e,t):t()}else d(e.elm)}function _(e,t,n,o){for(var i=n;i<o;i++){var a=t[i];if(r(a)&&io(e,a))return i}}function A(e,t,n,s,l,d){if(e!==t){r(t.elm)&&r(s)&&(t=s[l]=xe(t));var u=t.elm=e.elm;if(a(e.isAsyncPlaceholder))r(t.asyncFactory.resolved)?$(e.elm,t,n):t.isAsyncPlaceholder=!0;else if(a(t.isStatic)&&a(e.isStatic)&&t.key===e.key&&(a(t.isCloned)||a(t.isOnce)))t.componentInstance=e.componentInstance;else{var p,h=t.data;r(h)&&r(p=h.hook)&&r(p=p.prepatch)&&p(e,t);var g=e.children,b=t.children;if(r(h)&&m(t)){for(p=0;p<o.update.length;++p)o.update[p](e,t);r(p=h.hook)&&r(p=p.update)&&p(e,t)}i(t.text)?r(g)&&r(b)?g!==b&&function(e,t,n,o,a){var s,l,d,u=0,p=0,h=t.length-1,m=t[0],g=t[h],b=n.length-1,v=n[0],y=n[b],k=!a;for(0;u<=h&&p<=b;)i(m)?m=t[++u]:i(g)?g=t[--h]:io(m,v)?(A(m,v,o,n,p),m=t[++u],v=n[++p]):io(g,y)?(A(g,y,o,n,b),g=t[--h],y=n[--b]):io(m,y)?(A(m,y,o,n,b),k&&c.insertBefore(e,m.elm,c.nextSibling(g.elm)),m=t[++u],y=n[--b]):io(g,v)?(A(g,v,o,n,p),k&&c.insertBefore(e,g.elm,m.elm),g=t[--h],v=n[++p]):(i(s)&&(s=ro(t,u,h)),i(l=r(v.key)?s[v.key]:_(v,t,u,h))?f(v,o,e,m.elm,!1,n,p):io(d=t[l],v)?(A(d,v,o,n,p),t[l]=void 0,k&&c.insertBefore(e,d.elm,m.elm)):f(v,o,e,m.elm,!1,n,p),v=n[++p]);u>h?x(e,i(n[b+1])?null:n[b+1].elm,n,p,b,o):p>b&&w(0,t,u,h)}(u,g,b,n,d):r(b)?(r(e.text)&&c.setTextContent(u,""),x(u,null,b,0,b.length-1,n)):r(g)?w(0,g,0,g.length-1):r(e.text)&&c.setTextContent(u,""):e.text!==t.text&&c.setTextContent(u,t.text),r(h)&&r(p=h.hook)&&r(p=p.postpatch)&&p(e,t)}}}function O(e,t,n){if(a(n)&&r(e.parent))e.parent.data.pendingInsert=t;else for(var o=0;o<t.length;++o)t[o].data.hook.insert(t[o])}var C=g("attrs,class,staticClass,staticStyle,key");function $(e,t,n,o){var i,s=t.tag,l=t.data,c=t.children;if(o=o||l&&l.pre,t.elm=e,a(t.isComment)&&r(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(r(l)&&(r(i=l.hook)&&r(i=i.init)&&i(t,!0),r(i=t.componentInstance)))return u(t,n),!0;if(r(s)){if(r(c))if(e.hasChildNodes())if(r(i=l)&&r(i=i.domProps)&&r(i=i.innerHTML)){if(i!==e.innerHTML)return!1}else{for(var d=!0,f=e.firstChild,p=0;p<c.length;p++){if(!f||!$(f,c[p],n,o)){d=!1;break}f=f.nextSibling}if(!d||f)return!1}else h(t,c,n);if(r(l)){var m=!1;for(var g in l)if(!C(g)){m=!0,b(t,n);break}!m&&l.class&&ot(l.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,n,s){if(!i(t)){var l,d=!1,u=[];if(i(e))d=!0,f(t,u);else{var p=r(e.nodeType);if(!p&&io(e,t))A(e,t,u,null,null,s);else{if(p){if(1===e.nodeType&&e.hasAttribute(D)&&(e.removeAttribute(D),n=!0),a(n)&&$(e,t,u))return O(t,u,!0),e;l=e,e=new me(c.tagName(l).toLowerCase(),{},[],void 0,l)}var h=e.elm,g=c.parentNode(h);if(f(t,u,h._leaveCb?null:g,c.nextSibling(h)),r(t.parent))for(var b=t.parent,v=m(t);b;){for(var x=0;x<o.destroy.length;++x)o.destroy[x](b);if(b.elm=t.elm,v){for(var k=0;k<o.create.length;++k)o.create[k](no,b);var _=b.data.hook.insert;if(_.merged)for(var C=1;C<_.fns.length;C++)_.fns[C]()}else to(b);b=b.parent}r(g)?w(0,[e],0,0):r(e.tag)&&y(e)}}return O(t,u,d),t.elm}r(e)&&y(e)}}({nodeOps:Zn,modules:[bo,yo,jo,Eo,qo,V?{create:mi,activate:mi,remove:function(e,t){!0!==e.data.show?ui(e,t):t()}}:{}].concat(po)});X&&document.addEventListener("selectionchange",function(){var e=document.activeElement;e&&e.vmodel&&Ai(e,"input")});var bi={inserted:function(e,t,n,o){"select"===n.tag?(o.elm&&!o.elm._vOptions?st(n,"postpatch",function(){bi.componentUpdated(e,t,n)}):vi(e,t,n.context),e._vOptions=[].map.call(e.options,wi)):("textarea"===n.tag||Qn(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("compositionstart",ki),e.addEventListener("compositionend",_i),e.addEventListener("change",_i),X&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){vi(e,t,n.context);var o=e._vOptions,i=e._vOptions=[].map.call(e.options,wi);if(i.some(function(e,t){return!N(e,o[t])}))(e.multiple?t.value.some(function(e){return yi(e,i)}):t.value!==t.oldValue&&yi(t.value,i))&&Ai(e,"change")}}};function vi(e,t,n){xi(e,t,n),(J||Q)&&setTimeout(function(){xi(e,t,n)},0)}function xi(e,t,n){var o=t.value,i=e.multiple;if(!i||Array.isArray(o)){for(var r,a,s=0,l=e.options.length;s<l;s++)if(a=e.options[s],i)r=I(o,wi(a))>-1,a.selected!==r&&(a.selected=r);else if(N(wi(a),o))return void(e.selectedIndex!==s&&(e.selectedIndex=s));i||(e.selectedIndex=-1)}}function yi(e,t){return t.every(function(t){return!N(t,e)})}function wi(e){return"_value"in e?e._value:e.value}function ki(e){e.target.composing=!0}function _i(e){e.target.composing&&(e.target.composing=!1,Ai(e.target,"input"))}function Ai(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function Oi(e){return!e.componentInstance||e.data&&e.data.transition?e:Oi(e.componentInstance._vnode)}var Ci={model:bi,show:{bind:function(e,t,n){var o=t.value,i=(n=Oi(n)).data&&n.data.transition,r=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;o&&i?(n.data.show=!0,fi(n,function(){e.style.display=r})):e.style.display=o?r:"none"},update:function(e,t,n){var o=t.value;!o!=!t.oldValue&&((n=Oi(n)).data&&n.data.transition?(n.data.show=!0,o?fi(n,function(){e.style.display=e.__vOriginalDisplay}):ui(n,function(){e.style.display="none"})):e.style.display=o?e.__vOriginalDisplay:"none")},unbind:function(e,t,n,o,i){i||(e.style.display=e.__vOriginalDisplay)}}},$i={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Ti(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?Ti(Vt(t.children)):e}function ji(e){var t={},n=e.$options;for(var o in n.propsData)t[o]=e[o];var i=n._parentListeners;for(var r in i)t[_(r)]=i[r];return t}function Si(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}var Ri=function(e){return e.tag||Ht(e)},Ei=function(e){return"show"===e.name},zi={name:"transition",props:$i,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(Ri)).length){0;var o=this.mode;0;var i=n[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return i;var r=Ti(i);if(!r)return i;if(this._leaving)return Si(e,i);var a="__transition-"+this._uid+"-";r.key=null==r.key?r.isComment?a+"comment":a+r.tag:s(r.key)?0===String(r.key).indexOf(a)?r.key:a+r.key:r.key;var l=(r.data||(r.data={})).transition=ji(this),c=this._vnode,d=Ti(c);if(r.data.directives&&r.data.directives.some(Ei)&&(r.data.show=!0),d&&d.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(r,d)&&!Ht(d)&&(!d.componentInstance||!d.componentInstance._vnode.isComment)){var f=d.data.transition=j({},l);if("out-in"===o)return this._leaving=!0,st(f,"afterLeave",function(){t._leaving=!1,t.$forceUpdate()}),Si(e,i);if("in-out"===o){if(Ht(r))return c;var u,p=function(){u()};st(l,"afterEnter",p),st(l,"enterCancelled",p),st(f,"delayLeave",function(e){u=e})}}return i}}},Ni=j({tag:String,moveClass:String},$i);function Ii(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function Li(e){e.data.newPos=e.elm.getBoundingClientRect()}function Di(e){var t=e.data.pos,n=e.data.newPos,o=t.left-n.left,i=t.top-n.top;if(o||i){e.data.moved=!0;var r=e.elm.style;r.transform=r.WebkitTransform="translate("+o+"px,"+i+"px)",r.transitionDuration="0s"}}delete Ni.mode;var Pi={Transition:zi,TransitionGroup:{props:Ni,beforeMount:function(){var e=this,t=this._update;this._update=function(n,o){var i=Qt(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,i(),t.call(e,n,o)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),o=this.prevChildren=this.children,i=this.$slots.default||[],r=this.children=[],a=ji(this),s=0;s<i.length;s++){var l=i[s];if(l.tag)if(null!=l.key&&0!==String(l.key).indexOf("__vlist"))r.push(l),n[l.key]=l,(l.data||(l.data={})).transition=a;else;}if(o){for(var c=[],d=[],f=0;f<o.length;f++){var u=o[f];u.data.transition=a,u.data.pos=u.elm.getBoundingClientRect(),n[u.key]?c.push(u):d.push(u)}this.kept=e(t,null,c),this.removed=d}return e(t,null,r)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(Ii),e.forEach(Li),e.forEach(Di),this._reflow=document.body.offsetHeight,e.forEach(function(e){if(e.data.moved){var n=e.elm,o=n.style;ii(n,t),o.transform=o.WebkitTransform=o.transitionDuration="",n.addEventListener(Zo,n._moveCb=function e(o){o&&o.target!==n||o&&!/transform$/.test(o.propertyName)||(n.removeEventListener(Zo,e),n._moveCb=null,ri(n,t))})}}))},methods:{hasMove:function(e,t){if(!Yo)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach(function(e){Vo(n,e)}),Ho(n,t),n.style.display="none",this.$el.appendChild(n);var o=li(n);return this.$el.removeChild(n),this._hasMove=o.hasTransform}}}};On.config.mustUseProp=function(e,t,n){return"value"===n&&Nn(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},On.config.isReservedTag=Jn,On.config.isReservedAttr=zn,On.config.getTagNamespace=function(e){return Yn(e)?"svg":"math"===e?"math":void 0},On.config.isUnknownElement=function(e){if(!V)return!0;if(Jn(e))return!1;if(e=e.toLowerCase(),null!=Xn[e])return Xn[e];var t=document.createElement(e);return e.indexOf("-")>-1?Xn[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:Xn[e]=/HTMLUnknownElement/.test(t.toString())},j(On.options.directives,Ci),j(On.options.components,Pi),On.prototype.__patch__=V?gi:R,On.prototype.$mount=function(e,t){return function(e,t,n){var o;return e.$el=t,e.$options.render||(e.$options.render=be),tn(e,"beforeMount"),o=function(){e._update(e._render(),n)},new hn(e,o,R,{before:function(){e._isMounted&&!e._isDestroyed&&tn(e,"beforeUpdate")}},!0),n=!1,null==e.$vnode&&(e._isMounted=!0,tn(e,"mounted")),e}(this,e=e&&V?function(e){if("string"==typeof e){var t=document.querySelector(e);return t||document.createElement("div")}return e}(e):void 0,t)},V&&setTimeout(function(){B.devtools&&re&&re.emit("init",On)},0),t.a=On}).call(this,n(2),n(15).setImmediate)},function(e,t,n){var o=n(19);"string"==typeof o&&(o=[[e.i,o,""]]);n(6)(o,{});o.locals&&(e.exports=o.locals)},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";var o="https://www.googleapis.com/youtube/v3",i=n(17).YOUTUBE_API_KEY,r="Web Learn: it's like YouTube Gaming, but for Web Developers",a=encodeURIComponent(r);t.a={app:{name:"Web Learn",url:"https://freearhey.github.io/web-learn/",title:r,description:"Web Learn is an open source service which provides simple access to thousands of video lessons on web developing and programming.",author:"Arhey",logo:{normal:"build/images/logo.svg",mini:"build/images/logo-mini.svg",share:"build/images/weblearn-banner.png"},github:{username:"freearhey",repo:"freearhey/web-learn"},twitter:{username:"arhey",tweet:a},links:['<a class="github-button" href="https://github.com/freearhey/web-learn" data-count-href="/freearhey/web-learn/stargazers" data-count-api="/repos/freearhey/web-learn#stargazers_count" data-count-aria-label="# stargazers on GitHub" aria-label="Star freearhey/web-learn on GitHub">Star</a>','<a class="twitter-follow-button" href="https://twitter.com/arhey">Follow @arhey</a>','<a class="twitter-share-button" data-via="arhey" href="https://twitter.com/intent/tweet?text='+a+'">Tweet</a>']},api:{key:i,search:{endpoint:o+"/search",params:{key:i,part:"snippet",videoEmbeddable:!0,safeSearch:"strict",fields:"prevPageToken,nextPageToken,items/id/videoId"}},videos:{endpoint:o+"/videos",params:{key:i,part:"contentDetails,snippet,statistics",fields:"items(contentDetails/duration,id,snippet(channelId,channelTitle,description,publishedAt,tags,thumbnails,title),statistics(dislikeCount,likeCount,viewCount)),nextPageToken,prevPageToken"}},channels:{endpoint:o+"/channels",params:{key:i,part:"snippet,statistics,brandingSettings"}}}}},function(e,t,n){"use strict";function o(e,t,n,o,i,r,a,s){var l,c="function"==typeof e?e.options:e;if(t&&(c.render=t,c.staticRenderFns=n,c._compiled=!0),o&&(c.functional=!0),r&&(c._scopeId="data-v-"+r),a?(l=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(a)},c._ssrRegister=l):i&&(l=s?function(){i.call(this,this.$root.$options.shadowRoot)}:i),l)if(c.functional){c._injectStyles=l;var d=c.render;c.render=function(e,t){return l.call(t),d(e,t)}}else{var f=c.beforeCreate;c.beforeCreate=f?[].concat(f,l):[l]}return{exports:e,options:c}}n.d(t,"a",function(){return o})},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",o=e[3];if(!o)return n;if(t&&"function"==typeof btoa){var i=(a=o,s=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),"/*# ".concat(l," */")),r=o.sources.map(function(e){return"/*# sourceURL=".concat(o.sourceRoot).concat(e," */")});return[n].concat(r).concat([i]).join("\n")}var a,s,l;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2],"{").concat(n,"}"):n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var o={},i=0;i<this.length;i++){var r=this[i][0];null!=r&&(o[r]=!0)}for(var a=0;a<e.length;a++){var s=e[a];null!=s[0]&&o[s[0]]||(n&&!s[2]?s[2]=n:n&&(s[2]="(".concat(s[2],") and (").concat(n,")")),t.push(s))}},t}},function(e,t){var n={},o=function(e){var t;return function(){return void 0===t&&(t=e.apply(this,arguments)),t}},i=o(function(){return/msie [6-9]\b/.test(self.navigator.userAgent.toLowerCase())}),r=o(function(){return document.head||document.getElementsByTagName("head")[0]}),a=null,s=0,l=[];function c(e,t){for(var o=0;o<e.length;o++){var i=e[o],r=n[i.id];if(r){r.refs++;for(var a=0;a<r.parts.length;a++)r.parts[a](i.parts[a]);for(;a<i.parts.length;a++)r.parts.push(h(i.parts[a],t))}else{var s=[];for(a=0;a<i.parts.length;a++)s.push(h(i.parts[a],t));n[i.id]={id:i.id,refs:1,parts:s}}}}function d(e){for(var t=[],n={},o=0;o<e.length;o++){var i=e[o],r=i[0],a={css:i[1],media:i[2],sourceMap:i[3]};n[r]?n[r].parts.push(a):t.push(n[r]={id:r,parts:[a]})}return t}function f(e,t){var n=r(),o=l[l.length-1];if("top"===e.insertAt)o?o.nextSibling?n.insertBefore(t,o.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),l.push(t);else{if("bottom"!==e.insertAt)throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");n.appendChild(t)}}function u(e){e.parentNode.removeChild(e);var t=l.indexOf(e);t>=0&&l.splice(t,1)}function p(e){var t=document.createElement("style");return t.type="text/css",f(e,t),t}function h(e,t){var n,o,i;if(t.singleton){var r=s++;n=a||(a=p(t)),o=b.bind(null,n,r,!1),i=b.bind(null,n,r,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return t.rel="stylesheet",f(e,t),t}(t),o=x.bind(null,n),i=function(){u(n),n.href&&URL.revokeObjectURL(n.href)}):(n=p(t),o=v.bind(null,n),i=function(){u(n)});return o(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;o(e=t)}else i()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");void 0===(t=t||{}).singleton&&(t.singleton=i()),void 0===t.insertAt&&(t.insertAt="bottom");var o=d(e);return c(o,t),function(e){for(var i=[],r=0;r<o.length;r++){var a=o[r];(s=n[a.id]).refs--,i.push(s)}e&&c(d(e),t);for(r=0;r<i.length;r++){var s;if(0===(s=i[r]).refs){for(var l=0;l<s.parts.length;l++)s.parts[l]();delete n[s.id]}}}};var m,g=(m=[],function(e,t){return m[e]=t,m.filter(Boolean).join("\n")});function b(e,t,n,o){var i=n?"":o.css;if(e.styleSheet)e.styleSheet.cssText=g(t,i);else{var r=document.createTextNode(i),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(r,a[t]):e.appendChild(r)}}function v(e,t){var n=t.css,o=t.media;if(o&&e.setAttribute("media",o),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}function x(e,t){var n=t.css,o=t.sourceMap;o&&(n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var i=new Blob([n],{type:"text/css"}),r=e.href;e.href=URL.createObjectURL(i),r&&URL.revokeObjectURL(r)}},function(e,t,n){"use strict";var o=n(0);t.a=new o.a},function(e,t,n){var o;o=function(){return function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.i=function(e){return e},n.d=function(e,t,n){Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=14)}([function(e,t,n){"use strict";var o=Array.prototype,i=Object.prototype,r=(o.slice,i.toString),a={isArray:function(e){return Array.isArray(e)}},s=Math.pow(2,53)-1;a.isArrayLike=function(e){if("object"!=typeof e||!e)return!1;var t=e.length;return"number"==typeof t&&t%1==0&&t>=0&&t<=s},a.isObject=function(e){var t=typeof e;return"function"===t||"object"===t&&!!e},a.each=function(e,t){var n,o;if(a.isArray(e))for(n=0,o=e.length;n<o&&!1!==t(e[n],n,e);n++);else for(n in e)if(!1===t(e[n],n,e))break;return e},a.each(["Arguments","Function","String","Number","Date","RegExp","Error"],function(e){a["is"+e]=function(t){return r.call(t)==="[object "+e+"]"}}),a.toArray=function(e,t){t=t||0;for(var n=e.length-t,o=new Array(n);n--;)o[n]=e[n+t];return o},a.toNumber=function(e){if("string"!=typeof e)return e;var t=Number(e);return isNaN(t)?e:t},a.convertArray=function(e){if(a.isArray(e))return e;if(a.isPlainObject(e)){for(var t,n=Object.keys(e),o=n.length,i=new Array(o);o--;)t=n[o],i[o]={$key:t,$value:e[t]};return i}return e||[]},a.getPath=function(e,t){return function e(t,n){return n.length?e(t[n[0]],n.slice(1)):t}(e,t.split("."))},r=Object.prototype.toString,a.isPlainObject=function(e){return"[object Object]"===r.call(e)},t.a=a},function(e,t,n){"use strict";var o=n(5),i=n(4),r=n(6);n.d(t,"a",function(){return o.a}),n.d(t,"b",function(){return i.a}),n.d(t,"c",function(){return r.a})},function(e,t,n){"use strict";var o=n(7),i=n(8);n.d(t,"currency",function(){return o.a}),n.d(t,"pluralize",function(){return i.a})},function(e,t,n){"use strict";var o=n(9),i=n(13),r=n(10),a=n(11),s=n(12);n.d(t,"truncate",function(){return s.a}),n.d(t,"capitalize",function(){return o.a}),n.d(t,"uppercase",function(){return i.a}),n.d(t,"lowercase",function(){return r.a}),n.d(t,"placeholder",function(){return a.a})},function(e,t,n){"use strict";var o=n(0);function i(e,t){var n;if(o.a.isPlainObject(e)){var r=Object.keys(e);for(n=r.length;n--;)if(i(e[r[n]],t))return!0}else if(o.a.isArray(e)){for(n=e.length;n--;)if(i(e[n],t))return!0}else if(null!=e)return e.toString().toLowerCase().indexOf(t)>-1}t.a=function(e,t){if(e=o.a.convertArray(e),null==t)return e;if("function"==typeof t)return e.filter(t);t=(""+t).toLowerCase();for(var n,r,a,s,l=Array.prototype.concat.apply([],o.a.toArray(arguments,2)),c=[],d=0,f=e.length;d<f;d++)if(a=(n=e[d])&&n.$value||n,s=l.length){for(;s--;)if("$key"===(r=l[s])&&i(n.$key,t)||i(o.a.getPath(a,r),t)){c.push(n);break}}else i(n,t)&&c.push(n);return c}},function(e,t,n){"use strict";var o=n(0);t.a=function(e,t,n){return n=n?parseInt(n,10):0,"number"==typeof(t=o.a.toNumber(t))?e.slice(n,n+t):e}},function(e,t,n){"use strict";var o=n(0);t.a=function(e){var t,n=null;e=o.a.convertArray(e);var i=o.a.toArray(arguments,1),r=i[i.length-1];"number"==typeof r?(r=r<0?-1:1,i=i.length>1?i.slice(0,-1):i):r=1;var a=i[0];if(!a)return e;function s(e,n,i){var a=t[i];return a&&("$key"!==a&&(o.a.isObject(e)&&"$value"in e&&(e=e.$value),o.a.isObject(n)&&"$value"in n&&(n=n.$value)),e=o.a.isObject(e)?o.a.getPath(e,a):e,n=o.a.isObject(n)?o.a.getPath(n,a):n),e===n?0:e>n?r:-r}return"function"==typeof a?n=function(e,t){return a(e,t)*r}:(t=Array.prototype.concat.apply([],i),n=function(e,o,i){return(i=i||0)>=t.length-1?s(e,o,i):s(e,o,i)||n(e,o,i+1)}),e.slice().sort(n)}},function(e,t,n){"use strict";t.a=function(e,t,n){if(e=parseFloat(e),!isFinite(e)||!e&&0!==e)return"";t=null!=t?t:"$",n=null!=n?n:2;var o=Math.abs(e).toFixed(n),i=n?o.slice(0,-1-n):o,r=i.length%3,a=r>0?i.slice(0,r)+(i.length>3?",":""):"",s=n?o.slice(-1-n):"";return(e<0?"-":"")+t+a+i.slice(r).replace(/(\d{3})(?=\d)/g,"$1,")+s}},function(e,t,n){"use strict";var o=n(0);t.a=function(e){var t=o.a.toArray(arguments,1);return t.length>1?t[e%10-1]||t[t.length-1]:t[0]+(1===e?"":"s")}},function(e,t,n){"use strict";t.a=function(e){return e||0===e?(e=e.toString()).charAt(0).toUpperCase()+e.slice(1):""}},function(e,t,n){"use strict";t.a=function(e){return e||0===e?e.toString().toLowerCase():""}},function(e,t,n){"use strict";t.a=function(e,t){return void 0===e||""===e||null===e?t:e}},function(e,t,n){"use strict";t.a=function(e,t){return t=t||15,e&&"string"==typeof e?e.length<=t?e:e.substring(0,t)+"...":""}},function(e,t,n){"use strict";t.a=function(e){return e||0===e?e.toString().toUpperCase():""}},function(e,t,n){"use strict";var o=n(0),i=n(3),r=n(1),a=n(2);function s(e){o.a.each(i,function(t,n){e.filter(n,t)}),o.a.each(a,function(t,n){e.filter(n,t)}),e.mixin({methods:{limitBy:r.a,filterBy:r.b,orderBy:r.c}})}window.Vue?Vue.use(s):e.exports=s}])},e.exports=o()},function(e,t,n){e.exports=function(){"use strict";!function(){if("undefined"!=typeof document){var e=document.head||document.getElementsByTagName("head")[0],t=document.createElement("style"),n=" .__cov-progress { opacity: 1; z-index: 999999; } ";t.type="text/css",t.styleSheet?t.styleSheet.cssText=n:t.appendChild(document.createTextNode(n)),e.appendChild(t)}}();var e="undefined"!=typeof window,t={render:function(){var e=this,t=e.$createElement;return(e._self._c||t)("div",{staticClass:"__cov-progress",style:e.style})},staticRenderFns:[],name:"VueProgress",serverCacheKey:function(){return"Progress"},computed:{style:function(){var e=this.progress,t=e.options,n=!!t.show,o=t.location,i={"background-color":t.canSuccess?t.color:t.failedColor,opacity:t.show?1:0,position:t.position};return"top"===o||"bottom"===o?("top"===o?i.top="0px":i.bottom="0px",t.inverse?i.right="0px":i.left="0px",i.width=e.percent+"%",i.height=t.thickness,i.transition=(n?"width "+t.transition.speed+", ":"")+"opacity "+t.transition.opacity):"left"!==o&&"right"!==o||("left"===o?i.left="0px":i.right="0px",t.inverse?i.top="0px":i.bottom="0px",i.height=e.percent+"%",i.width=t.thickness,i.transition=(n?"height "+t.transition.speed+", ":"")+"opacity "+t.transition.opacity),i},progress:function(){return e?window.VueProgressBarEventBus.RADON_LOADING_BAR:{percent:0,options:{canSuccess:!0,show:!1,color:"rgb(19, 91, 55)",failedColor:"red",thickness:"2px",transition:{speed:"0.2s",opacity:"0.6s",termination:300},location:"top",autoRevert:!0,inverse:!1}}}}};return{install:function(e){var n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},o=(e.version.split(".")[0],"undefined"!=typeof window),i={$vm:null,state:{tFailColor:"",tColor:"",timer:null,cut:0},init:function(e){this.$vm=e},start:function(e){var t=this;this.$vm&&(e||(e=3e3),this.$vm.RADON_LOADING_BAR.percent=0,this.$vm.RADON_LOADING_BAR.options.show=!0,this.$vm.RADON_LOADING_BAR.options.canSuccess=!0,this.state.cut=1e4/Math.floor(e),clearInterval(this.state.timer),this.state.timer=setInterval(function(){t.increase(t.state.cut*Math.random()),95<t.$vm.RADON_LOADING_BAR.percent&&t.$vm.RADON_LOADING_BAR.options.autoFinish&&t.finish()},100))},set:function(e){this.$vm.RADON_LOADING_BAR.options.show=!0,this.$vm.RADON_LOADING_BAR.options.canSuccess=!0,this.$vm.RADON_LOADING_BAR.percent=Math.floor(e)},get:function(){return Math.floor(this.$vm.RADON_LOADING_BAR.percent)},increase:function(e){this.$vm.RADON_LOADING_BAR.percent=Math.min(99,this.$vm.RADON_LOADING_BAR.percent+Math.floor(e))},decrease:function(e){this.$vm.RADON_LOADING_BAR.percent=this.$vm.RADON_LOADING_BAR.percent-Math.floor(e)},hide:function(){var t=this;clearInterval(this.state.timer),this.state.timer=null,setTimeout(function(){t.$vm.RADON_LOADING_BAR.options.show=!1,e.nextTick(function(){setTimeout(function(){t.$vm.RADON_LOADING_BAR.percent=0},100),t.$vm.RADON_LOADING_BAR.options.autoRevert&&setTimeout(function(){t.revert()},300)})},this.$vm.RADON_LOADING_BAR.options.transition.termination)},pause:function(){clearInterval(this.state.timer)},finish:function(){this.$vm&&(this.$vm.RADON_LOADING_BAR.percent=100,this.hide())},fail:function(){this.$vm.RADON_LOADING_BAR.options.canSuccess=!1,this.$vm.RADON_LOADING_BAR.percent=100,this.hide()},setFailColor:function(e){this.$vm.RADON_LOADING_BAR.options.failedColor=e},setColor:function(e){this.$vm.RADON_LOADING_BAR.options.color=e},setLocation:function(e){this.$vm.RADON_LOADING_BAR.options.location=e},setTransition:function(e){this.$vm.RADON_LOADING_BAR.options.transition=e},tempFailColor:function(e){this.state.tFailColor=this.$vm.RADON_LOADING_BAR.options.failedColor,this.$vm.RADON_LOADING_BAR.options.failedColor=e},tempColor:function(e){this.state.tColor=this.$vm.RADON_LOADING_BAR.options.color,this.$vm.RADON_LOADING_BAR.options.color=e},tempLocation:function(e){this.state.tLocation=this.$vm.RADON_LOADING_BAR.options.location,this.$vm.RADON_LOADING_BAR.options.location=e},tempTransition:function(e){this.state.tTransition=this.$vm.RADON_LOADING_BAR.options.transition,this.$vm.RADON_LOADING_BAR.options.transition=e},revertColor:function(){this.$vm.RADON_LOADING_BAR.options.color=this.state.tColor,this.state.tColor=""},revertFailColor:function(){this.$vm.RADON_LOADING_BAR.options.failedColor=this.state.tFailColor,this.state.tFailColor=""},revertLocation:function(){this.$vm.RADON_LOADING_BAR.options.location=this.state.tLocation,this.state.tLocation=""},revertTransition:function(){this.$vm.RADON_LOADING_BAR.options.transition=this.state.tTransition,this.state.tTransition={}},revert:function(){this.$vm.RADON_LOADING_BAR.options.autoRevert&&(this.state.tColor&&this.revertColor(),this.state.tFailColor&&this.revertFailColor(),this.state.tLocation&&this.revertLocation(),!this.state.tTransition||void 0===this.state.tTransition.speed&&void 0===this.state.tTransition.opacity||this.revertTransition())},parseMeta:function(e){for(var t in e.func){var n=e.func[t];switch(n.call){case"color":switch(n.modifier){case"set":this.setColor(n.argument);break;case"temp":this.tempColor(n.argument)}break;case"fail":switch(n.modifier){case"set":this.setFailColor(n.argument);break;case"temp":this.tempFailColor(n.argument)}break;case"location":switch(n.modifier){case"set":this.setLocation(n.argument);break;case"temp":this.tempLocation(n.argument)}break;case"transition":switch(n.modifier){case"set":this.setTransition(n.argument);break;case"temp":this.tempTransition(n.argument)}}}}},r=function(e,t){for(var n,o,i=1;i<arguments.length;++i)for(n in o=arguments[i])Object.prototype.hasOwnProperty.call(o,n)&&(e[n]=o[n]);return e}({canSuccess:!0,show:!1,color:"#73ccec",position:"fixed",failedColor:"red",thickness:"2px",transition:{speed:"0.2s",opacity:"0.6s",termination:300},autoRevert:!0,location:"top",inverse:!1,autoFinish:!0},n),a=new e({data:{RADON_LOADING_BAR:{percent:0,options:r}}});o&&(window.VueProgressBarEventBus=a,i.init(a)),e.component("vue-progress-bar",t),e.prototype.$Progress=i}}}()},function(e,t,n){e.exports=function(){"use strict";var e="@@InfiniteScroll",t=function(e){return e===window?Math.max(window.pageYOffset||0,document.documentElement.scrollTop):e.scrollTop},n=document.defaultView.getComputedStyle,o=function(e){return e===window?t(window):e.getBoundingClientRect().top+t(window)},i=function(e){for(var t=e.parentNode;t;){if("HTML"===t.tagName)return!0;if(11===t.nodeType)return!1;t=t.parentNode}return!1},r=function(){if(!this.binded){this.binded=!0;var e,t,o,i,r,s,l,c,d=this,f=d.el,u=f.getAttribute("infinite-scroll-throttle-delay"),p=200;u&&(p=Number(d.vm[u]||u),(isNaN(p)||p<0)&&(p=200)),d.throttleDelay=p,d.scrollEventTarget=function(e){for(var t=e;t&&"HTML"!==t.tagName&&"BODY"!==t.tagName&&1===t.nodeType;){var o=n(t).overflowY;if("scroll"===o||"auto"===o)return t;t=t.parentNode}return window}(f),d.scrollListener=(e=a.bind(d),t=d.throttleDelay,c=function(){e.apply(s,l),i=o},function(){if(s=this,l=arguments,o=Date.now(),r&&(clearTimeout(r),r=null),i){var e=t-(o-i);e<0?c():r=setTimeout(function(){c()},e)}else c()}),d.scrollEventTarget.addEventListener("scroll",d.scrollListener),this.vm.$on("hook:beforeDestroy",function(){d.scrollEventTarget.removeEventListener("scroll",d.scrollListener)});var h=f.getAttribute("infinite-scroll-disabled"),m=!1;h&&(this.vm.$watch(h,function(e){d.disabled=e,!e&&d.immediateCheck&&a.call(d)}),m=Boolean(d.vm[h])),d.disabled=m;var g=f.getAttribute("infinite-scroll-distance"),b=0;g&&(b=Number(d.vm[g]||g),isNaN(b)&&(b=0)),d.distance=b;var v=f.getAttribute("infinite-scroll-immediate-check"),x=!0;v&&(x=Boolean(d.vm[v])),d.immediateCheck=x,x&&a.call(d);var y=f.getAttribute("infinite-scroll-listen-for-event");y&&d.vm.$on(y,function(){a.call(d)})}},a=function(e){var n=this.scrollEventTarget,i=this.el,r=this.distance;if(!0===e||!this.disabled){var a=t(n),s=a+function(e){return e===window?document.documentElement.clientHeight:e.clientHeight}(n);(n===i?n.scrollHeight-s<=r:s+r>=o(i)-o(n)+i.offsetHeight+a)&&this.expression&&this.expression()}},s={bind:function(t,n,o){t[e]={el:t,vm:o.context,expression:n.value};var a=arguments;t[e].vm.$on("hook:mounted",function(){t[e].vm.$nextTick(function(){i(t)&&r.call(t[e],a),t[e].bindTryCount=0,function n(){t[e].bindTryCount>10||(t[e].bindTryCount++,i(t)?r.call(t[e],a):setTimeout(n,50))}()})})},unbind:function(t){t&&t[e]&&t[e].scrollEventTarget&&t[e].scrollEventTarget.removeEventListener("scroll",t[e].scrollListener)}},l=function(e){e.directive("InfiniteScroll",s)};return window.Vue&&(window.infiniteScroll=s,Vue.use(l)),s.install=l,s}()},function(e,t,n){!function(){"use strict";var t={complement:window.document.title,separator:"|"},n={},o=[],i=[],r=!1,a={shorthand:{ch:"charset",tg:"target",n:"name",he:"http-equiv",ip:"itemprop",c:"content",p:"property",sc:"scheme",r:"rel",h:"href",sz:"sizes",t:"type",s:"src",a:"async",d:"defer",i:"inner"},getPlace:function(e){return window.document.getElementsByTagName(e)[0]},undoTitle:function(e){e.before&&(window.document.title=e.before)},undo:function(){o.length&&(o.map(function(e){e.parentElement.removeChild(e)}),o=[])},prepareElement:function(e,t){var n=this;return Object.keys(e).map(function(o){var i=n.shorthand[o]||o;i.match(/(body|undo|replace)/g)||("inner"!==i?t.setAttribute(i,e[o]):t.textContent=e[o])}),t},title:function(e){if(e){n.before=t.complement;var o=e.inner+" "+(e.separator||t.separator)+" "+(e.complement||t.complement);window.document.title=o.trim()}},update:function(){o.length&&(o.forEach(function(e,t){if(i[t]&&!i[t].isEqualNode(e))return e.parentElement.replaceChild(i[t],o[t]),void o.splice(t,1,i[t])}),i=[])},add:function(e,t,n){n.appendChild(t),(void 0===e.undo||e.undo)&&o.push(t)},handle:function(e,t,n,o){var r=this;e&&e.map(function(e){var a=e.body?r.getPlace("body"):r.getPlace(n),s=window.document.getElementById(e.id);s||(s=window.document.createElement(t),o=!1),s.hasAttribute("id")?r.prepareElement(e,s):(s=r.prepareElement(e,s),o?i.push(s):r.add(e,s,a))})}};function s(e,o){function i(e){var t=this,n="function"==typeof t.$options.head?t.$options.head.bind(t)():t.$options.head;n&&(Object.keys(n).map(function(o){var i=n[o];if(i){var r="function"==typeof i?n[o].bind(t)():n[o];"title"!==o?a.handle(r,o,"head",e):a[o](r)}}),t.$emit("okHead"))}function s(){this.$options.head&&(a.undoTitle(n),a.undo())}r||(r=!0,o&&e.util.extend(t,o),e.version.match(/[1].(.)+/g)&&e.mixin({ready:function(){i.bind(this)()},destroyed:function(){s.bind(this)()},events:{updateHead:function(){i.bind(this)(!0),a.update()}}}),e.version.match(/[2].(.)+/g)&&e.mixin({created:function(){var e=this;e.$on("updateHead",function(){i.bind(e)(!0),a.update()})},mounted:function(){i.bind(this)()},beforeDestroy:function(){s.bind(this)()}}))}s.version="2.0.11","undefined"!=typeof Vue&&Vue.use(s),e.exports=s}()},function(e,t){var n,o,i=e.exports={};function r(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function s(e){if(n===setTimeout)return setTimeout(e,0);if((n===r||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:r}catch(e){n=r}try{o="function"==typeof clearTimeout?clearTimeout:a}catch(e){o=a}}();var l,c=[],d=!1,f=-1;function u(){d&&l&&(d=!1,l.length?c=l.concat(c):f=-1,c.length&&p())}function p(){if(!d){var e=s(u);d=!0;for(var t=c.length;t;){for(l=c,c=[];++f<t;)l&&l[f].run();f=-1,t=c.length}l=null,d=!1,function(e){if(o===clearTimeout)return clearTimeout(e);if((o===a||!o)&&clearTimeout)return o=clearTimeout,clearTimeout(e);try{o(e)}catch(t){try{return o.call(null,e)}catch(t){return o.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function m(){}i.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new h(e,t)),1!==c.length||d||s(p)},h.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=m,i.addListener=m,i.once=m,i.off=m,i.removeListener=m,i.removeAllListeners=m,i.emit=m,i.prependListener=m,i.prependOnceListener=m,i.listeners=function(e){return[]},i.binding=function(e){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(e){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},function(e,t,n){var o=n(14);"string"==typeof o&&(o=[[e.i,o,""]]);n(6)(o,{});o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(5)(!1)).push([e.i,'.button.is-white:hover,.button.is-white:focus,.button.is-white.is-active{background-color:#5192ff !important;color:white !important}.is-circle{border-radius:50%}.is-rounded{border-radius:2px}.is-fullwidth{width:100%}.is-fullheight{min-height:100vh}.is-210x210{width:210px;height:210px}.has-margintop{margin-top:15px}.has-shadow{box-shadow:0 1px 2px rgba(0,0,0,0.1)}.has-underline{box-shadow:0 1px 0 #ebebeb}.__cov-progress{top:111px !important}/*! bulma.io v0.2.3 | MIT License | github.com/jgthms/bulma */@keyframes spinAround{from{transform:rotate(0deg)}to{transform:rotate(359deg)}}/*! minireset.css v0.0.2 | MIT License | github.com/jgthms/minireset.css */html,body,p,ol,ul,li,dl,dt,dd,blockquote,figure,fieldset,legend,textarea,pre,iframe,hr,h1,h2,h3,h4,h5,h6{margin:0;padding:0}h1,h2,h3,h4,h5,h6{font-size:100%;font-weight:normal}ul{list-style:none}button,input,select,textarea{margin:0}html{box-sizing:border-box}*{box-sizing:inherit}*:before,*:after{box-sizing:inherit}img,embed,object,audio,video{height:auto;max-width:100%}iframe{border:0}table{border-collapse:collapse;border-spacing:0}td,th{padding:0;text-align:left}html{background-color:"#fff";font-size:14px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;min-width:300px;overflow-x:hidden;overflow-y:scroll;text-rendering:optimizeLegibility}article,aside,figure,footer,header,hgroup,section{display:block}body,button,input,select,textarea{font-family:-apple-system,BlinkMacSystemFont,"Segoe UI","Roboto","Oxygen","Ubuntu","Cantarell","Fira Sans","Droid Sans","Helvetica Neue","Helvetica","Arial",sans-serif}code,pre{-moz-osx-font-smoothing:auto;-webkit-font-smoothing:auto;font-family:"Inconsolata","Consolas","Monaco",monospace;line-height:1.25}body{color:#4a4a4a;font-size:1rem;font-weight:400;line-height:1.428571428571429}a{color:#4a8bfa;cursor:pointer;text-decoration:none;transition:none 86ms ease-out}a:hover{color:#363636}code{background-color:#f5f5f5;color:#ff3860;font-size:12px;font-weight:normal;padding:1px 2px 2px}hr{background-color:#dbdbdb;border:none;display:block;height:1px;margin:20px 0}img{max-width:100%}input[type="checkbox"],input[type="radio"]{vertical-align:baseline}small{font-size:11px}span{font-style:inherit;font-weight:inherit}strong{color:#363636;font-weight:700}pre{background-color:#f5f5f5;color:#4a4a4a;white-space:pre;word-wrap:normal}pre code{background-color:#f5f5f5;color:#4a4a4a;display:block;overflow-x:auto;padding:16px 20px}table{width:100%}table td,table th{text-align:left;vertical-align:top}table th{color:#363636}.is-block{display:block}@media screen and (max-width: 768px){.is-block-mobile{display:block !important}}@media screen and (min-width: 769px){.is-block-tablet{display:block !important}}@media screen and (min-width: 769px) and (max-width: 979px){.is-block-tablet-only{display:block !important}}@media screen and (max-width: 979px){.is-block-touch{display:block !important}}@media screen and (min-width: 980px){.is-block-desktop{display:block !important}}@media screen and (min-width: 980px) and (max-width: 1179px){.is-block-desktop-only{display:block !important}}@media screen and (min-width: 1180px){.is-block-widescreen{display:block !important}}.is-flex{display:flex}@media screen and (max-width: 768px){.is-flex-mobile{display:flex !important}}@media screen and (min-width: 769px){.is-flex-tablet{display:flex !important}}@media screen and (min-width: 769px) and (max-width: 979px){.is-flex-tablet-only{display:flex !important}}@media screen and (max-width: 979px){.is-flex-touch{display:flex !important}}@media screen and (min-width: 980px){.is-flex-desktop{display:flex !important}}@media screen and (min-width: 980px) and (max-width: 1179px){.is-flex-desktop-only{display:flex !important}}@media screen and (min-width: 1180px){.is-flex-widescreen{display:flex !important}}.is-inline{display:inline}@media screen and (max-width: 768px){.is-inline-mobile{display:inline !important}}@media screen and (min-width: 769px){.is-inline-tablet{display:inline !important}}@media screen and (min-width: 769px) and (max-width: 979px){.is-inline-tablet-only{display:inline !important}}@media screen and (max-width: 979px){.is-inline-touch{display:inline !important}}@media screen and (min-width: 980px){.is-inline-desktop{display:inline !important}}@media screen and (min-width: 980px) and (max-width: 1179px){.is-inline-desktop-only{display:inline !important}}@media screen and (min-width: 1180px){.is-inline-widescreen{display:inline !important}}.is-inline-block{display:inline-block}@media screen and (max-width: 768px){.is-inline-block-mobile{display:inline-block !important}}@media screen and (min-width: 769px){.is-inline-block-tablet{display:inline-block !important}}@media screen and (min-width: 769px) and (max-width: 979px){.is-inline-block-tablet-only{display:inline-block !important}}@media screen and (max-width: 979px){.is-inline-block-touch{display:inline-block !important}}@media screen and (min-width: 980px){.is-inline-block-desktop{display:inline-block !important}}@media screen and (min-width: 980px) and (max-width: 1179px){.is-inline-block-desktop-only{display:inline-block !important}}@media screen and (min-width: 1180px){.is-inline-block-widescreen{display:inline-block !important}}.is-inline-flex{display:inline-flex}@media screen and (max-width: 768px){.is-inline-flex-mobile{display:inline-flex !important}}@media screen and (min-width: 769px){.is-inline-flex-tablet{display:inline-flex !important}}@media screen and (min-width: 769px) and (max-width: 979px){.is-inline-flex-tablet-only{display:inline-flex !important}}@media screen and (max-width: 979px){.is-inline-flex-touch{display:inline-flex !important}}@media screen and (min-width: 980px){.is-inline-flex-desktop{display:inline-flex !important}}@media screen and (min-width: 980px) and (max-width: 1179px){.is-inline-flex-desktop-only{display:inline-flex !important}}@media screen and (min-width: 1180px){.is-inline-flex-widescreen{display:inline-flex !important}}.is-clearfix:after{clear:both;content:" ";display:table}.is-pulled-left{float:left}.is-pulled-right{float:right}.is-clipped{overflow:hidden !important}.is-overlay{bottom:0;left:0;position:absolute;right:0;top:0}.has-text-centered{text-align:center}.has-text-left{text-align:left}.has-text-right{text-align:right}.is-hidden{display:none !important}@media screen and (max-width: 768px){.is-hidden-mobile{display:none !important}}@media screen and (min-width: 769px){.is-hidden-tablet{display:none !important}}@media screen and (min-width: 769px) and (max-width: 979px){.is-hidden-tablet-only{display:none !important}}@media screen and (max-width: 979px){.is-hidden-touch{display:none !important}}@media screen and (min-width: 980px){.is-hidden-desktop{display:none !important}}@media screen and (min-width: 980px) and (max-width: 1179px){.is-hidden-desktop-only{display:none !important}}@media screen and (min-width: 1180px){.is-hidden-widescreen{display:none !important}}.is-disabled{pointer-events:none}.is-marginless{margin:0 !important}.is-paddingless{padding:0 !important}.is-unselectable{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.box{background-color:#fff;border-radius:5px;box-shadow:0 2px 3px rgba(10,10,10,0.1),0 0 0 1px rgba(10,10,10,0.1);display:block;padding:20px}.box:not(:last-child){margin-bottom:20px}a.box:hover,a.box:focus{box-shadow:0 2px 3px rgba(10,10,10,0.1),0 0 0 1px #4a8bfa}a.box:active{box-shadow:inset 0 1px 2px rgba(10,10,10,0.2),0 0 0 1px #4a8bfa}.button{-moz-appearance:none;-webkit-appearance:none;align-items:center;background-color:#fff;border:1px solid #dbdbdb;border-radius:3px;color:#363636;display:inline-flex;font-size:14px;height:32px;justify-content:flex-start;line-height:24px;padding-left:8px;padding-right:8px;position:relative;vertical-align:top;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;justify-content:center;padding-left:10px;padding-right:10px;text-align:center;white-space:nowrap}.button:hover{border-color:#b5b5b5}.button:active,.button:focus,.button.is-active{border-color:#4a8bfa;outline:none}.button[disabled],.button.is-disabled{background-color:#f5f5f5;border-color:#dbdbdb;cursor:not-allowed;pointer-events:none}.button[disabled]::-moz-placeholder,.button.is-disabled::-moz-placeholder{color:rgba(54,54,54,0.3)}.button[disabled]::-webkit-input-placeholder,.button.is-disabled::-webkit-input-placeholder{color:rgba(54,54,54,0.3)}.button[disabled]:-moz-placeholder,.button.is-disabled:-moz-placeholder{color:rgba(54,54,54,0.3)}.button[disabled]:-ms-input-placeholder,.button.is-disabled:-ms-input-placeholder{color:rgba(54,54,54,0.3)}.button strong{color:inherit}.button small{display:block;font-size:11px;line-height:1;margin-top:5px}.button .icon:first-child,.button .tag:first-child{margin-left:-2px;margin-right:4px}.button .icon:last-child,.button .tag:last-child{margin-left:4px;margin-right:-2px}.button:hover,.button:focus,.button.is-active{color:#363636}.button:active{box-shadow:inset 0 1px 2px rgba(10,10,10,0.2)}.button.is-white{background-color:#fff;border-width:0;color:#0a0a0a}.button.is-white:hover,.button.is-white:focus,.button.is-white.is-active{background-color:#f2f2f2;border-color:transparent;color:#0a0a0a}.button.is-white.is-inverted{background-color:#0a0a0a;color:#fff}.button.is-white.is-inverted:hover{background-color:#000}.button.is-white.is-loading:after{border-color:transparent transparent #0a0a0a #0a0a0a !important}.button.is-white.is-outlined{background-color:transparent;border-color:#fff;border-width:1px;color:#fff}.button.is-white.is-outlined:hover,.button.is-white.is-outlined:focus{background-color:#fff;border-color:#fff;color:#0a0a0a}.button.is-black{background-color:#0a0a0a;border-width:0;color:#fff}.button.is-black:hover,.button.is-black:focus,.button.is-black.is-active{background-color:#000;border-color:transparent;color:#fff}.button.is-black.is-inverted{background-color:#fff;color:#0a0a0a}.button.is-black.is-inverted:hover{background-color:#f2f2f2}.button.is-black.is-loading:after{border-color:transparent transparent #fff #fff !important}.button.is-black.is-outlined{background-color:transparent;border-color:#0a0a0a;border-width:1px;color:#0a0a0a}.button.is-black.is-outlined:hover,.button.is-black.is-outlined:focus{background-color:#0a0a0a;border-color:#0a0a0a;color:#fff}.button.is-light{background-color:#f5f5f5;border-width:0;color:#363636}.button.is-light:hover,.button.is-light:focus,.button.is-light.is-active{background-color:#e8e8e8;border-color:transparent;color:#363636}.button.is-light.is-inverted{background-color:#363636;color:#f5f5f5}.button.is-light.is-inverted:hover{background-color:#292929}.button.is-light.is-loading:after{border-color:transparent transparent #363636 #363636 !important}.button.is-light.is-outlined{background-color:transparent;border-color:#f5f5f5;border-width:1px;color:#f5f5f5}.button.is-light.is-outlined:hover,.button.is-light.is-outlined:focus{background-color:#f5f5f5;border-color:#f5f5f5;color:#363636}.button.is-dark{background-color:#363636;border-width:0;color:#f5f5f5}.button.is-dark:hover,.button.is-dark:focus,.button.is-dark.is-active{background-color:#292929;border-color:transparent;color:#f5f5f5}.button.is-dark.is-inverted{background-color:#f5f5f5;color:#363636}.button.is-dark.is-inverted:hover{background-color:#e8e8e8}.button.is-dark.is-loading:after{border-color:transparent transparent #f5f5f5 #f5f5f5 !important}.button.is-dark.is-outlined{background-color:transparent;border-color:#363636;border-width:1px;color:#363636}.button.is-dark.is-outlined:hover,.button.is-dark.is-outlined:focus{background-color:#363636;border-color:#363636;color:#f5f5f5}.button.is-primary{background-color:#00d1b2;border-width:0;color:#fff}.button.is-primary:hover,.button.is-primary:focus,.button.is-primary.is-active{background-color:#00b89c;border-color:transparent;color:#fff}.button.is-primary.is-inverted{background-color:#fff;color:#00d1b2}.button.is-primary.is-inverted:hover{background-color:#f2f2f2}.button.is-primary.is-loading:after{border-color:transparent transparent #fff #fff !important}.button.is-primary.is-outlined{background-color:transparent;border-color:#00d1b2;border-width:1px;color:#00d1b2}.button.is-primary.is-outlined:hover,.button.is-primary.is-outlined:focus{background-color:#00d1b2;border-color:#00d1b2;color:#fff}.button.is-info{background-color:#3273dc;border-width:0;color:#fff}.button.is-info:hover,.button.is-info:focus,.button.is-info.is-active{background-color:#2366d1;border-color:transparent;color:#fff}.button.is-info.is-inverted{background-color:#fff;color:#3273dc}.button.is-info.is-inverted:hover{background-color:#f2f2f2}.button.is-info.is-loading:after{border-color:transparent transparent #fff #fff !important}.button.is-info.is-outlined{background-color:transparent;border-color:#3273dc;border-width:1px;color:#3273dc}.button.is-info.is-outlined:hover,.button.is-info.is-outlined:focus{background-color:#3273dc;border-color:#3273dc;color:#fff}.button.is-success{background-color:#23d160;border-width:0;color:#fff}.button.is-success:hover,.button.is-success:focus,.button.is-success.is-active{background-color:#20bc56;border-color:transparent;color:#fff}.button.is-success.is-inverted{background-color:#fff;color:#23d160}.button.is-success.is-inverted:hover{background-color:#f2f2f2}.button.is-success.is-loading:after{border-color:transparent transparent #fff #fff !important}.button.is-success.is-outlined{background-color:transparent;border-color:#23d160;border-width:1px;color:#23d160}.button.is-success.is-outlined:hover,.button.is-success.is-outlined:focus{background-color:#23d160;border-color:#23d160;color:#fff}.button.is-warning{background-color:#ffdd57;border-width:0;color:rgba(0,0,0,0.7)}.button.is-warning:hover,.button.is-warning:focus,.button.is-warning.is-active{background-color:#ffd83d;border-color:transparent;color:rgba(0,0,0,0.7)}.button.is-warning.is-inverted{background-color:rgba(0,0,0,0.7);color:#ffdd57}.button.is-warning.is-inverted:hover{background-color:rgba(0,0,0,0.7)}.button.is-warning.is-loading:after{border-color:transparent transparent rgba(0,0,0,0.7) rgba(0,0,0,0.7) !important}.button.is-warning.is-outlined{background-color:transparent;border-color:#ffdd57;border-width:1px;color:#ffdd57}.button.is-warning.is-outlined:hover,.button.is-warning.is-outlined:focus{background-color:#ffdd57;border-color:#ffdd57;color:rgba(0,0,0,0.7)}.button.is-danger{background-color:#ff3860;border-width:0;color:#fff}.button.is-danger:hover,.button.is-danger:focus,.button.is-danger.is-active{background-color:#ff1f4b;border-color:transparent;color:#fff}.button.is-danger.is-inverted{background-color:#fff;color:#ff3860}.button.is-danger.is-inverted:hover{background-color:#f2f2f2}.button.is-danger.is-loading:after{border-color:transparent transparent #fff #fff !important}.button.is-danger.is-outlined{background-color:transparent;border-color:#ff3860;border-width:1px;color:#ff3860}.button.is-danger.is-outlined:hover,.button.is-danger.is-outlined:focus{background-color:#ff3860;border-color:#ff3860;color:#fff}.button.is-link{background-color:transparent;border-width:0;color:#4a4a4a;text-decoration:underline}.button.is-link:hover,.button.is-link:focus{background-color:#f5f5f5;color:#363636}.button.is-small{border-radius:2px;font-size:11px;height:24px;line-height:16px;padding-left:6px;padding-right:6px}.button.is-medium{font-size:18px;height:40px;padding-left:14px;padding-right:14px}.button.is-large{font-size:22px;height:48px;padding-left:20px;padding-right:20px}.button[disabled],.button.is-disabled{opacity:0.5}.button.is-fullwidth{display:flex;width:100%}.button.is-loading{color:transparent !important;pointer-events:none}.button.is-loading:after{animation:spinAround 500ms infinite linear;border:2px solid #dbdbdb;border-radius:290486px;border-right-color:transparent;border-top-color:transparent;content:"";display:block;height:16px;position:relative;width:16px;left:50%;margin-left:-8px;margin-top:-8px;position:absolute;top:50%;position:absolute !important}.content{color:#4a4a4a}.content:not(:last-child){margin-bottom:20px}.content a:not(.button){border-bottom:1px solid #dbdbdb}.content a:not(.button):visited{color:#b86bff}.content a:not(.button):hover{border-bottom-color:#4a8bfa}.content li+li{margin-top:0.25em}.content blockquote:not(:last-child),.content p:not(:last-child),.content ol:not(:last-child),.content ul:not(:last-child){margin-bottom:1em}.content h1,.content h2,.content h3,.content h4,.content h5,.content h6{color:#363636;font-weight:300;line-height:1.125;margin-bottom:20px}.content h1:not(:first-child),.content h2:not(:first-child),.content h3:not(:first-child){margin-top:40px}.content blockquote{background-color:#f5f5f5;border-left:5px solid #dbdbdb;padding:1.5em}.content h1{font-size:2em}.content h2{font-size:1.75em}.content h3{font-size:1.5em}.content h4{font-size:1.25em}.content h5{font-size:1.125em}.content h6{font-size:1em}.content ol{list-style:decimal outside;margin-left:2em;margin-right:2em;margin-top:1em}.content ul{list-style:disc outside;margin-left:2em;margin-right:2em;margin-top:1em}.content ul ul{list-style-type:circle;margin-top:0.5em}.content ul ul ul{list-style-type:square}.content.is-medium{font-size:18px}.content.is-medium code{font-size:14px}.content.is-large{font-size:24px}.content.is-large code{font-size:18px}.input,.textarea{-moz-appearance:none;-webkit-appearance:none;align-items:center;background-color:#fff;border:1px solid #dbdbdb;border-radius:3px;color:#363636;display:inline-flex;font-size:14px;height:32px;justify-content:flex-start;line-height:24px;padding-left:8px;padding-right:8px;position:relative;vertical-align:top;box-shadow:inset 0 1px 2px rgba(10,10,10,0.1);max-width:100%;width:100%}.input:hover,.textarea:hover{border-color:#b5b5b5}.input:active,.input:focus,.input.is-active,.textarea:active,.textarea:focus,.textarea.is-active{border-color:#4a8bfa;outline:none}.input[disabled],.input.is-disabled,.textarea[disabled],.textarea.is-disabled{background-color:#f5f5f5;border-color:#dbdbdb;cursor:not-allowed;pointer-events:none}.input[disabled]::-moz-placeholder,.input.is-disabled::-moz-placeholder,.textarea[disabled]::-moz-placeholder,.textarea.is-disabled::-moz-placeholder{color:rgba(54,54,54,0.3)}.input[disabled]::-webkit-input-placeholder,.input.is-disabled::-webkit-input-placeholder,.textarea[disabled]::-webkit-input-placeholder,.textarea.is-disabled::-webkit-input-placeholder{color:rgba(54,54,54,0.3)}.input[disabled]:-moz-placeholder,.input.is-disabled:-moz-placeholder,.textarea[disabled]:-moz-placeholder,.textarea.is-disabled:-moz-placeholder{color:rgba(54,54,54,0.3)}.input[disabled]:-ms-input-placeholder,.input.is-disabled:-ms-input-placeholder,.textarea[disabled]:-ms-input-placeholder,.textarea.is-disabled:-ms-input-placeholder{color:rgba(54,54,54,0.3)}.input.is-white,.textarea.is-white{border-color:#fff}.input.is-black,.textarea.is-black{border-color:#0a0a0a}.input.is-light,.textarea.is-light{border-color:#f5f5f5}.input.is-dark,.textarea.is-dark{border-color:#363636}.input.is-primary,.textarea.is-primary{border-color:#00d1b2}.input.is-info,.textarea.is-info{border-color:#3273dc}.input.is-success,.textarea.is-success{border-color:#23d160}.input.is-warning,.textarea.is-warning{border-color:#ffdd57}.input.is-danger,.textarea.is-danger{border-color:#ff3860}.input[type="search"],.textarea[type="search"]{border-radius:290486px}.input.is-small,.textarea.is-small{border-radius:2px;font-size:11px;height:24px;line-height:16px;padding-left:6px;padding-right:6px}.input.is-medium,.textarea.is-medium{font-size:18px;height:40px;line-height:32px;padding-left:10px;padding-right:10px}.input.is-large,.textarea.is-large{font-size:24px;height:48px;line-height:40px;padding-left:12px;padding-right:12px}.input.is-fullwidth,.textarea.is-fullwidth{display:block;width:100%}.input.is-inline,.textarea.is-inline{display:inline;width:auto}.textarea{display:block;line-height:1.2;max-height:600px;max-width:100%;min-height:120px;min-width:100%;padding:10px;resize:vertical}.checkbox,.radio{cursor:pointer;display:inline-block;line-height:16px;position:relative;vertical-align:top}.checkbox input,.radio input{cursor:pointer}.checkbox:hover,.radio:hover{color:#363636}.checkbox.is-disabled,.radio.is-disabled{color:#dbdbdb;pointer-events:none}.checkbox.is-disabled input,.radio.is-disabled input{pointer-events:none}.radio+.radio{margin-left:10px}.select{display:inline-block;height:32px;position:relative;vertical-align:top}.select select{-moz-appearance:none;-webkit-appearance:none;align-items:center;background-color:#fff;border:1px solid #dbdbdb;border-radius:3px;color:#363636;display:inline-flex;font-size:14px;height:32px;justify-content:flex-start;line-height:24px;padding-left:8px;padding-right:8px;position:relative;vertical-align:top;cursor:pointer;display:block;outline:none;padding-right:36px}.select select:hover{border-color:#b5b5b5}.select select:active,.select select:focus,.select select.is-active{border-color:#4a8bfa;outline:none}.select select[disabled],.select select.is-disabled{background-color:#f5f5f5;border-color:#dbdbdb;cursor:not-allowed;pointer-events:none}.select select[disabled]::-moz-placeholder,.select select.is-disabled::-moz-placeholder{color:rgba(54,54,54,0.3)}.select select[disabled]::-webkit-input-placeholder,.select select.is-disabled::-webkit-input-placeholder{color:rgba(54,54,54,0.3)}.select select[disabled]:-moz-placeholder,.select select.is-disabled:-moz-placeholder{color:rgba(54,54,54,0.3)}.select select[disabled]:-ms-input-placeholder,.select select.is-disabled:-ms-input-placeholder{color:rgba(54,54,54,0.3)}.select select.is-white{border-color:#fff}.select select.is-black{border-color:#0a0a0a}.select select.is-light{border-color:#f5f5f5}.select select.is-dark{border-color:#363636}.select select.is-primary{border-color:#00d1b2}.select select.is-info{border-color:#3273dc}.select select.is-success{border-color:#23d160}.select select.is-warning{border-color:#ffdd57}.select select.is-danger{border-color:#ff3860}.select select:hover{border-color:#b5b5b5}.select select::ms-expand{display:none}.select.is-fullwidth{width:100%}.select.is-fullwidth select{width:100%}.select:after{border:1px solid #4a8bfa;border-right:0;border-top:0;content:" ";display:block;height:7px;pointer-events:none;position:absolute;transform:rotate(-45deg);width:7px;margin-top:-6px;right:16px;top:50%}.select:hover:after{border-color:#363636}.select.is-small{height:24px}.select.is-small select{border-radius:2px;font-size:11px;height:24px;line-height:16px;padding-left:6px;padding-right:6px;padding-right:28px}.select.is-medium{height:40px}.select.is-medium select{font-size:18px;height:40px;line-height:32px;padding-left:10px;padding-right:10px;padding-right:44px}.select.is-large{height:48px}.select.is-large select{font-size:24px;height:48px;line-height:40px;padding-left:12px;padding-right:12px;padding-right:52px}.label{color:#363636;display:block;font-weight:bold}.label:not(:last-child){margin-bottom:5px}.help{display:block;font-size:11px;margin-top:5px}.help.is-white{color:#fff}.help.is-black{color:#0a0a0a}.help.is-light{color:#f5f5f5}.help.is-dark{color:#363636}.help.is-primary{color:#00d1b2}.help.is-info{color:#3273dc}.help.is-success{color:#23d160}.help.is-warning{color:#ffdd57}.help.is-danger{color:#ff3860}@media screen and (max-width: 768px){.control-label{margin-bottom:5px}}@media screen and (min-width: 769px){.control-label{flex-basis:0;flex-grow:1;flex-shrink:0;margin-right:20px;padding-top:7px;text-align:right}}.control{position:relative;text-align:left}.control:not(:last-child){margin-bottom:10px}.control.has-addons{display:flex;justify-content:flex-start}.control.has-addons .button,.control.has-addons .input,.control.has-addons .select{border-radius:0;margin-right:-1px;width:auto}.control.has-addons .button:hover,.control.has-addons .input:hover,.control.has-addons .select:hover{z-index:2}.control.has-addons .button:active,.control.has-addons .button:focus,.control.has-addons .input:active,.control.has-addons .input:focus,.control.has-addons .select:active,.control.has-addons .select:focus{z-index:3}.control.has-addons .button:first-child,.control.has-addons .input:first-child,.control.has-addons .select:first-child{border-radius:3px 0 0 3px}.control.has-addons .button:first-child select,.control.has-addons .input:first-child select,.control.has-addons .select:first-child select{border-radius:3px 0 0 3px}.control.has-addons .button:last-child,.control.has-addons .input:last-child,.control.has-addons .select:last-child{border-radius:0 3px 3px 0}.control.has-addons .button:last-child select,.control.has-addons .input:last-child select,.control.has-addons .select:last-child select{border-radius:0 3px 3px 0}.control.has-addons .button.is-expanded,.control.has-addons .input.is-expanded,.control.has-addons .select.is-expanded{flex-grow:1;flex-shrink:0}.control.has-addons.has-addons-centered{justify-content:center}.control.has-addons.has-addons-right{justify-content:flex-end}.control.has-addons.has-addons-fullwidth .button,.control.has-addons.has-addons-fullwidth .input,.control.has-addons.has-addons-fullwidth .select{flex-grow:1;flex-shrink:0}.control.has-icon>.fa{display:inline-block;font-size:14px;height:24px;line-height:24px;text-align:center;vertical-align:top;width:24px;color:#dbdbdb;pointer-events:none;position:absolute;top:4px;z-index:4}.control.has-icon .input:focus+.fa{color:#b5b5b5}.control.has-icon .input.is-small+.fa{font-size:10.5px;top:0}.control.has-icon .input.is-medium+.fa{font-size:21px;top:8px}.control.has-icon .input.is-large+.fa{font-size:21px;top:12px}.control.has-icon:not(.has-icon-right)>.fa{left:4px}.control.has-icon:not(.has-icon-right) .input{padding-left:32px}.control.has-icon:not(.has-icon-right) .input.is-small{padding-left:24px}.control.has-icon:not(.has-icon-right) .input.is-small+.fa{left:0}.control.has-icon:not(.has-icon-right) .input.is-medium{padding-left:40px}.control.has-icon:not(.has-icon-right) .input.is-medium+.fa{left:8px}.control.has-icon:not(.has-icon-right) .input.is-large{padding-left:48px}.control.has-icon:not(.has-icon-right) .input.is-large+.fa{left:12px}.control.has-icon.has-icon-right>.fa{right:4px}.control.has-icon.has-icon-right .input{padding-right:32px}.control.has-icon.has-icon-right .input.is-small{padding-right:24px}.control.has-icon.has-icon-right .input.is-small+.fa{right:0}.control.has-icon.has-icon-right .input.is-medium{padding-right:40px}.control.has-icon.has-icon-right .input.is-medium+.fa{right:8px}.control.has-icon.has-icon-right .input.is-large{padding-right:48px}.control.has-icon.has-icon-right .input.is-large+.fa{right:12px}.control.is-grouped{display:flex;justify-content:flex-start}.control.is-grouped>.control:not(:last-child){margin-bottom:0;margin-right:10px}.control.is-grouped>.control.is-expanded{flex-grow:1;flex-shrink:1}.control.is-grouped.is-grouped-centered{justify-content:center}.control.is-grouped.is-grouped-right{justify-content:flex-end}@media screen and (min-width: 769px){.control.is-horizontal{display:flex}.control.is-horizontal>.control{display:flex;flex-basis:0;flex-grow:5;flex-shrink:1}}.control.is-loading:after{animation:spinAround 500ms infinite linear;border:2px solid #dbdbdb;border-radius:290486px;border-right-color:transparent;border-top-color:transparent;content:"";display:block;height:16px;position:relative;width:16px;position:absolute !important;right:8px;top:8px}.image{display:block;position:relative}.image img{display:block;height:auto;width:100%}.image.is-square img,.image.is-1by1 img,.image.is-4by3 img,.image.is-3by2 img,.image.is-16by9 img,.image.is-2by1 img{bottom:0;left:0;position:absolute;right:0;top:0;height:100%;width:100%}.image.is-square,.image.is-1by1{padding-top:100%}.image.is-4by3{padding-top:75%}.image.is-3by2{padding-top:66.6666%}.image.is-16by9{padding-top:56.25%}.image.is-2by1{padding-top:50%}.image.is-16x16{height:16px;width:16px}.image.is-24x24{height:24px;width:24px}.image.is-32x32{height:32px;width:32px}.image.is-48x48{height:48px;width:48px}.image.is-64x64{height:64px;width:64px}.image.is-96x96{height:96px;width:96px}.image.is-128x128{height:128px;width:128px}.notification{background-color:#f5f5f5;border-radius:3px;padding:16px 20px;position:relative}.notification:not(:last-child){margin-bottom:20px}.notification:after{clear:both;content:" ";display:table}.notification .delete{border-radius:0 3px;float:right;margin:-16px -20px 0 20px}.notification .title,.notification .subtitle,.notification .content{color:inherit}.notification.is-white{background-color:#fff;color:#0a0a0a}.notification.is-black{background-color:#0a0a0a;color:#fff}.notification.is-light{background-color:#f5f5f5;color:#363636}.notification.is-dark{background-color:#363636;color:#f5f5f5}.notification.is-primary{background-color:#00d1b2;color:#fff}.notification.is-info{background-color:#3273dc;color:#fff}.notification.is-success{background-color:#23d160;color:#fff}.notification.is-warning{background-color:#ffdd57;color:rgba(0,0,0,0.7)}.notification.is-danger{background-color:#ff3860;color:#fff}.progress{-moz-appearance:none;-webkit-appearance:none;border:none;border-radius:290486px;display:block;height:12px;overflow:hidden;padding:0;width:100%}.progress:not(:last-child){margin-bottom:20px}.progress::-webkit-progress-bar{background-color:#dbdbdb}.progress::-webkit-progress-value{background-color:#4a4a4a}.progress::-moz-progress-bar{background-color:#4a4a4a}.progress.is-white::-webkit-progress-value{background-color:#fff}.progress.is-white::-moz-progress-bar{background-color:#fff}.progress.is-black::-webkit-progress-value{background-color:#0a0a0a}.progress.is-black::-moz-progress-bar{background-color:#0a0a0a}.progress.is-light::-webkit-progress-value{background-color:#f5f5f5}.progress.is-light::-moz-progress-bar{background-color:#f5f5f5}.progress.is-dark::-webkit-progress-value{background-color:#363636}.progress.is-dark::-moz-progress-bar{background-color:#363636}.progress.is-primary::-webkit-progress-value{background-color:#00d1b2}.progress.is-primary::-moz-progress-bar{background-color:#00d1b2}.progress.is-info::-webkit-progress-value{background-color:#3273dc}.progress.is-info::-moz-progress-bar{background-color:#3273dc}.progress.is-success::-webkit-progress-value{background-color:#23d160}.progress.is-success::-moz-progress-bar{background-color:#23d160}.progress.is-warning::-webkit-progress-value{background-color:#ffdd57}.progress.is-warning::-moz-progress-bar{background-color:#ffdd57}.progress.is-danger::-webkit-progress-value{background-color:#ff3860}.progress.is-danger::-moz-progress-bar{background-color:#ff3860}.progress.is-small{height:8px}.progress.is-medium{height:16px}.progress.is-large{height:20px}.table{background-color:#fff;color:#363636;margin-bottom:20px;width:100%}.table td,.table th{border:1px solid #dbdbdb;border-width:0 0 1px;padding:8px 10px;vertical-align:top}.table td.is-icon,.table th.is-icon{padding:5px;text-align:center;white-space:nowrap;width:1%}.table td.is-icon .fa,.table th.is-icon .fa{display:inline-block;font-size:21px;height:24px;line-height:24px;text-align:center;vertical-align:top;width:24px}.table td.is-icon.is-link,.table th.is-icon.is-link{padding:0}.table td.is-icon.is-link>a,.table th.is-icon.is-link>a{padding:5px}.table td.is-link,.table th.is-link{padding:0}.table td.is-link>a,.table th.is-link>a{display:block;padding:8px 10px}.table td.is-link>a:hover,.table th.is-link>a:hover{background-color:#4a8bfa;color:#fff}.table td.is-narrow,.table th.is-narrow{white-space:nowrap;width:1%}.table th{color:#363636;text-align:left}.table tr:hover{background-color:#f5f5f5}.table thead td,.table thead th{border-width:0 0 2px;color:#7a7a7a}.table tbody tr:last-child td,.table tbody tr:last-child th{border-bottom-width:0}.table tfoot td,.table tfoot th{border-width:2px 0 0;color:#7a7a7a}.table.is-bordered td,.table.is-bordered th{border-width:1px}.table.is-bordered tr:last-child td,.table.is-bordered tr:last-child th{border-bottom-width:1px}.table.is-narrow td,.table.is-narrow th{padding:5px 10px}.table.is-narrow td.is-icon,.table.is-narrow th.is-icon{padding:2px}.table.is-narrow td.is-icon.is-link,.table.is-narrow th.is-icon.is-link{padding:0}.table.is-narrow td.is-icon.is-link>a,.table.is-narrow th.is-icon.is-link>a{padding:2px}.table.is-narrow td.is-link,.table.is-narrow th.is-link{padding:0}.table.is-narrow td.is-link>a,.table.is-narrow th.is-link>a{padding:5px 10px}.table.is-striped tbody tr:nth-child(even){background-color:#fafafa}.table.is-striped tbody tr:nth-child(even):hover{background-color:#f5f5f5}.title,.subtitle{font-weight:300;word-break:break-word}.title:not(:last-child),.subtitle:not(:last-child){margin-bottom:20px}.title em,.title span,.subtitle em,.subtitle span{font-weight:300}.title a:hover,.subtitle a:hover{border-bottom:1px solid}.title strong,.subtitle strong{font-weight:500}.title .tag,.subtitle .tag{vertical-align:bottom}.title{color:#363636;font-size:28px;line-height:1}.title code{display:inline-block;font-size:28px}.title strong{color:inherit}.title+.highlight{margin-top:-10px}.title+.subtitle{margin-top:-10px}.title.is-1{font-size:48px}.title.is-1 code{font-size:40px}.title.is-2{font-size:40px}.title.is-2 code{font-size:28px}.title.is-3{font-size:28px}.title.is-3 code{font-size:24px}.title.is-4{font-size:24px}.title.is-4 code{font-size:18px}.title.is-5{font-size:18px}.title.is-5 code{font-size:14px}.title.is-6{font-size:14px}.title.is-6 code{font-size:14px}.title.is-normal{font-weight:400}.title.is-normal strong{font-weight:700}@media screen and (min-width: 769px){.title+.subtitle{margin-top:-15px}}.subtitle{color:#4a4a4a;font-size:18px;line-height:1.125}.subtitle code{border-radius:3px;display:inline-block;font-size:14px;padding:2px 3px;vertical-align:top}.subtitle strong{color:#363636}.subtitle+.title{margin-top:-20px}.subtitle.is-1{font-size:48px}.subtitle.is-1 code{font-size:40px}.subtitle.is-2{font-size:40px}.subtitle.is-2 code{font-size:28px}.subtitle.is-3{font-size:28px}.subtitle.is-3 code{font-size:24px}.subtitle.is-4{font-size:24px}.subtitle.is-4 code{font-size:18px}.subtitle.is-5{font-size:18px}.subtitle.is-5 code{font-size:14px}.subtitle.is-6{font-size:14px}.subtitle.is-6 code{font-size:14px}.subtitle.is-normal{font-weight:400}.subtitle.is-normal strong{font-weight:700}.block:not(:last-child){margin-bottom:20px}.container{position:relative}@media screen and (min-width: 980px){.container{margin:0 auto;max-width:960px}.container.is-fluid{margin:0 20px;max-width:none}}@media screen and (min-width: 1180px){.container{max-width:1200px}}.delete{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-moz-appearance:none;-webkit-appearance:none;background-color:rgba(10,10,10,0.1);border:none;border-radius:290486px;cursor:pointer;display:inline-block;height:24px;outline:none;position:relative;vertical-align:top;width:24px}.delete:before,.delete:after{background-color:#fff;content:"";display:block;height:2px;left:50%;margin-left:-25%;margin-top:-1px;position:absolute;top:50%;width:50%}.delete:before{transform:rotate(45deg)}.delete:after{transform:rotate(-45deg)}.delete:hover{background-color:rgba(10,10,10,0.2)}.delete.is-small{height:16px;width:16px}.delete.is-medium{height:32px;width:32px}.delete.is-large{height:40px;width:40px}.fa{font-size:21px;text-align:center;vertical-align:top}.icon{display:inline-block;font-size:21px;height:24px;line-height:24px;text-align:center;vertical-align:top;width:24px}.icon .fa{font-size:inherit;line-height:inherit}.icon.is-small{display:inline-block;font-size:14px;height:16px;line-height:16px;text-align:center;vertical-align:top;width:16px}.icon.is-medium{display:inline-block;font-size:28px;height:32px;line-height:32px;text-align:center;vertical-align:top;width:32px}.icon.is-large{display:inline-block;font-size:42px;height:48px;line-height:48px;text-align:center;vertical-align:top;width:48px}.heading{display:block;font-size:11px;letter-spacing:1px;margin-bottom:5px;text-transform:uppercase}.highlight{font-size:12px;font-weight:normal;max-width:100%;overflow:hidden;padding:0}.highlight:not(:last-child){margin-bottom:20px}.highlight pre{overflow:auto;max-width:100%}.loader{animation:spinAround 500ms infinite linear;border:2px solid #dbdbdb;border-radius:290486px;border-right-color:transparent;border-top-color:transparent;content:"";display:block;height:16px;position:relative;width:16px}.number{background-color:#f5f5f5;border-radius:290486px;display:inline-block;font-size:18px;vertical-align:top}.tag{align-items:center;background-color:#f5f5f5;border-radius:290486px;color:#4a4a4a;display:inline-flex;font-size:12px;height:24px;justify-content:center;line-height:16px;padding-left:10px;padding-right:10px;vertical-align:top;white-space:nowrap}.tag .delete{margin-left:4px;margin-right:-6px}.tag.is-white{background-color:#fff;color:#0a0a0a}.tag.is-black{background-color:#0a0a0a;color:#fff}.tag.is-light{background-color:#f5f5f5;color:#363636}.tag.is-dark{background-color:#363636;color:#f5f5f5}.tag.is-primary{background-color:#00d1b2;color:#fff}.tag.is-info{background-color:#3273dc;color:#fff}.tag.is-success{background-color:#23d160;color:#fff}.tag.is-warning{background-color:#ffdd57;color:rgba(0,0,0,0.7)}.tag.is-danger{background-color:#ff3860;color:#fff}.tag.is-small{font-size:11px;height:20px;padding-left:8px;padding-right:8px}.tag.is-medium{font-size:14px;height:32px;padding-left:14px;padding-right:14px}.tag.is-large{font-size:18px;height:40px;line-height:24px;padding-left:18px;padding-right:18px}.tag.is-large .delete{margin-left:4px;margin-right:-8px}.card-header{align-items:stretch;box-shadow:0 1px 2px rgba(10,10,10,0.1);display:flex;min-height:40px}.card-header-title{align-items:flex-start;color:#363636;display:flex;flex-grow:1;font-weight:bold;padding:10px}.card-header-icon{align-items:center;cursor:pointer;display:flex;justify-content:center;width:40px}.card-image{display:block;position:relative}.card-content{padding:20px}.card-content .title+.subtitle{margin-top:-20px}.card-footer{border-top:1px solid #dbdbdb;align-items:stretch;display:flex}.card-footer-item{align-items:center;display:flex;flex-grow:1;justify-content:center;padding:10px}.card-footer-item:not(:last-child){border-right:1px solid #dbdbdb}.card{background-color:#fff;box-shadow:0 2px 3px rgba(10,10,10,0.1),0 0 0 1px rgba(10,10,10,0.1);color:#4a4a4a;max-width:100%;position:relative;width:300px}.card .media:not(:last-child){margin-bottom:10px}.card.is-fullwidth{width:100%}.card.is-rounded{border-radius:5px}.highlight{background-color:#fdf6e3;color:#586e75}.highlight .c{color:#93a1a1}.highlight .err,.highlight .g{color:#586e75}.highlight .k{color:#859900}.highlight .l,.highlight .n{color:#586e75}.highlight .o{color:#859900}.highlight .x{color:#cb4b16}.highlight .p{color:#586e75}.highlight .cm{color:#93a1a1}.highlight .cp{color:#859900}.highlight .c1{color:#93a1a1}.highlight .cs{color:#859900}.highlight .gd{color:#2aa198}.highlight .ge{color:#586e75;font-style:italic}.highlight .gr{color:#dc322f}.highlight .gh{color:#cb4b16}.highlight .gi{color:#859900}.highlight .go,.highlight .gp{color:#586e75}.highlight .gs{color:#586e75;font-weight:bold}.highlight .gu{color:#cb4b16}.highlight .gt{color:#586e75}.highlight .kc{color:#cb4b16}.highlight .kd{color:#268bd2}.highlight .kn,.highlight .kp{color:#859900}.highlight .kr{color:#268bd2}.highlight .kt{color:#dc322f}.highlight .ld{color:#586e75}.highlight .m,.highlight .s{color:#2aa198}.highlight .na{color:#B58900}.highlight .nb{color:#586e75}.highlight .nc{color:#268bd2}.highlight .no{color:#cb4b16}.highlight .nd{color:#268bd2}.highlight .ni,.highlight .ne{color:#cb4b16}.highlight .nf{color:#268bd2}.highlight .nl,.highlight .nn,.highlight .nx,.highlight .py{color:#586e75}.highlight .nt,.highlight .nv{color:#268bd2}.highlight .ow{color:#859900}.highlight .w{color:#586e75}.highlight .mf,.highlight .mh,.highlight .mi,.highlight .mo{color:#2aa198}.highlight .sb{color:#93a1a1}.highlight .sc{color:#2aa198}.highlight .sd{color:#586e75}.highlight .s2{color:#2aa198}.highlight .se{color:#cb4b16}.highlight .sh{color:#586e75}.highlight .si,.highlight .sx{color:#2aa198}.highlight .sr{color:#dc322f}.highlight .s1,.highlight .ss{color:#2aa198}.highlight .bp,.highlight .vc,.highlight .vg,.highlight .vi{color:#268bd2}.highlight .il{color:#2aa198}.level-item .title,.level-item .subtitle{margin-bottom:0}@media screen and (max-width: 768px){.level-item:not(:last-child){margin-bottom:10px}}.level-left .level-item:not(:last-child),.level-right .level-item:not(:last-child){margin-right:10px}.level-left .level-item.is-flexible,.level-right .level-item.is-flexible{flex-grow:1}@media screen and (max-width: 768px){.level-left+.level-right{margin-top:20px}}@media screen and (min-width: 769px){.level-left{align-items:center;display:flex}}@media screen and (min-width: 769px){.level-right{align-items:center;display:flex;justify-content:flex-end}}.level{align-items:center;justify-content:space-between}.level:not(:last-child){margin-bottom:20px}.level code{border-radius:3px}.level img{display:inline-block;vertical-align:top}.level.is-mobile{display:flex}.level.is-mobile>.level-item:not(:last-child){margin-bottom:0}.level.is-mobile>.level-item:not(.is-narrow){flex-grow:1}@media screen and (min-width: 769px){.level{display:flex}.level>.level-item:not(.is-narrow){flex-grow:1}}.media-number,.media-left,.media-right{flex-grow:0;flex-shrink:0}.media-number{background-color:#f5f5f5;border-radius:290486px;display:inline-block;font-size:18px;height:32px;line-height:24px;margin-right:10px;min-width:32px;padding:4px 8px;text-align:center;vertical-align:top}.media-left{margin-right:10px}.media-right{margin-left:10px}.media-content{flex-grow:1;flex-shrink:1;text-align:left}.media{align-items:flex-start;display:flex;text-align:left}.media .content:not(:last-child){margin-bottom:10px}.media .media{border-top:1px solid rgba(219,219,219,0.5);display:flex;padding-top:10px}.media .media .content:not(:last-child),.media .media .control:not(:last-child){margin-bottom:5px}.media .media .media{padding-top:5px}.media .media .media+.media{margin-top:5px}.media+.media{border-top:1px solid rgba(219,219,219,0.5);margin-top:10px;padding-top:10px}.media.is-large+.media{margin-top:20px;padding-top:20px}@media screen and (min-width: 769px){.media.is-large .media-number{margin-right:20px}}.menu-nav a{display:block;padding:5px 10px}.menu-list a{border-radius:2px;color:#4a4a4a;display:block;padding:5px 10px}.menu-list a:hover{background-color:#f5f5f5;color:#4a8bfa}.menu-list a.is-active{background-color:#4a8bfa;color:#fff}.menu-list li ul{border-left:1px solid #dbdbdb;margin:10px;padding-left:10px}.menu-label{color:#7a7a7a;font-size:11px;letter-spacing:1px;margin-bottom:5px;text-transform:uppercase}.menu-label:not(:first-child){margin-top:20px}.message-body{border:1px solid #dbdbdb;border-radius:3px;padding:12px 15px}.message-body strong{color:inherit}.message-header{background-color:#4a4a4a;border-radius:3px 3px 0 0;color:#fff;padding:7px 10px}.message-header strong{color:inherit}.message-header+.message-body{border-radius:0 0 3px 3px;border-top:none}.message{background-color:#f5f5f5;border-radius:3px}.message:not(:last-child){margin-bottom:20px}.message.is-white{background-color:#fff}.message.is-white .message-header{background-color:#fff;color:#0a0a0a}.message.is-white .message-body{border-color:#fff;color:#666}.message.is-black{background-color:#f5f5f5}.message.is-black .message-header{background-color:#0a0a0a;color:#fff}.message.is-black .message-body{border-color:#0a0a0a;color:gray}.message.is-light{background-color:#f5f5f5}.message.is-light .message-header{background-color:#f5f5f5;color:#363636}.message.is-light .message-body{border-color:#f5f5f5;color:#666}.message.is-dark{background-color:#f5f5f5}.message.is-dark .message-header{background-color:#363636;color:#f5f5f5}.message.is-dark .message-body{border-color:#363636;color:gray}.message.is-primary{background-color:#ebfffc}.message.is-primary .message-header{background-color:#00d1b2;color:#fff}.message.is-primary .message-body{border-color:#00d1b2;color:gray}.message.is-info{background-color:#eef3fc}.message.is-info .message-header{background-color:#3273dc;color:#fff}.message.is-info .message-body{border-color:#3273dc;color:gray}.message.is-success{background-color:#eefcf3}.message.is-success .message-header{background-color:#23d160;color:#fff}.message.is-success .message-body{border-color:#23d160;color:gray}.message.is-warning{background-color:#fffbeb}.message.is-warning .message-header{background-color:#ffdd57;color:rgba(0,0,0,0.7)}.message.is-warning .message-body{border-color:#ffdd57;color:gray}.message.is-danger{background-color:#ffebef}.message.is-danger .message-header{background-color:#ff3860;color:#fff}.message.is-danger .message-body{border-color:#ff3860;color:gray}.modal-background{bottom:0;left:0;position:absolute;right:0;top:0;background-color:rgba(10,10,10,0.86)}.modal-content,.modal-card{margin:0 20px;max-height:calc(100vh - 160px);overflow:auto;position:relative;width:100%}@media screen and (min-width: 769px){.modal-content,.modal-card{margin:0 auto;max-height:calc(100vh - 40px);width:640px}}.modal-close{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-moz-appearance:none;-webkit-appearance:none;background-color:rgba(10,10,10,0.1);border:none;border-radius:290486px;cursor:pointer;display:inline-block;height:24px;outline:none;position:relative;vertical-align:top;width:24px;background:none;height:40px;position:fixed;right:20px;top:20px;width:40px}.modal-close:before,.modal-close:after{background-color:#fff;content:"";display:block;height:2px;left:50%;margin-left:-25%;margin-top:-1px;position:absolute;top:50%;width:50%}.modal-close:before{transform:rotate(45deg)}.modal-close:after{transform:rotate(-45deg)}.modal-close:hover{background-color:rgba(10,10,10,0.2)}.modal-close.is-small{height:16px;width:16px}.modal-close.is-medium{height:32px;width:32px}.modal-close.is-large{height:40px;width:40px}.modal-card{display:flex;flex-direction:column;max-height:calc(100vh - 40px);overflow:hidden}.modal-card-head,.modal-card-foot{align-items:center;background-color:#f5f5f5;display:flex;flex-shrink:0;justify-content:flex-start;padding:20px;position:relative}.modal-card-head{border-bottom:1px solid #dbdbdb;border-top-left-radius:5px;border-top-right-radius:5px}.modal-card-title{color:#363636;flex-grow:1;flex-shrink:0;font-size:24px;line-height:1}.modal-card-foot{border-bottom-left-radius:5px;border-bottom-right-radius:5px;border-top:1px solid #dbdbdb}.modal-card-foot .button:not(:last-child){margin-right:10px}.modal-card-body{background-color:#fff;flex-grow:1;flex-shrink:1;overflow:auto;padding:20px}.modal{bottom:0;left:0;position:absolute;right:0;top:0;align-items:center;display:none;justify-content:center;overflow:hidden;position:fixed;z-index:1986}.modal.is-active{display:flex}.nav-toggle{cursor:pointer;display:block;height:50px;position:relative;width:50px}.nav-toggle span{background-color:#4a4a4a;display:block;height:1px;left:50%;margin-left:-7px;position:absolute;top:50%;transition:none 86ms ease-out;transition-property:background, left, opacity, transform;width:15px}.nav-toggle span:nth-child(1){margin-top:-6px}.nav-toggle span:nth-child(2){margin-top:-1px}.nav-toggle span:nth-child(3){margin-top:4px}.nav-toggle:hover{background-color:#f5f5f5}.nav-toggle.is-active span{background-color:#4a8bfa}.nav-toggle.is-active span:nth-child(1){margin-left:-5px;transform:rotate(45deg);transform-origin:left top}.nav-toggle.is-active span:nth-child(2){opacity:0}.nav-toggle.is-active span:nth-child(3){margin-left:-5px;transform:rotate(-45deg);transform-origin:left bottom}@media screen and (min-width: 769px){.nav-toggle{display:none}}.nav-item{align-items:center;display:flex;flex-grow:0;flex-shrink:0;justify-content:center;padding:10px}.nav-item a{flex-grow:1;flex-shrink:0}.nav-item img{max-height:24px}.nav-item .button+.button{margin-left:10px}.nav-item .tag:first-child{margin-right:5px}.nav-item .tag:last-child{margin-left:5px}@media screen and (max-width: 768px){.nav-item{justify-content:flex-start}}.nav-item a,a.nav-item{color:#7a7a7a}.nav-item a:hover,a.nav-item:hover{color:#363636}.nav-item a.is-active,a.nav-item.is-active{color:#4a8bfa}.nav-item a.is-tab,a.nav-item.is-tab{border-bottom:1px solid transparent;border-top:1px solid transparent;padding-left:12px;padding-right:12px}.nav-item a.is-tab:hover,a.nav-item.is-tab:hover{border-bottom:1px solid #4a8bfa;border-top:1px solid transparent}.nav-item a.is-tab.is-active,a.nav-item.is-tab.is-active{border-bottom:3px solid #4a8bfa;border-top:3px solid transparent;color:#4a8bfa}@media screen and (max-width: 768px){.nav-menu{background-color:#fff;box-shadow:0 4px 7px rgba(10,10,10,0.1);left:0;display:none;right:0;top:100%;position:absolute}.nav-menu .nav-item{border-top:1px solid rgba(219,219,219,0.5);padding:10px}.nav-menu.is-active{display:block}}@media screen and (min-width: 769px) and (max-width: 979px){.nav-menu{padding-right:20px}}.nav-left{align-items:stretch;display:flex;flex-basis:0;flex-grow:1;flex-shrink:0;justify-content:flex-start;overflow:hidden;overflow-x:auto;white-space:nowrap}.nav-center{align-items:stretch;display:flex;justify-content:center;margin-left:auto;margin-right:auto}@media screen and (min-width: 769px){.nav-right{align-items:stretch;display:flex;flex-basis:0;flex-grow:1;flex-shrink:0;justify-content:flex-end}}.nav{align-items:stretch;background-color:#fff;display:flex;min-height:50px;position:relative;text-align:center;z-index:2}.nav>.container{align-items:stretch;display:flex;min-height:50px;width:100%}.nav>.container>.nav-left>.nav-item:first-child:not(.is-tab){padding-left:0}.nav>.container>.nav-right>.nav-item:last-child:not(.is-tab){padding-right:0}.container>.nav>.nav-left>.nav-item:first-child:not(.is-tab){padding-left:0}.container>.nav>.nav-right>.nav-item:last-child:not(.is-tab){padding-right:0}.nav.has-shadow{box-shadow:0 2px 3px rgba(10,10,10,0.1)}@media screen and (max-width: 979px){.nav>.container>.nav-left>.nav-item.is-brand:first-child,.container>.nav>.nav-left>.nav-item.is-brand:first-child{padding-left:20px}}.pagination{align-items:center;display:flex;justify-content:center;text-align:center}.pagination a{display:block;min-width:32px;padding:3px 8px}.pagination span{color:#7a7a7a;display:block;margin:0 4px}.pagination li{margin:0 2px}.pagination ul{align-items:center;display:flex;flex-grow:1;flex-shrink:0;justify-content:center}@media screen and (max-width: 768px){.pagination{flex-wrap:wrap}.pagination>a{width:calc(50% - 5px)}.pagination>a:not(:first-child){margin-left:10px}.pagination li{flex-grow:1;flex-shrink:0}.pagination ul{margin-top:10px}}@media screen and (min-width: 769px){.pagination>a:not(:first-child){order:1}}.panel-icon{display:inline-block;font-size:14px;height:16px;line-height:16px;text-align:center;vertical-align:top;width:16px;color:#7a7a7a;float:left;margin:0 4px 0 -2px}.panel-icon .fa{font-size:inherit;line-height:inherit}.panel-heading{background-color:#f5f5f5;border-bottom:1px solid #dbdbdb;border-radius:4px 4px 0 0;color:#363636;font-size:18px;font-weight:300;padding:10px}.panel-list a{color:#4a4a4a}.panel-list a:hover{color:#4a8bfa}.panel-tabs{display:flex;font-size:11px;padding:5px 10px 0;justify-content:center}.panel-tabs a{border-bottom:1px solid #dbdbdb;margin-bottom:-1px;padding:5px}.panel-tabs a.is-active{border-bottom-color:#363636;color:#4a8bfa}.panel-tabs:not(:last-child){border-bottom:1px solid #dbdbdb}.panel-block{color:#363636;display:block;line-height:16px;padding:10px}.panel-block:not(:last-child){border-bottom:1px solid #dbdbdb}a.panel-block:hover{background-color:#f5f5f5}.panel{border:1px solid #dbdbdb;border-radius:5px}.panel:not(:last-child){margin-bottom:20px}.tabs{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;align-items:stretch;display:flex;justify-content:space-between;line-height:24px;overflow:hidden;overflow-x:auto;white-space:nowrap}.tabs:not(:last-child){margin-bottom:20px}.tabs a{align-items:center;border-bottom:1px solid #dbdbdb;color:#4a4a4a;display:flex;justify-content:center;margin-bottom:-1px;padding:6px 12px;vertical-align:top}.tabs a:hover{border-bottom-color:#363636;color:#363636}.tabs li{display:block}.tabs li.is-active a{border-bottom-color:#4a8bfa;color:#4a8bfa}.tabs ul{align-items:center;border-bottom:1px solid #dbdbdb;display:flex;flex-grow:1;flex-shrink:0;justify-content:flex-start}.tabs ul.is-left{padding-right:10px}.tabs ul.is-center{flex:none;justify-content:center;padding-left:10px;padding-right:10px}.tabs ul.is-right{justify-content:flex-end;padding-left:10px}.tabs .icon:first-child{margin-right:8px}.tabs .icon:last-child{margin-left:8px}.tabs.is-centered ul{justify-content:center}.tabs.is-right ul{justify-content:flex-end}.tabs.is-boxed a{border:1px solid transparent;border-radius:3px 3px 0 0;padding-bottom:5px;padding-top:5px}.tabs.is-boxed a:hover{background-color:#f5f5f5;border-bottom-color:#dbdbdb}.tabs.is-boxed li.is-active a{background-color:#fff;border-color:#dbdbdb;border-bottom-color:transparent !important}.tabs.is-fullwidth li{flex-grow:1;flex-shrink:0}.tabs.is-toggle a{border:1px solid #dbdbdb;margin-bottom:0;padding-bottom:5px;padding-top:5px;position:relative}.tabs.is-toggle a:hover{background-color:#f5f5f5;border-color:#b5b5b5;z-index:2}.tabs.is-toggle li+li{margin-left:-1px}.tabs.is-toggle li:first-child a{border-radius:3px 0 0 3px}.tabs.is-toggle li:last-child a{border-radius:0 3px 3px 0}.tabs.is-toggle li.is-active a{background-color:#00d1b2;border-color:#00d1b2;color:#fff;z-index:1}.tabs.is-toggle ul{border-bottom:none}.tabs.is-small{font-size:11px}.tabs.is-small a{padding:2px 8px}.tabs.is-small.is-boxed a,.tabs.is-small.is-toggle a{padding-bottom:1px;padding-top:1px}.tabs.is-medium{font-size:18px}.tabs.is-medium a{padding:10px 16px}.tabs.is-medium.is-boxed a,.tabs.is-medium.is-toggle a{padding-bottom:9px;padding-top:9px}.tabs.is-large{font-size:28px}.tabs.is-large a{padding:14px 20px}.tabs.is-large.is-boxed a,.tabs.is-large.is-toggle a{padding-bottom:13px;padding-top:13px}.column{display:block;flex-basis:0;flex-grow:1;flex-shrink:1;padding:10px}.columns.is-mobile>.column.is-narrow{flex:none}.columns.is-mobile>.column.is-full{flex:none;width:100%}.columns.is-mobile>.column.is-three-quarters{flex:none;width:75%}.columns.is-mobile>.column.is-two-thirds{flex:none;width:66.6666%}.columns.is-mobile>.column.is-half{flex:none;width:50%}.columns.is-mobile>.column.is-one-third{flex:none;width:33.3333%}.columns.is-mobile>.column.is-one-quarter{flex:none;width:25%}.columns.is-mobile>.column.is-offset-three-quarters{margin-left:75%}.columns.is-mobile>.column.is-offset-two-thirds{margin-left:66.6666%}.columns.is-mobile>.column.is-offset-half{margin-left:50%}.columns.is-mobile>.column.is-offset-one-third{margin-left:33.3333%}.columns.is-mobile>.column.is-offset-one-quarter{margin-left:25%}.columns.is-mobile>.column.is-1{flex:none;width:8.33333%}.columns.is-mobile>.column.is-offset-1{margin-left:8.33333%}.columns.is-mobile>.column.is-2{flex:none;width:16.66667%}.columns.is-mobile>.column.is-offset-2{margin-left:16.66667%}.columns.is-mobile>.column.is-3{flex:none;width:25%}.columns.is-mobile>.column.is-offset-3{margin-left:25%}.columns.is-mobile>.column.is-4{flex:none;width:33.33333%}.columns.is-mobile>.column.is-offset-4{margin-left:33.33333%}.columns.is-mobile>.column.is-5{flex:none;width:41.66667%}.columns.is-mobile>.column.is-offset-5{margin-left:41.66667%}.columns.is-mobile>.column.is-6{flex:none;width:50%}.columns.is-mobile>.column.is-offset-6{margin-left:50%}.columns.is-mobile>.column.is-7{flex:none;width:58.33333%}.columns.is-mobile>.column.is-offset-7{margin-left:58.33333%}.columns.is-mobile>.column.is-8{flex:none;width:66.66667%}.columns.is-mobile>.column.is-offset-8{margin-left:66.66667%}.columns.is-mobile>.column.is-9{flex:none;width:75%}.columns.is-mobile>.column.is-offset-9{margin-left:75%}.columns.is-mobile>.column.is-10{flex:none;width:83.33333%}.columns.is-mobile>.column.is-offset-10{margin-left:83.33333%}.columns.is-mobile>.column.is-11{flex:none;width:91.66667%}.columns.is-mobile>.column.is-offset-11{margin-left:91.66667%}.columns.is-mobile>.column.is-12{flex:none;width:100%}.columns.is-mobile>.column.is-offset-12{margin-left:100%}@media screen and (max-width: 768px){.column.is-narrow-mobile{flex:none}.column.is-full-mobile{flex:none;width:100%}.column.is-three-quarters-mobile{flex:none;width:75%}.column.is-two-thirds-mobile{flex:none;width:66.6666%}.column.is-half-mobile{flex:none;width:50%}.column.is-one-third-mobile{flex:none;width:33.3333%}.column.is-one-quarter-mobile{flex:none;width:25%}.column.is-offset-three-quarters-mobile{margin-left:75%}.column.is-offset-two-thirds-mobile{margin-left:66.6666%}.column.is-offset-half-mobile{margin-left:50%}.column.is-offset-one-third-mobile{margin-left:33.3333%}.column.is-offset-one-quarter-mobile{margin-left:25%}.column.is-1-mobile{flex:none;width:8.33333%}.column.is-offset-1-mobile{margin-left:8.33333%}.column.is-2-mobile{flex:none;width:16.66667%}.column.is-offset-2-mobile{margin-left:16.66667%}.column.is-3-mobile{flex:none;width:25%}.column.is-offset-3-mobile{margin-left:25%}.column.is-4-mobile{flex:none;width:33.33333%}.column.is-offset-4-mobile{margin-left:33.33333%}.column.is-5-mobile{flex:none;width:41.66667%}.column.is-offset-5-mobile{margin-left:41.66667%}.column.is-6-mobile{flex:none;width:50%}.column.is-offset-6-mobile{margin-left:50%}.column.is-7-mobile{flex:none;width:58.33333%}.column.is-offset-7-mobile{margin-left:58.33333%}.column.is-8-mobile{flex:none;width:66.66667%}.column.is-offset-8-mobile{margin-left:66.66667%}.column.is-9-mobile{flex:none;width:75%}.column.is-offset-9-mobile{margin-left:75%}.column.is-10-mobile{flex:none;width:83.33333%}.column.is-offset-10-mobile{margin-left:83.33333%}.column.is-11-mobile{flex:none;width:91.66667%}.column.is-offset-11-mobile{margin-left:91.66667%}.column.is-12-mobile{flex:none;width:100%}.column.is-offset-12-mobile{margin-left:100%}}@media screen and (min-width: 769px){.column.is-narrow,.column.is-narrow-tablet{flex:none}.column.is-full,.column.is-full-tablet{flex:none;width:100%}.column.is-three-quarters,.column.is-three-quarters-tablet{flex:none;width:75%}.column.is-two-thirds,.column.is-two-thirds-tablet{flex:none;width:66.6666%}.column.is-half,.column.is-half-tablet{flex:none;width:50%}.column.is-one-third,.column.is-one-third-tablet{flex:none;width:33.3333%}.column.is-one-quarter,.column.is-one-quarter-tablet{flex:none;width:25%}.column.is-offset-three-quarters,.column.is-offset-three-quarters-tablet{margin-left:75%}.column.is-offset-two-thirds,.column.is-offset-two-thirds-tablet{margin-left:66.6666%}.column.is-offset-half,.column.is-offset-half-tablet{margin-left:50%}.column.is-offset-one-third,.column.is-offset-one-third-tablet{margin-left:33.3333%}.column.is-offset-one-quarter,.column.is-offset-one-quarter-tablet{margin-left:25%}.column.is-1,.column.is-1-tablet{flex:none;width:8.33333%}.column.is-offset-1,.column.is-offset-1-tablet{margin-left:8.33333%}.column.is-2,.column.is-2-tablet{flex:none;width:16.66667%}.column.is-offset-2,.column.is-offset-2-tablet{margin-left:16.66667%}.column.is-3,.column.is-3-tablet{flex:none;width:25%}.column.is-offset-3,.column.is-offset-3-tablet{margin-left:25%}.column.is-4,.column.is-4-tablet{flex:none;width:33.33333%}.column.is-offset-4,.column.is-offset-4-tablet{margin-left:33.33333%}.column.is-5,.column.is-5-tablet{flex:none;width:41.66667%}.column.is-offset-5,.column.is-offset-5-tablet{margin-left:41.66667%}.column.is-6,.column.is-6-tablet{flex:none;width:50%}.column.is-offset-6,.column.is-offset-6-tablet{margin-left:50%}.column.is-7,.column.is-7-tablet{flex:none;width:58.33333%}.column.is-offset-7,.column.is-offset-7-tablet{margin-left:58.33333%}.column.is-8,.column.is-8-tablet{flex:none;width:66.66667%}.column.is-offset-8,.column.is-offset-8-tablet{margin-left:66.66667%}.column.is-9,.column.is-9-tablet{flex:none;width:75%}.column.is-offset-9,.column.is-offset-9-tablet{margin-left:75%}.column.is-10,.column.is-10-tablet{flex:none;width:83.33333%}.column.is-offset-10,.column.is-offset-10-tablet{margin-left:83.33333%}.column.is-11,.column.is-11-tablet{flex:none;width:91.66667%}.column.is-offset-11,.column.is-offset-11-tablet{margin-left:91.66667%}.column.is-12,.column.is-12-tablet{flex:none;width:100%}.column.is-offset-12,.column.is-offset-12-tablet{margin-left:100%}}@media screen and (min-width: 980px){.column.is-narrow-desktop{flex:none}.column.is-full-desktop{flex:none;width:100%}.column.is-three-quarters-desktop{flex:none;width:75%}.column.is-two-thirds-desktop{flex:none;width:66.6666%}.column.is-half-desktop{flex:none;width:50%}.column.is-one-third-desktop{flex:none;width:33.3333%}.column.is-one-quarter-desktop{flex:none;width:25%}.column.is-offset-three-quarters-desktop{margin-left:75%}.column.is-offset-two-thirds-desktop{margin-left:66.6666%}.column.is-offset-half-desktop{margin-left:50%}.column.is-offset-one-third-desktop{margin-left:33.3333%}.column.is-offset-one-quarter-desktop{margin-left:25%}.column.is-1-desktop{flex:none;width:8.33333%}.column.is-offset-1-desktop{margin-left:8.33333%}.column.is-2-desktop{flex:none;width:16.66667%}.column.is-offset-2-desktop{margin-left:16.66667%}.column.is-3-desktop{flex:none;width:25%}.column.is-offset-3-desktop{margin-left:25%}.column.is-4-desktop{flex:none;width:33.33333%}.column.is-offset-4-desktop{margin-left:33.33333%}.column.is-5-desktop{flex:none;width:41.66667%}.column.is-offset-5-desktop{margin-left:41.66667%}.column.is-6-desktop{flex:none;width:50%}.column.is-offset-6-desktop{margin-left:50%}.column.is-7-desktop{flex:none;width:58.33333%}.column.is-offset-7-desktop{margin-left:58.33333%}.column.is-8-desktop{flex:none;width:66.66667%}.column.is-offset-8-desktop{margin-left:66.66667%}.column.is-9-desktop{flex:none;width:75%}.column.is-offset-9-desktop{margin-left:75%}.column.is-10-desktop{flex:none;width:83.33333%}.column.is-offset-10-desktop{margin-left:83.33333%}.column.is-11-desktop{flex:none;width:91.66667%}.column.is-offset-11-desktop{margin-left:91.66667%}.column.is-12-desktop{flex:none;width:100%}.column.is-offset-12-desktop{margin-left:100%}}@media screen and (min-width: 1180px){.column.is-narrow-widescreen{flex:none}.column.is-full-widescreen{flex:none;width:100%}.column.is-three-quarters-widescreen{flex:none;width:75%}.column.is-two-thirds-widescreen{flex:none;width:66.6666%}.column.is-half-widescreen{flex:none;width:50%}.column.is-one-third-widescreen{flex:none;width:33.3333%}.column.is-one-quarter-widescreen{flex:none;width:25%}.column.is-offset-three-quarters-widescreen{margin-left:75%}.column.is-offset-two-thirds-widescreen{margin-left:66.6666%}.column.is-offset-half-widescreen{margin-left:50%}.column.is-offset-one-third-widescreen{margin-left:33.3333%}.column.is-offset-one-quarter-widescreen{margin-left:25%}.column.is-1-widescreen{flex:none;width:8.33333%}.column.is-offset-1-widescreen{margin-left:8.33333%}.column.is-2-widescreen{flex:none;width:16.66667%}.column.is-offset-2-widescreen{margin-left:16.66667%}.column.is-3-widescreen{flex:none;width:25%}.column.is-offset-3-widescreen{margin-left:25%}.column.is-4-widescreen{flex:none;width:33.33333%}.column.is-offset-4-widescreen{margin-left:33.33333%}.column.is-5-widescreen{flex:none;width:41.66667%}.column.is-offset-5-widescreen{margin-left:41.66667%}.column.is-6-widescreen{flex:none;width:50%}.column.is-offset-6-widescreen{margin-left:50%}.column.is-7-widescreen{flex:none;width:58.33333%}.column.is-offset-7-widescreen{margin-left:58.33333%}.column.is-8-widescreen{flex:none;width:66.66667%}.column.is-offset-8-widescreen{margin-left:66.66667%}.column.is-9-widescreen{flex:none;width:75%}.column.is-offset-9-widescreen{margin-left:75%}.column.is-10-widescreen{flex:none;width:83.33333%}.column.is-offset-10-widescreen{margin-left:83.33333%}.column.is-11-widescreen{flex:none;width:91.66667%}.column.is-offset-11-widescreen{margin-left:91.66667%}.column.is-12-widescreen{flex:none;width:100%}.column.is-offset-12-widescreen{margin-left:100%}}.columns{margin-left:-10px;margin-right:-10px;margin-top:-10px}.columns:last-child{margin-bottom:-10px}.columns:not(:last-child){margin-bottom:10px}.columns.is-centered{justify-content:center}.columns.is-gapless{margin-left:0;margin-right:0;margin-top:0}.columns.is-gapless:last-child{margin-bottom:0}.columns.is-gapless:not(:last-child){margin-bottom:20px}.columns.is-gapless>.column{margin:0;padding:0}@media screen and (min-width: 769px){.columns.is-grid{flex-wrap:wrap}.columns.is-grid>.column{max-width:33.3333%;padding:10px;width:33.3333%}.columns.is-grid>.column+.column{margin-left:0}}.columns.is-mobile{display:flex}.columns.is-multiline{flex-wrap:wrap}.columns.is-vcentered{align-items:center}@media screen and (min-width: 769px){.columns:not(.is-desktop){display:flex}}@media screen and (min-width: 980px){.columns.is-desktop{display:flex}}.tile{align-items:stretch;display:block;flex-basis:auto;flex-grow:1;flex-shrink:1;min-height:min-content}.tile.is-ancestor{margin-left:-10px;margin-right:-10px;margin-top:-10px}.tile.is-ancestor:last-child{margin-bottom:-10px}.tile.is-ancestor:not(:last-child){margin-bottom:10px}.tile.is-child{margin:0 !important}.tile.is-parent{padding:10px}.tile.is-vertical{flex-direction:column}.tile.is-vertical>.tile.is-child:not(:last-child){margin-bottom:20px !important}@media screen and (min-width: 769px){.tile:not(.is-child){display:flex}.tile.is-1{flex:none;width:8.33333%}.tile.is-2{flex:none;width:16.66667%}.tile.is-3{flex:none;width:25%}.tile.is-4{flex:none;width:33.33333%}.tile.is-5{flex:none;width:41.66667%}.tile.is-6{flex:none;width:50%}.tile.is-7{flex:none;width:58.33333%}.tile.is-8{flex:none;width:66.66667%}.tile.is-9{flex:none;width:75%}.tile.is-10{flex:none;width:83.33333%}.tile.is-11{flex:none;width:91.66667%}.tile.is-12{flex:none;width:100%}}.hero-video{bottom:0;left:0;position:absolute;right:0;top:0;overflow:hidden}.hero-video video{left:50%;min-height:100%;min-width:100%;position:absolute;top:50%;transform:translate3d(-50%, -50%, 0)}.hero-video.is-transparent{opacity:0.3}@media screen and (max-width: 768px){.hero-video{display:none}}.hero-buttons{margin-top:20px}@media screen and (max-width: 768px){.hero-buttons .button{display:flex}.hero-buttons .button:not(:last-child){margin-bottom:10px}}@media screen and (min-width: 769px){.hero-buttons{display:flex;justify-content:center}.hero-buttons .button:not(:last-child){margin-right:20px}}.hero-head,.hero-foot{flex-shrink:0}.hero-body{flex-grow:1;flex-shrink:0;padding:40px 20px}@media screen and (min-width: 1240px){.hero-body{padding-left:0;padding-right:0}}.hero{align-items:stretch;background-color:#fff;display:flex;flex-direction:column;justify-content:space-between}.hero .nav{background:none;box-shadow:0 1px 0 rgba(219,219,219,0.3)}.hero .tabs ul{border-bottom:none}.hero.is-white{background-color:#fff;color:#0a0a0a}.hero.is-white .title{color:#0a0a0a}.hero.is-white .title a,.hero.is-white .title strong{color:inherit}.hero.is-white .subtitle{color:rgba(10,10,10,0.9)}.hero.is-white .subtitle a,.hero.is-white .subtitle strong{color:#0a0a0a}.hero.is-white .nav{box-shadow:0 1px 0 rgba(10,10,10,0.2)}@media screen and (max-width: 768px){.hero.is-white .nav-menu{background-color:#fff}}.hero.is-white a.nav-item,.hero.is-white .nav-item a:not(.button){color:rgba(10,10,10,0.7)}.hero.is-white a.nav-item:hover,.hero.is-white a.nav-item.is-active,.hero.is-white .nav-item a:not(.button):hover,.hero.is-white .nav-item a:not(.button).is-active{color:#0a0a0a}.hero.is-white .tabs a{color:#0a0a0a;opacity:0.9}.hero.is-white .tabs a:hover{opacity:1}.hero.is-white .tabs li.is-active a{opacity:1}.hero.is-white .tabs.is-boxed a,.hero.is-white .tabs.is-toggle a{color:#0a0a0a}.hero.is-white .tabs.is-boxed a:hover,.hero.is-white .tabs.is-toggle a:hover{background-color:rgba(10,10,10,0.1)}.hero.is-white .tabs.is-boxed li.is-active a,.hero.is-white .tabs.is-boxed li.is-active a:hover,.hero.is-white .tabs.is-toggle li.is-active a,.hero.is-white .tabs.is-toggle li.is-active a:hover{background-color:#0a0a0a;border-color:#0a0a0a;color:#fff}.hero.is-white.is-bold{background-image:linear-gradient(141deg, #e6e6e6 0%, #fff 71%, #fff 100%)}@media screen and (max-width: 768px){.hero.is-white .nav-toggle span{background-color:#0a0a0a}.hero.is-white .nav-toggle:hover{background-color:rgba(10,10,10,0.1)}.hero.is-white .nav-toggle.is-active span{background-color:#0a0a0a}.hero.is-white .nav-menu .nav-item{border-top-color:rgba(10,10,10,0.2)}}.hero.is-black{background-color:#0a0a0a;color:#fff}.hero.is-black .title{color:#fff}.hero.is-black .title a,.hero.is-black .title strong{color:inherit}.hero.is-black .subtitle{color:rgba(255,255,255,0.9)}.hero.is-black .subtitle a,.hero.is-black .subtitle strong{color:#fff}.hero.is-black .nav{box-shadow:0 1px 0 rgba(255,255,255,0.2)}@media screen and (max-width: 768px){.hero.is-black .nav-menu{background-color:#0a0a0a}}.hero.is-black a.nav-item,.hero.is-black .nav-item a:not(.button){color:rgba(255,255,255,0.7)}.hero.is-black a.nav-item:hover,.hero.is-black a.nav-item.is-active,.hero.is-black .nav-item a:not(.button):hover,.hero.is-black .nav-item a:not(.button).is-active{color:#fff}.hero.is-black .tabs a{color:#fff;opacity:0.9}.hero.is-black .tabs a:hover{opacity:1}.hero.is-black .tabs li.is-active a{opacity:1}.hero.is-black .tabs.is-boxed a,.hero.is-black .tabs.is-toggle a{color:#fff}.hero.is-black .tabs.is-boxed a:hover,.hero.is-black .tabs.is-toggle a:hover{background-color:rgba(10,10,10,0.1)}.hero.is-black .tabs.is-boxed li.is-active a,.hero.is-black .tabs.is-boxed li.is-active a:hover,.hero.is-black .tabs.is-toggle li.is-active a,.hero.is-black .tabs.is-toggle li.is-active a:hover{background-color:#fff;border-color:#fff;color:#0a0a0a}.hero.is-black.is-bold{background-image:linear-gradient(141deg, #000 0%, #0a0a0a 71%, #181616 100%)}@media screen and (max-width: 768px){.hero.is-black .nav-toggle span{background-color:#fff}.hero.is-black .nav-toggle:hover{background-color:rgba(10,10,10,0.1)}.hero.is-black .nav-toggle.is-active span{background-color:#fff}.hero.is-black .nav-menu .nav-item{border-top-color:rgba(255,255,255,0.2)}}.hero.is-light{background-color:#f5f5f5;color:#363636}.hero.is-light .title{color:#363636}.hero.is-light .title a,.hero.is-light .title strong{color:inherit}.hero.is-light .subtitle{color:rgba(54,54,54,0.9)}.hero.is-light .subtitle a,.hero.is-light .subtitle strong{color:#363636}.hero.is-light .nav{box-shadow:0 1px 0 rgba(54,54,54,0.2)}@media screen and (max-width: 768px){.hero.is-light .nav-menu{background-color:#f5f5f5}}.hero.is-light a.nav-item,.hero.is-light .nav-item a:not(.button){color:rgba(54,54,54,0.7)}.hero.is-light a.nav-item:hover,.hero.is-light a.nav-item.is-active,.hero.is-light .nav-item a:not(.button):hover,.hero.is-light .nav-item a:not(.button).is-active{color:#363636}.hero.is-light .tabs a{color:#363636;opacity:0.9}.hero.is-light .tabs a:hover{opacity:1}.hero.is-light .tabs li.is-active a{opacity:1}.hero.is-light .tabs.is-boxed a,.hero.is-light .tabs.is-toggle a{color:#363636}.hero.is-light .tabs.is-boxed a:hover,.hero.is-light .tabs.is-toggle a:hover{background-color:rgba(10,10,10,0.1)}.hero.is-light .tabs.is-boxed li.is-active a,.hero.is-light .tabs.is-boxed li.is-active a:hover,.hero.is-light .tabs.is-toggle li.is-active a,.hero.is-light .tabs.is-toggle li.is-active a:hover{background-color:#363636;border-color:#363636;color:#f5f5f5}.hero.is-light.is-bold{background-image:linear-gradient(141deg, #dfd8d9 0%, #f5f5f5 71%, #fff 100%)}@media screen and (max-width: 768px){.hero.is-light .nav-toggle span{background-color:#363636}.hero.is-light .nav-toggle:hover{background-color:rgba(10,10,10,0.1)}.hero.is-light .nav-toggle.is-active span{background-color:#363636}.hero.is-light .nav-menu .nav-item{border-top-color:rgba(54,54,54,0.2)}}.hero.is-dark{background-color:#363636;color:#f5f5f5}.hero.is-dark .title{color:#f5f5f5}.hero.is-dark .title a,.hero.is-dark .title strong{color:inherit}.hero.is-dark .subtitle{color:rgba(245,245,245,0.9)}.hero.is-dark .subtitle a,.hero.is-dark .subtitle strong{color:#f5f5f5}.hero.is-dark .nav{box-shadow:0 1px 0 rgba(245,245,245,0.2)}@media screen and (max-width: 768px){.hero.is-dark .nav-menu{background-color:#363636}}.hero.is-dark a.nav-item,.hero.is-dark .nav-item a:not(.button){color:rgba(245,245,245,0.7)}.hero.is-dark a.nav-item:hover,.hero.is-dark a.nav-item.is-active,.hero.is-dark .nav-item a:not(.button):hover,.hero.is-dark .nav-item a:not(.button).is-active{color:#f5f5f5}.hero.is-dark .tabs a{color:#f5f5f5;opacity:0.9}.hero.is-dark .tabs a:hover{opacity:1}.hero.is-dark .tabs li.is-active a{opacity:1}.hero.is-dark .tabs.is-boxed a,.hero.is-dark .tabs.is-toggle a{color:#f5f5f5}.hero.is-dark .tabs.is-boxed a:hover,.hero.is-dark .tabs.is-toggle a:hover{background-color:rgba(10,10,10,0.1)}.hero.is-dark .tabs.is-boxed li.is-active a,.hero.is-dark .tabs.is-boxed li.is-active a:hover,.hero.is-dark .tabs.is-toggle li.is-active a,.hero.is-dark .tabs.is-toggle li.is-active a:hover{background-color:#f5f5f5;border-color:#f5f5f5;color:#363636}.hero.is-dark.is-bold{background-image:linear-gradient(141deg, #1f191a 0%, #363636 71%, #46403f 100%)}@media screen and (max-width: 768px){.hero.is-dark .nav-toggle span{background-color:#f5f5f5}.hero.is-dark .nav-toggle:hover{background-color:rgba(10,10,10,0.1)}.hero.is-dark .nav-toggle.is-active span{background-color:#f5f5f5}.hero.is-dark .nav-menu .nav-item{border-top-color:rgba(245,245,245,0.2)}}.hero.is-primary{background-color:#00d1b2;color:#fff}.hero.is-primary .title{color:#fff}.hero.is-primary .title a,.hero.is-primary .title strong{color:inherit}.hero.is-primary .subtitle{color:rgba(255,255,255,0.9)}.hero.is-primary .subtitle a,.hero.is-primary .subtitle strong{color:#fff}.hero.is-primary .nav{box-shadow:0 1px 0 rgba(255,255,255,0.2)}@media screen and (max-width: 768px){.hero.is-primary .nav-menu{background-color:#00d1b2}}.hero.is-primary a.nav-item,.hero.is-primary .nav-item a:not(.button){color:rgba(255,255,255,0.7)}.hero.is-primary a.nav-item:hover,.hero.is-primary a.nav-item.is-active,.hero.is-primary .nav-item a:not(.button):hover,.hero.is-primary .nav-item a:not(.button).is-active{color:#fff}.hero.is-primary .tabs a{color:#fff;opacity:0.9}.hero.is-primary .tabs a:hover{opacity:1}.hero.is-primary .tabs li.is-active a{opacity:1}.hero.is-primary .tabs.is-boxed a,.hero.is-primary .tabs.is-toggle a{color:#fff}.hero.is-primary .tabs.is-boxed a:hover,.hero.is-primary .tabs.is-toggle a:hover{background-color:rgba(10,10,10,0.1)}.hero.is-primary .tabs.is-boxed li.is-active a,.hero.is-primary .tabs.is-boxed li.is-active a:hover,.hero.is-primary .tabs.is-toggle li.is-active a,.hero.is-primary .tabs.is-toggle li.is-active a:hover{background-color:#fff;border-color:#fff;color:#00d1b2}.hero.is-primary.is-bold{background-image:linear-gradient(141deg, #009e6c 0%, #00d1b2 71%, #00e7eb 100%)}@media screen and (max-width: 768px){.hero.is-primary .nav-toggle span{background-color:#fff}.hero.is-primary .nav-toggle:hover{background-color:rgba(10,10,10,0.1)}.hero.is-primary .nav-toggle.is-active span{background-color:#fff}.hero.is-primary .nav-menu .nav-item{border-top-color:rgba(255,255,255,0.2)}}.hero.is-info{background-color:#3273dc;color:#fff}.hero.is-info .title{color:#fff}.hero.is-info .title a,.hero.is-info .title strong{color:inherit}.hero.is-info .subtitle{color:rgba(255,255,255,0.9)}.hero.is-info .subtitle a,.hero.is-info .subtitle strong{color:#fff}.hero.is-info .nav{box-shadow:0 1px 0 rgba(255,255,255,0.2)}@media screen and (max-width: 768px){.hero.is-info .nav-menu{background-color:#3273dc}}.hero.is-info a.nav-item,.hero.is-info .nav-item a:not(.button){color:rgba(255,255,255,0.7)}.hero.is-info a.nav-item:hover,.hero.is-info a.nav-item.is-active,.hero.is-info .nav-item a:not(.button):hover,.hero.is-info .nav-item a:not(.button).is-active{color:#fff}.hero.is-info .tabs a{color:#fff;opacity:0.9}.hero.is-info .tabs a:hover{opacity:1}.hero.is-info .tabs li.is-active a{opacity:1}.hero.is-info .tabs.is-boxed a,.hero.is-info .tabs.is-toggle a{color:#fff}.hero.is-info .tabs.is-boxed a:hover,.hero.is-info .tabs.is-toggle a:hover{background-color:rgba(10,10,10,0.1)}.hero.is-info .tabs.is-boxed li.is-active a,.hero.is-info .tabs.is-boxed li.is-active a:hover,.hero.is-info .tabs.is-toggle li.is-active a,.hero.is-info .tabs.is-toggle li.is-active a:hover{background-color:#fff;border-color:#fff;color:#3273dc}.hero.is-info.is-bold{background-image:linear-gradient(141deg, #1577c6 0%, #3273dc 71%, #4366e5 100%)}@media screen and (max-width: 768px){.hero.is-info .nav-toggle span{background-color:#fff}.hero.is-info .nav-toggle:hover{background-color:rgba(10,10,10,0.1)}.hero.is-info .nav-toggle.is-active span{background-color:#fff}.hero.is-info .nav-menu .nav-item{border-top-color:rgba(255,255,255,0.2)}}.hero.is-success{background-color:#23d160;color:#fff}.hero.is-success .title{color:#fff}.hero.is-success .title a,.hero.is-success .title strong{color:inherit}.hero.is-success .subtitle{color:rgba(255,255,255,0.9)}.hero.is-success .subtitle a,.hero.is-success .subtitle strong{color:#fff}.hero.is-success .nav{box-shadow:0 1px 0 rgba(255,255,255,0.2)}@media screen and (max-width: 768px){.hero.is-success .nav-menu{background-color:#23d160}}.hero.is-success a.nav-item,.hero.is-success .nav-item a:not(.button){color:rgba(255,255,255,0.7)}.hero.is-success a.nav-item:hover,.hero.is-success a.nav-item.is-active,.hero.is-success .nav-item a:not(.button):hover,.hero.is-success .nav-item a:not(.button).is-active{color:#fff}.hero.is-success .tabs a{color:#fff;opacity:0.9}.hero.is-success .tabs a:hover{opacity:1}.hero.is-success .tabs li.is-active a{opacity:1}.hero.is-success .tabs.is-boxed a,.hero.is-success .tabs.is-toggle a{color:#fff}.hero.is-success .tabs.is-boxed a:hover,.hero.is-success .tabs.is-toggle a:hover{background-color:rgba(10,10,10,0.1)}.hero.is-success .tabs.is-boxed li.is-active a,.hero.is-success .tabs.is-boxed li.is-active a:hover,.hero.is-success .tabs.is-toggle li.is-active a,.hero.is-success .tabs.is-toggle li.is-active a:hover{background-color:#fff;border-color:#fff;color:#23d160}.hero.is-success.is-bold{background-image:linear-gradient(141deg, #12af2f 0%, #23d160 71%, #2ce28a 100%)}@media screen and (max-width: 768px){.hero.is-success .nav-toggle span{background-color:#fff}.hero.is-success .nav-toggle:hover{background-color:rgba(10,10,10,0.1)}.hero.is-success .nav-toggle.is-active span{background-color:#fff}.hero.is-success .nav-menu .nav-item{border-top-color:rgba(255,255,255,0.2)}}.hero.is-warning{background-color:#ffdd57;color:rgba(0,0,0,0.7)}.hero.is-warning .title{color:rgba(0,0,0,0.7)}.hero.is-warning .title a,.hero.is-warning .title strong{color:inherit}.hero.is-warning .subtitle{color:rgba(0,0,0,0.9)}.hero.is-warning .subtitle a,.hero.is-warning .subtitle strong{color:rgba(0,0,0,0.7)}.hero.is-warning .nav{box-shadow:0 1px 0 rgba(0,0,0,0.2)}@media screen and (max-width: 768px){.hero.is-warning .nav-menu{background-color:#ffdd57}}.hero.is-warning a.nav-item,.hero.is-warning .nav-item a:not(.button){color:rgba(0,0,0,0.7)}.hero.is-warning a.nav-item:hover,.hero.is-warning a.nav-item.is-active,.hero.is-warning .nav-item a:not(.button):hover,.hero.is-warning .nav-item a:not(.button).is-active{color:rgba(0,0,0,0.7)}.hero.is-warning .tabs a{color:rgba(0,0,0,0.7);opacity:0.9}.hero.is-warning .tabs a:hover{opacity:1}.hero.is-warning .tabs li.is-active a{opacity:1}.hero.is-warning .tabs.is-boxed a,.hero.is-warning .tabs.is-toggle a{color:rgba(0,0,0,0.7)}.hero.is-warning .tabs.is-boxed a:hover,.hero.is-warning .tabs.is-toggle a:hover{background-color:rgba(10,10,10,0.1)}.hero.is-warning .tabs.is-boxed li.is-active a,.hero.is-warning .tabs.is-boxed li.is-active a:hover,.hero.is-warning .tabs.is-toggle li.is-active a,.hero.is-warning .tabs.is-toggle li.is-active a:hover{background-color:rgba(0,0,0,0.7);border-color:rgba(0,0,0,0.7);color:#ffdd57}.hero.is-warning.is-bold{background-image:linear-gradient(141deg, #ffaf24 0%, #ffdd57 71%, #fffa70 100%)}@media screen and (max-width: 768px){.hero.is-warning .nav-toggle span{background-color:rgba(0,0,0,0.7)}.hero.is-warning .nav-toggle:hover{background-color:rgba(10,10,10,0.1)}.hero.is-warning .nav-toggle.is-active span{background-color:rgba(0,0,0,0.7)}.hero.is-warning .nav-menu .nav-item{border-top-color:rgba(0,0,0,0.2)}}.hero.is-danger{background-color:#ff3860;color:#fff}.hero.is-danger .title{color:#fff}.hero.is-danger .title a,.hero.is-danger .title strong{color:inherit}.hero.is-danger .subtitle{color:rgba(255,255,255,0.9)}.hero.is-danger .subtitle a,.hero.is-danger .subtitle strong{color:#fff}.hero.is-danger .nav{box-shadow:0 1px 0 rgba(255,255,255,0.2)}@media screen and (max-width: 768px){.hero.is-danger .nav-menu{background-color:#ff3860}}.hero.is-danger a.nav-item,.hero.is-danger .nav-item a:not(.button){color:rgba(255,255,255,0.7)}.hero.is-danger a.nav-item:hover,.hero.is-danger a.nav-item.is-active,.hero.is-danger .nav-item a:not(.button):hover,.hero.is-danger .nav-item a:not(.button).is-active{color:#fff}.hero.is-danger .tabs a{color:#fff;opacity:0.9}.hero.is-danger .tabs a:hover{opacity:1}.hero.is-danger .tabs li.is-active a{opacity:1}.hero.is-danger .tabs.is-boxed a,.hero.is-danger .tabs.is-toggle a{color:#fff}.hero.is-danger .tabs.is-boxed a:hover,.hero.is-danger .tabs.is-toggle a:hover{background-color:rgba(10,10,10,0.1)}.hero.is-danger .tabs.is-boxed li.is-active a,.hero.is-danger .tabs.is-boxed li.is-active a:hover,.hero.is-danger .tabs.is-toggle li.is-active a,.hero.is-danger .tabs.is-toggle li.is-active a:hover{background-color:#fff;border-color:#fff;color:#ff3860}.hero.is-danger.is-bold{background-image:linear-gradient(141deg, #ff0561 0%, #ff3860 71%, #ff5257 100%)}@media screen and (max-width: 768px){.hero.is-danger .nav-toggle span{background-color:#fff}.hero.is-danger .nav-toggle:hover{background-color:rgba(10,10,10,0.1)}.hero.is-danger .nav-toggle.is-active span{background-color:#fff}.hero.is-danger .nav-menu .nav-item{border-top-color:rgba(255,255,255,0.2)}}@media screen and (min-width: 769px){.hero.is-medium .hero-body{padding-bottom:120px;padding-top:120px}}@media screen and (min-width: 769px){.hero.is-large .hero-body{padding-bottom:240px;padding-top:240px}}.hero.is-fullheight{min-height:100vh}.hero.is-fullheight .hero-body{align-items:center;display:flex}.hero.is-fullheight .hero-body>.container{flex-grow:1;flex-shrink:1}.section{background-color:#fff;padding:40px 20px}@media screen and (min-width: 980px){.section.is-medium{padding:120px 20px}.section.is-large{padding:240px 20px}}.footer{background-color:#f5f5f5;padding:40px 20px 80px}.footer a,.footer a:visited{color:#4a4a4a}.footer a:hover,.footer a:visited:hover{color:#363636}.footer a:not(.icon),.footer a:visited:not(.icon){border-bottom:1px solid #dbdbdb}.footer a:not(.icon):hover,.footer a:visited:not(.icon):hover{border-bottom-color:#4a8bfa}\n',""])},function(e,t,n){(function(e){var o=void 0!==e&&e||"undefined"!=typeof self&&self||window,i=Function.prototype.apply;function r(e,t){this._id=e,this._clearFn=t}t.setTimeout=function(){return new r(i.call(setTimeout,o,arguments),clearTimeout)},t.setInterval=function(){return new r(i.call(setInterval,o,arguments),clearInterval)},t.clearTimeout=t.clearInterval=function(e){e&&e.close()},r.prototype.unref=r.prototype.ref=function(){},r.prototype.close=function(){this._clearFn.call(o,this._id)},t.enroll=function(e,t){clearTimeout(e._idleTimeoutId),e._idleTimeout=t},t.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},t._unrefActive=t.active=function(e){clearTimeout(e._idleTimeoutId);var t=e._idleTimeout;t>=0&&(e._idleTimeoutId=setTimeout(function(){e._onTimeout&&e._onTimeout()},t))},n(16),t.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==e&&e.setImmediate||this&&this.setImmediate,t.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==e&&e.clearImmediate||this&&this.clearImmediate}).call(this,n(2))},function(e,t,n){(function(e,t){!function(e,n){"use strict";if(!e.setImmediate){var o,i,r,a,s,l=1,c={},d=!1,f=e.document,u=Object.getPrototypeOf&&Object.getPrototypeOf(e);u=u&&u.setTimeout?u:e,"[object process]"==={}.toString.call(e.process)?o=function(e){t.nextTick(function(){h(e)})}:!function(){if(e.postMessage&&!e.importScripts){var t=!0,n=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage("","*"),e.onmessage=n,t}}()?e.MessageChannel?((r=new MessageChannel).port1.onmessage=function(e){h(e.data)},o=function(e){r.port2.postMessage(e)}):f&&"onreadystatechange"in f.createElement("script")?(i=f.documentElement,o=function(e){var t=f.createElement("script");t.onreadystatechange=function(){h(e),t.onreadystatechange=null,i.removeChild(t),t=null},i.appendChild(t)}):o=function(e){setTimeout(h,0,e)}:(a="setImmediate$"+Math.random()+"$",s=function(t){t.source===e&&"string"==typeof t.data&&0===t.data.indexOf(a)&&h(+t.data.slice(a.length))},e.addEventListener?e.addEventListener("message",s,!1):e.attachEvent("onmessage",s),o=function(t){e.postMessage(a+t,"*")}),u.setImmediate=function(e){"function"!=typeof e&&(e=new Function(""+e));for(var t=new Array(arguments.length-1),n=0;n<t.length;n++)t[n]=arguments[n+1];var i={callback:e,args:t};return c[l]=i,o(l),l++},u.clearImmediate=p}function p(e){delete c[e]}function h(e){if(d)setTimeout(h,0,e);else{var t=c[e];if(t){d=!0;try{!function(e){var t=e.callback,o=e.args;switch(o.length){case 0:t();break;case 1:t(o[0]);break;case 2:t(o[0],o[1]);break;case 3:t(o[0],o[1],o[2]);break;default:t.apply(n,o)}}(t)}finally{p(e),d=!1}}}}}("undefined"==typeof self?void 0===e?this:e:self)}).call(this,n(2),n(12))},function(e,t,n){"use strict";n.r(t),n.d(t,"YOUTUBE_API_KEY",function(){return o});const o="AIzaSyCRokkizjMgFJQWbh3U2KicqhNKcwGWpj0"},function(e,t,n){"use strict";var o=n(1);n.n(o).a},function(e,t,n){(e.exports=n(5)(!1)).push([e.i,"main{min-height:80vh;margin-top:110px}\n",""])},function(e,t,n){"use strict";n.r(t);n(13);var o=n(0),i=n(7),r=n(3),a={data:function(){return{errors:[]}},computed:{app:function(){return r.a.app}},components:{"v-header":function(){return n.e(7).then(n.bind(null,173))},"v-nav":function(){return Promise.all([n.e(0),n.e(9)]).then(n.bind(null,194))},"v-footer":function(){return n.e(6).then(n.bind(null,181))},alert:function(){return n.e(3).then(n.bind(null,182))}},created:function(){var e=this;i.a.$on("api.error",function(t){e.errors.push(t.name+": "+t.message)})},head:{meta:function(){return[{name:"twitter:card",content:"summary_large_image"},{name:"twitter:creator",content:"@"+this.app.twitter.username},{name:"twitter:site",content:"@"+this.app.twitter.username},{name:"twitter:title",content:this.app.title},{name:"twitter:description",content:this.app.description},{name:"twitter:image",content:this.app.url+this.app.logo.share},{property:"og:url",content:this.app.url},{property:"og:type",content:"site"},{property:"og:title",content:this.app.title},{property:"og:image",content:this.app.url+this.app.logo.share},{property:"og:image:type",content:"image/png"},{property:"og:image:width",content:"1200"},{property:"og:image:height",content:"630"},{property:"og:description",content:this.app.description}]}}},s=(n(18),n(4)),l=Object(s.a)(a,function(){var e=this.$createElement,t=this._self._c||e;return t("div",{attrs:{id:"app"}},[t("v-header"),t("v-nav"),t("router-view"),t("vue-progress-bar"),this.errors.length?t("div",this._l(this.errors,function(e,n){return t("alert",{key:n,attrs:{type:"info",message:e,position:"bottom-right",autohide:""}})}),1):this._e(),t("v-footer")],1)},[],!1,null,null,null).exports;function c(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function d(e,t){return t instanceof e||t&&(t.name===e.name||t._name===e._name)}function f(e,t){for(var n in t)e[n]=t[n];return e}var u={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,t){var n=t.props,o=t.children,i=t.parent,r=t.data;r.routerView=!0;for(var a=i.$createElement,s=n.name,l=i.$route,c=i._routerViewCache||(i._routerViewCache={}),d=0,u=!1;i&&i._routerRoot!==i;){var p=i.$vnode&&i.$vnode.data;p&&(p.routerView&&d++,p.keepAlive&&i._inactive&&(u=!0)),i=i.$parent}if(r.routerViewDepth=d,u)return a(c[s],r,o);var h=l.matched[d];if(!h)return c[s]=null,a();var m=c[s]=h.components[s];r.registerRouteInstance=function(e,t){var n=h.instances[s];(t&&n!==e||!t&&n===e)&&(h.instances[s]=t)},(r.hook||(r.hook={})).prepatch=function(e,t){h.instances[s]=t.componentInstance},r.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==h.instances[s]&&(h.instances[s]=e.componentInstance)};var g=r.props=function(e,t){switch(typeof t){case"undefined":return;case"object":return t;case"function":return t(e);case"boolean":return t?e.params:void 0;default:0}}(l,h.props&&h.props[s]);if(g){g=r.props=f({},g);var b=r.attrs=r.attrs||{};for(var v in g)m.props&&v in m.props||(b[v]=g[v],delete g[v])}return a(m,r,o)}};var p=/[!'()*]/g,h=function(e){return"%"+e.charCodeAt(0).toString(16)},m=/%2C/g,g=function(e){return encodeURIComponent(e).replace(p,h).replace(m,",")},b=decodeURIComponent;function v(e){var t={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach(function(e){var n=e.replace(/\+/g," ").split("="),o=b(n.shift()),i=n.length>0?b(n.join("=")):null;void 0===t[o]?t[o]=i:Array.isArray(t[o])?t[o].push(i):t[o]=[t[o],i]}),t):t}function x(e){var t=e?Object.keys(e).map(function(t){var n=e[t];if(void 0===n)return"";if(null===n)return g(t);if(Array.isArray(n)){var o=[];return n.forEach(function(e){void 0!==e&&(null===e?o.push(g(t)):o.push(g(t)+"="+g(e)))}),o.join("&")}return g(t)+"="+g(n)}).filter(function(e){return e.length>0}).join("&"):null;return t?"?"+t:""}var y=/\/?$/;function w(e,t,n,o){var i=o&&o.options.stringifyQuery,r=t.query||{};try{r=k(r)}catch(e){}var a={name:t.name||e&&e.name,meta:e&&e.meta||{},path:t.path||"/",hash:t.hash||"",query:r,params:t.params||{},fullPath:O(t,i),matched:e?A(e):[]};return n&&(a.redirectedFrom=O(n,i)),Object.freeze(a)}function k(e){if(Array.isArray(e))return e.map(k);if(e&&"object"==typeof e){var t={};for(var n in e)t[n]=k(e[n]);return t}return e}var _=w(null,{path:"/"});function A(e){for(var t=[];e;)t.unshift(e),e=e.parent;return t}function O(e,t){var n=e.path,o=e.query;void 0===o&&(o={});var i=e.hash;return void 0===i&&(i=""),(n||"/")+(t||x)(o)+i}function C(e,t){return t===_?e===t:!!t&&(e.path&&t.path?e.path.replace(y,"")===t.path.replace(y,"")&&e.hash===t.hash&&$(e.query,t.query):!(!e.name||!t.name)&&(e.name===t.name&&e.hash===t.hash&&$(e.query,t.query)&&$(e.params,t.params)))}function $(e,t){if(void 0===e&&(e={}),void 0===t&&(t={}),!e||!t)return e===t;var n=Object.keys(e),o=Object.keys(t);return n.length===o.length&&n.every(function(n){var o=e[n],i=t[n];return"object"==typeof o&&"object"==typeof i?$(o,i):String(o)===String(i)})}function T(e,t,n){var o=e.charAt(0);if("/"===o)return e;if("?"===o||"#"===o)return t+e;var i=t.split("/");n&&i[i.length-1]||i.pop();for(var r=e.replace(/^\//,"").split("/"),a=0;a<r.length;a++){var s=r[a];".."===s?i.pop():"."!==s&&i.push(s)}return""!==i[0]&&i.unshift(""),i.join("/")}function j(e){return e.replace(/\/\//g,"/")}var S=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},R=H,E=D,z=function(e,t){return M(D(e,t))},N=M,I=G,L=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function D(e,t){for(var n,o=[],i=0,r=0,a="",s=t&&t.delimiter||"/";null!=(n=L.exec(e));){var l=n[0],c=n[1],d=n.index;if(a+=e.slice(r,d),r=d+l.length,c)a+=c[1];else{var f=e[r],u=n[2],p=n[3],h=n[4],m=n[5],g=n[6],b=n[7];a&&(o.push(a),a="");var v=null!=u&&null!=f&&f!==u,x="+"===g||"*"===g,y="?"===g||"*"===g,w=n[2]||s,k=h||m;o.push({name:p||i++,prefix:u||"",delimiter:w,optional:y,repeat:x,partial:v,asterisk:!!b,pattern:k?F(k):b?".*":"[^"+B(w)+"]+?"})}}return r<e.length&&(a+=e.substr(r)),a&&o.push(a),o}function P(e){return encodeURI(e).replace(/[\/?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function M(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"==typeof e[n]&&(t[n]=new RegExp("^(?:"+e[n].pattern+")$"));return function(n,o){for(var i="",r=n||{},a=(o||{}).pretty?P:encodeURIComponent,s=0;s<e.length;s++){var l=e[s];if("string"!=typeof l){var c,d=r[l.name];if(null==d){if(l.optional){l.partial&&(i+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(S(d)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var f=0;f<d.length;f++){if(c=a(d[f]),!t[s].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");i+=(0===f?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(d).replace(/[?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}):a(d),!t[s].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');i+=l.prefix+c}}else i+=l}return i}}function B(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function F(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function U(e,t){return e.keys=t,e}function q(e){return e.sensitive?"":"i"}function G(e,t,n){S(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,i=!1!==n.end,r="",a=0;a<e.length;a++){var s=e[a];if("string"==typeof s)r+=B(s);else{var l=B(s.prefix),c="(?:"+s.pattern+")";t.push(s),s.repeat&&(c+="(?:"+l+c+")*"),r+=c=s.optional?s.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var d=B(n.delimiter||"/"),f=r.slice(-d.length)===d;return o||(r=(f?r.slice(0,-d.length):r)+"(?:"+d+"(?=$))?"),r+=i?"$":o&&f?"":"(?="+d+"|$)",U(new RegExp("^"+r,q(n)),t)}function H(e,t,n){return S(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var o=0;o<n.length;o++)t.push({name:o,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return U(e,t)}(e,t):S(e)?function(e,t,n){for(var o=[],i=0;i<e.length;i++)o.push(H(e[i],t,n).source);return U(new RegExp("(?:"+o.join("|")+")",q(n)),t)}(e,t,n):function(e,t,n){return G(D(e,n),t,n)}(e,t,n)}R.parse=E,R.compile=z,R.tokensToFunction=N,R.tokensToRegExp=I;var V=Object.create(null);function W(e,t,n){t=t||{};try{var o=V[e]||(V[e]=R.compile(e));return t.pathMatch&&(t[0]=t.pathMatch),o(t,{pretty:!0})}catch(e){return""}finally{delete t[0]}}function K(e,t,n,o){var i="string"==typeof e?{path:e}:e;if(i._normalized)return i;if(i.name)return f({},e);if(!i.path&&i.params&&t){(i=f({},i))._normalized=!0;var r=f(f({},t.params),i.params);if(t.name)i.name=t.name,i.params=r;else if(t.matched.length){var a=t.matched[t.matched.length-1].path;i.path=W(a,r,t.path)}else 0;return i}var s=function(e){var t="",n="",o=e.indexOf("#");o>=0&&(t=e.slice(o),e=e.slice(0,o));var i=e.indexOf("?");return i>=0&&(n=e.slice(i+1),e=e.slice(0,i)),{path:e,query:n,hash:t}}(i.path||""),l=t&&t.path||"/",c=s.path?T(s.path,l,n||i.append):l,d=function(e,t,n){void 0===t&&(t={});var o,i=n||v;try{o=i(e||"")}catch(e){o={}}for(var r in t)o[r]=t[r];return o}(s.query,i.query,o&&o.options.parseQuery),u=i.hash||s.hash;return u&&"#"!==u.charAt(0)&&(u="#"+u),{_normalized:!0,path:c,query:d,hash:u}}var Y,J=[String,Object],X=[String,Array],Q=function(){},Z={name:"RouterLink",props:{to:{type:J,required:!0},tag:{type:String,default:"a"},exact:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,event:{type:X,default:"click"}},render:function(e){var t=this,n=this.$router,o=this.$route,i=n.resolve(this.to,o,this.append),r=i.location,a=i.route,s=i.href,l={},c=n.options.linkActiveClass,d=n.options.linkExactActiveClass,u=null==c?"router-link-active":c,p=null==d?"router-link-exact-active":d,h=null==this.activeClass?u:this.activeClass,m=null==this.exactActiveClass?p:this.exactActiveClass,g=a.redirectedFrom?w(null,K(a.redirectedFrom),null,n):a;l[m]=C(o,g),l[h]=this.exact?l[m]:function(e,t){return 0===e.path.replace(y,"/").indexOf(t.path.replace(y,"/"))&&(!t.hash||e.hash===t.hash)&&function(e,t){for(var n in t)if(!(n in e))return!1;return!0}(e.query,t.query)}(o,g);var b=function(e){ee(e)&&(t.replace?n.replace(r,Q):n.push(r,Q))},v={click:ee};Array.isArray(this.event)?this.event.forEach(function(e){v[e]=b}):v[this.event]=b;var x={class:l},k=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:a,navigate:b,isActive:l[h],isExactActive:l[m]});if(k){if(1===k.length)return k[0];if(k.length>1||!k.length)return 0===k.length?e():e("span",{},k)}if("a"===this.tag)x.on=v,x.attrs={href:s};else{var _=function e(t){if(t)for(var n,o=0;o<t.length;o++){if("a"===(n=t[o]).tag)return n;if(n.children&&(n=e(n.children)))return n}}(this.$slots.default);if(_)_.isStatic=!1,(_.data=f({},_.data)).on=v,(_.data.attrs=f({},_.data.attrs)).href=s;else x.on=v}return e(this.tag,x,this.$slots.default)}};function ee(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}var te="undefined"!=typeof window;function ne(e,t,n,o){var i=t||[],r=n||Object.create(null),a=o||Object.create(null);e.forEach(function(e){!function e(t,n,o,i,r,a){var s=i.path;var l=i.name;0;var c=i.pathToRegexpOptions||{};var d=function(e,t,n){n||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==t)return e;return j(t.path+"/"+e)}(s,r,c.strict);"boolean"==typeof i.caseSensitive&&(c.sensitive=i.caseSensitive);var f={path:d,regex:oe(d,c),components:i.components||{default:i.component},instances:{},name:l,parent:r,matchAs:a,redirect:i.redirect,beforeEnter:i.beforeEnter,meta:i.meta||{},props:null==i.props?{}:i.components?i.props:{default:i.props}};i.children&&i.children.forEach(function(i){var r=a?j(a+"/"+i.path):void 0;e(t,n,o,i,f,r)});n[f.path]||(t.push(f.path),n[f.path]=f);if(void 0!==i.alias)for(var u=Array.isArray(i.alias)?i.alias:[i.alias],p=0;p<u.length;++p){0;var h={path:u[p],children:i.children};e(t,n,o,h,r,f.path||"/")}l&&(o[l]||(o[l]=f))}(i,r,a,e)});for(var s=0,l=i.length;s<l;s++)"*"===i[s]&&(i.push(i.splice(s,1)[0]),l--,s--);return{pathList:i,pathMap:r,nameMap:a}}function oe(e,t){return R(e,[],t)}function ie(e,t){var n=ne(e),o=n.pathList,i=n.pathMap,r=n.nameMap;function a(e,n,a){var s=K(e,n,!1,t),c=s.name;if(c){var d=r[c];if(!d)return l(null,s);var f=d.regex.keys.filter(function(e){return!e.optional}).map(function(e){return e.name});if("object"!=typeof s.params&&(s.params={}),n&&"object"==typeof n.params)for(var u in n.params)!(u in s.params)&&f.indexOf(u)>-1&&(s.params[u]=n.params[u]);return s.path=W(d.path,s.params),l(d,s,a)}if(s.path){s.params={};for(var p=0;p<o.length;p++){var h=o[p],m=i[h];if(re(m.regex,s.path,s.params))return l(m,s,a)}}return l(null,s)}function s(e,n){var o=e.redirect,i="function"==typeof o?o(w(e,n,null,t)):o;if("string"==typeof i&&(i={path:i}),!i||"object"!=typeof i)return l(null,n);var s=i,c=s.name,d=s.path,f=n.query,u=n.hash,p=n.params;if(f=s.hasOwnProperty("query")?s.query:f,u=s.hasOwnProperty("hash")?s.hash:u,p=s.hasOwnProperty("params")?s.params:p,c){r[c];return a({_normalized:!0,name:c,query:f,hash:u,params:p},void 0,n)}if(d){var h=function(e,t){return T(e,t.parent?t.parent.path:"/",!0)}(d,e);return a({_normalized:!0,path:W(h,p),query:f,hash:u},void 0,n)}return l(null,n)}function l(e,n,o){return e&&e.redirect?s(e,o||n):e&&e.matchAs?function(e,t,n){var o=a({_normalized:!0,path:W(n,t.params)});if(o){var i=o.matched,r=i[i.length-1];return t.params=o.params,l(r,t)}return l(null,t)}(0,n,e.matchAs):w(e,n,o,t)}return{match:a,addRoutes:function(e){ne(e,o,i,r)}}}function re(e,t,n){var o=t.match(e);if(!o)return!1;if(!n)return!0;for(var i=1,r=o.length;i<r;++i){var a=e.keys[i-1],s="string"==typeof o[i]?decodeURIComponent(o[i]):o[i];a&&(n[a.name||"pathMatch"]=s)}return!0}var ae=Object.create(null);function se(){var e=window.location.protocol+"//"+window.location.host,t=window.location.href.replace(e,"");window.history.replaceState({key:ye()},"",t),window.addEventListener("popstate",function(e){var t;ce(),e.state&&e.state.key&&(t=e.state.key,ve=t)})}function le(e,t,n,o){if(e.app){var i=e.options.scrollBehavior;i&&e.app.$nextTick(function(){var r=function(){var e=ye();if(e)return ae[e]}(),a=i.call(e,t,n,o?r:null);a&&("function"==typeof a.then?a.then(function(e){he(e,r)}).catch(function(e){0}):he(a,r))})}}function ce(){var e=ye();e&&(ae[e]={x:window.pageXOffset,y:window.pageYOffset})}function de(e){return ue(e.x)||ue(e.y)}function fe(e){return{x:ue(e.x)?e.x:window.pageXOffset,y:ue(e.y)?e.y:window.pageYOffset}}function ue(e){return"number"==typeof e}var pe=/^#\d/;function he(e,t){var n,o="object"==typeof e;if(o&&"string"==typeof e.selector){var i=pe.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(i){var r=e.offset&&"object"==typeof e.offset?e.offset:{};t=function(e,t){var n=document.documentElement.getBoundingClientRect(),o=e.getBoundingClientRect();return{x:o.left-n.left-t.x,y:o.top-n.top-t.y}}(i,r={x:ue((n=r).x)?n.x:0,y:ue(n.y)?n.y:0})}else de(e)&&(t=fe(e))}else o&&de(e)&&(t=fe(e));t&&window.scrollTo(t.x,t.y)}var me,ge=te&&((-1===(me=window.navigator.userAgent).indexOf("Android 2.")&&-1===me.indexOf("Android 4.0")||-1===me.indexOf("Mobile Safari")||-1!==me.indexOf("Chrome")||-1!==me.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history),be=te&&window.performance&&window.performance.now?window.performance:Date,ve=xe();function xe(){return be.now().toFixed(3)}function ye(){return ve}function we(e,t){ce();var n=window.history;try{t?n.replaceState({key:ve},"",e):(ve=xe(),n.pushState({key:ve},"",e))}catch(n){window.location[t?"replace":"assign"](e)}}function ke(e){we(e,!0)}function _e(e,t,n){var o=function(i){i>=e.length?n():e[i]?t(e[i],function(){o(i+1)}):o(i+1)};o(0)}function Ae(e){return function(t,n,o){var i=!1,r=0,a=null;Oe(e,function(e,t,n,s){if("function"==typeof e&&void 0===e.cid){i=!0,r++;var l,d=Te(function(t){var i;((i=t).__esModule||$e&&"Module"===i[Symbol.toStringTag])&&(t=t.default),e.resolved="function"==typeof t?t:Y.extend(t),n.components[s]=t,--r<=0&&o()}),f=Te(function(e){var t="Failed to resolve async component "+s+": "+e;a||(a=c(e)?e:new Error(t),o(a))});try{l=e(d,f)}catch(e){f(e)}if(l)if("function"==typeof l.then)l.then(d,f);else{var u=l.component;u&&"function"==typeof u.then&&u.then(d,f)}}}),i||o()}}function Oe(e,t){return Ce(e.map(function(e){return Object.keys(e.components).map(function(n){return t(e.components[n],e.instances[n],e,n)})}))}function Ce(e){return Array.prototype.concat.apply([],e)}var $e="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function Te(e){var t=!1;return function(){for(var n=[],o=arguments.length;o--;)n[o]=arguments[o];if(!t)return t=!0,e.apply(this,n)}}var je=function(e){function t(){e.call(this,"Navigating to current location is not allowed"),this.name=this._name="NavigationDuplicated"}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t}(Error);je._name="NavigationDuplicated";var Se=function(e,t){this.router=e,this.base=function(e){if(!e)if(te){var t=document.querySelector("base");e=(e=t&&t.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(t),this.current=_,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[]};function Re(e,t,n,o){var i=Oe(e,function(e,o,i,r){var a=function(e,t){"function"!=typeof e&&(e=Y.extend(e));return e.options[t]}(e,t);if(a)return Array.isArray(a)?a.map(function(e){return n(e,o,i,r)}):n(a,o,i,r)});return Ce(o?i.reverse():i)}function Ee(e,t){if(t)return function(){return e.apply(t,arguments)}}Se.prototype.listen=function(e){this.cb=e},Se.prototype.onReady=function(e,t){this.ready?e():(this.readyCbs.push(e),t&&this.readyErrorCbs.push(t))},Se.prototype.onError=function(e){this.errorCbs.push(e)},Se.prototype.transitionTo=function(e,t,n){var o=this,i=this.router.match(e,this.current);this.confirmTransition(i,function(){o.updateRoute(i),t&&t(i),o.ensureURL(),o.ready||(o.ready=!0,o.readyCbs.forEach(function(e){e(i)}))},function(e){n&&n(e),e&&!o.ready&&(o.ready=!0,o.readyErrorCbs.forEach(function(t){t(e)}))})},Se.prototype.confirmTransition=function(e,t,n){var o=this,i=this.current,r=function(e){!d(je,e)&&c(e)&&(o.errorCbs.length?o.errorCbs.forEach(function(t){t(e)}):console.error(e)),n&&n(e)};if(C(e,i)&&e.matched.length===i.matched.length)return this.ensureURL(),r(new je(e));var a=function(e,t){var n,o=Math.max(e.length,t.length);for(n=0;n<o&&e[n]===t[n];n++);return{updated:t.slice(0,n),activated:t.slice(n),deactivated:e.slice(n)}}(this.current.matched,e.matched),s=a.updated,l=a.deactivated,f=a.activated,u=[].concat(function(e){return Re(e,"beforeRouteLeave",Ee,!0)}(l),this.router.beforeHooks,function(e){return Re(e,"beforeRouteUpdate",Ee)}(s),f.map(function(e){return e.beforeEnter}),Ae(f));this.pending=e;var p=function(t,n){if(o.pending!==e)return r();try{t(e,i,function(e){!1===e||c(e)?(o.ensureURL(!0),r(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(r(),"object"==typeof e&&e.replace?o.replace(e):o.push(e)):n(e)})}catch(e){r(e)}};_e(u,p,function(){var n=[];_e(function(e,t,n){return Re(e,"beforeRouteEnter",function(e,o,i,r){return function(e,t,n,o,i){return function(r,a,s){return e(r,a,function(e){"function"==typeof e&&o.push(function(){!function e(t,n,o,i){n[o]&&!n[o]._isBeingDestroyed?t(n[o]):i()&&setTimeout(function(){e(t,n,o,i)},16)}(e,t.instances,n,i)}),s(e)})}}(e,i,r,t,n)})}(f,n,function(){return o.current===e}).concat(o.router.resolveHooks),p,function(){if(o.pending!==e)return r();o.pending=null,t(e),o.router.app&&o.router.app.$nextTick(function(){n.forEach(function(e){e()})})})})},Se.prototype.updateRoute=function(e){var t=this.current;this.current=e,this.cb&&this.cb(e),this.router.afterHooks.forEach(function(n){n&&n(e,t)})};var ze=function(e){function t(t,n){var o=this;e.call(this,t,n);var i=t.options.scrollBehavior,r=ge&&i;r&&se();var a=Ne(this.base);window.addEventListener("popstate",function(e){var n=o.current,i=Ne(o.base);o.current===_&&i===a||o.transitionTo(i,function(e){r&&le(t,e,n,!0)})})}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.go=function(e){window.history.go(e)},t.prototype.push=function(e,t,n){var o=this,i=this.current;this.transitionTo(e,function(e){we(j(o.base+e.fullPath)),le(o.router,e,i,!1),t&&t(e)},n)},t.prototype.replace=function(e,t,n){var o=this,i=this.current;this.transitionTo(e,function(e){ke(j(o.base+e.fullPath)),le(o.router,e,i,!1),t&&t(e)},n)},t.prototype.ensureURL=function(e){if(Ne(this.base)!==this.current.fullPath){var t=j(this.base+this.current.fullPath);e?we(t):ke(t)}},t.prototype.getCurrentLocation=function(){return Ne(this.base)},t}(Se);function Ne(e){var t=decodeURI(window.location.pathname);return e&&0===t.indexOf(e)&&(t=t.slice(e.length)),(t||"/")+window.location.search+window.location.hash}var Ie=function(e){function t(t,n,o){e.call(this,t,n),o&&function(e){var t=Ne(e);if(!/^\/#/.test(t))return window.location.replace(j(e+"/#"+t)),!0}(this.base)||Le()}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this,t=this.router.options.scrollBehavior,n=ge&&t;n&&se(),window.addEventListener(ge?"popstate":"hashchange",function(){var t=e.current;Le()&&e.transitionTo(De(),function(o){n&&le(e.router,o,t,!0),ge||Be(o.fullPath)})})},t.prototype.push=function(e,t,n){var o=this,i=this.current;this.transitionTo(e,function(e){Me(e.fullPath),le(o.router,e,i,!1),t&&t(e)},n)},t.prototype.replace=function(e,t,n){var o=this,i=this.current;this.transitionTo(e,function(e){Be(e.fullPath),le(o.router,e,i,!1),t&&t(e)},n)},t.prototype.go=function(e){window.history.go(e)},t.prototype.ensureURL=function(e){var t=this.current.fullPath;De()!==t&&(e?Me(t):Be(t))},t.prototype.getCurrentLocation=function(){return De()},t}(Se);function Le(){var e=De();return"/"===e.charAt(0)||(Be("/"+e),!1)}function De(){var e=window.location.href,t=e.indexOf("#");if(t<0)return"";var n=(e=e.slice(t+1)).indexOf("?");if(n<0){var o=e.indexOf("#");e=o>-1?decodeURI(e.slice(0,o))+e.slice(o):decodeURI(e)}else n>-1&&(e=decodeURI(e.slice(0,n))+e.slice(n));return e}function Pe(e){var t=window.location.href,n=t.indexOf("#");return(n>=0?t.slice(0,n):t)+"#"+e}function Me(e){ge?we(Pe(e)):window.location.hash=e}function Be(e){ge?ke(Pe(e)):window.location.replace(Pe(e))}var Fe=function(e){function t(t,n){e.call(this,t,n),this.stack=[],this.index=-1}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.push=function(e,t,n){var o=this;this.transitionTo(e,function(e){o.stack=o.stack.slice(0,o.index+1).concat(e),o.index++,t&&t(e)},n)},t.prototype.replace=function(e,t,n){var o=this;this.transitionTo(e,function(e){o.stack=o.stack.slice(0,o.index).concat(e),t&&t(e)},n)},t.prototype.go=function(e){var t=this,n=this.index+e;if(!(n<0||n>=this.stack.length)){var o=this.stack[n];this.confirmTransition(o,function(){t.index=n,t.updateRoute(o)},function(e){d(je,e)&&(t.index=n)})}},t.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},t.prototype.ensureURL=function(){},t}(Se),Ue=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=ie(e.routes||[],this);var t=e.mode||"hash";switch(this.fallback="history"===t&&!ge&&!1!==e.fallback,this.fallback&&(t="hash"),te||(t="abstract"),this.mode=t,t){case"history":this.history=new ze(this,e.base);break;case"hash":this.history=new Ie(this,e.base,this.fallback);break;case"abstract":this.history=new Fe(this,e.base);break;default:0}},qe={currentRoute:{configurable:!0}};function Ge(e,t){return e.push(t),function(){var n=e.indexOf(t);n>-1&&e.splice(n,1)}}Ue.prototype.match=function(e,t,n){return this.matcher.match(e,t,n)},qe.currentRoute.get=function(){return this.history&&this.history.current},Ue.prototype.init=function(e){var t=this;if(this.apps.push(e),e.$once("hook:destroyed",function(){var n=t.apps.indexOf(e);n>-1&&t.apps.splice(n,1),t.app===e&&(t.app=t.apps[0]||null)}),!this.app){this.app=e;var n=this.history;if(n instanceof ze)n.transitionTo(n.getCurrentLocation());else if(n instanceof Ie){var o=function(){n.setupListeners()};n.transitionTo(n.getCurrentLocation(),o,o)}n.listen(function(e){t.apps.forEach(function(t){t._route=e})})}},Ue.prototype.beforeEach=function(e){return Ge(this.beforeHooks,e)},Ue.prototype.beforeResolve=function(e){return Ge(this.resolveHooks,e)},Ue.prototype.afterEach=function(e){return Ge(this.afterHooks,e)},Ue.prototype.onReady=function(e,t){this.history.onReady(e,t)},Ue.prototype.onError=function(e){this.history.onError(e)},Ue.prototype.push=function(e,t,n){var o=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise(function(t,n){o.history.push(e,t,n)});this.history.push(e,t,n)},Ue.prototype.replace=function(e,t,n){var o=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise(function(t,n){o.history.replace(e,t,n)});this.history.replace(e,t,n)},Ue.prototype.go=function(e){this.history.go(e)},Ue.prototype.back=function(){this.go(-1)},Ue.prototype.forward=function(){this.go(1)},Ue.prototype.getMatchedComponents=function(e){var t=e?e.matched?e:this.resolve(e).route:this.currentRoute;return t?[].concat.apply([],t.matched.map(function(e){return Object.keys(e.components).map(function(t){return e.components[t]})})):[]},Ue.prototype.resolve=function(e,t,n){var o=K(e,t=t||this.history.current,n,this),i=this.match(o,t),r=i.redirectedFrom||i.fullPath;return{location:o,route:i,href:function(e,t,n){var o="hash"===n?"#"+t:t;return e?j(e+"/"+o):o}(this.history.base,r,this.mode),normalizedTo:o,resolved:i}},Ue.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==_&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Ue.prototype,qe),Ue.install=function e(t){if(!e.installed||Y!==t){e.installed=!0,Y=t;var n=function(e){return void 0!==e},o=function(e,t){var o=e.$options._parentVnode;n(o)&&n(o=o.data)&&n(o=o.registerRouteInstance)&&o(e,t)};t.mixin({beforeCreate:function(){n(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,o(this,this)},destroyed:function(){o(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",u),t.component("RouterLink",Z);var i=t.config.optionMergeStrategies;i.beforeRouteEnter=i.beforeRouteLeave=i.beforeRouteUpdate=i.created}},Ue.version="3.1.2",te&&window.Vue&&window.Vue.use(Ue);var He=Ue,Ve=function(){return Promise.all([n.e(0),n.e(14)]).then(n.bind(null,176))};o.a.use(He);var We=new He({routes:[{path:"/",component:function(){return n.e(8).then(n.bind(null,180))},meta:{scrollTop:!0}},{path:"/video/:id",name:"video",component:function(){return Promise.all([n.e(0),n.e(1),n.e(2),n.e(13)]).then(n.bind(null,183))},meta:{scrollTop:!0}},{path:"/search*",name:"search",component:function(){return Promise.all([n.e(0),n.e(1),n.e(10)]).then(n.bind(null,179))},meta:{scrollTop:!0}},{path:"/topics",name:"topics",component:function(){return Promise.all([n.e(0),n.e(15)]).then(n.bind(null,178))},meta:{scrollTop:!0}},{path:"/topic/:id",name:"topic",component:function(){return Promise.all([n.e(0),n.e(12)]).then(n.bind(null,177))},meta:{scrollTop:!0},redirect:{name:"topic-popular-videos"},children:[{path:"recent",name:"topic-recent-videos",component:Ve,meta:{scrollTop:!1,order:"date"}},{path:"popular",name:"topic-popular-videos",component:Ve,meta:{scrollTop:!1,order:"viewCount"}}]},{path:"/channel/:id",name:"channel",component:function(){return Promise.all([n.e(0),n.e(11)]).then(n.bind(null,190))},meta:{scrollTop:!0},redirect:{name:"channel-recent-videos"},children:[{path:"about",name:"channel-about",component:function(){return Promise.all([n.e(0),n.e(1),n.e(2),n.e(4)]).then(n.bind(null,189))},meta:{scrollTop:!1}},{path:"uploads",name:"channel-recent-videos",component:function(){return Promise.all([n.e(0),n.e(5)]).then(n.bind(null,187))},meta:{scrollTop:!1,order:"date"}}]}],linkActiveClass:"is-active"});We.beforeEach(function(e,t,n){(e.meta.scrollTop||t.meta.scrollTop)&&window.scrollTo(0,0),n()});var Ke=We,Ye=n(8),Je=n.n(Ye),Xe=n(9),Qe=n.n(Xe),Ze=n(10),et=n.n(Ze),tt=n(11),nt=n.n(tt);o.a.use(nt.a),o.a.use(Je.a),o.a.use(et.a),o.a.use(Qe.a,{color:"rgb(74, 139, 250)",failedColor:"rgb(205, 33, 13)",height:"3px"}),new o.a({el:"#app",router:Ke,render:function(e){return e(l)}})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Z1ZS9kaXN0L3Z1ZS5ydW50aW1lLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwLnZ1ZT84NmE2Iiwid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3dlYmxlYXJuLmNvbmZpZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9hZGRTdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2V2ZW50cy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdnVlMi1maWx0ZXJzL2Rpc3QvdnVlMi1maWx0ZXJzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy92dWUtcHJvZ3Jlc3NiYXIvZGlzdC92dWUtcHJvZ3Jlc3NiYXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Z1ZS1pbmZpbml0ZS1zY3JvbGwvdnVlLWluZmluaXRlLXNjcm9sbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdnVlLWhlYWQvdnVlLWhlYWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL3Nhc3Mvc3R5bGUuc2Fzcz9hZGI2Iiwid2VicGFjazovLy8uL3NyYy9hc3NldHMvc2Fzcy9zdHlsZS5zYXNzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90aW1lcnMtYnJvd3NlcmlmeS9tYWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zZXRpbW1lZGlhdGUvc2V0SW1tZWRpYXRlLmpzIiwid2VicGFjazovLy8uLy5lbnYucHJvZHVjdGlvbiIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwLnZ1ZT8xYjYyIiwid2VicGFjazovLy8uL3NyYy9BcHAudnVlP2U4MTgiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcC52dWU/YzdmOCIsIndlYnBhY2s6Ly8vc3JjL0FwcC52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcC52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcC52dWU/OWExYiIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdnVlLXJvdXRlci9kaXN0L3Z1ZS1yb3V0ZXIuZXNtLmpzIiwid2VicGFjazovLy8uL3NyYy9yb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL21haW4uanMiXSwibmFtZXMiOlsid2VicGFja0pzb25wQ2FsbGJhY2siLCJkYXRhIiwibW9kdWxlSWQiLCJjaHVua0lkIiwiY2h1bmtJZHMiLCJtb3JlTW9kdWxlcyIsImkiLCJyZXNvbHZlcyIsImxlbmd0aCIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImluc3RhbGxlZENodW5rcyIsInB1c2giLCJtb2R1bGVzIiwicGFyZW50SnNvbnBGdW5jdGlvbiIsInNoaWZ0IiwiaW5zdGFsbGVkTW9kdWxlcyIsIjE3IiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImV4cG9ydHMiLCJtb2R1bGUiLCJsIiwiZSIsInByb21pc2VzIiwiaW5zdGFsbGVkQ2h1bmtEYXRhIiwicHJvbWlzZSIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0Iiwib25TY3JpcHRDb21wbGV0ZSIsInNjcmlwdCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImNoYXJzZXQiLCJ0aW1lb3V0IiwibmMiLCJzZXRBdHRyaWJ1dGUiLCJzcmMiLCJwIiwianNvbnBTY3JpcHRTcmMiLCJlcnJvciIsIkVycm9yIiwiZXZlbnQiLCJvbmVycm9yIiwib25sb2FkIiwiY2xlYXJUaW1lb3V0IiwiY2h1bmsiLCJlcnJvclR5cGUiLCJ0eXBlIiwicmVhbFNyYyIsInRhcmdldCIsIm1lc3NhZ2UiLCJuYW1lIiwicmVxdWVzdCIsInVuZGVmaW5lZCIsInNldFRpbWVvdXQiLCJoZWFkIiwiYXBwZW5kQ2hpbGQiLCJhbGwiLCJtIiwiYyIsImQiLCJnZXR0ZXIiLCJvIiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJvZSIsImVyciIsImNvbnNvbGUiLCJqc29ucEFycmF5Iiwid2luZG93Iiwib2xkSnNvbnBGdW5jdGlvbiIsInNsaWNlIiwicyIsImVtcHR5T2JqZWN0IiwiZnJlZXplIiwiaXNVbmRlZiIsInYiLCJpc0RlZiIsImlzVHJ1ZSIsImlzUHJpbWl0aXZlIiwiaXNPYmplY3QiLCJvYmoiLCJfdG9TdHJpbmciLCJ0b1N0cmluZyIsImlzUGxhaW5PYmplY3QiLCJpc1JlZ0V4cCIsImlzVmFsaWRBcnJheUluZGV4IiwidmFsIiwicGFyc2VGbG9hdCIsIlN0cmluZyIsIk1hdGgiLCJmbG9vciIsImlzRmluaXRlIiwiaXNQcm9taXNlIiwidGhlbiIsImNhdGNoIiwiQXJyYXkiLCJpc0FycmF5IiwiSlNPTiIsInN0cmluZ2lmeSIsInRvTnVtYmVyIiwiaXNOYU4iLCJtYWtlTWFwIiwic3RyIiwiZXhwZWN0c0xvd2VyQ2FzZSIsIm1hcCIsImxpc3QiLCJzcGxpdCIsInRvTG93ZXJDYXNlIiwiaXNSZXNlcnZlZEF0dHJpYnV0ZSIsInJlbW92ZSIsImFyciIsIml0ZW0iLCJpbmRleCIsImluZGV4T2YiLCJzcGxpY2UiLCJoYXNPd24iLCJjYWNoZWQiLCJmbiIsImNhY2hlIiwiY2FtZWxpemVSRSIsImNhbWVsaXplIiwicmVwbGFjZSIsIl8iLCJ0b1VwcGVyQ2FzZSIsImNhcGl0YWxpemUiLCJjaGFyQXQiLCJoeXBoZW5hdGVSRSIsImh5cGhlbmF0ZSIsIkZ1bmN0aW9uIiwiY3R4IiwiYm91bmRGbiIsImEiLCJhcmd1bWVudHMiLCJhcHBseSIsIl9sZW5ndGgiLCJ0b0FycmF5Iiwic3RhcnQiLCJyZXQiLCJleHRlbmQiLCJ0byIsIl9mcm9tIiwidG9PYmplY3QiLCJyZXMiLCJub29wIiwiYiIsIm5vIiwiaWRlbnRpdHkiLCJsb29zZUVxdWFsIiwiaXNPYmplY3RBIiwiaXNPYmplY3RCIiwiaXNBcnJheUEiLCJpc0FycmF5QiIsImV2ZXJ5IiwiRGF0ZSIsImdldFRpbWUiLCJrZXlzQSIsImtleXMiLCJrZXlzQiIsImxvb3NlSW5kZXhPZiIsIm9uY2UiLCJjYWxsZWQiLCJ0aGlzIiwiU1NSX0FUVFIiLCJBU1NFVF9UWVBFUyIsIkxJRkVDWUNMRV9IT09LUyIsImNvbmZpZyIsIm9wdGlvbk1lcmdlU3RyYXRlZ2llcyIsInNpbGVudCIsInByb2R1Y3Rpb25UaXAiLCJkZXZ0b29scyIsInBlcmZvcm1hbmNlIiwiZXJyb3JIYW5kbGVyIiwid2FybkhhbmRsZXIiLCJpZ25vcmVkRWxlbWVudHMiLCJrZXlDb2RlcyIsImlzUmVzZXJ2ZWRUYWciLCJpc1Jlc2VydmVkQXR0ciIsImlzVW5rbm93bkVsZW1lbnQiLCJnZXRUYWdOYW1lc3BhY2UiLCJwYXJzZVBsYXRmb3JtVGFnTmFtZSIsIm11c3RVc2VQcm9wIiwiYXN5bmMiLCJfbGlmZWN5Y2xlSG9va3MiLCJ1bmljb2RlUmVnRXhwIiwiZGVmIiwid3JpdGFibGUiLCJjb25maWd1cmFibGUiLCJiYWlsUkUiLCJSZWdFeHAiLCJfaXNTZXJ2ZXIiLCJoYXNQcm90byIsImluQnJvd3NlciIsImluV2VleCIsIldYRW52aXJvbm1lbnQiLCJwbGF0Zm9ybSIsIndlZXhQbGF0Zm9ybSIsIlVBIiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwiaXNJRSIsInRlc3QiLCJpc0lFOSIsImlzRWRnZSIsImlzSU9TIiwiaXNGRiIsIm1hdGNoIiwibmF0aXZlV2F0Y2giLCJ3YXRjaCIsInN1cHBvcnRzUGFzc2l2ZSIsIm9wdHMiLCJhZGRFdmVudExpc3RlbmVyIiwiaXNTZXJ2ZXJSZW5kZXJpbmciLCJnbG9iYWwiLCJlbnYiLCJWVUVfRU5WIiwiX19WVUVfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsImlzTmF0aXZlIiwiQ3RvciIsIl9TZXQiLCJoYXNTeW1ib2wiLCJSZWZsZWN0Iiwib3duS2V5cyIsIlNldCIsInNldCIsImhhcyIsImFkZCIsImNsZWFyIiwid2FybiIsInVpZCIsIkRlcCIsImlkIiwic3VicyIsImFkZFN1YiIsInN1YiIsInJlbW92ZVN1YiIsImRlcGVuZCIsImFkZERlcCIsIm5vdGlmeSIsInVwZGF0ZSIsInRhcmdldFN0YWNrIiwicHVzaFRhcmdldCIsInBvcFRhcmdldCIsInBvcCIsIlZOb2RlIiwidGFnIiwiY2hpbGRyZW4iLCJ0ZXh0IiwiZWxtIiwiY29udGV4dCIsImNvbXBvbmVudE9wdGlvbnMiLCJhc3luY0ZhY3RvcnkiLCJmbkNvbnRleHQiLCJmbk9wdGlvbnMiLCJmblNjb3BlSWQiLCJjb21wb25lbnRJbnN0YW5jZSIsInBhcmVudCIsInJhdyIsImlzU3RhdGljIiwiaXNSb290SW5zZXJ0IiwiaXNDb21tZW50IiwiaXNDbG9uZWQiLCJpc09uY2UiLCJhc3luY01ldGEiLCJpc0FzeW5jUGxhY2Vob2xkZXIiLCJwcm90b3R5cGVBY2Nlc3NvcnMiLCJjaGlsZCIsImRlZmluZVByb3BlcnRpZXMiLCJjcmVhdGVFbXB0eVZOb2RlIiwibm9kZSIsImNyZWF0ZVRleHRWTm9kZSIsImNsb25lVk5vZGUiLCJ2bm9kZSIsImNsb25lZCIsImFycmF5UHJvdG8iLCJhcnJheU1ldGhvZHMiLCJmb3JFYWNoIiwibWV0aG9kIiwib3JpZ2luYWwiLCJhcmdzIiwibGVuIiwiaW5zZXJ0ZWQiLCJyZXN1bHQiLCJvYiIsIl9fb2JfXyIsIm9ic2VydmVBcnJheSIsImRlcCIsImFycmF5S2V5cyIsImdldE93blByb3BlcnR5TmFtZXMiLCJzaG91bGRPYnNlcnZlIiwidG9nZ2xlT2JzZXJ2aW5nIiwiT2JzZXJ2ZXIiLCJ2bUNvdW50IiwiX19wcm90b19fIiwicHJvdG9BdWdtZW50IiwiY29weUF1Z21lbnQiLCJ3YWxrIiwib2JzZXJ2ZSIsImFzUm9vdERhdGEiLCJpc0V4dGVuc2libGUiLCJfaXNWdWUiLCJkZWZpbmVSZWFjdGl2ZSQkMSIsImN1c3RvbVNldHRlciIsInNoYWxsb3ciLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJzZXR0ZXIiLCJjaGlsZE9iIiwiZGVwZW5kQXJyYXkiLCJuZXdWYWwiLCJtYXgiLCJkZWwiLCJpdGVtcyIsInN0cmF0cyIsIm1lcmdlRGF0YSIsImZyb20iLCJ0b1ZhbCIsImZyb21WYWwiLCJtZXJnZURhdGFPckZuIiwicGFyZW50VmFsIiwiY2hpbGRWYWwiLCJ2bSIsImluc3RhbmNlRGF0YSIsImRlZmF1bHREYXRhIiwibWVyZ2VIb29rIiwiY29uY2F0IiwiaG9va3MiLCJkZWR1cGVIb29rcyIsIm1lcmdlQXNzZXRzIiwiaG9vayIsImtleSQxIiwicHJvcHMiLCJtZXRob2RzIiwiaW5qZWN0IiwiY29tcHV0ZWQiLCJwcm92aWRlIiwiZGVmYXVsdFN0cmF0IiwibWVyZ2VPcHRpb25zIiwib3B0aW9ucyIsIm5vcm1hbGl6ZVByb3BzIiwibm9ybWFsaXplZCIsIm5vcm1hbGl6ZUluamVjdCIsImRpcnMiLCJkaXJlY3RpdmVzIiwiZGVmJCQxIiwibm9ybWFsaXplRGlyZWN0aXZlcyIsIl9iYXNlIiwiZXh0ZW5kcyIsIm1peGlucyIsIm1lcmdlRmllbGQiLCJzdHJhdCIsInJlc29sdmVBc3NldCIsIndhcm5NaXNzaW5nIiwiYXNzZXRzIiwiY2FtZWxpemVkSWQiLCJQYXNjYWxDYXNlSWQiLCJ2YWxpZGF0ZVByb3AiLCJwcm9wT3B0aW9ucyIsInByb3BzRGF0YSIsInByb3AiLCJhYnNlbnQiLCJib29sZWFuSW5kZXgiLCJnZXRUeXBlSW5kZXgiLCJCb29sZWFuIiwic3RyaW5nSW5kZXgiLCJkZWZhdWx0IiwiJG9wdGlvbnMiLCJfcHJvcHMiLCJnZXRUeXBlIiwiZ2V0UHJvcERlZmF1bHRWYWx1ZSIsInByZXZTaG91bGRPYnNlcnZlIiwiaXNTYW1lVHlwZSIsImV4cGVjdGVkVHlwZXMiLCJoYW5kbGVFcnJvciIsImluZm8iLCJjdXIiLCIkcGFyZW50IiwiZXJyb3JDYXB0dXJlZCIsImdsb2JhbEhhbmRsZUVycm9yIiwiaW52b2tlV2l0aEVycm9ySGFuZGxpbmciLCJoYW5kbGVyIiwiX2hhbmRsZWQiLCJsb2dFcnJvciIsInRpbWVyRnVuYyIsImlzVXNpbmdNaWNyb1Rhc2siLCJjYWxsYmFja3MiLCJwZW5kaW5nIiwiZmx1c2hDYWxsYmFja3MiLCJjb3BpZXMiLCJNdXRhdGlvbk9ic2VydmVyIiwic2V0SW1tZWRpYXRlIiwiY291bnRlciIsIm9ic2VydmVyIiwidGV4dE5vZGUiLCJjcmVhdGVUZXh0Tm9kZSIsImNoYXJhY3RlckRhdGEiLCJuZXh0VGljayIsImNiIiwiX3Jlc29sdmUiLCJzZWVuT2JqZWN0cyIsInRyYXZlcnNlIiwiX3RyYXZlcnNlIiwic2VlbiIsImlzQSIsImlzRnJvemVuIiwiZGVwSWQiLCJub3JtYWxpemVFdmVudCIsInBhc3NpdmUiLCJvbmNlJCQxIiwiY2FwdHVyZSIsImNyZWF0ZUZuSW52b2tlciIsImZucyIsImludm9rZXIiLCJhcmd1bWVudHMkMSIsInVwZGF0ZUxpc3RlbmVycyIsIm9uIiwib2xkT24iLCJyZW1vdmUkJDEiLCJjcmVhdGVPbmNlSGFuZGxlciIsIm9sZCIsInBhcmFtcyIsIm1lcmdlVk5vZGVIb29rIiwiaG9va0tleSIsIm9sZEhvb2siLCJ3cmFwcGVkSG9vayIsIm1lcmdlZCIsImNoZWNrUHJvcCIsImhhc2giLCJhbHRLZXkiLCJwcmVzZXJ2ZSIsIm5vcm1hbGl6ZUNoaWxkcmVuIiwibm9ybWFsaXplQXJyYXlDaGlsZHJlbiIsIm5lc3RlZEluZGV4IiwibGFzdEluZGV4IiwibGFzdCIsImlzVGV4dE5vZGUiLCJfaXNWTGlzdCIsInJlc29sdmVJbmplY3QiLCJwcm92aWRlS2V5Iiwic291cmNlIiwiX3Byb3ZpZGVkIiwicHJvdmlkZURlZmF1bHQiLCJyZXNvbHZlU2xvdHMiLCJzbG90cyIsImF0dHJzIiwic2xvdCIsIm5hbWUkMSIsImlzV2hpdGVzcGFjZSIsIm5vcm1hbGl6ZVNjb3BlZFNsb3RzIiwibm9ybWFsU2xvdHMiLCJwcmV2U2xvdHMiLCJoYXNOb3JtYWxTbG90cyIsImlzU3RhYmxlIiwiJHN0YWJsZSIsIiRrZXkiLCJfbm9ybWFsaXplZCIsIiRoYXNOb3JtYWwiLCJub3JtYWxpemVTY29wZWRTbG90Iiwia2V5JDIiLCJwcm94eU5vcm1hbFNsb3QiLCJwcm94eSIsInJlbmRlckxpc3QiLCJyZW5kZXIiLCJpdGVyYXRvciIsIm5leHQiLCJkb25lIiwicmVuZGVyU2xvdCIsImZhbGxiYWNrIiwiYmluZE9iamVjdCIsIm5vZGVzIiwic2NvcGVkU2xvdEZuIiwiJHNjb3BlZFNsb3RzIiwiJHNsb3RzIiwiJGNyZWF0ZUVsZW1lbnQiLCJyZXNvbHZlRmlsdGVyIiwiaXNLZXlOb3RNYXRjaCIsImV4cGVjdCIsImFjdHVhbCIsImNoZWNrS2V5Q29kZXMiLCJldmVudEtleUNvZGUiLCJidWlsdEluS2V5Q29kZSIsImV2ZW50S2V5TmFtZSIsImJ1aWx0SW5LZXlOYW1lIiwibWFwcGVkS2V5Q29kZSIsImJpbmRPYmplY3RQcm9wcyIsImFzUHJvcCIsImlzU3luYyIsImxvb3AiLCJkb21Qcm9wcyIsImNhbWVsaXplZEtleSIsImh5cGhlbmF0ZWRLZXkiLCIkZXZlbnQiLCJyZW5kZXJTdGF0aWMiLCJpc0luRm9yIiwiX3N0YXRpY1RyZWVzIiwidHJlZSIsIm1hcmtTdGF0aWMiLCJzdGF0aWNSZW5kZXJGbnMiLCJfcmVuZGVyUHJveHkiLCJtYXJrT25jZSIsIm1hcmtTdGF0aWNOb2RlIiwiYmluZE9iamVjdExpc3RlbmVycyIsImV4aXN0aW5nIiwib3VycyIsInJlc29sdmVTY29wZWRTbG90cyIsImhhc0R5bmFtaWNLZXlzIiwiY29udGVudEhhc2hLZXkiLCJiaW5kRHluYW1pY0tleXMiLCJiYXNlT2JqIiwidmFsdWVzIiwicHJlcGVuZE1vZGlmaWVyIiwic3ltYm9sIiwiaW5zdGFsbFJlbmRlckhlbHBlcnMiLCJfbyIsIl9uIiwiX3MiLCJfbCIsIl90IiwiX3EiLCJfaSIsIl9tIiwiX2YiLCJfayIsIl9iIiwiX3YiLCJfZSIsIl91IiwiX2ciLCJfZCIsIl9wIiwiRnVuY3Rpb25hbFJlbmRlckNvbnRleHQiLCJjb250ZXh0Vm0iLCJ0aGlzJDEiLCJfb3JpZ2luYWwiLCJpc0NvbXBpbGVkIiwiX2NvbXBpbGVkIiwibmVlZE5vcm1hbGl6YXRpb24iLCJsaXN0ZW5lcnMiLCJpbmplY3Rpb25zIiwic2NvcGVkU2xvdHMiLCJfc2NvcGVJZCIsIl9jIiwiY2xvbmVBbmRNYXJrRnVuY3Rpb25hbFJlc3VsdCIsInJlbmRlckNvbnRleHQiLCJjbG9uZSIsIm1lcmdlUHJvcHMiLCJjb21wb25lbnRWTm9kZUhvb2tzIiwiaW5pdCIsImh5ZHJhdGluZyIsIl9pc0Rlc3Ryb3llZCIsImtlZXBBbGl2ZSIsIm1vdW50ZWROb2RlIiwicHJlcGF0Y2giLCJfaXNDb21wb25lbnQiLCJfcGFyZW50Vm5vZGUiLCJpbmxpbmVUZW1wbGF0ZSIsImNyZWF0ZUNvbXBvbmVudEluc3RhbmNlRm9yVm5vZGUiLCJhY3RpdmVJbnN0YW5jZSIsIiRtb3VudCIsIm9sZFZub2RlIiwicGFyZW50Vm5vZGUiLCJyZW5kZXJDaGlsZHJlbiIsIm5ld1Njb3BlZFNsb3RzIiwib2xkU2NvcGVkU2xvdHMiLCJoYXNEeW5hbWljU2NvcGVkU2xvdCIsIm5lZWRzRm9yY2VVcGRhdGUiLCJfcmVuZGVyQ2hpbGRyZW4iLCIkdm5vZGUiLCJfdm5vZGUiLCIkYXR0cnMiLCIkbGlzdGVuZXJzIiwicHJvcEtleXMiLCJfcHJvcEtleXMiLCJvbGRMaXN0ZW5lcnMiLCJfcGFyZW50TGlzdGVuZXJzIiwidXBkYXRlQ29tcG9uZW50TGlzdGVuZXJzIiwiJGZvcmNlVXBkYXRlIiwidXBkYXRlQ2hpbGRDb21wb25lbnQiLCJpbnNlcnQiLCJfaXNNb3VudGVkIiwiY2FsbEhvb2siLCJfaW5hY3RpdmUiLCJhY3RpdmF0ZWRDaGlsZHJlbiIsImFjdGl2YXRlQ2hpbGRDb21wb25lbnQiLCJkZXN0cm95IiwiZGVhY3RpdmF0ZUNoaWxkQ29tcG9uZW50IiwiZGlyZWN0IiwiX2RpcmVjdEluYWN0aXZlIiwiaXNJbkluYWN0aXZlVHJlZSIsIiRjaGlsZHJlbiIsIiRkZXN0cm95IiwiaG9va3NUb01lcmdlIiwiY3JlYXRlQ29tcG9uZW50IiwiYmFzZUN0b3IiLCJjaWQiLCJmYWN0b3J5IiwiZXJyb3JDb21wIiwicmVzb2x2ZWQiLCJvd25lciIsImN1cnJlbnRSZW5kZXJpbmdJbnN0YW5jZSIsIm93bmVycyIsImxvYWRpbmciLCJsb2FkaW5nQ29tcCIsInN5bmMiLCJ0aW1lckxvYWRpbmciLCJ0aW1lclRpbWVvdXQiLCIkb24iLCJmb3JjZVJlbmRlciIsInJlbmRlckNvbXBsZXRlZCIsImVuc3VyZUN0b3IiLCJyZWFzb24iLCJjb21wb25lbnQiLCJkZWxheSIsInJlc29sdmVBc3luY0NvbXBvbmVudCIsImNyZWF0ZUFzeW5jUGxhY2Vob2xkZXIiLCJyZXNvbHZlQ29uc3RydWN0b3JPcHRpb25zIiwibW9kZWwiLCJjYWxsYmFjayIsInRyYW5zZm9ybU1vZGVsIiwiZXh0cmFjdFByb3BzRnJvbVZOb2RlRGF0YSIsImZ1bmN0aW9uYWwiLCJ2bm9kZXMiLCJjcmVhdGVGdW5jdGlvbmFsQ29tcG9uZW50IiwibmF0aXZlT24iLCJhYnN0cmFjdCIsInRvTWVyZ2UiLCJfbWVyZ2VkIiwibWVyZ2VIb29rJDEiLCJpbnN0YWxsQ29tcG9uZW50SG9va3MiLCJmMSIsImYyIiwiU0lNUExFX05PUk1BTElaRSIsIkFMV0FZU19OT1JNQUxJWkUiLCJub3JtYWxpemF0aW9uVHlwZSIsImFsd2F5c05vcm1hbGl6ZSIsImlzIiwic2ltcGxlTm9ybWFsaXplQ2hpbGRyZW4iLCJwcmUiLCJhcHBseU5TIiwiZm9yY2UiLCJzdHlsZSIsImNsYXNzIiwicmVnaXN0ZXJEZWVwQmluZGluZ3MiLCJfY3JlYXRlRWxlbWVudCIsImNvbXAiLCJiYXNlIiwiZ2V0Rmlyc3RDb21wb25lbnRDaGlsZCIsInJlbW92ZSQxIiwiJG9mZiIsIl90YXJnZXQiLCJvbmNlSGFuZGxlciIsInNldEFjdGl2ZUluc3RhbmNlIiwicHJldkFjdGl2ZUluc3RhbmNlIiwiaGFuZGxlcnMiLCJqIiwiX2hhc0hvb2tFdmVudCIsIiRlbWl0IiwicXVldWUiLCJ3YWl0aW5nIiwiZmx1c2hpbmciLCJjdXJyZW50Rmx1c2hUaW1lc3RhbXAiLCJnZXROb3ciLCJub3ciLCJjcmVhdGVFdmVudCIsInRpbWVTdGFtcCIsImZsdXNoU2NoZWR1bGVyUXVldWUiLCJ3YXRjaGVyIiwic29ydCIsImJlZm9yZSIsInJ1biIsImFjdGl2YXRlZFF1ZXVlIiwidXBkYXRlZFF1ZXVlIiwiY2FsbEFjdGl2YXRlZEhvb2tzIiwiX3dhdGNoZXIiLCJjYWxsVXBkYXRlZEhvb2tzIiwiZW1pdCIsInVpZCQyIiwiV2F0Y2hlciIsImV4cE9yRm4iLCJpc1JlbmRlcldhdGNoZXIiLCJfd2F0Y2hlcnMiLCJkZWVwIiwidXNlciIsImxhenkiLCJhY3RpdmUiLCJkaXJ0eSIsImRlcHMiLCJuZXdEZXBzIiwiZGVwSWRzIiwibmV3RGVwSWRzIiwiZXhwcmVzc2lvbiIsInBhdGgiLCJzZWdtZW50cyIsInBhcnNlUGF0aCIsImNsZWFudXBEZXBzIiwidG1wIiwicXVldWVXYXRjaGVyIiwib2xkVmFsdWUiLCJldmFsdWF0ZSIsInRlYXJkb3duIiwiX2lzQmVpbmdEZXN0cm95ZWQiLCJzaGFyZWRQcm9wZXJ0eURlZmluaXRpb24iLCJzb3VyY2VLZXkiLCJpbml0U3RhdGUiLCJwcm9wc09wdGlvbnMiLCJpbml0UHJvcHMiLCJpbml0TWV0aG9kcyIsIl9kYXRhIiwiZ2V0RGF0YSIsImNoYXJDb2RlQXQiLCJpbml0RGF0YSIsIndhdGNoZXJzIiwiX2NvbXB1dGVkV2F0Y2hlcnMiLCJpc1NTUiIsInVzZXJEZWYiLCJjb21wdXRlZFdhdGNoZXJPcHRpb25zIiwiZGVmaW5lQ29tcHV0ZWQiLCJpbml0Q29tcHV0ZWQiLCJjcmVhdGVXYXRjaGVyIiwiaW5pdFdhdGNoIiwic2hvdWxkQ2FjaGUiLCJjcmVhdGVDb21wdXRlZEdldHRlciIsImNyZWF0ZUdldHRlckludm9rZXIiLCIkd2F0Y2giLCJ1aWQkMyIsInN1cGVyIiwic3VwZXJPcHRpb25zIiwibW9kaWZpZWRPcHRpb25zIiwibW9kaWZpZWQiLCJsYXRlc3QiLCJzZWFsZWQiLCJzZWFsZWRPcHRpb25zIiwicmVzb2x2ZU1vZGlmaWVkT3B0aW9ucyIsImV4dGVuZE9wdGlvbnMiLCJjb21wb25lbnRzIiwiVnVlIiwiX2luaXQiLCJpbml0RXh0ZW5kIiwiU3VwZXIiLCJTdXBlcklkIiwiY2FjaGVkQ3RvcnMiLCJfQ3RvciIsIlN1YiIsImNvbnN0cnVjdG9yIiwiQ29tcCIsImluaXRQcm9wcyQxIiwiaW5pdENvbXB1dGVkJDEiLCJtaXhpbiIsInVzZSIsImdldENvbXBvbmVudE5hbWUiLCJtYXRjaGVzIiwicGF0dGVybiIsInBydW5lQ2FjaGUiLCJrZWVwQWxpdmVJbnN0YW5jZSIsImZpbHRlciIsImNhY2hlZE5vZGUiLCJwcnVuZUNhY2hlRW50cnkiLCJjdXJyZW50IiwiY2FjaGVkJCQxIiwiX3VpZCIsInZub2RlQ29tcG9uZW50T3B0aW9ucyIsIl9jb21wb25lbnRUYWciLCJpbml0SW50ZXJuYWxDb21wb25lbnQiLCJfc2VsZiIsIiRyb290IiwiJHJlZnMiLCJpbml0TGlmZWN5Y2xlIiwiX2V2ZW50cyIsImluaXRFdmVudHMiLCJwYXJlbnREYXRhIiwiaW5pdFJlbmRlciIsImluaXRJbmplY3Rpb25zIiwiaW5pdFByb3ZpZGUiLCJlbCIsImluaXRNaXhpbiIsImRhdGFEZWYiLCJwcm9wc0RlZiIsIiRzZXQiLCIkZGVsZXRlIiwiaW1tZWRpYXRlIiwic3RhdGVNaXhpbiIsImhvb2tSRSIsIiRvbmNlIiwiaSQxIiwiY2JzIiwiZXZlbnRzTWl4aW4iLCJfdXBkYXRlIiwicHJldkVsIiwiJGVsIiwicHJldlZub2RlIiwicmVzdG9yZUFjdGl2ZUluc3RhbmNlIiwiX19wYXRjaF9fIiwiX192dWVfXyIsImxpZmVjeWNsZU1peGluIiwiJG5leHRUaWNrIiwiX3JlbmRlciIsInJlZiIsInJlbmRlck1peGluIiwicGF0dGVyblR5cGVzIiwiYnVpbHRJbkNvbXBvbmVudHMiLCJLZWVwQWxpdmUiLCJpbmNsdWRlIiwiZXhjbHVkZSIsIk51bWJlciIsImNyZWF0ZWQiLCJkZXN0cm95ZWQiLCJtb3VudGVkIiwicGFyc2VJbnQiLCJjb25maWdEZWYiLCJ1dGlsIiwiZGVmaW5lUmVhY3RpdmUiLCJkZWxldGUiLCJvYnNlcnZhYmxlIiwicGx1Z2luIiwiaW5zdGFsbGVkUGx1Z2lucyIsIl9pbnN0YWxsZWRQbHVnaW5zIiwidW5zaGlmdCIsImluc3RhbGwiLCJpbml0VXNlIiwiaW5pdE1peGluJDEiLCJkZWZpbml0aW9uIiwiaW5pdEFzc2V0UmVnaXN0ZXJzIiwiaW5pdEdsb2JhbEFQSSIsInNzckNvbnRleHQiLCJ2ZXJzaW9uIiwiYWNjZXB0VmFsdWUiLCJpc0VudW1lcmF0ZWRBdHRyIiwiaXNWYWxpZENvbnRlbnRFZGl0YWJsZVZhbHVlIiwiY29udmVydEVudW1lcmF0ZWRWYWx1ZSIsImlzRmFsc3lBdHRyVmFsdWUiLCJpc0Jvb2xlYW5BdHRyIiwieGxpbmtOUyIsImlzWGxpbmsiLCJnZXRYbGlua1Byb3AiLCJnZW5DbGFzc0ZvclZub2RlIiwicGFyZW50Tm9kZSIsImNoaWxkTm9kZSIsIm1lcmdlQ2xhc3NEYXRhIiwic3RhdGljQ2xhc3MiLCJkeW5hbWljQ2xhc3MiLCJzdHJpbmdpZnlDbGFzcyIsInJlbmRlckNsYXNzIiwic3RyaW5naWZpZWQiLCJzdHJpbmdpZnlBcnJheSIsInN0cmluZ2lmeU9iamVjdCIsIm5hbWVzcGFjZU1hcCIsInN2ZyIsIm1hdGgiLCJpc0hUTUxUYWciLCJpc1NWRyIsInVua25vd25FbGVtZW50Q2FjaGUiLCJpc1RleHRJbnB1dFR5cGUiLCJub2RlT3BzIiwidGFnTmFtZSIsIm11bHRpcGxlIiwiY3JlYXRlRWxlbWVudE5TIiwibmFtZXNwYWNlIiwiY3JlYXRlQ29tbWVudCIsImluc2VydEJlZm9yZSIsIm5ld05vZGUiLCJyZWZlcmVuY2VOb2RlIiwicmVtb3ZlQ2hpbGQiLCJuZXh0U2libGluZyIsInNldFRleHRDb250ZW50IiwidGV4dENvbnRlbnQiLCJzZXRTdHlsZVNjb3BlIiwic2NvcGVJZCIsInJlZ2lzdGVyUmVmIiwiaXNSZW1vdmFsIiwicmVmcyIsInJlZkluRm9yIiwiZW1wdHlOb2RlIiwic2FtZVZub2RlIiwidHlwZUEiLCJ0eXBlQiIsInNhbWVJbnB1dFR5cGUiLCJjcmVhdGVLZXlUb09sZElkeCIsImJlZ2luSWR4IiwiZW5kSWR4IiwidXBkYXRlRGlyZWN0aXZlcyIsIm9sZERpciIsImRpciIsImlzQ3JlYXRlIiwiaXNEZXN0cm95Iiwib2xkRGlycyIsIm5vcm1hbGl6ZURpcmVjdGl2ZXMkMSIsIm5ld0RpcnMiLCJkaXJzV2l0aEluc2VydCIsImRpcnNXaXRoUG9zdHBhdGNoIiwib2xkQXJnIiwiYXJnIiwiY2FsbEhvb2skMSIsImNvbXBvbmVudFVwZGF0ZWQiLCJjYWxsSW5zZXJ0IiwiZW1wdHlNb2RpZmllcnMiLCJtb2RpZmllcnMiLCJnZXRSYXdEaXJOYW1lIiwicmF3TmFtZSIsImpvaW4iLCJiYXNlTW9kdWxlcyIsInVwZGF0ZUF0dHJzIiwiaW5oZXJpdEF0dHJzIiwib2xkQXR0cnMiLCJzZXRBdHRyIiwicmVtb3ZlQXR0cmlidXRlTlMiLCJyZW1vdmVBdHRyaWJ1dGUiLCJiYXNlU2V0QXR0ciIsInNldEF0dHJpYnV0ZU5TIiwiX19pZXBoIiwiYmxvY2tlciIsInN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJ1cGRhdGVDbGFzcyIsIm9sZERhdGEiLCJjbHMiLCJ0cmFuc2l0aW9uQ2xhc3MiLCJfdHJhbnNpdGlvbkNsYXNzZXMiLCJfcHJldkNsYXNzIiwidGFyZ2V0JDEiLCJrbGFzcyIsIlJBTkdFX1RPS0VOIiwiQ0hFQ0tCT1hfUkFESU9fVE9LRU4iLCJjcmVhdGVPbmNlSGFuZGxlciQxIiwicmVtb3ZlJDIiLCJ1c2VNaWNyb3Rhc2tGaXgiLCJhZGQkMSIsImF0dGFjaGVkVGltZXN0YW1wIiwiX3dyYXBwZXIiLCJjdXJyZW50VGFyZ2V0Iiwib3duZXJEb2N1bWVudCIsInVwZGF0ZURPTUxpc3RlbmVycyIsImNoYW5nZSIsIm5vcm1hbGl6ZUV2ZW50cyIsInN2Z0NvbnRhaW5lciIsImV2ZW50cyIsInVwZGF0ZURPTVByb3BzIiwib2xkUHJvcHMiLCJjaGlsZE5vZGVzIiwiX3ZhbHVlIiwic3RyQ3VyIiwic2hvdWxkVXBkYXRlVmFsdWUiLCJpbm5lckhUTUwiLCJmaXJzdENoaWxkIiwiY2hlY2tWYWwiLCJjb21wb3NpbmciLCJub3RJbkZvY3VzIiwiYWN0aXZlRWxlbWVudCIsImlzTm90SW5Gb2N1c0FuZERpcnR5IiwiX3ZNb2RpZmllcnMiLCJudW1iZXIiLCJ0cmltIiwiaXNEaXJ0eVdpdGhNb2RpZmllcnMiLCJwYXJzZVN0eWxlVGV4dCIsImNzc1RleHQiLCJwcm9wZXJ0eURlbGltaXRlciIsIm5vcm1hbGl6ZVN0eWxlRGF0YSIsIm5vcm1hbGl6ZVN0eWxlQmluZGluZyIsInN0YXRpY1N0eWxlIiwiYmluZGluZ1N0eWxlIiwiZW1wdHlTdHlsZSIsImNzc1ZhclJFIiwiaW1wb3J0YW50UkUiLCJzZXRQcm9wIiwic2V0UHJvcGVydHkiLCJub3JtYWxpemVkTmFtZSIsIm5vcm1hbGl6ZSIsInZlbmRvck5hbWVzIiwiY2FwTmFtZSIsInVwZGF0ZVN0eWxlIiwib2xkU3RhdGljU3R5bGUiLCJvbGRTdHlsZUJpbmRpbmciLCJub3JtYWxpemVkU3R5bGUiLCJvbGRTdHlsZSIsIm5ld1N0eWxlIiwiY2hlY2tDaGlsZCIsInN0eWxlRGF0YSIsImdldFN0eWxlIiwid2hpdGVzcGFjZVJFIiwiYWRkQ2xhc3MiLCJjbGFzc0xpc3QiLCJnZXRBdHRyaWJ1dGUiLCJyZW1vdmVDbGFzcyIsInRhciIsInJlc29sdmVUcmFuc2l0aW9uIiwiY3NzIiwiYXV0b0Nzc1RyYW5zaXRpb24iLCJlbnRlckNsYXNzIiwiZW50ZXJUb0NsYXNzIiwiZW50ZXJBY3RpdmVDbGFzcyIsImxlYXZlQ2xhc3MiLCJsZWF2ZVRvQ2xhc3MiLCJsZWF2ZUFjdGl2ZUNsYXNzIiwiaGFzVHJhbnNpdGlvbiIsIlRSQU5TSVRJT04iLCJBTklNQVRJT04iLCJ0cmFuc2l0aW9uUHJvcCIsInRyYW5zaXRpb25FbmRFdmVudCIsImFuaW1hdGlvblByb3AiLCJhbmltYXRpb25FbmRFdmVudCIsIm9udHJhbnNpdGlvbmVuZCIsIm9ud2Via2l0dHJhbnNpdGlvbmVuZCIsIm9uYW5pbWF0aW9uZW5kIiwib253ZWJraXRhbmltYXRpb25lbmQiLCJyYWYiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJuZXh0RnJhbWUiLCJhZGRUcmFuc2l0aW9uQ2xhc3MiLCJ0cmFuc2l0aW9uQ2xhc3NlcyIsInJlbW92ZVRyYW5zaXRpb25DbGFzcyIsIndoZW5UcmFuc2l0aW9uRW5kcyIsImV4cGVjdGVkVHlwZSIsImdldFRyYW5zaXRpb25JbmZvIiwicHJvcENvdW50IiwiZW5kZWQiLCJlbmQiLCJvbkVuZCIsInRyYW5zZm9ybVJFIiwic3R5bGVzIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsInRyYW5zaXRpb25EZWxheXMiLCJ0cmFuc2l0aW9uRHVyYXRpb25zIiwidHJhbnNpdGlvblRpbWVvdXQiLCJnZXRUaW1lb3V0IiwiYW5pbWF0aW9uRGVsYXlzIiwiYW5pbWF0aW9uRHVyYXRpb25zIiwiYW5pbWF0aW9uVGltZW91dCIsImhhc1RyYW5zZm9ybSIsImRlbGF5cyIsImR1cmF0aW9ucyIsInRvTXMiLCJlbnRlciIsInRvZ2dsZURpc3BsYXkiLCJfbGVhdmVDYiIsImNhbmNlbGxlZCIsInRyYW5zaXRpb24iLCJfZW50ZXJDYiIsIm5vZGVUeXBlIiwiYXBwZWFyQ2xhc3MiLCJhcHBlYXJUb0NsYXNzIiwiYXBwZWFyQWN0aXZlQ2xhc3MiLCJiZWZvcmVFbnRlciIsImFmdGVyRW50ZXIiLCJlbnRlckNhbmNlbGxlZCIsImJlZm9yZUFwcGVhciIsImFwcGVhciIsImFmdGVyQXBwZWFyIiwiYXBwZWFyQ2FuY2VsbGVkIiwiZHVyYXRpb24iLCJ0cmFuc2l0aW9uTm9kZSIsImlzQXBwZWFyIiwic3RhcnRDbGFzcyIsImFjdGl2ZUNsYXNzIiwidG9DbGFzcyIsImJlZm9yZUVudGVySG9vayIsImVudGVySG9vayIsImFmdGVyRW50ZXJIb29rIiwiZW50ZXJDYW5jZWxsZWRIb29rIiwiZXhwbGljaXRFbnRlckR1cmF0aW9uIiwiZXhwZWN0c0NTUyIsInVzZXJXYW50c0NvbnRyb2wiLCJnZXRIb29rQXJndW1lbnRzTGVuZ3RoIiwic2hvdyIsInBlbmRpbmdOb2RlIiwiX3BlbmRpbmciLCJpc1ZhbGlkRHVyYXRpb24iLCJsZWF2ZSIsInJtIiwiYmVmb3JlTGVhdmUiLCJhZnRlckxlYXZlIiwibGVhdmVDYW5jZWxsZWQiLCJkZWxheUxlYXZlIiwiZXhwbGljaXRMZWF2ZUR1cmF0aW9uIiwicGVyZm9ybUxlYXZlIiwiaW52b2tlckZucyIsIl9lbnRlciIsInBhdGNoIiwiYmFja2VuZCIsInJlbW92ZU5vZGUiLCJjcmVhdGVFbG0iLCJpbnNlcnRlZFZub2RlUXVldWUiLCJwYXJlbnRFbG0iLCJyZWZFbG0iLCJuZXN0ZWQiLCJvd25lckFycmF5IiwiaXNSZWFjdGl2YXRlZCIsImluaXRDb21wb25lbnQiLCJpbm5lck5vZGUiLCJhY3RpdmF0ZSIsInJlYWN0aXZhdGVDb21wb25lbnQiLCJzZXRTY29wZSIsImNyZWF0ZUNoaWxkcmVuIiwiaW52b2tlQ3JlYXRlSG9va3MiLCJwZW5kaW5nSW5zZXJ0IiwiaXNQYXRjaGFibGUiLCJyZWYkJDEiLCJhbmNlc3RvciIsImFkZFZub2RlcyIsInN0YXJ0SWR4IiwiaW52b2tlRGVzdHJveUhvb2siLCJyZW1vdmVWbm9kZXMiLCJjaCIsInJlbW92ZUFuZEludm9rZVJlbW92ZUhvb2siLCJjaGlsZEVsbSIsImNyZWF0ZVJtQ2IiLCJmaW5kSWR4SW5PbGQiLCJvbGRDaCIsInBhdGNoVm5vZGUiLCJyZW1vdmVPbmx5IiwiaHlkcmF0ZSIsIm5ld0NoIiwib2xkS2V5VG9JZHgiLCJpZHhJbk9sZCIsInZub2RlVG9Nb3ZlIiwib2xkU3RhcnRJZHgiLCJuZXdTdGFydElkeCIsIm9sZEVuZElkeCIsIm9sZFN0YXJ0Vm5vZGUiLCJvbGRFbmRWbm9kZSIsIm5ld0VuZElkeCIsIm5ld1N0YXJ0Vm5vZGUiLCJuZXdFbmRWbm9kZSIsImNhbk1vdmUiLCJ1cGRhdGVDaGlsZHJlbiIsInBvc3RwYXRjaCIsImludm9rZUluc2VydEhvb2siLCJpbml0aWFsIiwiaXNSZW5kZXJlZE1vZHVsZSIsImluVlByZSIsImhhc0NoaWxkTm9kZXMiLCJjaGlsZHJlbk1hdGNoIiwiZnVsbEludm9rZSIsImlzSW5pdGlhbFBhdGNoIiwiaXNSZWFsRWxlbWVudCIsImhhc0F0dHJpYnV0ZSIsIm9sZEVsbSIsInBhdGNoYWJsZSIsImkkMiIsImNyZWF0ZVBhdGNoRnVuY3Rpb24iLCJ2bW9kZWwiLCJ0cmlnZ2VyIiwiZGlyZWN0aXZlIiwiYmluZGluZyIsIl92T3B0aW9ucyIsInNldFNlbGVjdGVkIiwiZ2V0VmFsdWUiLCJvbkNvbXBvc2l0aW9uU3RhcnQiLCJvbkNvbXBvc2l0aW9uRW5kIiwicHJldk9wdGlvbnMiLCJjdXJPcHRpb25zIiwic29tZSIsImhhc05vTWF0Y2hpbmdPcHRpb24iLCJhY3R1YWxseVNldFNlbGVjdGVkIiwiaXNNdWx0aXBsZSIsInNlbGVjdGVkIiwib3B0aW9uIiwic2VsZWN0ZWRJbmRleCIsImluaXRFdmVudCIsImRpc3BhdGNoRXZlbnQiLCJsb2NhdGVOb2RlIiwicGxhdGZvcm1EaXJlY3RpdmVzIiwidHJhbnNpdGlvbiQkMSIsIm9yaWdpbmFsRGlzcGxheSIsIl9fdk9yaWdpbmFsRGlzcGxheSIsImRpc3BsYXkiLCJ1bmJpbmQiLCJ0cmFuc2l0aW9uUHJvcHMiLCJnZXRSZWFsQ2hpbGQiLCJjb21wT3B0aW9ucyIsImV4dHJhY3RUcmFuc2l0aW9uRGF0YSIsInBsYWNlaG9sZGVyIiwiaCIsInJhd0NoaWxkIiwiaXNOb3RUZXh0Tm9kZSIsImlzVlNob3dEaXJlY3RpdmUiLCJUcmFuc2l0aW9uIiwiaGFzUGFyZW50VHJhbnNpdGlvbiIsIl9sZWF2aW5nIiwib2xkUmF3Q2hpbGQiLCJvbGRDaGlsZCIsImlzU2FtZUNoaWxkIiwiZGVsYXllZExlYXZlIiwibW92ZUNsYXNzIiwiY2FsbFBlbmRpbmdDYnMiLCJfbW92ZUNiIiwicmVjb3JkUG9zaXRpb24iLCJuZXdQb3MiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJhcHBseVRyYW5zbGF0aW9uIiwib2xkUG9zIiwicG9zIiwiZHgiLCJsZWZ0IiwiZHkiLCJ0b3AiLCJtb3ZlZCIsInRyYW5zZm9ybSIsIldlYmtpdFRyYW5zZm9ybSIsInRyYW5zaXRpb25EdXJhdGlvbiIsInBsYXRmb3JtQ29tcG9uZW50cyIsIlRyYW5zaXRpb25Hcm91cCIsImJlZm9yZU1vdW50Iiwia2VwdCIsInByZXZDaGlsZHJlbiIsInJhd0NoaWxkcmVuIiwidHJhbnNpdGlvbkRhdGEiLCJyZW1vdmVkIiwiYyQxIiwidXBkYXRlZCIsImhhc01vdmUiLCJfcmVmbG93IiwiYm9keSIsIm9mZnNldEhlaWdodCIsInByb3BlcnR5TmFtZSIsIl9oYXNNb3ZlIiwiY2xvbmVOb2RlIiwiYXR0ciIsIkhUTUxVbmtub3duRWxlbWVudCIsIkhUTUxFbGVtZW50IiwidXBkYXRlQ29tcG9uZW50IiwibW91bnRDb21wb25lbnQiLCJxdWVyeVNlbGVjdG9yIiwicXVlcnkiLCJjb250ZW50IiwibG9jYWxzIiwiZyIsImJhc2VVcmkiLCJhcGlLZXkiLCJyZXF1aXJlIiwiWU9VVFVCRV9BUElfS0VZIiwidGl0bGUiLCJ0d2VldCIsImVuY29kZVVSSUNvbXBvbmVudCIsImFwcCIsInVybCIsImRlc2NyaXB0aW9uIiwiYXV0aG9yIiwibG9nbyIsIm5vcm1hbCIsIm1pbmkiLCJzaGFyZSIsImdpdGh1YiIsInVzZXJuYW1lIiwicmVwbyIsInR3aXR0ZXIiLCJsaW5rcyIsImFwaSIsInNlYXJjaCIsImVuZHBvaW50IiwicGFydCIsInZpZGVvRW1iZWRkYWJsZSIsInNhZmVTZWFyY2giLCJmaWVsZHMiLCJ2aWRlb3MiLCJjaGFubmVscyIsIm5vcm1hbGl6ZUNvbXBvbmVudCIsInNjcmlwdEV4cG9ydHMiLCJmdW5jdGlvbmFsVGVtcGxhdGUiLCJpbmplY3RTdHlsZXMiLCJtb2R1bGVJZGVudGlmaWVyIiwic2hhZG93TW9kZSIsIl9fVlVFX1NTUl9DT05URVhUX18iLCJfcmVnaXN0ZXJlZENvbXBvbmVudHMiLCJfc3NyUmVnaXN0ZXIiLCJzaGFkb3dSb290IiwiX2luamVjdFN0eWxlcyIsIm9yaWdpbmFsUmVuZGVyIiwiYmVmb3JlQ3JlYXRlIiwidXNlU291cmNlTWFwIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlTWFwIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZVJvb3QiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibWVkaWFRdWVyeSIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJzdHlsZXNJbkRvbSIsIm1lbW9pemUiLCJtZW1vIiwiaXNPbGRJRSIsInNlbGYiLCJnZXRIZWFkRWxlbWVudCIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwic2luZ2xldG9uRWxlbWVudCIsInNpbmdsZXRvbkNvdW50ZXIiLCJzdHlsZUVsZW1lbnRzSW5zZXJ0ZWRBdFRvcCIsImFkZFN0eWxlc1RvRG9tIiwiZG9tU3R5bGUiLCJwYXJ0cyIsImFkZFN0eWxlIiwibGlzdFRvU3R5bGVzIiwibmV3U3R5bGVzIiwibWVkaWEiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZUVsZW1lbnQiLCJsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCIsImluc2VydEF0IiwicmVtb3ZlU3R5bGVFbGVtZW50IiwiaWR4IiwiY3JlYXRlU3R5bGVFbGVtZW50Iiwic2luZ2xldG9uIiwic3R5bGVJbmRleCIsImFwcGx5VG9TaW5nbGV0b25UYWciLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJyZXZva2VPYmplY3RVUkwiLCJCbG9iIiwibGlua0VsZW1lbnQiLCJyZWwiLCJjcmVhdGVMaW5rRWxlbWVudCIsInVwZGF0ZUxpbmsiLCJocmVmIiwiYXBwbHlUb1RhZyIsIm5ld09iaiIsIkRFQlVHIiwibmV3TGlzdCIsIm1heVJlbW92ZSIsInRleHRTdG9yZSIsInJlcGxhY2VUZXh0IiwicmVwbGFjZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzTm9kZSIsImJsb2IiLCJvbGRTcmMiLCJBcnJheVByb3RvIiwiT2JqUHJvdG8iLCJNQVhfQVJSQVlfSU5ERVgiLCJwb3ciLCJpc0FycmF5TGlrZSIsImVhY2giLCJwYXJzZWQiLCJjb252ZXJ0QXJyYXkiLCIkdmFsdWUiLCJnZXRQYXRoIiwibXVsdGlJbmRleCIsIl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbGltaXRCeV9fIiwiX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19maWx0ZXJCeV9fIiwiX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19vcmRlckJ5X18iLCJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX2N1cnJlbmN5X18iLCJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX3BsdXJhbGl6ZV9fIiwiX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19jYXBpdGFsaXplX18iLCJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX3VwcGVyY2FzZV9fIiwiX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19sb3dlcmNhc2VfXyIsIl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fcGxhY2Vob2xkZXJfXyIsIl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fdHJ1bmNhdGVfXyIsIl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9pbmRleF9fIiwiY29udGFpbnMiLCJvZmZzZXQiLCJzb3J0S2V5cyIsImNvbXBhcmF0b3IiLCJvcmRlciIsImZpcnN0QXJnIiwiYmFzZUNvbXBhcmUiLCJzb3J0S2V5SW5kZXgiLCJzb3J0S2V5IiwiY3VycmVuY3kiLCJkZWNpbWFscyIsImFicyIsInRvRml4ZWQiLCJfaW50IiwiX2Zsb2F0IiwiaW5wdXQiLCJzdWJzdHJpbmciLCJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX3N0cmluZ19pbmRleF9fIiwiX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19hcnJheV9pbmRleF9fIiwiX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19vdGhlcl9pbmRleF9fIiwibGltaXRCeSIsImZpbHRlckJ5Iiwib3JkZXJCeSIsInNlcnZlckNhY2hlS2V5IiwicHJvZ3Jlc3MiLCJsb2NhdGlvbiIsImNhblN1Y2Nlc3MiLCJjb2xvciIsImZhaWxlZENvbG9yIiwib3BhY2l0eSIsInBvc2l0aW9uIiwiYm90dG9tIiwiaW52ZXJzZSIsInJpZ2h0Iiwid2lkdGgiLCJwZXJjZW50IiwiaGVpZ2h0IiwidGhpY2tuZXNzIiwic3BlZWQiLCJWdWVQcm9ncmVzc0JhckV2ZW50QnVzIiwiUkFET05fTE9BRElOR19CQVIiLCJ0ZXJtaW5hdGlvbiIsImF1dG9SZXZlcnQiLCIkdm0iLCJzdGF0ZSIsInRGYWlsQ29sb3IiLCJ0Q29sb3IiLCJ0aW1lciIsImN1dCIsImNsZWFySW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsImluY3JlYXNlIiwicmFuZG9tIiwiYXV0b0ZpbmlzaCIsImZpbmlzaCIsIm1pbiIsImRlY3JlYXNlIiwiaGlkZSIsInJldmVydCIsInBhdXNlIiwiZmFpbCIsInNldEZhaWxDb2xvciIsInNldENvbG9yIiwic2V0TG9jYXRpb24iLCJzZXRUcmFuc2l0aW9uIiwidGVtcEZhaWxDb2xvciIsInRlbXBDb2xvciIsInRlbXBMb2NhdGlvbiIsInRMb2NhdGlvbiIsInRlbXBUcmFuc2l0aW9uIiwidFRyYW5zaXRpb24iLCJyZXZlcnRDb2xvciIsInJldmVydEZhaWxDb2xvciIsInJldmVydExvY2F0aW9uIiwicmV2ZXJ0VHJhbnNpdGlvbiIsInBhcnNlTWV0YSIsImZ1bmMiLCJtb2RpZmllciIsImFyZ3VtZW50IiwiJFByb2dyZXNzIiwiZ2V0U2Nyb2xsVG9wIiwiZWxlbWVudCIsInBhZ2VZT2Zmc2V0IiwiZG9jdW1lbnRFbGVtZW50Iiwic2Nyb2xsVG9wIiwiZGVmYXVsdFZpZXciLCJnZXRFbGVtZW50VG9wIiwiaXNBdHRhY2hlZCIsImN1cnJlbnROb2RlIiwiZG9CaW5kIiwiYmluZGVkIiwibGFzdEV4ZWMiLCJleGVjdXRlIiwidGhyb3R0bGVEZWxheUV4cHIiLCJ0aHJvdHRsZURlbGF5Iiwic2Nyb2xsRXZlbnRUYXJnZXQiLCJvdmVyZmxvd1kiLCJnZXRTY3JvbGxFdmVudFRhcmdldCIsInNjcm9sbExpc3RlbmVyIiwiZG9DaGVjayIsImRpZmYiLCJkaXNhYmxlZEV4cHIiLCJkaXNhYmxlZCIsImltbWVkaWF0ZUNoZWNrIiwiZGlzdGFuY2VFeHByIiwiZGlzdGFuY2UiLCJpbW1lZGlhdGVDaGVja0V4cHIiLCJldmVudE5hbWUiLCJ2aWV3cG9ydFNjcm9sbFRvcCIsInZpZXdwb3J0Qm90dG9tIiwiY2xpZW50SGVpZ2h0IiwiZ2V0VmlzaWJsZUhlaWdodCIsInNjcm9sbEhlaWdodCIsIkluZmluaXRlU2Nyb2xsIiwiYmluZFRyeUNvdW50IiwidHJ5QmluZCIsImluZmluaXRlU2Nyb2xsIiwib3B0IiwiY29tcGxlbWVudCIsInNlcGFyYXRvciIsImRpZmZUaXRsZSIsImVscyIsImRpZmZFbHMiLCJpbnN0YWxsZWQiLCJzaG9ydGhhbmQiLCJ0ZyIsImhlIiwiaXAiLCJzYyIsInN6IiwiZ2V0UGxhY2UiLCJwbGFjZSIsInVuZG9UaXRsZSIsInVuZG8iLCJwYXJlbnRFbGVtZW50IiwicHJlcGFyZUVsZW1lbnQiLCJzaCIsImlubmVyIiwiaXNFcXVhbE5vZGUiLCJyZXBsYWNlQ2hpbGQiLCJoYW5kbGUiLCJnZXRFbGVtZW50QnlJZCIsIlZ1ZUhlYWQiLCJyZWFkeSIsInVwZGF0ZUhlYWQiLCJiZWZvcmVEZXN0cm95IiwiY2FjaGVkU2V0VGltZW91dCIsImNhY2hlZENsZWFyVGltZW91dCIsInByb2Nlc3MiLCJkZWZhdWx0U2V0VGltb3V0IiwiZGVmYXVsdENsZWFyVGltZW91dCIsInJ1blRpbWVvdXQiLCJmdW4iLCJjdXJyZW50UXVldWUiLCJkcmFpbmluZyIsInF1ZXVlSW5kZXgiLCJjbGVhblVwTmV4dFRpY2siLCJkcmFpblF1ZXVlIiwibWFya2VyIiwicnVuQ2xlYXJUaW1lb3V0IiwiSXRlbSIsImFycmF5IiwiYnJvd3NlciIsImFyZ3YiLCJ2ZXJzaW9ucyIsImFkZExpc3RlbmVyIiwib2ZmIiwicmVtb3ZlTGlzdGVuZXIiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiLCJwcmVwZW5kTGlzdGVuZXIiLCJwcmVwZW5kT25jZUxpc3RlbmVyIiwiY3dkIiwiY2hkaXIiLCJ1bWFzayIsIlRpbWVvdXQiLCJjbGVhckZuIiwiX2lkIiwiX2NsZWFyRm4iLCJzY29wZSIsImNsb3NlIiwidW5yZWYiLCJlbnJvbGwiLCJtc2VjcyIsIl9pZGxlVGltZW91dElkIiwiX2lkbGVUaW1lb3V0IiwidW5lbnJvbGwiLCJfdW5yZWZBY3RpdmUiLCJfb25UaW1lb3V0IiwiY2xlYXJJbW1lZGlhdGUiLCJyZWdpc3RlckltbWVkaWF0ZSIsImh0bWwiLCJjaGFubmVsIiwibWVzc2FnZVByZWZpeCIsIm9uR2xvYmFsTWVzc2FnZSIsIm5leHRIYW5kbGUiLCJ0YXNrc0J5SGFuZGxlIiwiY3VycmVudGx5UnVubmluZ0FUYXNrIiwiZG9jIiwiYXR0YWNoVG8iLCJnZXRQcm90b3R5cGVPZiIsInJ1bklmUHJlc2VudCIsInBvc3RNZXNzYWdlIiwiaW1wb3J0U2NyaXB0cyIsInBvc3RNZXNzYWdlSXNBc3luY2hyb25vdXMiLCJvbGRPbk1lc3NhZ2UiLCJvbm1lc3NhZ2UiLCJjYW5Vc2VQb3N0TWVzc2FnZSIsIk1lc3NhZ2VDaGFubmVsIiwicG9ydDEiLCJwb3J0MiIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsImF0dGFjaEV2ZW50IiwidGFzayIsImVycm9ycyIsIm1ldGEiLCJfaCIsImlzRXJyb3IiLCJpc0V4dGVuZGVkRXJyb3IiLCJfbmFtZSIsIlZpZXciLCJyb3V0ZXJWaWV3Iiwicm91dGUiLCIkcm91dGUiLCJfcm91dGVyVmlld0NhY2hlIiwiZGVwdGgiLCJpbmFjdGl2ZSIsIl9yb3V0ZXJSb290Iiwidm5vZGVEYXRhIiwicm91dGVyVmlld0RlcHRoIiwibWF0Y2hlZCIsInJlZ2lzdGVyUm91dGVJbnN0YW5jZSIsImluc3RhbmNlcyIsInByb3BzVG9QYXNzIiwicmVzb2x2ZVByb3BzIiwiZW5jb2RlUmVzZXJ2ZVJFIiwiZW5jb2RlUmVzZXJ2ZVJlcGxhY2VyIiwiY29tbWFSRSIsImVuY29kZSIsImRlY29kZSIsImRlY29kZVVSSUNvbXBvbmVudCIsInBhcnNlUXVlcnkiLCJwYXJhbSIsInN0cmluZ2lmeVF1ZXJ5IiwidmFsMiIsIngiLCJ0cmFpbGluZ1NsYXNoUkUiLCJjcmVhdGVSb3V0ZSIsInJlY29yZCIsInJlZGlyZWN0ZWRGcm9tIiwicm91dGVyIiwic3RyaW5naWZ5UXVlcnkkJDEiLCJmdWxsUGF0aCIsImdldEZ1bGxQYXRoIiwiZm9ybWF0TWF0Y2giLCJTVEFSVCIsIl9zdHJpbmdpZnlRdWVyeSIsImlzU2FtZVJvdXRlIiwiaXNPYmplY3RFcXVhbCIsImFLZXlzIiwiYktleXMiLCJhVmFsIiwiYlZhbCIsInJlc29sdmVQYXRoIiwicmVsYXRpdmUiLCJhcHBlbmQiLCJmaXJzdENoYXIiLCJzdGFjayIsInNlZ21lbnQiLCJjbGVhblBhdGgiLCJpc2FycmF5IiwicGF0aFRvUmVnZXhwXzEiLCJwYXRoVG9SZWdleHAiLCJwYXJzZV8xIiwicGFyc2UiLCJjb21waWxlXzEiLCJ0b2tlbnNUb0Z1bmN0aW9uIiwidG9rZW5zVG9GdW5jdGlvbl8xIiwidG9rZW5zVG9SZWdFeHBfMSIsInRva2Vuc1RvUmVnRXhwIiwiUEFUSF9SRUdFWFAiLCJ0b2tlbnMiLCJkZWZhdWx0RGVsaW1pdGVyIiwiZGVsaW1pdGVyIiwiZXhlYyIsImVzY2FwZWQiLCJwcmVmaXgiLCJncm91cCIsImFzdGVyaXNrIiwicGFydGlhbCIsInJlcGVhdCIsIm9wdGlvbmFsIiwiZXNjYXBlR3JvdXAiLCJlc2NhcGVTdHJpbmciLCJzdWJzdHIiLCJlbmNvZGVVUklDb21wb25lbnRQcmV0dHkiLCJlbmNvZGVVUkkiLCJwcmV0dHkiLCJ0b2tlbiIsIlR5cGVFcnJvciIsImF0dGFjaEtleXMiLCJyZSIsImZsYWdzIiwic2Vuc2l0aXZlIiwic3RyaWN0IiwiZW5kc1dpdGhEZWxpbWl0ZXIiLCJncm91cHMiLCJyZWdleHBUb1JlZ2V4cCIsImFycmF5VG9SZWdleHAiLCJzdHJpbmdUb1JlZ2V4cCIsImNvbXBpbGUiLCJyZWdleHBDb21waWxlQ2FjaGUiLCJmaWxsUGFyYW1zIiwicm91dGVNc2ciLCJmaWxsZXIiLCJwYXRoTWF0Y2giLCJub3JtYWxpemVMb2NhdGlvbiIsInJhd1BhdGgiLCJwYXJzZWRQYXRoIiwiaGFzaEluZGV4IiwicXVlcnlJbmRleCIsImJhc2VQYXRoIiwiZXh0cmFRdWVyeSIsIl9wYXJzZVF1ZXJ5IiwicGFyc2VkUXVlcnkiLCJyZXNvbHZlUXVlcnkiLCJfVnVlIiwidG9UeXBlcyIsImV2ZW50VHlwZXMiLCJMaW5rIiwicmVxdWlyZWQiLCJleGFjdCIsImV4YWN0QWN0aXZlQ2xhc3MiLCIkcm91dGVyIiwiY2xhc3NlcyIsImdsb2JhbEFjdGl2ZUNsYXNzIiwibGlua0FjdGl2ZUNsYXNzIiwiZ2xvYmFsRXhhY3RBY3RpdmVDbGFzcyIsImxpbmtFeGFjdEFjdGl2ZUNsYXNzIiwiYWN0aXZlQ2xhc3NGYWxsYmFjayIsImV4YWN0QWN0aXZlQ2xhc3NGYWxsYmFjayIsImNvbXBhcmVUYXJnZXQiLCJxdWVyeUluY2x1ZGVzIiwiaXNJbmNsdWRlZFJvdXRlIiwiZ3VhcmRFdmVudCIsImNsaWNrIiwic2NvcGVkU2xvdCIsIm5hdmlnYXRlIiwiaXNBY3RpdmUiLCJpc0V4YWN0QWN0aXZlIiwiZmluZEFuY2hvciIsIm1ldGFLZXkiLCJjdHJsS2V5Iiwic2hpZnRLZXkiLCJkZWZhdWx0UHJldmVudGVkIiwiYnV0dG9uIiwicHJldmVudERlZmF1bHQiLCJjcmVhdGVSb3V0ZU1hcCIsInJvdXRlcyIsIm9sZFBhdGhMaXN0Iiwib2xkUGF0aE1hcCIsIm9sZE5hbWVNYXAiLCJwYXRoTGlzdCIsInBhdGhNYXAiLCJuYW1lTWFwIiwiYWRkUm91dGVSZWNvcmQiLCJtYXRjaEFzIiwicGF0aFRvUmVnZXhwT3B0aW9ucyIsIm5vcm1hbGl6ZWRQYXRoIiwibm9ybWFsaXplUGF0aCIsImNhc2VTZW5zaXRpdmUiLCJyZWdleCIsImNvbXBpbGVSb3V0ZVJlZ2V4IiwicmVkaXJlY3QiLCJjaGlsZE1hdGNoQXMiLCJhbGlhcyIsImFsaWFzZXMiLCJhbGlhc1JvdXRlIiwiY3JlYXRlTWF0Y2hlciIsImN1cnJlbnRSb3V0ZSIsIl9jcmVhdGVSb3V0ZSIsInBhcmFtTmFtZXMiLCJyZWNvcmQkMSIsIm1hdGNoUm91dGUiLCJvcmlnaW5hbFJlZGlyZWN0IiwicmVzb2x2ZVJlY29yZFBhdGgiLCJhbGlhc2VkTWF0Y2giLCJhbGlhc2VkUmVjb3JkIiwiYWRkUm91dGVzIiwicG9zaXRpb25TdG9yZSIsInNldHVwU2Nyb2xsIiwicHJvdG9jb2xBbmRQYXRoIiwicHJvdG9jb2wiLCJob3N0IiwiYWJzb2x1dGVQYXRoIiwiaGlzdG9yeSIsInJlcGxhY2VTdGF0ZSIsImdldFN0YXRlS2V5Iiwic2F2ZVNjcm9sbFBvc2l0aW9uIiwiX2tleSIsImhhbmRsZVNjcm9sbCIsImlzUG9wIiwiYmVoYXZpb3IiLCJzY3JvbGxCZWhhdmlvciIsImdldFNjcm9sbFBvc2l0aW9uIiwic2hvdWxkU2Nyb2xsIiwic2Nyb2xsVG9Qb3NpdGlvbiIsInBhZ2VYT2Zmc2V0IiwieSIsImlzVmFsaWRQb3NpdGlvbiIsImlzTnVtYmVyIiwibm9ybWFsaXplUG9zaXRpb24iLCJoYXNoU3RhcnRzV2l0aE51bWJlclJFIiwic2VsZWN0b3IiLCJkb2NSZWN0IiwiZWxSZWN0IiwiZ2V0RWxlbWVudFBvc2l0aW9uIiwic2Nyb2xsVG8iLCJ1YSIsInN1cHBvcnRzUHVzaFN0YXRlIiwiVGltZSIsImdlbktleSIsInB1c2hTdGF0ZSIsInJ1blF1ZXVlIiwic3RlcCIsInJlc29sdmVBc3luY0NvbXBvbmVudHMiLCJoYXNBc3luYyIsImZsYXRNYXBDb21wb25lbnRzIiwicmVzb2x2ZWREZWYiLCJtc2ciLCJmbGF0dGVuIiwiTmF2aWdhdGlvbkR1cGxpY2F0ZWQiLCJIaXN0b3J5IiwiYmFzZUVsIiwibm9ybWFsaXplQmFzZSIsInJlYWR5Q2JzIiwicmVhZHlFcnJvckNicyIsImVycm9yQ2JzIiwiZXh0cmFjdEd1YXJkcyIsInJlY29yZHMiLCJyZXZlcnNlIiwiZ3VhcmRzIiwiaW5zdGFuY2UiLCJndWFyZCIsImV4dHJhY3RHdWFyZCIsImJpbmRHdWFyZCIsImxpc3RlbiIsIm9uUmVhZHkiLCJlcnJvckNiIiwib25FcnJvciIsInRyYW5zaXRpb25UbyIsIm9uQ29tcGxldGUiLCJvbkFib3J0IiwiY29uZmlybVRyYW5zaXRpb24iLCJ1cGRhdGVSb3V0ZSIsImVuc3VyZVVSTCIsImFib3J0IiwiYWN0aXZhdGVkIiwiZGVhY3RpdmF0ZWQiLCJyZXNvbHZlUXVldWUiLCJleHRyYWN0TGVhdmVHdWFyZHMiLCJiZWZvcmVIb29rcyIsImV4dHJhY3RVcGRhdGVIb29rcyIsInBvc3RFbnRlckNicyIsImlzVmFsaWQiLCJwb2xsIiwiYmluZEVudGVyR3VhcmQiLCJleHRyYWN0RW50ZXJHdWFyZHMiLCJyZXNvbHZlSG9va3MiLCJwcmV2IiwiYWZ0ZXJIb29rcyIsIkhUTUw1SGlzdG9yeSIsIkhpc3RvcnkkJDEiLCJleHBlY3RTY3JvbGwiLCJzdXBwb3J0c1Njcm9sbCIsImluaXRMb2NhdGlvbiIsImdldExvY2F0aW9uIiwiZ28iLCJmcm9tUm91dGUiLCJnZXRDdXJyZW50TG9jYXRpb24iLCJkZWNvZGVVUkkiLCJwYXRobmFtZSIsIkhhc2hIaXN0b3J5IiwiY2hlY2tGYWxsYmFjayIsImVuc3VyZVNsYXNoIiwic2V0dXBMaXN0ZW5lcnMiLCJnZXRIYXNoIiwicmVwbGFjZUhhc2giLCJwdXNoSGFzaCIsInNlYXJjaEluZGV4IiwiZ2V0VXJsIiwiQWJzdHJhY3RIaXN0b3J5IiwidGFyZ2V0SW5kZXgiLCJWdWVSb3V0ZXIiLCJhcHBzIiwibWF0Y2hlciIsInJlZ2lzdGVySG9vayIsInNldHVwSGFzaExpc3RlbmVyIiwiX3JvdXRlIiwiYmVmb3JlRWFjaCIsImJlZm9yZVJlc29sdmUiLCJhZnRlckVhY2giLCJiYWNrIiwiZm9yd2FyZCIsImdldE1hdGNoZWRDb21wb25lbnRzIiwiY3JlYXRlSHJlZiIsIm5vcm1hbGl6ZWRUbyIsInJlZ2lzdGVySW5zdGFuY2UiLCJjYWxsVmFsIiwiX3JvdXRlciIsImJlZm9yZVJvdXRlRW50ZXIiLCJiZWZvcmVSb3V0ZUxlYXZlIiwiYmVmb3JlUm91dGVVcGRhdGUiLCJUb3BpY1ZpZGVvcyIsIlZ1ZUZpbHRlcnMiLCJWdWVJbmZpbml0ZVNjcm9sbCIsIlZ1ZVByb2dyZXNzQmFyIiwiQXBwIl0sIm1hcHBpbmdzIjoiYUFDRSxTQUFTQSxFQUFxQkMsR0FRN0IsSUFQQSxJQU1JQyxFQUFVQyxFQU5WQyxFQUFXSCxFQUFLLEdBQ2hCSSxFQUFjSixFQUFLLEdBS0FLLEVBQUksRUFBR0MsRUFBVyxHQUNwQ0QsRUFBSUYsRUFBU0ksT0FBUUYsSUFDekJILEVBQVVDLEVBQVNFLEdBQ2hCRyxPQUFPQyxVQUFVQyxlQUFlQyxLQUFLQyxFQUFpQlYsSUFBWVUsRUFBZ0JWLElBQ3BGSSxFQUFTTyxLQUFLRCxFQUFnQlYsR0FBUyxJQUV4Q1UsRUFBZ0JWLEdBQVcsRUFFNUIsSUFBSUQsS0FBWUcsRUFDWkksT0FBT0MsVUFBVUMsZUFBZUMsS0FBS1AsRUFBYUgsS0FDcERhLEVBQVFiLEdBQVlHLEVBQVlILElBS2xDLElBRkdjLEdBQXFCQSxFQUFvQmYsR0FFdENNLEVBQVNDLFFBQ2RELEVBQVNVLE9BQVRWLEdBT0YsSUFBSVcsRUFBbUIsR0FLbkJMLEVBQWtCLENBQ3JCTSxHQUFJLEdBV0wsU0FBU0MsRUFBb0JsQixHQUc1QixHQUFHZ0IsRUFBaUJoQixHQUNuQixPQUFPZ0IsRUFBaUJoQixHQUFVbUIsUUFHbkMsSUFBSUMsRUFBU0osRUFBaUJoQixHQUFZLENBQ3pDSSxFQUFHSixFQUNIcUIsR0FB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LFlBUXZDMlUsZ0JBQWlCLGNBR25CdEYsR0FBT3lQLFdBQVcsU0FBQzNxRCxFQUFJOEssRUFBTXFKLElBQ3hCblUsRUFBRys0QyxLQUFLbEksV0FBYS9sQyxFQUFLaXVDLEtBQUtsSSxZQUNoQ3AxQyxPQUFPZ3FELFNBQVMsRUFBRyxHQUVyQnR4QyxNQUdhK21DLFUsOEVDbEVmaDJCLElBQUlhLElBQUl3dUIsTUFDUnJ2QixJQUFJYSxJQUFJMmxDLE1BQ1J4bUMsSUFBSWEsSUFBSTRsQyxNQUNSem1DLElBQUlhLElBQUk2bEMsS0FBZ0IsQ0FDdEJ4ZSxNQUFPLG9CQUNQQyxZQUFhLG1CQUNiUSxPQUFRLFFBR1YsSUFBSTNvQixJQUFJLENBQ05zQyxHQUFJLE9BQ0owekIsVUFDQWpuQyxPQUFRLFNBQUFvc0IsR0FBQyxPQUFJQSxFQUFFd3JCIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIGluc3RhbGwgYSBKU09OUCBjYWxsYmFjayBmb3IgY2h1bmsgbG9hZGluZ1xuIFx0ZnVuY3Rpb24gd2VicGFja0pzb25wQ2FsbGJhY2soZGF0YSkge1xuIFx0XHR2YXIgY2h1bmtJZHMgPSBkYXRhWzBdO1xuIFx0XHR2YXIgbW9yZU1vZHVsZXMgPSBkYXRhWzFdO1xuXG5cbiBcdFx0Ly8gYWRkIFwibW9yZU1vZHVsZXNcIiB0byB0aGUgbW9kdWxlcyBvYmplY3QsXG4gXHRcdC8vIHRoZW4gZmxhZyBhbGwgXCJjaHVua0lkc1wiIGFzIGxvYWRlZCBhbmQgZmlyZSBjYWxsYmFja1xuIFx0XHR2YXIgbW9kdWxlSWQsIGNodW5rSWQsIGkgPSAwLCByZXNvbHZlcyA9IFtdO1xuIFx0XHRmb3IoO2kgPCBjaHVua0lkcy5sZW5ndGg7IGkrKykge1xuIFx0XHRcdGNodW5rSWQgPSBjaHVua0lkc1tpXTtcbiBcdFx0XHRpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoaW5zdGFsbGVkQ2h1bmtzLCBjaHVua0lkKSAmJiBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0pIHtcbiBcdFx0XHRcdHJlc29sdmVzLnB1c2goaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdWzBdKTtcbiBcdFx0XHR9XG4gXHRcdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdID0gMDtcbiBcdFx0fVxuIFx0XHRmb3IobW9kdWxlSWQgaW4gbW9yZU1vZHVsZXMpIHtcbiBcdFx0XHRpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9yZU1vZHVsZXMsIG1vZHVsZUlkKSkge1xuIFx0XHRcdFx0bW9kdWxlc1ttb2R1bGVJZF0gPSBtb3JlTW9kdWxlc1ttb2R1bGVJZF07XG4gXHRcdFx0fVxuIFx0XHR9XG4gXHRcdGlmKHBhcmVudEpzb25wRnVuY3Rpb24pIHBhcmVudEpzb25wRnVuY3Rpb24oZGF0YSk7XG5cbiBcdFx0d2hpbGUocmVzb2x2ZXMubGVuZ3RoKSB7XG4gXHRcdFx0cmVzb2x2ZXMuc2hpZnQoKSgpO1xuIFx0XHR9XG5cbiBcdH07XG5cblxuIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3NcbiBcdC8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuIFx0Ly8gUHJvbWlzZSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbiBcdHZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG4gXHRcdDE3OiAwXG4gXHR9O1xuXG5cblxuIFx0Ly8gc2NyaXB0IHBhdGggZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIGpzb25wU2NyaXB0U3JjKGNodW5rSWQpIHtcbiBcdFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18ucCArIFwiXCIgKyBjaHVua0lkICsgXCIuYnVuZGxlLmpzXCJcbiBcdH1cblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG4gXHQvLyBUaGlzIGZpbGUgY29udGFpbnMgb25seSB0aGUgZW50cnkgY2h1bmsuXG4gXHQvLyBUaGUgY2h1bmsgbG9hZGluZyBmdW5jdGlvbiBmb3IgYWRkaXRpb25hbCBjaHVua3NcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZSA9IGZ1bmN0aW9uIHJlcXVpcmVFbnN1cmUoY2h1bmtJZCkge1xuIFx0XHR2YXIgcHJvbWlzZXMgPSBbXTtcblxuXG4gXHRcdC8vIEpTT05QIGNodW5rIGxvYWRpbmcgZm9yIGphdmFzY3JpcHRcblxuIFx0XHR2YXIgaW5zdGFsbGVkQ2h1bmtEYXRhID0gaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdO1xuIFx0XHRpZihpbnN0YWxsZWRDaHVua0RhdGEgIT09IDApIHsgLy8gMCBtZWFucyBcImFscmVhZHkgaW5zdGFsbGVkXCIuXG5cbiBcdFx0XHQvLyBhIFByb21pc2UgbWVhbnMgXCJjdXJyZW50bHkgbG9hZGluZ1wiLlxuIFx0XHRcdGlmKGluc3RhbGxlZENodW5rRGF0YSkge1xuIFx0XHRcdFx0cHJvbWlzZXMucHVzaChpbnN0YWxsZWRDaHVua0RhdGFbMl0pO1xuIFx0XHRcdH0gZWxzZSB7XG4gXHRcdFx0XHQvLyBzZXR1cCBQcm9taXNlIGluIGNodW5rIGNhY2hlXG4gXHRcdFx0XHR2YXIgcHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuIFx0XHRcdFx0XHRpbnN0YWxsZWRDaHVua0RhdGEgPSBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gPSBbcmVzb2x2ZSwgcmVqZWN0XTtcbiBcdFx0XHRcdH0pO1xuIFx0XHRcdFx0cHJvbWlzZXMucHVzaChpbnN0YWxsZWRDaHVua0RhdGFbMl0gPSBwcm9taXNlKTtcblxuIFx0XHRcdFx0Ly8gc3RhcnQgY2h1bmsgbG9hZGluZ1xuIFx0XHRcdFx0dmFyIHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuIFx0XHRcdFx0dmFyIG9uU2NyaXB0Q29tcGxldGU7XG5cbiBcdFx0XHRcdHNjcmlwdC5jaGFyc2V0ID0gJ3V0Zi04JztcbiBcdFx0XHRcdHNjcmlwdC50aW1lb3V0ID0gMTIwO1xuIFx0XHRcdFx0aWYgKF9fd2VicGFja19yZXF1aXJlX18ubmMpIHtcbiBcdFx0XHRcdFx0c2NyaXB0LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIF9fd2VicGFja19yZXF1aXJlX18ubmMpO1xuIFx0XHRcdFx0fVxuIFx0XHRcdFx0c2NyaXB0LnNyYyA9IGpzb25wU2NyaXB0U3JjKGNodW5rSWQpO1xuXG4gXHRcdFx0XHQvLyBjcmVhdGUgZXJyb3IgYmVmb3JlIHN0YWNrIHVud291bmQgdG8gZ2V0IHVzZWZ1bCBzdGFja3RyYWNlIGxhdGVyXG4gXHRcdFx0XHR2YXIgZXJyb3IgPSBuZXcgRXJyb3IoKTtcbiBcdFx0XHRcdG9uU2NyaXB0Q29tcGxldGUgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiBcdFx0XHRcdFx0Ly8gYXZvaWQgbWVtIGxlYWtzIGluIElFLlxuIFx0XHRcdFx0XHRzY3JpcHQub25lcnJvciA9IHNjcmlwdC5vbmxvYWQgPSBudWxsO1xuIFx0XHRcdFx0XHRjbGVhclRpbWVvdXQodGltZW91dCk7XG4gXHRcdFx0XHRcdHZhciBjaHVuayA9IGluc3RhbGxlZENodW5rc1tjaHVua0lkXTtcbiBcdFx0XHRcdFx0aWYoY2h1bmsgIT09IDApIHtcbiBcdFx0XHRcdFx0XHRpZihjaHVuaykge1xuIFx0XHRcdFx0XHRcdFx0dmFyIGVycm9yVHlwZSA9IGV2ZW50ICYmIChldmVudC50eXBlID09PSAnbG9hZCcgPyAnbWlzc2luZycgOiBldmVudC50eXBlKTtcbiBcdFx0XHRcdFx0XHRcdHZhciByZWFsU3JjID0gZXZlbnQgJiYgZXZlbnQudGFyZ2V0ICYmIGV2ZW50LnRhcmdldC5zcmM7XG4gXHRcdFx0XHRcdFx0XHRlcnJvci5tZXNzYWdlID0gJ0xvYWRpbmcgY2h1bmsgJyArIGNodW5rSWQgKyAnIGZhaWxlZC5cXG4oJyArIGVycm9yVHlwZSArICc6ICcgKyByZWFsU3JjICsgJyknO1xuIFx0XHRcdFx0XHRcdFx0ZXJyb3IubmFtZSA9ICdDaHVua0xvYWRFcnJvcic7XG4gXHRcdFx0XHRcdFx0XHRlcnJvci50eXBlID0gZXJyb3JUeXBlO1xuIFx0XHRcdFx0XHRcdFx0ZXJyb3IucmVxdWVzdCA9IHJlYWxTcmM7XG4gXHRcdFx0XHRcdFx0XHRjaHVua1sxXShlcnJvcik7XG4gXHRcdFx0XHRcdFx0fVxuIFx0XHRcdFx0XHRcdGluc3RhbGxlZENodW5rc1tjaHVua0lkXSA9IHVuZGVmaW5lZDtcbiBcdFx0XHRcdFx0fVxuIFx0XHRcdFx0fTtcbiBcdFx0XHRcdHZhciB0aW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbigpe1xuIFx0XHRcdFx0XHRvblNjcmlwdENvbXBsZXRlKHsgdHlwZTogJ3RpbWVvdXQnLCB0YXJnZXQ6IHNjcmlwdCB9KTtcbiBcdFx0XHRcdH0sIDEyMDAwMCk7XG4gXHRcdFx0XHRzY3JpcHQub25lcnJvciA9IHNjcmlwdC5vbmxvYWQgPSBvblNjcmlwdENvbXBsZXRlO1xuIFx0XHRcdFx0ZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzY3JpcHQpO1xuIFx0XHRcdH1cbiBcdFx0fVxuIFx0XHRyZXR1cm4gUHJvbWlzZS5hbGwocHJvbWlzZXMpO1xuIFx0fTtcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIi9idWlsZC9cIjtcblxuIFx0Ly8gb24gZXJyb3IgZnVuY3Rpb24gZm9yIGFzeW5jIGxvYWRpbmdcbiBcdF9fd2VicGFja19yZXF1aXJlX18ub2UgPSBmdW5jdGlvbihlcnIpIHsgY29uc29sZS5lcnJvcihlcnIpOyB0aHJvdyBlcnI7IH07XG5cbiBcdHZhciBqc29ucEFycmF5ID0gd2luZG93W1wid2VicGFja0pzb25wXCJdID0gd2luZG93W1wid2VicGFja0pzb25wXCJdIHx8IFtdO1xuIFx0dmFyIG9sZEpzb25wRnVuY3Rpb24gPSBqc29ucEFycmF5LnB1c2guYmluZChqc29ucEFycmF5KTtcbiBcdGpzb25wQXJyYXkucHVzaCA9IHdlYnBhY2tKc29ucENhbGxiYWNrO1xuIFx0anNvbnBBcnJheSA9IGpzb25wQXJyYXkuc2xpY2UoKTtcbiBcdGZvcih2YXIgaSA9IDA7IGkgPCBqc29ucEFycmF5Lmxlbmd0aDsgaSsrKSB3ZWJwYWNrSnNvbnBDYWxsYmFjayhqc29ucEFycmF5W2ldKTtcbiBcdHZhciBwYXJlbnRKc29ucEZ1bmN0aW9uID0gb2xkSnNvbnBGdW5jdGlvbjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDIwKTtcbiIsIi8qIVxuICogVnVlLmpzIHYyLjYuMTBcbiAqIChjKSAyMDE0LTIwMTkgRXZhbiBZb3VcbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLyogICovXG5cbnZhciBlbXB0eU9iamVjdCA9IE9iamVjdC5mcmVlemUoe30pO1xuXG4vLyBUaGVzZSBoZWxwZXJzIHByb2R1Y2UgYmV0dGVyIFZNIGNvZGUgaW4gSlMgZW5naW5lcyBkdWUgdG8gdGhlaXJcbi8vIGV4cGxpY2l0bmVzcyBhbmQgZnVuY3Rpb24gaW5saW5pbmcuXG5mdW5jdGlvbiBpc1VuZGVmICh2KSB7XG4gIHJldHVybiB2ID09PSB1bmRlZmluZWQgfHwgdiA9PT0gbnVsbFxufVxuXG5mdW5jdGlvbiBpc0RlZiAodikge1xuICByZXR1cm4gdiAhPT0gdW5kZWZpbmVkICYmIHYgIT09IG51bGxcbn1cblxuZnVuY3Rpb24gaXNUcnVlICh2KSB7XG4gIHJldHVybiB2ID09PSB0cnVlXG59XG5cbmZ1bmN0aW9uIGlzRmFsc2UgKHYpIHtcbiAgcmV0dXJuIHYgPT09IGZhbHNlXG59XG5cbi8qKlxuICogQ2hlY2sgaWYgdmFsdWUgaXMgcHJpbWl0aXZlLlxuICovXG5mdW5jdGlvbiBpc1ByaW1pdGl2ZSAodmFsdWUpIHtcbiAgcmV0dXJuIChcbiAgICB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnIHx8XG4gICAgdHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyB8fFxuICAgIC8vICRmbG93LWRpc2FibGUtbGluZVxuICAgIHR5cGVvZiB2YWx1ZSA9PT0gJ3N5bWJvbCcgfHxcbiAgICB0eXBlb2YgdmFsdWUgPT09ICdib29sZWFuJ1xuICApXG59XG5cbi8qKlxuICogUXVpY2sgb2JqZWN0IGNoZWNrIC0gdGhpcyBpcyBwcmltYXJpbHkgdXNlZCB0byB0ZWxsXG4gKiBPYmplY3RzIGZyb20gcHJpbWl0aXZlIHZhbHVlcyB3aGVuIHdlIGtub3cgdGhlIHZhbHVlXG4gKiBpcyBhIEpTT04tY29tcGxpYW50IHR5cGUuXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0IChvYmopIHtcbiAgcmV0dXJuIG9iaiAhPT0gbnVsbCAmJiB0eXBlb2Ygb2JqID09PSAnb2JqZWN0J1xufVxuXG4vKipcbiAqIEdldCB0aGUgcmF3IHR5cGUgc3RyaW5nIG9mIGEgdmFsdWUsIGUuZy4sIFtvYmplY3QgT2JqZWN0XS5cbiAqL1xudmFyIF90b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG5cbmZ1bmN0aW9uIHRvUmF3VHlwZSAodmFsdWUpIHtcbiAgcmV0dXJuIF90b1N0cmluZy5jYWxsKHZhbHVlKS5zbGljZSg4LCAtMSlcbn1cblxuLyoqXG4gKiBTdHJpY3Qgb2JqZWN0IHR5cGUgY2hlY2suIE9ubHkgcmV0dXJucyB0cnVlXG4gKiBmb3IgcGxhaW4gSmF2YVNjcmlwdCBvYmplY3RzLlxuICovXG5mdW5jdGlvbiBpc1BsYWluT2JqZWN0IChvYmopIHtcbiAgcmV0dXJuIF90b1N0cmluZy5jYWxsKG9iaikgPT09ICdbb2JqZWN0IE9iamVjdF0nXG59XG5cbmZ1bmN0aW9uIGlzUmVnRXhwICh2KSB7XG4gIHJldHVybiBfdG9TdHJpbmcuY2FsbCh2KSA9PT0gJ1tvYmplY3QgUmVnRXhwXSdcbn1cblxuLyoqXG4gKiBDaGVjayBpZiB2YWwgaXMgYSB2YWxpZCBhcnJheSBpbmRleC5cbiAqL1xuZnVuY3Rpb24gaXNWYWxpZEFycmF5SW5kZXggKHZhbCkge1xuICB2YXIgbiA9IHBhcnNlRmxvYXQoU3RyaW5nKHZhbCkpO1xuICByZXR1cm4gbiA+PSAwICYmIE1hdGguZmxvb3IobikgPT09IG4gJiYgaXNGaW5pdGUodmFsKVxufVxuXG5mdW5jdGlvbiBpc1Byb21pc2UgKHZhbCkge1xuICByZXR1cm4gKFxuICAgIGlzRGVmKHZhbCkgJiZcbiAgICB0eXBlb2YgdmFsLnRoZW4gPT09ICdmdW5jdGlvbicgJiZcbiAgICB0eXBlb2YgdmFsLmNhdGNoID09PSAnZnVuY3Rpb24nXG4gIClcbn1cblxuLyoqXG4gKiBDb252ZXJ0IGEgdmFsdWUgdG8gYSBzdHJpbmcgdGhhdCBpcyBhY3R1YWxseSByZW5kZXJlZC5cbiAqL1xuZnVuY3Rpb24gdG9TdHJpbmcgKHZhbCkge1xuICByZXR1cm4gdmFsID09IG51bGxcbiAgICA/ICcnXG4gICAgOiBBcnJheS5pc0FycmF5KHZhbCkgfHwgKGlzUGxhaW5PYmplY3QodmFsKSAmJiB2YWwudG9TdHJpbmcgPT09IF90b1N0cmluZylcbiAgICAgID8gSlNPTi5zdHJpbmdpZnkodmFsLCBudWxsLCAyKVxuICAgICAgOiBTdHJpbmcodmFsKVxufVxuXG4vKipcbiAqIENvbnZlcnQgYW4gaW5wdXQgdmFsdWUgdG8gYSBudW1iZXIgZm9yIHBlcnNpc3RlbmNlLlxuICogSWYgdGhlIGNvbnZlcnNpb24gZmFpbHMsIHJldHVybiBvcmlnaW5hbCBzdHJpbmcuXG4gKi9cbmZ1bmN0aW9uIHRvTnVtYmVyICh2YWwpIHtcbiAgdmFyIG4gPSBwYXJzZUZsb2F0KHZhbCk7XG4gIHJldHVybiBpc05hTihuKSA/IHZhbCA6IG5cbn1cblxuLyoqXG4gKiBNYWtlIGEgbWFwIGFuZCByZXR1cm4gYSBmdW5jdGlvbiBmb3IgY2hlY2tpbmcgaWYgYSBrZXlcbiAqIGlzIGluIHRoYXQgbWFwLlxuICovXG5mdW5jdGlvbiBtYWtlTWFwIChcbiAgc3RyLFxuICBleHBlY3RzTG93ZXJDYXNlXG4pIHtcbiAgdmFyIG1hcCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIHZhciBsaXN0ID0gc3RyLnNwbGl0KCcsJyk7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIG1hcFtsaXN0W2ldXSA9IHRydWU7XG4gIH1cbiAgcmV0dXJuIGV4cGVjdHNMb3dlckNhc2VcbiAgICA/IGZ1bmN0aW9uICh2YWwpIHsgcmV0dXJuIG1hcFt2YWwudG9Mb3dlckNhc2UoKV07IH1cbiAgICA6IGZ1bmN0aW9uICh2YWwpIHsgcmV0dXJuIG1hcFt2YWxdOyB9XG59XG5cbi8qKlxuICogQ2hlY2sgaWYgYSB0YWcgaXMgYSBidWlsdC1pbiB0YWcuXG4gKi9cbnZhciBpc0J1aWx0SW5UYWcgPSBtYWtlTWFwKCdzbG90LGNvbXBvbmVudCcsIHRydWUpO1xuXG4vKipcbiAqIENoZWNrIGlmIGFuIGF0dHJpYnV0ZSBpcyBhIHJlc2VydmVkIGF0dHJpYnV0ZS5cbiAqL1xudmFyIGlzUmVzZXJ2ZWRBdHRyaWJ1dGUgPSBtYWtlTWFwKCdrZXkscmVmLHNsb3Qsc2xvdC1zY29wZSxpcycpO1xuXG4vKipcbiAqIFJlbW92ZSBhbiBpdGVtIGZyb20gYW4gYXJyYXkuXG4gKi9cbmZ1bmN0aW9uIHJlbW92ZSAoYXJyLCBpdGVtKSB7XG4gIGlmIChhcnIubGVuZ3RoKSB7XG4gICAgdmFyIGluZGV4ID0gYXJyLmluZGV4T2YoaXRlbSk7XG4gICAgaWYgKGluZGV4ID4gLTEpIHtcbiAgICAgIHJldHVybiBhcnIuc3BsaWNlKGluZGV4LCAxKVxuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIENoZWNrIHdoZXRoZXIgYW4gb2JqZWN0IGhhcyB0aGUgcHJvcGVydHkuXG4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5mdW5jdGlvbiBoYXNPd24gKG9iaiwga2V5KSB7XG4gIHJldHVybiBoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIGNhY2hlZCB2ZXJzaW9uIG9mIGEgcHVyZSBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gY2FjaGVkIChmbikge1xuICB2YXIgY2FjaGUgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICByZXR1cm4gKGZ1bmN0aW9uIGNhY2hlZEZuIChzdHIpIHtcbiAgICB2YXIgaGl0ID0gY2FjaGVbc3RyXTtcbiAgICByZXR1cm4gaGl0IHx8IChjYWNoZVtzdHJdID0gZm4oc3RyKSlcbiAgfSlcbn1cblxuLyoqXG4gKiBDYW1lbGl6ZSBhIGh5cGhlbi1kZWxpbWl0ZWQgc3RyaW5nLlxuICovXG52YXIgY2FtZWxpemVSRSA9IC8tKFxcdykvZztcbnZhciBjYW1lbGl6ZSA9IGNhY2hlZChmdW5jdGlvbiAoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZShjYW1lbGl6ZVJFLCBmdW5jdGlvbiAoXywgYykgeyByZXR1cm4gYyA/IGMudG9VcHBlckNhc2UoKSA6ICcnOyB9KVxufSk7XG5cbi8qKlxuICogQ2FwaXRhbGl6ZSBhIHN0cmluZy5cbiAqL1xudmFyIGNhcGl0YWxpemUgPSBjYWNoZWQoZnVuY3Rpb24gKHN0cikge1xuICByZXR1cm4gc3RyLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgc3RyLnNsaWNlKDEpXG59KTtcblxuLyoqXG4gKiBIeXBoZW5hdGUgYSBjYW1lbENhc2Ugc3RyaW5nLlxuICovXG52YXIgaHlwaGVuYXRlUkUgPSAvXFxCKFtBLVpdKS9nO1xudmFyIGh5cGhlbmF0ZSA9IGNhY2hlZChmdW5jdGlvbiAoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZShoeXBoZW5hdGVSRSwgJy0kMScpLnRvTG93ZXJDYXNlKClcbn0pO1xuXG4vKipcbiAqIFNpbXBsZSBiaW5kIHBvbHlmaWxsIGZvciBlbnZpcm9ubWVudHMgdGhhdCBkbyBub3Qgc3VwcG9ydCBpdCxcbiAqIGUuZy4sIFBoYW50b21KUyAxLnguIFRlY2huaWNhbGx5LCB3ZSBkb24ndCBuZWVkIHRoaXMgYW55bW9yZVxuICogc2luY2UgbmF0aXZlIGJpbmQgaXMgbm93IHBlcmZvcm1hbnQgZW5vdWdoIGluIG1vc3QgYnJvd3NlcnMuXG4gKiBCdXQgcmVtb3ZpbmcgaXQgd291bGQgbWVhbiBicmVha2luZyBjb2RlIHRoYXQgd2FzIGFibGUgdG8gcnVuIGluXG4gKiBQaGFudG9tSlMgMS54LCBzbyB0aGlzIG11c3QgYmUga2VwdCBmb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eS5cbiAqL1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuZnVuY3Rpb24gcG9seWZpbGxCaW5kIChmbiwgY3R4KSB7XG4gIGZ1bmN0aW9uIGJvdW5kRm4gKGEpIHtcbiAgICB2YXIgbCA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgcmV0dXJuIGxcbiAgICAgID8gbCA+IDFcbiAgICAgICAgPyBmbi5hcHBseShjdHgsIGFyZ3VtZW50cylcbiAgICAgICAgOiBmbi5jYWxsKGN0eCwgYSlcbiAgICAgIDogZm4uY2FsbChjdHgpXG4gIH1cblxuICBib3VuZEZuLl9sZW5ndGggPSBmbi5sZW5ndGg7XG4gIHJldHVybiBib3VuZEZuXG59XG5cbmZ1bmN0aW9uIG5hdGl2ZUJpbmQgKGZuLCBjdHgpIHtcbiAgcmV0dXJuIGZuLmJpbmQoY3R4KVxufVxuXG52YXIgYmluZCA9IEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kXG4gID8gbmF0aXZlQmluZFxuICA6IHBvbHlmaWxsQmluZDtcblxuLyoqXG4gKiBDb252ZXJ0IGFuIEFycmF5LWxpa2Ugb2JqZWN0IHRvIGEgcmVhbCBBcnJheS5cbiAqL1xuZnVuY3Rpb24gdG9BcnJheSAobGlzdCwgc3RhcnQpIHtcbiAgc3RhcnQgPSBzdGFydCB8fCAwO1xuICB2YXIgaSA9IGxpc3QubGVuZ3RoIC0gc3RhcnQ7XG4gIHZhciByZXQgPSBuZXcgQXJyYXkoaSk7XG4gIHdoaWxlIChpLS0pIHtcbiAgICByZXRbaV0gPSBsaXN0W2kgKyBzdGFydF07XG4gIH1cbiAgcmV0dXJuIHJldFxufVxuXG4vKipcbiAqIE1peCBwcm9wZXJ0aWVzIGludG8gdGFyZ2V0IG9iamVjdC5cbiAqL1xuZnVuY3Rpb24gZXh0ZW5kICh0bywgX2Zyb20pIHtcbiAgZm9yICh2YXIga2V5IGluIF9mcm9tKSB7XG4gICAgdG9ba2V5XSA9IF9mcm9tW2tleV07XG4gIH1cbiAgcmV0dXJuIHRvXG59XG5cbi8qKlxuICogTWVyZ2UgYW4gQXJyYXkgb2YgT2JqZWN0cyBpbnRvIGEgc2luZ2xlIE9iamVjdC5cbiAqL1xuZnVuY3Rpb24gdG9PYmplY3QgKGFycikge1xuICB2YXIgcmVzID0ge307XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGFycltpXSkge1xuICAgICAgZXh0ZW5kKHJlcywgYXJyW2ldKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc1xufVxuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xuXG4vKipcbiAqIFBlcmZvcm0gbm8gb3BlcmF0aW9uLlxuICogU3R1YmJpbmcgYXJncyB0byBtYWtlIEZsb3cgaGFwcHkgd2l0aG91dCBsZWF2aW5nIHVzZWxlc3MgdHJhbnNwaWxlZCBjb2RlXG4gKiB3aXRoIC4uLnJlc3QgKGh0dHBzOi8vZmxvdy5vcmcvYmxvZy8yMDE3LzA1LzA3L1N0cmljdC1GdW5jdGlvbi1DYWxsLUFyaXR5LykuXG4gKi9cbmZ1bmN0aW9uIG5vb3AgKGEsIGIsIGMpIHt9XG5cbi8qKlxuICogQWx3YXlzIHJldHVybiBmYWxzZS5cbiAqL1xudmFyIG5vID0gZnVuY3Rpb24gKGEsIGIsIGMpIHsgcmV0dXJuIGZhbHNlOyB9O1xuXG4vKiBlc2xpbnQtZW5hYmxlIG5vLXVudXNlZC12YXJzICovXG5cbi8qKlxuICogUmV0dXJuIHRoZSBzYW1lIHZhbHVlLlxuICovXG52YXIgaWRlbnRpdHkgPSBmdW5jdGlvbiAoXykgeyByZXR1cm4gXzsgfTtcblxuLyoqXG4gKiBDaGVjayBpZiB0d28gdmFsdWVzIGFyZSBsb29zZWx5IGVxdWFsIC0gdGhhdCBpcyxcbiAqIGlmIHRoZXkgYXJlIHBsYWluIG9iamVjdHMsIGRvIHRoZXkgaGF2ZSB0aGUgc2FtZSBzaGFwZT9cbiAqL1xuZnVuY3Rpb24gbG9vc2VFcXVhbCAoYSwgYikge1xuICBpZiAoYSA9PT0gYikgeyByZXR1cm4gdHJ1ZSB9XG4gIHZhciBpc09iamVjdEEgPSBpc09iamVjdChhKTtcbiAgdmFyIGlzT2JqZWN0QiA9IGlzT2JqZWN0KGIpO1xuICBpZiAoaXNPYmplY3RBICYmIGlzT2JqZWN0Qikge1xuICAgIHRyeSB7XG4gICAgICB2YXIgaXNBcnJheUEgPSBBcnJheS5pc0FycmF5KGEpO1xuICAgICAgdmFyIGlzQXJyYXlCID0gQXJyYXkuaXNBcnJheShiKTtcbiAgICAgIGlmIChpc0FycmF5QSAmJiBpc0FycmF5Qikge1xuICAgICAgICByZXR1cm4gYS5sZW5ndGggPT09IGIubGVuZ3RoICYmIGEuZXZlcnkoZnVuY3Rpb24gKGUsIGkpIHtcbiAgICAgICAgICByZXR1cm4gbG9vc2VFcXVhbChlLCBiW2ldKVxuICAgICAgICB9KVxuICAgICAgfSBlbHNlIGlmIChhIGluc3RhbmNlb2YgRGF0ZSAmJiBiIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgICAgICByZXR1cm4gYS5nZXRUaW1lKCkgPT09IGIuZ2V0VGltZSgpXG4gICAgICB9IGVsc2UgaWYgKCFpc0FycmF5QSAmJiAhaXNBcnJheUIpIHtcbiAgICAgICAgdmFyIGtleXNBID0gT2JqZWN0LmtleXMoYSk7XG4gICAgICAgIHZhciBrZXlzQiA9IE9iamVjdC5rZXlzKGIpO1xuICAgICAgICByZXR1cm4ga2V5c0EubGVuZ3RoID09PSBrZXlzQi5sZW5ndGggJiYga2V5c0EuZXZlcnkoZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgIHJldHVybiBsb29zZUVxdWFsKGFba2V5XSwgYltrZXldKVxuICAgICAgICB9KVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cbiAgfSBlbHNlIGlmICghaXNPYmplY3RBICYmICFpc09iamVjdEIpIHtcbiAgICByZXR1cm4gU3RyaW5nKGEpID09PSBTdHJpbmcoYilcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxufVxuXG4vKipcbiAqIFJldHVybiB0aGUgZmlyc3QgaW5kZXggYXQgd2hpY2ggYSBsb29zZWx5IGVxdWFsIHZhbHVlIGNhbiBiZVxuICogZm91bmQgaW4gdGhlIGFycmF5IChpZiB2YWx1ZSBpcyBhIHBsYWluIG9iamVjdCwgdGhlIGFycmF5IG11c3RcbiAqIGNvbnRhaW4gYW4gb2JqZWN0IG9mIHRoZSBzYW1lIHNoYXBlKSwgb3IgLTEgaWYgaXQgaXMgbm90IHByZXNlbnQuXG4gKi9cbmZ1bmN0aW9uIGxvb3NlSW5kZXhPZiAoYXJyLCB2YWwpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAobG9vc2VFcXVhbChhcnJbaV0sIHZhbCkpIHsgcmV0dXJuIGkgfVxuICB9XG4gIHJldHVybiAtMVxufVxuXG4vKipcbiAqIEVuc3VyZSBhIGZ1bmN0aW9uIGlzIGNhbGxlZCBvbmx5IG9uY2UuXG4gKi9cbmZ1bmN0aW9uIG9uY2UgKGZuKSB7XG4gIHZhciBjYWxsZWQgPSBmYWxzZTtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoIWNhbGxlZCkge1xuICAgICAgY2FsbGVkID0gdHJ1ZTtcbiAgICAgIGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfVxuICB9XG59XG5cbnZhciBTU1JfQVRUUiA9ICdkYXRhLXNlcnZlci1yZW5kZXJlZCc7XG5cbnZhciBBU1NFVF9UWVBFUyA9IFtcbiAgJ2NvbXBvbmVudCcsXG4gICdkaXJlY3RpdmUnLFxuICAnZmlsdGVyJ1xuXTtcblxudmFyIExJRkVDWUNMRV9IT09LUyA9IFtcbiAgJ2JlZm9yZUNyZWF0ZScsXG4gICdjcmVhdGVkJyxcbiAgJ2JlZm9yZU1vdW50JyxcbiAgJ21vdW50ZWQnLFxuICAnYmVmb3JlVXBkYXRlJyxcbiAgJ3VwZGF0ZWQnLFxuICAnYmVmb3JlRGVzdHJveScsXG4gICdkZXN0cm95ZWQnLFxuICAnYWN0aXZhdGVkJyxcbiAgJ2RlYWN0aXZhdGVkJyxcbiAgJ2Vycm9yQ2FwdHVyZWQnLFxuICAnc2VydmVyUHJlZmV0Y2gnXG5dO1xuXG4vKiAgKi9cblxuXG5cbnZhciBjb25maWcgPSAoe1xuICAvKipcbiAgICogT3B0aW9uIG1lcmdlIHN0cmF0ZWdpZXMgKHVzZWQgaW4gY29yZS91dGlsL29wdGlvbnMpXG4gICAqL1xuICAvLyAkZmxvdy1kaXNhYmxlLWxpbmVcbiAgb3B0aW9uTWVyZ2VTdHJhdGVnaWVzOiBPYmplY3QuY3JlYXRlKG51bGwpLFxuXG4gIC8qKlxuICAgKiBXaGV0aGVyIHRvIHN1cHByZXNzIHdhcm5pbmdzLlxuICAgKi9cbiAgc2lsZW50OiBmYWxzZSxcblxuICAvKipcbiAgICogU2hvdyBwcm9kdWN0aW9uIG1vZGUgdGlwIG1lc3NhZ2Ugb24gYm9vdD9cbiAgICovXG4gIHByb2R1Y3Rpb25UaXA6IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicsXG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgdG8gZW5hYmxlIGRldnRvb2xzXG4gICAqL1xuICBkZXZ0b29sczogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyxcblxuICAvKipcbiAgICogV2hldGhlciB0byByZWNvcmQgcGVyZlxuICAgKi9cbiAgcGVyZm9ybWFuY2U6IGZhbHNlLFxuXG4gIC8qKlxuICAgKiBFcnJvciBoYW5kbGVyIGZvciB3YXRjaGVyIGVycm9yc1xuICAgKi9cbiAgZXJyb3JIYW5kbGVyOiBudWxsLFxuXG4gIC8qKlxuICAgKiBXYXJuIGhhbmRsZXIgZm9yIHdhdGNoZXIgd2FybnNcbiAgICovXG4gIHdhcm5IYW5kbGVyOiBudWxsLFxuXG4gIC8qKlxuICAgKiBJZ25vcmUgY2VydGFpbiBjdXN0b20gZWxlbWVudHNcbiAgICovXG4gIGlnbm9yZWRFbGVtZW50czogW10sXG5cbiAgLyoqXG4gICAqIEN1c3RvbSB1c2VyIGtleSBhbGlhc2VzIGZvciB2LW9uXG4gICAqL1xuICAvLyAkZmxvdy1kaXNhYmxlLWxpbmVcbiAga2V5Q29kZXM6IE9iamVjdC5jcmVhdGUobnVsbCksXG5cbiAgLyoqXG4gICAqIENoZWNrIGlmIGEgdGFnIGlzIHJlc2VydmVkIHNvIHRoYXQgaXQgY2Fubm90IGJlIHJlZ2lzdGVyZWQgYXMgYVxuICAgKiBjb21wb25lbnQuIFRoaXMgaXMgcGxhdGZvcm0tZGVwZW5kZW50IGFuZCBtYXkgYmUgb3ZlcndyaXR0ZW4uXG4gICAqL1xuICBpc1Jlc2VydmVkVGFnOiBubyxcblxuICAvKipcbiAgICogQ2hlY2sgaWYgYW4gYXR0cmlidXRlIGlzIHJlc2VydmVkIHNvIHRoYXQgaXQgY2Fubm90IGJlIHVzZWQgYXMgYSBjb21wb25lbnRcbiAgICogcHJvcC4gVGhpcyBpcyBwbGF0Zm9ybS1kZXBlbmRlbnQgYW5kIG1heSBiZSBvdmVyd3JpdHRlbi5cbiAgICovXG4gIGlzUmVzZXJ2ZWRBdHRyOiBubyxcblxuICAvKipcbiAgICogQ2hlY2sgaWYgYSB0YWcgaXMgYW4gdW5rbm93biBlbGVtZW50LlxuICAgKiBQbGF0Zm9ybS1kZXBlbmRlbnQuXG4gICAqL1xuICBpc1Vua25vd25FbGVtZW50OiBubyxcblxuICAvKipcbiAgICogR2V0IHRoZSBuYW1lc3BhY2Ugb2YgYW4gZWxlbWVudFxuICAgKi9cbiAgZ2V0VGFnTmFtZXNwYWNlOiBub29wLFxuXG4gIC8qKlxuICAgKiBQYXJzZSB0aGUgcmVhbCB0YWcgbmFtZSBmb3IgdGhlIHNwZWNpZmljIHBsYXRmb3JtLlxuICAgKi9cbiAgcGFyc2VQbGF0Zm9ybVRhZ05hbWU6IGlkZW50aXR5LFxuXG4gIC8qKlxuICAgKiBDaGVjayBpZiBhbiBhdHRyaWJ1dGUgbXVzdCBiZSBib3VuZCB1c2luZyBwcm9wZXJ0eSwgZS5nLiB2YWx1ZVxuICAgKiBQbGF0Zm9ybS1kZXBlbmRlbnQuXG4gICAqL1xuICBtdXN0VXNlUHJvcDogbm8sXG5cbiAgLyoqXG4gICAqIFBlcmZvcm0gdXBkYXRlcyBhc3luY2hyb25vdXNseS4gSW50ZW5kZWQgdG8gYmUgdXNlZCBieSBWdWUgVGVzdCBVdGlsc1xuICAgKiBUaGlzIHdpbGwgc2lnbmlmaWNhbnRseSByZWR1Y2UgcGVyZm9ybWFuY2UgaWYgc2V0IHRvIGZhbHNlLlxuICAgKi9cbiAgYXN5bmM6IHRydWUsXG5cbiAgLyoqXG4gICAqIEV4cG9zZWQgZm9yIGxlZ2FjeSByZWFzb25zXG4gICAqL1xuICBfbGlmZWN5Y2xlSG9va3M6IExJRkVDWUNMRV9IT09LU1xufSk7XG5cbi8qICAqL1xuXG4vKipcbiAqIHVuaWNvZGUgbGV0dGVycyB1c2VkIGZvciBwYXJzaW5nIGh0bWwgdGFncywgY29tcG9uZW50IG5hbWVzIGFuZCBwcm9wZXJ0eSBwYXRocy5cbiAqIHVzaW5nIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9odG1sNTMvc2VtYW50aWNzLXNjcmlwdGluZy5odG1sI3BvdGVudGlhbGN1c3RvbWVsZW1lbnRuYW1lXG4gKiBza2lwcGluZyBcXHUxMDAwMC1cXHVFRkZGRiBkdWUgdG8gaXQgZnJlZXppbmcgdXAgUGhhbnRvbUpTXG4gKi9cbnZhciB1bmljb2RlUmVnRXhwID0gL2EtekEtWlxcdTAwQjdcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDNGLVxcdTIwNDBcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkQvO1xuXG4vKipcbiAqIENoZWNrIGlmIGEgc3RyaW5nIHN0YXJ0cyB3aXRoICQgb3IgX1xuICovXG5mdW5jdGlvbiBpc1Jlc2VydmVkIChzdHIpIHtcbiAgdmFyIGMgPSAoc3RyICsgJycpLmNoYXJDb2RlQXQoMCk7XG4gIHJldHVybiBjID09PSAweDI0IHx8IGMgPT09IDB4NUZcbn1cblxuLyoqXG4gKiBEZWZpbmUgYSBwcm9wZXJ0eS5cbiAqL1xuZnVuY3Rpb24gZGVmIChvYmosIGtleSwgdmFsLCBlbnVtZXJhYmxlKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgIHZhbHVlOiB2YWwsXG4gICAgZW51bWVyYWJsZTogISFlbnVtZXJhYmxlLFxuICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICB9KTtcbn1cblxuLyoqXG4gKiBQYXJzZSBzaW1wbGUgcGF0aC5cbiAqL1xudmFyIGJhaWxSRSA9IG5ldyBSZWdFeHAoKFwiW15cIiArICh1bmljb2RlUmVnRXhwLnNvdXJjZSkgKyBcIi4kX1xcXFxkXVwiKSk7XG5mdW5jdGlvbiBwYXJzZVBhdGggKHBhdGgpIHtcbiAgaWYgKGJhaWxSRS50ZXN0KHBhdGgpKSB7XG4gICAgcmV0dXJuXG4gIH1cbiAgdmFyIHNlZ21lbnRzID0gcGF0aC5zcGxpdCgnLicpO1xuICByZXR1cm4gZnVuY3Rpb24gKG9iaikge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2VnbWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmICghb2JqKSB7IHJldHVybiB9XG4gICAgICBvYmogPSBvYmpbc2VnbWVudHNbaV1dO1xuICAgIH1cbiAgICByZXR1cm4gb2JqXG4gIH1cbn1cblxuLyogICovXG5cbi8vIGNhbiB3ZSB1c2UgX19wcm90b19fP1xudmFyIGhhc1Byb3RvID0gJ19fcHJvdG9fXycgaW4ge307XG5cbi8vIEJyb3dzZXIgZW52aXJvbm1lbnQgc25pZmZpbmdcbnZhciBpbkJyb3dzZXIgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJztcbnZhciBpbldlZXggPSB0eXBlb2YgV1hFbnZpcm9ubWVudCAhPT0gJ3VuZGVmaW5lZCcgJiYgISFXWEVudmlyb25tZW50LnBsYXRmb3JtO1xudmFyIHdlZXhQbGF0Zm9ybSA9IGluV2VleCAmJiBXWEVudmlyb25tZW50LnBsYXRmb3JtLnRvTG93ZXJDYXNlKCk7XG52YXIgVUEgPSBpbkJyb3dzZXIgJiYgd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKTtcbnZhciBpc0lFID0gVUEgJiYgL21zaWV8dHJpZGVudC8udGVzdChVQSk7XG52YXIgaXNJRTkgPSBVQSAmJiBVQS5pbmRleE9mKCdtc2llIDkuMCcpID4gMDtcbnZhciBpc0VkZ2UgPSBVQSAmJiBVQS5pbmRleE9mKCdlZGdlLycpID4gMDtcbnZhciBpc0FuZHJvaWQgPSAoVUEgJiYgVUEuaW5kZXhPZignYW5kcm9pZCcpID4gMCkgfHwgKHdlZXhQbGF0Zm9ybSA9PT0gJ2FuZHJvaWQnKTtcbnZhciBpc0lPUyA9IChVQSAmJiAvaXBob25lfGlwYWR8aXBvZHxpb3MvLnRlc3QoVUEpKSB8fCAod2VleFBsYXRmb3JtID09PSAnaW9zJyk7XG52YXIgaXNDaHJvbWUgPSBVQSAmJiAvY2hyb21lXFwvXFxkKy8udGVzdChVQSkgJiYgIWlzRWRnZTtcbnZhciBpc1BoYW50b21KUyA9IFVBICYmIC9waGFudG9tanMvLnRlc3QoVUEpO1xudmFyIGlzRkYgPSBVQSAmJiBVQS5tYXRjaCgvZmlyZWZveFxcLyhcXGQrKS8pO1xuXG4vLyBGaXJlZm94IGhhcyBhIFwid2F0Y2hcIiBmdW5jdGlvbiBvbiBPYmplY3QucHJvdG90eXBlLi4uXG52YXIgbmF0aXZlV2F0Y2ggPSAoe30pLndhdGNoO1xuXG52YXIgc3VwcG9ydHNQYXNzaXZlID0gZmFsc2U7XG5pZiAoaW5Ccm93c2VyKSB7XG4gIHRyeSB7XG4gICAgdmFyIG9wdHMgPSB7fTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob3B0cywgJ3Bhc3NpdmUnLCAoe1xuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQgKCkge1xuICAgICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgICAgICBzdXBwb3J0c1Bhc3NpdmUgPSB0cnVlO1xuICAgICAgfVxuICAgIH0pKTsgLy8gaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL2Zsb3cvaXNzdWVzLzI4NVxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCd0ZXN0LXBhc3NpdmUnLCBudWxsLCBvcHRzKTtcbiAgfSBjYXRjaCAoZSkge31cbn1cblxuLy8gdGhpcyBuZWVkcyB0byBiZSBsYXp5LWV2YWxlZCBiZWNhdXNlIHZ1ZSBtYXkgYmUgcmVxdWlyZWQgYmVmb3JlXG4vLyB2dWUtc2VydmVyLXJlbmRlcmVyIGNhbiBzZXQgVlVFX0VOVlxudmFyIF9pc1NlcnZlcjtcbnZhciBpc1NlcnZlclJlbmRlcmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgaWYgKF9pc1NlcnZlciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgaWYgKCFpbkJyb3dzZXIgJiYgIWluV2VleCAmJiB0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgLy8gZGV0ZWN0IHByZXNlbmNlIG9mIHZ1ZS1zZXJ2ZXItcmVuZGVyZXIgYW5kIGF2b2lkXG4gICAgICAvLyBXZWJwYWNrIHNoaW1taW5nIHRoZSBwcm9jZXNzXG4gICAgICBfaXNTZXJ2ZXIgPSBnbG9iYWxbJ3Byb2Nlc3MnXSAmJiBnbG9iYWxbJ3Byb2Nlc3MnXS5lbnYuVlVFX0VOViA9PT0gJ3NlcnZlcic7XG4gICAgfSBlbHNlIHtcbiAgICAgIF9pc1NlcnZlciA9IGZhbHNlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gX2lzU2VydmVyXG59O1xuXG4vLyBkZXRlY3QgZGV2dG9vbHNcbnZhciBkZXZ0b29scyA9IGluQnJvd3NlciAmJiB3aW5kb3cuX19WVUVfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbmZ1bmN0aW9uIGlzTmF0aXZlIChDdG9yKSB7XG4gIHJldHVybiB0eXBlb2YgQ3RvciA9PT0gJ2Z1bmN0aW9uJyAmJiAvbmF0aXZlIGNvZGUvLnRlc3QoQ3Rvci50b1N0cmluZygpKVxufVxuXG52YXIgaGFzU3ltYm9sID1cbiAgdHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgaXNOYXRpdmUoU3ltYm9sKSAmJlxuICB0eXBlb2YgUmVmbGVjdCAhPT0gJ3VuZGVmaW5lZCcgJiYgaXNOYXRpdmUoUmVmbGVjdC5vd25LZXlzKTtcblxudmFyIF9TZXQ7XG4vKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi8gLy8gJGZsb3ctZGlzYWJsZS1saW5lXG5pZiAodHlwZW9mIFNldCAhPT0gJ3VuZGVmaW5lZCcgJiYgaXNOYXRpdmUoU2V0KSkge1xuICAvLyB1c2UgbmF0aXZlIFNldCB3aGVuIGF2YWlsYWJsZS5cbiAgX1NldCA9IFNldDtcbn0gZWxzZSB7XG4gIC8vIGEgbm9uLXN0YW5kYXJkIFNldCBwb2x5ZmlsbCB0aGF0IG9ubHkgd29ya3Mgd2l0aCBwcmltaXRpdmUga2V5cy5cbiAgX1NldCA9IC8qQF9fUFVSRV9fKi8oZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFNldCAoKSB7XG4gICAgICB0aGlzLnNldCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgfVxuICAgIFNldC5wcm90b3R5cGUuaGFzID0gZnVuY3Rpb24gaGFzIChrZXkpIHtcbiAgICAgIHJldHVybiB0aGlzLnNldFtrZXldID09PSB0cnVlXG4gICAgfTtcbiAgICBTZXQucHJvdG90eXBlLmFkZCA9IGZ1bmN0aW9uIGFkZCAoa2V5KSB7XG4gICAgICB0aGlzLnNldFtrZXldID0gdHJ1ZTtcbiAgICB9O1xuICAgIFNldC5wcm90b3R5cGUuY2xlYXIgPSBmdW5jdGlvbiBjbGVhciAoKSB7XG4gICAgICB0aGlzLnNldCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgfTtcblxuICAgIHJldHVybiBTZXQ7XG4gIH0oKSk7XG59XG5cbi8qICAqL1xuXG52YXIgd2FybiA9IG5vb3A7XG52YXIgdGlwID0gbm9vcDtcbnZhciBnZW5lcmF0ZUNvbXBvbmVudFRyYWNlID0gKG5vb3ApOyAvLyB3b3JrIGFyb3VuZCBmbG93IGNoZWNrXG52YXIgZm9ybWF0Q29tcG9uZW50TmFtZSA9IChub29wKTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIGhhc0NvbnNvbGUgPSB0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCc7XG4gIHZhciBjbGFzc2lmeVJFID0gLyg/Ol58Wy1fXSkoXFx3KS9nO1xuICB2YXIgY2xhc3NpZnkgPSBmdW5jdGlvbiAoc3RyKSB7IHJldHVybiBzdHJcbiAgICAucmVwbGFjZShjbGFzc2lmeVJFLCBmdW5jdGlvbiAoYykgeyByZXR1cm4gYy50b1VwcGVyQ2FzZSgpOyB9KVxuICAgIC5yZXBsYWNlKC9bLV9dL2csICcnKTsgfTtcblxuICB3YXJuID0gZnVuY3Rpb24gKG1zZywgdm0pIHtcbiAgICB2YXIgdHJhY2UgPSB2bSA/IGdlbmVyYXRlQ29tcG9uZW50VHJhY2Uodm0pIDogJyc7XG5cbiAgICBpZiAoY29uZmlnLndhcm5IYW5kbGVyKSB7XG4gICAgICBjb25maWcud2FybkhhbmRsZXIuY2FsbChudWxsLCBtc2csIHZtLCB0cmFjZSk7XG4gICAgfSBlbHNlIGlmIChoYXNDb25zb2xlICYmICghY29uZmlnLnNpbGVudCkpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoKFwiW1Z1ZSB3YXJuXTogXCIgKyBtc2cgKyB0cmFjZSkpO1xuICAgIH1cbiAgfTtcblxuICB0aXAgPSBmdW5jdGlvbiAobXNnLCB2bSkge1xuICAgIGlmIChoYXNDb25zb2xlICYmICghY29uZmlnLnNpbGVudCkpIHtcbiAgICAgIGNvbnNvbGUud2FybihcIltWdWUgdGlwXTogXCIgKyBtc2cgKyAoXG4gICAgICAgIHZtID8gZ2VuZXJhdGVDb21wb25lbnRUcmFjZSh2bSkgOiAnJ1xuICAgICAgKSk7XG4gICAgfVxuICB9O1xuXG4gIGZvcm1hdENvbXBvbmVudE5hbWUgPSBmdW5jdGlvbiAodm0sIGluY2x1ZGVGaWxlKSB7XG4gICAgaWYgKHZtLiRyb290ID09PSB2bSkge1xuICAgICAgcmV0dXJuICc8Um9vdD4nXG4gICAgfVxuICAgIHZhciBvcHRpb25zID0gdHlwZW9mIHZtID09PSAnZnVuY3Rpb24nICYmIHZtLmNpZCAhPSBudWxsXG4gICAgICA/IHZtLm9wdGlvbnNcbiAgICAgIDogdm0uX2lzVnVlXG4gICAgICAgID8gdm0uJG9wdGlvbnMgfHwgdm0uY29uc3RydWN0b3Iub3B0aW9uc1xuICAgICAgICA6IHZtO1xuICAgIHZhciBuYW1lID0gb3B0aW9ucy5uYW1lIHx8IG9wdGlvbnMuX2NvbXBvbmVudFRhZztcbiAgICB2YXIgZmlsZSA9IG9wdGlvbnMuX19maWxlO1xuICAgIGlmICghbmFtZSAmJiBmaWxlKSB7XG4gICAgICB2YXIgbWF0Y2ggPSBmaWxlLm1hdGNoKC8oW14vXFxcXF0rKVxcLnZ1ZSQvKTtcbiAgICAgIG5hbWUgPSBtYXRjaCAmJiBtYXRjaFsxXTtcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgKG5hbWUgPyAoXCI8XCIgKyAoY2xhc3NpZnkobmFtZSkpICsgXCI+XCIpIDogXCI8QW5vbnltb3VzPlwiKSArXG4gICAgICAoZmlsZSAmJiBpbmNsdWRlRmlsZSAhPT0gZmFsc2UgPyAoXCIgYXQgXCIgKyBmaWxlKSA6ICcnKVxuICAgIClcbiAgfTtcblxuICB2YXIgcmVwZWF0ID0gZnVuY3Rpb24gKHN0ciwgbikge1xuICAgIHZhciByZXMgPSAnJztcbiAgICB3aGlsZSAobikge1xuICAgICAgaWYgKG4gJSAyID09PSAxKSB7IHJlcyArPSBzdHI7IH1cbiAgICAgIGlmIChuID4gMSkgeyBzdHIgKz0gc3RyOyB9XG4gICAgICBuID4+PSAxO1xuICAgIH1cbiAgICByZXR1cm4gcmVzXG4gIH07XG5cbiAgZ2VuZXJhdGVDb21wb25lbnRUcmFjZSA9IGZ1bmN0aW9uICh2bSkge1xuICAgIGlmICh2bS5faXNWdWUgJiYgdm0uJHBhcmVudCkge1xuICAgICAgdmFyIHRyZWUgPSBbXTtcbiAgICAgIHZhciBjdXJyZW50UmVjdXJzaXZlU2VxdWVuY2UgPSAwO1xuICAgICAgd2hpbGUgKHZtKSB7XG4gICAgICAgIGlmICh0cmVlLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICB2YXIgbGFzdCA9IHRyZWVbdHJlZS5sZW5ndGggLSAxXTtcbiAgICAgICAgICBpZiAobGFzdC5jb25zdHJ1Y3RvciA9PT0gdm0uY29uc3RydWN0b3IpIHtcbiAgICAgICAgICAgIGN1cnJlbnRSZWN1cnNpdmVTZXF1ZW5jZSsrO1xuICAgICAgICAgICAgdm0gPSB2bS4kcGFyZW50O1xuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICB9IGVsc2UgaWYgKGN1cnJlbnRSZWN1cnNpdmVTZXF1ZW5jZSA+IDApIHtcbiAgICAgICAgICAgIHRyZWVbdHJlZS5sZW5ndGggLSAxXSA9IFtsYXN0LCBjdXJyZW50UmVjdXJzaXZlU2VxdWVuY2VdO1xuICAgICAgICAgICAgY3VycmVudFJlY3Vyc2l2ZVNlcXVlbmNlID0gMDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdHJlZS5wdXNoKHZtKTtcbiAgICAgICAgdm0gPSB2bS4kcGFyZW50O1xuICAgICAgfVxuICAgICAgcmV0dXJuICdcXG5cXG5mb3VuZCBpblxcblxcbicgKyB0cmVlXG4gICAgICAgIC5tYXAoZnVuY3Rpb24gKHZtLCBpKSB7IHJldHVybiAoXCJcIiArIChpID09PSAwID8gJy0tLT4gJyA6IHJlcGVhdCgnICcsIDUgKyBpICogMikpICsgKEFycmF5LmlzQXJyYXkodm0pXG4gICAgICAgICAgICA/ICgoZm9ybWF0Q29tcG9uZW50TmFtZSh2bVswXSkpICsgXCIuLi4gKFwiICsgKHZtWzFdKSArIFwiIHJlY3Vyc2l2ZSBjYWxscylcIilcbiAgICAgICAgICAgIDogZm9ybWF0Q29tcG9uZW50TmFtZSh2bSkpKTsgfSlcbiAgICAgICAgLmpvaW4oJ1xcbicpXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiAoXCJcXG5cXG4oZm91bmQgaW4gXCIgKyAoZm9ybWF0Q29tcG9uZW50TmFtZSh2bSkpICsgXCIpXCIpXG4gICAgfVxuICB9O1xufVxuXG4vKiAgKi9cblxudmFyIHVpZCA9IDA7XG5cbi8qKlxuICogQSBkZXAgaXMgYW4gb2JzZXJ2YWJsZSB0aGF0IGNhbiBoYXZlIG11bHRpcGxlXG4gKiBkaXJlY3RpdmVzIHN1YnNjcmliaW5nIHRvIGl0LlxuICovXG52YXIgRGVwID0gZnVuY3Rpb24gRGVwICgpIHtcbiAgdGhpcy5pZCA9IHVpZCsrO1xuICB0aGlzLnN1YnMgPSBbXTtcbn07XG5cbkRlcC5wcm90b3R5cGUuYWRkU3ViID0gZnVuY3Rpb24gYWRkU3ViIChzdWIpIHtcbiAgdGhpcy5zdWJzLnB1c2goc3ViKTtcbn07XG5cbkRlcC5wcm90b3R5cGUucmVtb3ZlU3ViID0gZnVuY3Rpb24gcmVtb3ZlU3ViIChzdWIpIHtcbiAgcmVtb3ZlKHRoaXMuc3Vicywgc3ViKTtcbn07XG5cbkRlcC5wcm90b3R5cGUuZGVwZW5kID0gZnVuY3Rpb24gZGVwZW5kICgpIHtcbiAgaWYgKERlcC50YXJnZXQpIHtcbiAgICBEZXAudGFyZ2V0LmFkZERlcCh0aGlzKTtcbiAgfVxufTtcblxuRGVwLnByb3RvdHlwZS5ub3RpZnkgPSBmdW5jdGlvbiBub3RpZnkgKCkge1xuICAvLyBzdGFiaWxpemUgdGhlIHN1YnNjcmliZXIgbGlzdCBmaXJzdFxuICB2YXIgc3VicyA9IHRoaXMuc3Vicy5zbGljZSgpO1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiAhY29uZmlnLmFzeW5jKSB7XG4gICAgLy8gc3VicyBhcmVuJ3Qgc29ydGVkIGluIHNjaGVkdWxlciBpZiBub3QgcnVubmluZyBhc3luY1xuICAgIC8vIHdlIG5lZWQgdG8gc29ydCB0aGVtIG5vdyB0byBtYWtlIHN1cmUgdGhleSBmaXJlIGluIGNvcnJlY3RcbiAgICAvLyBvcmRlclxuICAgIHN1YnMuc29ydChmdW5jdGlvbiAoYSwgYikgeyByZXR1cm4gYS5pZCAtIGIuaWQ7IH0pO1xuICB9XG4gIGZvciAodmFyIGkgPSAwLCBsID0gc3Vicy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICBzdWJzW2ldLnVwZGF0ZSgpO1xuICB9XG59O1xuXG4vLyBUaGUgY3VycmVudCB0YXJnZXQgd2F0Y2hlciBiZWluZyBldmFsdWF0ZWQuXG4vLyBUaGlzIGlzIGdsb2JhbGx5IHVuaXF1ZSBiZWNhdXNlIG9ubHkgb25lIHdhdGNoZXJcbi8vIGNhbiBiZSBldmFsdWF0ZWQgYXQgYSB0aW1lLlxuRGVwLnRhcmdldCA9IG51bGw7XG52YXIgdGFyZ2V0U3RhY2sgPSBbXTtcblxuZnVuY3Rpb24gcHVzaFRhcmdldCAodGFyZ2V0KSB7XG4gIHRhcmdldFN0YWNrLnB1c2godGFyZ2V0KTtcbiAgRGVwLnRhcmdldCA9IHRhcmdldDtcbn1cblxuZnVuY3Rpb24gcG9wVGFyZ2V0ICgpIHtcbiAgdGFyZ2V0U3RhY2sucG9wKCk7XG4gIERlcC50YXJnZXQgPSB0YXJnZXRTdGFja1t0YXJnZXRTdGFjay5sZW5ndGggLSAxXTtcbn1cblxuLyogICovXG5cbnZhciBWTm9kZSA9IGZ1bmN0aW9uIFZOb2RlIChcbiAgdGFnLFxuICBkYXRhLFxuICBjaGlsZHJlbixcbiAgdGV4dCxcbiAgZWxtLFxuICBjb250ZXh0LFxuICBjb21wb25lbnRPcHRpb25zLFxuICBhc3luY0ZhY3Rvcnlcbikge1xuICB0aGlzLnRhZyA9IHRhZztcbiAgdGhpcy5kYXRhID0gZGF0YTtcbiAgdGhpcy5jaGlsZHJlbiA9IGNoaWxkcmVuO1xuICB0aGlzLnRleHQgPSB0ZXh0O1xuICB0aGlzLmVsbSA9IGVsbTtcbiAgdGhpcy5ucyA9IHVuZGVmaW5lZDtcbiAgdGhpcy5jb250ZXh0ID0gY29udGV4dDtcbiAgdGhpcy5mbkNvbnRleHQgPSB1bmRlZmluZWQ7XG4gIHRoaXMuZm5PcHRpb25zID0gdW5kZWZpbmVkO1xuICB0aGlzLmZuU2NvcGVJZCA9IHVuZGVmaW5lZDtcbiAgdGhpcy5rZXkgPSBkYXRhICYmIGRhdGEua2V5O1xuICB0aGlzLmNvbXBvbmVudE9wdGlvbnMgPSBjb21wb25lbnRPcHRpb25zO1xuICB0aGlzLmNvbXBvbmVudEluc3RhbmNlID0gdW5kZWZpbmVkO1xuICB0aGlzLnBhcmVudCA9IHVuZGVmaW5lZDtcbiAgdGhpcy5yYXcgPSBmYWxzZTtcbiAgdGhpcy5pc1N0YXRpYyA9IGZhbHNlO1xuICB0aGlzLmlzUm9vdEluc2VydCA9IHRydWU7XG4gIHRoaXMuaXNDb21tZW50ID0gZmFsc2U7XG4gIHRoaXMuaXNDbG9uZWQgPSBmYWxzZTtcbiAgdGhpcy5pc09uY2UgPSBmYWxzZTtcbiAgdGhpcy5hc3luY0ZhY3RvcnkgPSBhc3luY0ZhY3Rvcnk7XG4gIHRoaXMuYXN5bmNNZXRhID0gdW5kZWZpbmVkO1xuICB0aGlzLmlzQXN5bmNQbGFjZWhvbGRlciA9IGZhbHNlO1xufTtcblxudmFyIHByb3RvdHlwZUFjY2Vzc29ycyA9IHsgY2hpbGQ6IHsgY29uZmlndXJhYmxlOiB0cnVlIH0gfTtcblxuLy8gREVQUkVDQVRFRDogYWxpYXMgZm9yIGNvbXBvbmVudEluc3RhbmNlIGZvciBiYWNrd2FyZHMgY29tcGF0LlxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbnByb3RvdHlwZUFjY2Vzc29ycy5jaGlsZC5nZXQgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzLmNvbXBvbmVudEluc3RhbmNlXG59O1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydGllcyggVk5vZGUucHJvdG90eXBlLCBwcm90b3R5cGVBY2Nlc3NvcnMgKTtcblxudmFyIGNyZWF0ZUVtcHR5Vk5vZGUgPSBmdW5jdGlvbiAodGV4dCkge1xuICBpZiAoIHRleHQgPT09IHZvaWQgMCApIHRleHQgPSAnJztcblxuICB2YXIgbm9kZSA9IG5ldyBWTm9kZSgpO1xuICBub2RlLnRleHQgPSB0ZXh0O1xuICBub2RlLmlzQ29tbWVudCA9IHRydWU7XG4gIHJldHVybiBub2RlXG59O1xuXG5mdW5jdGlvbiBjcmVhdGVUZXh0Vk5vZGUgKHZhbCkge1xuICByZXR1cm4gbmV3IFZOb2RlKHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFN0cmluZyh2YWwpKVxufVxuXG4vLyBvcHRpbWl6ZWQgc2hhbGxvdyBjbG9uZVxuLy8gdXNlZCBmb3Igc3RhdGljIG5vZGVzIGFuZCBzbG90IG5vZGVzIGJlY2F1c2UgdGhleSBtYXkgYmUgcmV1c2VkIGFjcm9zc1xuLy8gbXVsdGlwbGUgcmVuZGVycywgY2xvbmluZyB0aGVtIGF2b2lkcyBlcnJvcnMgd2hlbiBET00gbWFuaXB1bGF0aW9ucyByZWx5XG4vLyBvbiB0aGVpciBlbG0gcmVmZXJlbmNlLlxuZnVuY3Rpb24gY2xvbmVWTm9kZSAodm5vZGUpIHtcbiAgdmFyIGNsb25lZCA9IG5ldyBWTm9kZShcbiAgICB2bm9kZS50YWcsXG4gICAgdm5vZGUuZGF0YSxcbiAgICAvLyAjNzk3NVxuICAgIC8vIGNsb25lIGNoaWxkcmVuIGFycmF5IHRvIGF2b2lkIG11dGF0aW5nIG9yaWdpbmFsIGluIGNhc2Ugb2YgY2xvbmluZ1xuICAgIC8vIGEgY2hpbGQuXG4gICAgdm5vZGUuY2hpbGRyZW4gJiYgdm5vZGUuY2hpbGRyZW4uc2xpY2UoKSxcbiAgICB2bm9kZS50ZXh0LFxuICAgIHZub2RlLmVsbSxcbiAgICB2bm9kZS5jb250ZXh0LFxuICAgIHZub2RlLmNvbXBvbmVudE9wdGlvbnMsXG4gICAgdm5vZGUuYXN5bmNGYWN0b3J5XG4gICk7XG4gIGNsb25lZC5ucyA9IHZub2RlLm5zO1xuICBjbG9uZWQuaXNTdGF0aWMgPSB2bm9kZS5pc1N0YXRpYztcbiAgY2xvbmVkLmtleSA9IHZub2RlLmtleTtcbiAgY2xvbmVkLmlzQ29tbWVudCA9IHZub2RlLmlzQ29tbWVudDtcbiAgY2xvbmVkLmZuQ29udGV4dCA9IHZub2RlLmZuQ29udGV4dDtcbiAgY2xvbmVkLmZuT3B0aW9ucyA9IHZub2RlLmZuT3B0aW9ucztcbiAgY2xvbmVkLmZuU2NvcGVJZCA9IHZub2RlLmZuU2NvcGVJZDtcbiAgY2xvbmVkLmFzeW5jTWV0YSA9IHZub2RlLmFzeW5jTWV0YTtcbiAgY2xvbmVkLmlzQ2xvbmVkID0gdHJ1ZTtcbiAgcmV0dXJuIGNsb25lZFxufVxuXG4vKlxuICogbm90IHR5cGUgY2hlY2tpbmcgdGhpcyBmaWxlIGJlY2F1c2UgZmxvdyBkb2Vzbid0IHBsYXkgd2VsbCB3aXRoXG4gKiBkeW5hbWljYWxseSBhY2Nlc3NpbmcgbWV0aG9kcyBvbiBBcnJheSBwcm90b3R5cGVcbiAqL1xuXG52YXIgYXJyYXlQcm90byA9IEFycmF5LnByb3RvdHlwZTtcbnZhciBhcnJheU1ldGhvZHMgPSBPYmplY3QuY3JlYXRlKGFycmF5UHJvdG8pO1xuXG52YXIgbWV0aG9kc1RvUGF0Y2ggPSBbXG4gICdwdXNoJyxcbiAgJ3BvcCcsXG4gICdzaGlmdCcsXG4gICd1bnNoaWZ0JyxcbiAgJ3NwbGljZScsXG4gICdzb3J0JyxcbiAgJ3JldmVyc2UnXG5dO1xuXG4vKipcbiAqIEludGVyY2VwdCBtdXRhdGluZyBtZXRob2RzIGFuZCBlbWl0IGV2ZW50c1xuICovXG5tZXRob2RzVG9QYXRjaC5mb3JFYWNoKGZ1bmN0aW9uIChtZXRob2QpIHtcbiAgLy8gY2FjaGUgb3JpZ2luYWwgbWV0aG9kXG4gIHZhciBvcmlnaW5hbCA9IGFycmF5UHJvdG9bbWV0aG9kXTtcbiAgZGVmKGFycmF5TWV0aG9kcywgbWV0aG9kLCBmdW5jdGlvbiBtdXRhdG9yICgpIHtcbiAgICB2YXIgYXJncyA9IFtdLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIHdoaWxlICggbGVuLS0gKSBhcmdzWyBsZW4gXSA9IGFyZ3VtZW50c1sgbGVuIF07XG5cbiAgICB2YXIgcmVzdWx0ID0gb3JpZ2luYWwuYXBwbHkodGhpcywgYXJncyk7XG4gICAgdmFyIG9iID0gdGhpcy5fX29iX187XG4gICAgdmFyIGluc2VydGVkO1xuICAgIHN3aXRjaCAobWV0aG9kKSB7XG4gICAgICBjYXNlICdwdXNoJzpcbiAgICAgIGNhc2UgJ3Vuc2hpZnQnOlxuICAgICAgICBpbnNlcnRlZCA9IGFyZ3M7XG4gICAgICAgIGJyZWFrXG4gICAgICBjYXNlICdzcGxpY2UnOlxuICAgICAgICBpbnNlcnRlZCA9IGFyZ3Muc2xpY2UoMik7XG4gICAgICAgIGJyZWFrXG4gICAgfVxuICAgIGlmIChpbnNlcnRlZCkgeyBvYi5vYnNlcnZlQXJyYXkoaW5zZXJ0ZWQpOyB9XG4gICAgLy8gbm90aWZ5IGNoYW5nZVxuICAgIG9iLmRlcC5ub3RpZnkoKTtcbiAgICByZXR1cm4gcmVzdWx0XG4gIH0pO1xufSk7XG5cbi8qICAqL1xuXG52YXIgYXJyYXlLZXlzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoYXJyYXlNZXRob2RzKTtcblxuLyoqXG4gKiBJbiBzb21lIGNhc2VzIHdlIG1heSB3YW50IHRvIGRpc2FibGUgb2JzZXJ2YXRpb24gaW5zaWRlIGEgY29tcG9uZW50J3NcbiAqIHVwZGF0ZSBjb21wdXRhdGlvbi5cbiAqL1xudmFyIHNob3VsZE9ic2VydmUgPSB0cnVlO1xuXG5mdW5jdGlvbiB0b2dnbGVPYnNlcnZpbmcgKHZhbHVlKSB7XG4gIHNob3VsZE9ic2VydmUgPSB2YWx1ZTtcbn1cblxuLyoqXG4gKiBPYnNlcnZlciBjbGFzcyB0aGF0IGlzIGF0dGFjaGVkIHRvIGVhY2ggb2JzZXJ2ZWRcbiAqIG9iamVjdC4gT25jZSBhdHRhY2hlZCwgdGhlIG9ic2VydmVyIGNvbnZlcnRzIHRoZSB0YXJnZXRcbiAqIG9iamVjdCdzIHByb3BlcnR5IGtleXMgaW50byBnZXR0ZXIvc2V0dGVycyB0aGF0XG4gKiBjb2xsZWN0IGRlcGVuZGVuY2llcyBhbmQgZGlzcGF0Y2ggdXBkYXRlcy5cbiAqL1xudmFyIE9ic2VydmVyID0gZnVuY3Rpb24gT2JzZXJ2ZXIgKHZhbHVlKSB7XG4gIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgdGhpcy5kZXAgPSBuZXcgRGVwKCk7XG4gIHRoaXMudm1Db3VudCA9IDA7XG4gIGRlZih2YWx1ZSwgJ19fb2JfXycsIHRoaXMpO1xuICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICBpZiAoaGFzUHJvdG8pIHtcbiAgICAgIHByb3RvQXVnbWVudCh2YWx1ZSwgYXJyYXlNZXRob2RzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29weUF1Z21lbnQodmFsdWUsIGFycmF5TWV0aG9kcywgYXJyYXlLZXlzKTtcbiAgICB9XG4gICAgdGhpcy5vYnNlcnZlQXJyYXkodmFsdWUpO1xuICB9IGVsc2Uge1xuICAgIHRoaXMud2Fsayh2YWx1ZSk7XG4gIH1cbn07XG5cbi8qKlxuICogV2FsayB0aHJvdWdoIGFsbCBwcm9wZXJ0aWVzIGFuZCBjb252ZXJ0IHRoZW0gaW50b1xuICogZ2V0dGVyL3NldHRlcnMuIFRoaXMgbWV0aG9kIHNob3VsZCBvbmx5IGJlIGNhbGxlZCB3aGVuXG4gKiB2YWx1ZSB0eXBlIGlzIE9iamVjdC5cbiAqL1xuT2JzZXJ2ZXIucHJvdG90eXBlLndhbGsgPSBmdW5jdGlvbiB3YWxrIChvYmopIHtcbiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmopO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICBkZWZpbmVSZWFjdGl2ZSQkMShvYmosIGtleXNbaV0pO1xuICB9XG59O1xuXG4vKipcbiAqIE9ic2VydmUgYSBsaXN0IG9mIEFycmF5IGl0ZW1zLlxuICovXG5PYnNlcnZlci5wcm90b3R5cGUub2JzZXJ2ZUFycmF5ID0gZnVuY3Rpb24gb2JzZXJ2ZUFycmF5IChpdGVtcykge1xuICBmb3IgKHZhciBpID0gMCwgbCA9IGl0ZW1zLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIG9ic2VydmUoaXRlbXNbaV0pO1xuICB9XG59O1xuXG4vLyBoZWxwZXJzXG5cbi8qKlxuICogQXVnbWVudCBhIHRhcmdldCBPYmplY3Qgb3IgQXJyYXkgYnkgaW50ZXJjZXB0aW5nXG4gKiB0aGUgcHJvdG90eXBlIGNoYWluIHVzaW5nIF9fcHJvdG9fX1xuICovXG5mdW5jdGlvbiBwcm90b0F1Z21lbnQgKHRhcmdldCwgc3JjKSB7XG4gIC8qIGVzbGludC1kaXNhYmxlIG5vLXByb3RvICovXG4gIHRhcmdldC5fX3Byb3RvX18gPSBzcmM7XG4gIC8qIGVzbGludC1lbmFibGUgbm8tcHJvdG8gKi9cbn1cblxuLyoqXG4gKiBBdWdtZW50IGEgdGFyZ2V0IE9iamVjdCBvciBBcnJheSBieSBkZWZpbmluZ1xuICogaGlkZGVuIHByb3BlcnRpZXMuXG4gKi9cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5mdW5jdGlvbiBjb3B5QXVnbWVudCAodGFyZ2V0LCBzcmMsIGtleXMpIHtcbiAgZm9yICh2YXIgaSA9IDAsIGwgPSBrZXlzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuICAgIGRlZih0YXJnZXQsIGtleSwgc3JjW2tleV0pO1xuICB9XG59XG5cbi8qKlxuICogQXR0ZW1wdCB0byBjcmVhdGUgYW4gb2JzZXJ2ZXIgaW5zdGFuY2UgZm9yIGEgdmFsdWUsXG4gKiByZXR1cm5zIHRoZSBuZXcgb2JzZXJ2ZXIgaWYgc3VjY2Vzc2Z1bGx5IG9ic2VydmVkLFxuICogb3IgdGhlIGV4aXN0aW5nIG9ic2VydmVyIGlmIHRoZSB2YWx1ZSBhbHJlYWR5IGhhcyBvbmUuXG4gKi9cbmZ1bmN0aW9uIG9ic2VydmUgKHZhbHVlLCBhc1Jvb3REYXRhKSB7XG4gIGlmICghaXNPYmplY3QodmFsdWUpIHx8IHZhbHVlIGluc3RhbmNlb2YgVk5vZGUpIHtcbiAgICByZXR1cm5cbiAgfVxuICB2YXIgb2I7XG4gIGlmIChoYXNPd24odmFsdWUsICdfX29iX18nKSAmJiB2YWx1ZS5fX29iX18gaW5zdGFuY2VvZiBPYnNlcnZlcikge1xuICAgIG9iID0gdmFsdWUuX19vYl9fO1xuICB9IGVsc2UgaWYgKFxuICAgIHNob3VsZE9ic2VydmUgJiZcbiAgICAhaXNTZXJ2ZXJSZW5kZXJpbmcoKSAmJlxuICAgIChBcnJheS5pc0FycmF5KHZhbHVlKSB8fCBpc1BsYWluT2JqZWN0KHZhbHVlKSkgJiZcbiAgICBPYmplY3QuaXNFeHRlbnNpYmxlKHZhbHVlKSAmJlxuICAgICF2YWx1ZS5faXNWdWVcbiAgKSB7XG4gICAgb2IgPSBuZXcgT2JzZXJ2ZXIodmFsdWUpO1xuICB9XG4gIGlmIChhc1Jvb3REYXRhICYmIG9iKSB7XG4gICAgb2Iudm1Db3VudCsrO1xuICB9XG4gIHJldHVybiBvYlxufVxuXG4vKipcbiAqIERlZmluZSBhIHJlYWN0aXZlIHByb3BlcnR5IG9uIGFuIE9iamVjdC5cbiAqL1xuZnVuY3Rpb24gZGVmaW5lUmVhY3RpdmUkJDEgKFxuICBvYmosXG4gIGtleSxcbiAgdmFsLFxuICBjdXN0b21TZXR0ZXIsXG4gIHNoYWxsb3dcbikge1xuICB2YXIgZGVwID0gbmV3IERlcCgpO1xuXG4gIHZhciBwcm9wZXJ0eSA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpO1xuICBpZiAocHJvcGVydHkgJiYgcHJvcGVydHkuY29uZmlndXJhYmxlID09PSBmYWxzZSkge1xuICAgIHJldHVyblxuICB9XG5cbiAgLy8gY2F0ZXIgZm9yIHByZS1kZWZpbmVkIGdldHRlci9zZXR0ZXJzXG4gIHZhciBnZXR0ZXIgPSBwcm9wZXJ0eSAmJiBwcm9wZXJ0eS5nZXQ7XG4gIHZhciBzZXR0ZXIgPSBwcm9wZXJ0eSAmJiBwcm9wZXJ0eS5zZXQ7XG4gIGlmICgoIWdldHRlciB8fCBzZXR0ZXIpICYmIGFyZ3VtZW50cy5sZW5ndGggPT09IDIpIHtcbiAgICB2YWwgPSBvYmpba2V5XTtcbiAgfVxuXG4gIHZhciBjaGlsZE9iID0gIXNoYWxsb3cgJiYgb2JzZXJ2ZSh2YWwpO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uIHJlYWN0aXZlR2V0dGVyICgpIHtcbiAgICAgIHZhciB2YWx1ZSA9IGdldHRlciA/IGdldHRlci5jYWxsKG9iaikgOiB2YWw7XG4gICAgICBpZiAoRGVwLnRhcmdldCkge1xuICAgICAgICBkZXAuZGVwZW5kKCk7XG4gICAgICAgIGlmIChjaGlsZE9iKSB7XG4gICAgICAgICAgY2hpbGRPYi5kZXAuZGVwZW5kKCk7XG4gICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICBkZXBlbmRBcnJheSh2YWx1ZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gdmFsdWVcbiAgICB9LFxuICAgIHNldDogZnVuY3Rpb24gcmVhY3RpdmVTZXR0ZXIgKG5ld1ZhbCkge1xuICAgICAgdmFyIHZhbHVlID0gZ2V0dGVyID8gZ2V0dGVyLmNhbGwob2JqKSA6IHZhbDtcbiAgICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLXNlbGYtY29tcGFyZSAqL1xuICAgICAgaWYgKG5ld1ZhbCA9PT0gdmFsdWUgfHwgKG5ld1ZhbCAhPT0gbmV3VmFsICYmIHZhbHVlICE9PSB2YWx1ZSkpIHtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICAvKiBlc2xpbnQtZW5hYmxlIG5vLXNlbGYtY29tcGFyZSAqL1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgY3VzdG9tU2V0dGVyKSB7XG4gICAgICAgIGN1c3RvbVNldHRlcigpO1xuICAgICAgfVxuICAgICAgLy8gIzc5ODE6IGZvciBhY2Nlc3NvciBwcm9wZXJ0aWVzIHdpdGhvdXQgc2V0dGVyXG4gICAgICBpZiAoZ2V0dGVyICYmICFzZXR0ZXIpIHsgcmV0dXJuIH1cbiAgICAgIGlmIChzZXR0ZXIpIHtcbiAgICAgICAgc2V0dGVyLmNhbGwob2JqLCBuZXdWYWwpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFsID0gbmV3VmFsO1xuICAgICAgfVxuICAgICAgY2hpbGRPYiA9ICFzaGFsbG93ICYmIG9ic2VydmUobmV3VmFsKTtcbiAgICAgIGRlcC5ub3RpZnkoKTtcbiAgICB9XG4gIH0pO1xufVxuXG4vKipcbiAqIFNldCBhIHByb3BlcnR5IG9uIGFuIG9iamVjdC4gQWRkcyB0aGUgbmV3IHByb3BlcnR5IGFuZFxuICogdHJpZ2dlcnMgY2hhbmdlIG5vdGlmaWNhdGlvbiBpZiB0aGUgcHJvcGVydHkgZG9lc24ndFxuICogYWxyZWFkeSBleGlzdC5cbiAqL1xuZnVuY3Rpb24gc2V0ICh0YXJnZXQsIGtleSwgdmFsKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmXG4gICAgKGlzVW5kZWYodGFyZ2V0KSB8fCBpc1ByaW1pdGl2ZSh0YXJnZXQpKVxuICApIHtcbiAgICB3YXJuKChcIkNhbm5vdCBzZXQgcmVhY3RpdmUgcHJvcGVydHkgb24gdW5kZWZpbmVkLCBudWxsLCBvciBwcmltaXRpdmUgdmFsdWU6IFwiICsgKCh0YXJnZXQpKSkpO1xuICB9XG4gIGlmIChBcnJheS5pc0FycmF5KHRhcmdldCkgJiYgaXNWYWxpZEFycmF5SW5kZXgoa2V5KSkge1xuICAgIHRhcmdldC5sZW5ndGggPSBNYXRoLm1heCh0YXJnZXQubGVuZ3RoLCBrZXkpO1xuICAgIHRhcmdldC5zcGxpY2Uoa2V5LCAxLCB2YWwpO1xuICAgIHJldHVybiB2YWxcbiAgfVxuICBpZiAoa2V5IGluIHRhcmdldCAmJiAhKGtleSBpbiBPYmplY3QucHJvdG90eXBlKSkge1xuICAgIHRhcmdldFtrZXldID0gdmFsO1xuICAgIHJldHVybiB2YWxcbiAgfVxuICB2YXIgb2IgPSAodGFyZ2V0KS5fX29iX187XG4gIGlmICh0YXJnZXQuX2lzVnVlIHx8IChvYiAmJiBvYi52bUNvdW50KSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgd2FybihcbiAgICAgICdBdm9pZCBhZGRpbmcgcmVhY3RpdmUgcHJvcGVydGllcyB0byBhIFZ1ZSBpbnN0YW5jZSBvciBpdHMgcm9vdCAkZGF0YSAnICtcbiAgICAgICdhdCBydW50aW1lIC0gZGVjbGFyZSBpdCB1cGZyb250IGluIHRoZSBkYXRhIG9wdGlvbi4nXG4gICAgKTtcbiAgICByZXR1cm4gdmFsXG4gIH1cbiAgaWYgKCFvYikge1xuICAgIHRhcmdldFtrZXldID0gdmFsO1xuICAgIHJldHVybiB2YWxcbiAgfVxuICBkZWZpbmVSZWFjdGl2ZSQkMShvYi52YWx1ZSwga2V5LCB2YWwpO1xuICBvYi5kZXAubm90aWZ5KCk7XG4gIHJldHVybiB2YWxcbn1cblxuLyoqXG4gKiBEZWxldGUgYSBwcm9wZXJ0eSBhbmQgdHJpZ2dlciBjaGFuZ2UgaWYgbmVjZXNzYXJ5LlxuICovXG5mdW5jdGlvbiBkZWwgKHRhcmdldCwga2V5KSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmXG4gICAgKGlzVW5kZWYodGFyZ2V0KSB8fCBpc1ByaW1pdGl2ZSh0YXJnZXQpKVxuICApIHtcbiAgICB3YXJuKChcIkNhbm5vdCBkZWxldGUgcmVhY3RpdmUgcHJvcGVydHkgb24gdW5kZWZpbmVkLCBudWxsLCBvciBwcmltaXRpdmUgdmFsdWU6IFwiICsgKCh0YXJnZXQpKSkpO1xuICB9XG4gIGlmIChBcnJheS5pc0FycmF5KHRhcmdldCkgJiYgaXNWYWxpZEFycmF5SW5kZXgoa2V5KSkge1xuICAgIHRhcmdldC5zcGxpY2Uoa2V5LCAxKTtcbiAgICByZXR1cm5cbiAgfVxuICB2YXIgb2IgPSAodGFyZ2V0KS5fX29iX187XG4gIGlmICh0YXJnZXQuX2lzVnVlIHx8IChvYiAmJiBvYi52bUNvdW50KSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgd2FybihcbiAgICAgICdBdm9pZCBkZWxldGluZyBwcm9wZXJ0aWVzIG9uIGEgVnVlIGluc3RhbmNlIG9yIGl0cyByb290ICRkYXRhICcgK1xuICAgICAgJy0ganVzdCBzZXQgaXQgdG8gbnVsbC4nXG4gICAgKTtcbiAgICByZXR1cm5cbiAgfVxuICBpZiAoIWhhc093bih0YXJnZXQsIGtleSkpIHtcbiAgICByZXR1cm5cbiAgfVxuICBkZWxldGUgdGFyZ2V0W2tleV07XG4gIGlmICghb2IpIHtcbiAgICByZXR1cm5cbiAgfVxuICBvYi5kZXAubm90aWZ5KCk7XG59XG5cbi8qKlxuICogQ29sbGVjdCBkZXBlbmRlbmNpZXMgb24gYXJyYXkgZWxlbWVudHMgd2hlbiB0aGUgYXJyYXkgaXMgdG91Y2hlZCwgc2luY2VcbiAqIHdlIGNhbm5vdCBpbnRlcmNlcHQgYXJyYXkgZWxlbWVudCBhY2Nlc3MgbGlrZSBwcm9wZXJ0eSBnZXR0ZXJzLlxuICovXG5mdW5jdGlvbiBkZXBlbmRBcnJheSAodmFsdWUpIHtcbiAgZm9yICh2YXIgZSA9ICh2b2lkIDApLCBpID0gMCwgbCA9IHZhbHVlLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIGUgPSB2YWx1ZVtpXTtcbiAgICBlICYmIGUuX19vYl9fICYmIGUuX19vYl9fLmRlcC5kZXBlbmQoKTtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShlKSkge1xuICAgICAgZGVwZW5kQXJyYXkoZSk7XG4gICAgfVxuICB9XG59XG5cbi8qICAqL1xuXG4vKipcbiAqIE9wdGlvbiBvdmVyd3JpdGluZyBzdHJhdGVnaWVzIGFyZSBmdW5jdGlvbnMgdGhhdCBoYW5kbGVcbiAqIGhvdyB0byBtZXJnZSBhIHBhcmVudCBvcHRpb24gdmFsdWUgYW5kIGEgY2hpbGQgb3B0aW9uXG4gKiB2YWx1ZSBpbnRvIHRoZSBmaW5hbCB2YWx1ZS5cbiAqL1xudmFyIHN0cmF0cyA9IGNvbmZpZy5vcHRpb25NZXJnZVN0cmF0ZWdpZXM7XG5cbi8qKlxuICogT3B0aW9ucyB3aXRoIHJlc3RyaWN0aW9uc1xuICovXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBzdHJhdHMuZWwgPSBzdHJhdHMucHJvcHNEYXRhID0gZnVuY3Rpb24gKHBhcmVudCwgY2hpbGQsIHZtLCBrZXkpIHtcbiAgICBpZiAoIXZtKSB7XG4gICAgICB3YXJuKFxuICAgICAgICBcIm9wdGlvbiBcXFwiXCIgKyBrZXkgKyBcIlxcXCIgY2FuIG9ubHkgYmUgdXNlZCBkdXJpbmcgaW5zdGFuY2UgXCIgK1xuICAgICAgICAnY3JlYXRpb24gd2l0aCB0aGUgYG5ld2Aga2V5d29yZC4nXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gZGVmYXVsdFN0cmF0KHBhcmVudCwgY2hpbGQpXG4gIH07XG59XG5cbi8qKlxuICogSGVscGVyIHRoYXQgcmVjdXJzaXZlbHkgbWVyZ2VzIHR3byBkYXRhIG9iamVjdHMgdG9nZXRoZXIuXG4gKi9cbmZ1bmN0aW9uIG1lcmdlRGF0YSAodG8sIGZyb20pIHtcbiAgaWYgKCFmcm9tKSB7IHJldHVybiB0byB9XG4gIHZhciBrZXksIHRvVmFsLCBmcm9tVmFsO1xuXG4gIHZhciBrZXlzID0gaGFzU3ltYm9sXG4gICAgPyBSZWZsZWN0Lm93bktleXMoZnJvbSlcbiAgICA6IE9iamVjdC5rZXlzKGZyb20pO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgIGtleSA9IGtleXNbaV07XG4gICAgLy8gaW4gY2FzZSB0aGUgb2JqZWN0IGlzIGFscmVhZHkgb2JzZXJ2ZWQuLi5cbiAgICBpZiAoa2V5ID09PSAnX19vYl9fJykgeyBjb250aW51ZSB9XG4gICAgdG9WYWwgPSB0b1trZXldO1xuICAgIGZyb21WYWwgPSBmcm9tW2tleV07XG4gICAgaWYgKCFoYXNPd24odG8sIGtleSkpIHtcbiAgICAgIHNldCh0bywga2V5LCBmcm9tVmFsKTtcbiAgICB9IGVsc2UgaWYgKFxuICAgICAgdG9WYWwgIT09IGZyb21WYWwgJiZcbiAgICAgIGlzUGxhaW5PYmplY3QodG9WYWwpICYmXG4gICAgICBpc1BsYWluT2JqZWN0KGZyb21WYWwpXG4gICAgKSB7XG4gICAgICBtZXJnZURhdGEodG9WYWwsIGZyb21WYWwpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdG9cbn1cblxuLyoqXG4gKiBEYXRhXG4gKi9cbmZ1bmN0aW9uIG1lcmdlRGF0YU9yRm4gKFxuICBwYXJlbnRWYWwsXG4gIGNoaWxkVmFsLFxuICB2bVxuKSB7XG4gIGlmICghdm0pIHtcbiAgICAvLyBpbiBhIFZ1ZS5leHRlbmQgbWVyZ2UsIGJvdGggc2hvdWxkIGJlIGZ1bmN0aW9uc1xuICAgIGlmICghY2hpbGRWYWwpIHtcbiAgICAgIHJldHVybiBwYXJlbnRWYWxcbiAgICB9XG4gICAgaWYgKCFwYXJlbnRWYWwpIHtcbiAgICAgIHJldHVybiBjaGlsZFZhbFxuICAgIH1cbiAgICAvLyB3aGVuIHBhcmVudFZhbCAmIGNoaWxkVmFsIGFyZSBib3RoIHByZXNlbnQsXG4gICAgLy8gd2UgbmVlZCB0byByZXR1cm4gYSBmdW5jdGlvbiB0aGF0IHJldHVybnMgdGhlXG4gICAgLy8gbWVyZ2VkIHJlc3VsdCBvZiBib3RoIGZ1bmN0aW9ucy4uLiBubyBuZWVkIHRvXG4gICAgLy8gY2hlY2sgaWYgcGFyZW50VmFsIGlzIGEgZnVuY3Rpb24gaGVyZSBiZWNhdXNlXG4gICAgLy8gaXQgaGFzIHRvIGJlIGEgZnVuY3Rpb24gdG8gcGFzcyBwcmV2aW91cyBtZXJnZXMuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIG1lcmdlZERhdGFGbiAoKSB7XG4gICAgICByZXR1cm4gbWVyZ2VEYXRhKFxuICAgICAgICB0eXBlb2YgY2hpbGRWYWwgPT09ICdmdW5jdGlvbicgPyBjaGlsZFZhbC5jYWxsKHRoaXMsIHRoaXMpIDogY2hpbGRWYWwsXG4gICAgICAgIHR5cGVvZiBwYXJlbnRWYWwgPT09ICdmdW5jdGlvbicgPyBwYXJlbnRWYWwuY2FsbCh0aGlzLCB0aGlzKSA6IHBhcmVudFZhbFxuICAgICAgKVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gbWVyZ2VkSW5zdGFuY2VEYXRhRm4gKCkge1xuICAgICAgLy8gaW5zdGFuY2UgbWVyZ2VcbiAgICAgIHZhciBpbnN0YW5jZURhdGEgPSB0eXBlb2YgY2hpbGRWYWwgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBjaGlsZFZhbC5jYWxsKHZtLCB2bSlcbiAgICAgICAgOiBjaGlsZFZhbDtcbiAgICAgIHZhciBkZWZhdWx0RGF0YSA9IHR5cGVvZiBwYXJlbnRWYWwgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwYXJlbnRWYWwuY2FsbCh2bSwgdm0pXG4gICAgICAgIDogcGFyZW50VmFsO1xuICAgICAgaWYgKGluc3RhbmNlRGF0YSkge1xuICAgICAgICByZXR1cm4gbWVyZ2VEYXRhKGluc3RhbmNlRGF0YSwgZGVmYXVsdERhdGEpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZGVmYXVsdERhdGFcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuc3RyYXRzLmRhdGEgPSBmdW5jdGlvbiAoXG4gIHBhcmVudFZhbCxcbiAgY2hpbGRWYWwsXG4gIHZtXG4pIHtcbiAgaWYgKCF2bSkge1xuICAgIGlmIChjaGlsZFZhbCAmJiB0eXBlb2YgY2hpbGRWYWwgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgd2FybihcbiAgICAgICAgJ1RoZSBcImRhdGFcIiBvcHRpb24gc2hvdWxkIGJlIGEgZnVuY3Rpb24gJyArXG4gICAgICAgICd0aGF0IHJldHVybnMgYSBwZXItaW5zdGFuY2UgdmFsdWUgaW4gY29tcG9uZW50ICcgK1xuICAgICAgICAnZGVmaW5pdGlvbnMuJyxcbiAgICAgICAgdm1cbiAgICAgICk7XG5cbiAgICAgIHJldHVybiBwYXJlbnRWYWxcbiAgICB9XG4gICAgcmV0dXJuIG1lcmdlRGF0YU9yRm4ocGFyZW50VmFsLCBjaGlsZFZhbClcbiAgfVxuXG4gIHJldHVybiBtZXJnZURhdGFPckZuKHBhcmVudFZhbCwgY2hpbGRWYWwsIHZtKVxufTtcblxuLyoqXG4gKiBIb29rcyBhbmQgcHJvcHMgYXJlIG1lcmdlZCBhcyBhcnJheXMuXG4gKi9cbmZ1bmN0aW9uIG1lcmdlSG9vayAoXG4gIHBhcmVudFZhbCxcbiAgY2hpbGRWYWxcbikge1xuICB2YXIgcmVzID0gY2hpbGRWYWxcbiAgICA/IHBhcmVudFZhbFxuICAgICAgPyBwYXJlbnRWYWwuY29uY2F0KGNoaWxkVmFsKVxuICAgICAgOiBBcnJheS5pc0FycmF5KGNoaWxkVmFsKVxuICAgICAgICA/IGNoaWxkVmFsXG4gICAgICAgIDogW2NoaWxkVmFsXVxuICAgIDogcGFyZW50VmFsO1xuICByZXR1cm4gcmVzXG4gICAgPyBkZWR1cGVIb29rcyhyZXMpXG4gICAgOiByZXNcbn1cblxuZnVuY3Rpb24gZGVkdXBlSG9va3MgKGhvb2tzKSB7XG4gIHZhciByZXMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBob29rcy5sZW5ndGg7IGkrKykge1xuICAgIGlmIChyZXMuaW5kZXhPZihob29rc1tpXSkgPT09IC0xKSB7XG4gICAgICByZXMucHVzaChob29rc1tpXSk7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXNcbn1cblxuTElGRUNZQ0xFX0hPT0tTLmZvckVhY2goZnVuY3Rpb24gKGhvb2spIHtcbiAgc3RyYXRzW2hvb2tdID0gbWVyZ2VIb29rO1xufSk7XG5cbi8qKlxuICogQXNzZXRzXG4gKlxuICogV2hlbiBhIHZtIGlzIHByZXNlbnQgKGluc3RhbmNlIGNyZWF0aW9uKSwgd2UgbmVlZCB0byBkb1xuICogYSB0aHJlZS13YXkgbWVyZ2UgYmV0d2VlbiBjb25zdHJ1Y3RvciBvcHRpb25zLCBpbnN0YW5jZVxuICogb3B0aW9ucyBhbmQgcGFyZW50IG9wdGlvbnMuXG4gKi9cbmZ1bmN0aW9uIG1lcmdlQXNzZXRzIChcbiAgcGFyZW50VmFsLFxuICBjaGlsZFZhbCxcbiAgdm0sXG4gIGtleVxuKSB7XG4gIHZhciByZXMgPSBPYmplY3QuY3JlYXRlKHBhcmVudFZhbCB8fCBudWxsKTtcbiAgaWYgKGNoaWxkVmFsKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBhc3NlcnRPYmplY3RUeXBlKGtleSwgY2hpbGRWYWwsIHZtKTtcbiAgICByZXR1cm4gZXh0ZW5kKHJlcywgY2hpbGRWYWwpXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHJlc1xuICB9XG59XG5cbkFTU0VUX1RZUEVTLmZvckVhY2goZnVuY3Rpb24gKHR5cGUpIHtcbiAgc3RyYXRzW3R5cGUgKyAncyddID0gbWVyZ2VBc3NldHM7XG59KTtcblxuLyoqXG4gKiBXYXRjaGVycy5cbiAqXG4gKiBXYXRjaGVycyBoYXNoZXMgc2hvdWxkIG5vdCBvdmVyd3JpdGUgb25lXG4gKiBhbm90aGVyLCBzbyB3ZSBtZXJnZSB0aGVtIGFzIGFycmF5cy5cbiAqL1xuc3RyYXRzLndhdGNoID0gZnVuY3Rpb24gKFxuICBwYXJlbnRWYWwsXG4gIGNoaWxkVmFsLFxuICB2bSxcbiAga2V5XG4pIHtcbiAgLy8gd29yayBhcm91bmQgRmlyZWZveCdzIE9iamVjdC5wcm90b3R5cGUud2F0Y2guLi5cbiAgaWYgKHBhcmVudFZhbCA9PT0gbmF0aXZlV2F0Y2gpIHsgcGFyZW50VmFsID0gdW5kZWZpbmVkOyB9XG4gIGlmIChjaGlsZFZhbCA9PT0gbmF0aXZlV2F0Y2gpIHsgY2hpbGRWYWwgPSB1bmRlZmluZWQ7IH1cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gIGlmICghY2hpbGRWYWwpIHsgcmV0dXJuIE9iamVjdC5jcmVhdGUocGFyZW50VmFsIHx8IG51bGwpIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBhc3NlcnRPYmplY3RUeXBlKGtleSwgY2hpbGRWYWwsIHZtKTtcbiAgfVxuICBpZiAoIXBhcmVudFZhbCkgeyByZXR1cm4gY2hpbGRWYWwgfVxuICB2YXIgcmV0ID0ge307XG4gIGV4dGVuZChyZXQsIHBhcmVudFZhbCk7XG4gIGZvciAodmFyIGtleSQxIGluIGNoaWxkVmFsKSB7XG4gICAgdmFyIHBhcmVudCA9IHJldFtrZXkkMV07XG4gICAgdmFyIGNoaWxkID0gY2hpbGRWYWxba2V5JDFdO1xuICAgIGlmIChwYXJlbnQgJiYgIUFycmF5LmlzQXJyYXkocGFyZW50KSkge1xuICAgICAgcGFyZW50ID0gW3BhcmVudF07XG4gICAgfVxuICAgIHJldFtrZXkkMV0gPSBwYXJlbnRcbiAgICAgID8gcGFyZW50LmNvbmNhdChjaGlsZClcbiAgICAgIDogQXJyYXkuaXNBcnJheShjaGlsZCkgPyBjaGlsZCA6IFtjaGlsZF07XG4gIH1cbiAgcmV0dXJuIHJldFxufTtcblxuLyoqXG4gKiBPdGhlciBvYmplY3QgaGFzaGVzLlxuICovXG5zdHJhdHMucHJvcHMgPVxuc3RyYXRzLm1ldGhvZHMgPVxuc3RyYXRzLmluamVjdCA9XG5zdHJhdHMuY29tcHV0ZWQgPSBmdW5jdGlvbiAoXG4gIHBhcmVudFZhbCxcbiAgY2hpbGRWYWwsXG4gIHZtLFxuICBrZXlcbikge1xuICBpZiAoY2hpbGRWYWwgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGFzc2VydE9iamVjdFR5cGUoa2V5LCBjaGlsZFZhbCwgdm0pO1xuICB9XG4gIGlmICghcGFyZW50VmFsKSB7IHJldHVybiBjaGlsZFZhbCB9XG4gIHZhciByZXQgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICBleHRlbmQocmV0LCBwYXJlbnRWYWwpO1xuICBpZiAoY2hpbGRWYWwpIHsgZXh0ZW5kKHJldCwgY2hpbGRWYWwpOyB9XG4gIHJldHVybiByZXRcbn07XG5zdHJhdHMucHJvdmlkZSA9IG1lcmdlRGF0YU9yRm47XG5cbi8qKlxuICogRGVmYXVsdCBzdHJhdGVneS5cbiAqL1xudmFyIGRlZmF1bHRTdHJhdCA9IGZ1bmN0aW9uIChwYXJlbnRWYWwsIGNoaWxkVmFsKSB7XG4gIHJldHVybiBjaGlsZFZhbCA9PT0gdW5kZWZpbmVkXG4gICAgPyBwYXJlbnRWYWxcbiAgICA6IGNoaWxkVmFsXG59O1xuXG4vKipcbiAqIFZhbGlkYXRlIGNvbXBvbmVudCBuYW1lc1xuICovXG5mdW5jdGlvbiBjaGVja0NvbXBvbmVudHMgKG9wdGlvbnMpIHtcbiAgZm9yICh2YXIga2V5IGluIG9wdGlvbnMuY29tcG9uZW50cykge1xuICAgIHZhbGlkYXRlQ29tcG9uZW50TmFtZShrZXkpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlQ29tcG9uZW50TmFtZSAobmFtZSkge1xuICBpZiAoIW5ldyBSZWdFeHAoKFwiXlthLXpBLVpdW1xcXFwtXFxcXC4wLTlfXCIgKyAodW5pY29kZVJlZ0V4cC5zb3VyY2UpICsgXCJdKiRcIikpLnRlc3QobmFtZSkpIHtcbiAgICB3YXJuKFxuICAgICAgJ0ludmFsaWQgY29tcG9uZW50IG5hbWU6IFwiJyArIG5hbWUgKyAnXCIuIENvbXBvbmVudCBuYW1lcyAnICtcbiAgICAgICdzaG91bGQgY29uZm9ybSB0byB2YWxpZCBjdXN0b20gZWxlbWVudCBuYW1lIGluIGh0bWw1IHNwZWNpZmljYXRpb24uJ1xuICAgICk7XG4gIH1cbiAgaWYgKGlzQnVpbHRJblRhZyhuYW1lKSB8fCBjb25maWcuaXNSZXNlcnZlZFRhZyhuYW1lKSkge1xuICAgIHdhcm4oXG4gICAgICAnRG8gbm90IHVzZSBidWlsdC1pbiBvciByZXNlcnZlZCBIVE1MIGVsZW1lbnRzIGFzIGNvbXBvbmVudCAnICtcbiAgICAgICdpZDogJyArIG5hbWVcbiAgICApO1xuICB9XG59XG5cbi8qKlxuICogRW5zdXJlIGFsbCBwcm9wcyBvcHRpb24gc3ludGF4IGFyZSBub3JtYWxpemVkIGludG8gdGhlXG4gKiBPYmplY3QtYmFzZWQgZm9ybWF0LlxuICovXG5mdW5jdGlvbiBub3JtYWxpemVQcm9wcyAob3B0aW9ucywgdm0pIHtcbiAgdmFyIHByb3BzID0gb3B0aW9ucy5wcm9wcztcbiAgaWYgKCFwcm9wcykgeyByZXR1cm4gfVxuICB2YXIgcmVzID0ge307XG4gIHZhciBpLCB2YWwsIG5hbWU7XG4gIGlmIChBcnJheS5pc0FycmF5KHByb3BzKSkge1xuICAgIGkgPSBwcm9wcy5sZW5ndGg7XG4gICAgd2hpbGUgKGktLSkge1xuICAgICAgdmFsID0gcHJvcHNbaV07XG4gICAgICBpZiAodHlwZW9mIHZhbCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgbmFtZSA9IGNhbWVsaXplKHZhbCk7XG4gICAgICAgIHJlc1tuYW1lXSA9IHsgdHlwZTogbnVsbCB9O1xuICAgICAgfSBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIHdhcm4oJ3Byb3BzIG11c3QgYmUgc3RyaW5ncyB3aGVuIHVzaW5nIGFycmF5IHN5bnRheC4nKTtcbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSBpZiAoaXNQbGFpbk9iamVjdChwcm9wcykpIHtcbiAgICBmb3IgKHZhciBrZXkgaW4gcHJvcHMpIHtcbiAgICAgIHZhbCA9IHByb3BzW2tleV07XG4gICAgICBuYW1lID0gY2FtZWxpemUoa2V5KTtcbiAgICAgIHJlc1tuYW1lXSA9IGlzUGxhaW5PYmplY3QodmFsKVxuICAgICAgICA/IHZhbFxuICAgICAgICA6IHsgdHlwZTogdmFsIH07XG4gICAgfVxuICB9IGVsc2UgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICB3YXJuKFxuICAgICAgXCJJbnZhbGlkIHZhbHVlIGZvciBvcHRpb24gXFxcInByb3BzXFxcIjogZXhwZWN0ZWQgYW4gQXJyYXkgb3IgYW4gT2JqZWN0LCBcIiArXG4gICAgICBcImJ1dCBnb3QgXCIgKyAodG9SYXdUeXBlKHByb3BzKSkgKyBcIi5cIixcbiAgICAgIHZtXG4gICAgKTtcbiAgfVxuICBvcHRpb25zLnByb3BzID0gcmVzO1xufVxuXG4vKipcbiAqIE5vcm1hbGl6ZSBhbGwgaW5qZWN0aW9ucyBpbnRvIE9iamVjdC1iYXNlZCBmb3JtYXRcbiAqL1xuZnVuY3Rpb24gbm9ybWFsaXplSW5qZWN0IChvcHRpb25zLCB2bSkge1xuICB2YXIgaW5qZWN0ID0gb3B0aW9ucy5pbmplY3Q7XG4gIGlmICghaW5qZWN0KSB7IHJldHVybiB9XG4gIHZhciBub3JtYWxpemVkID0gb3B0aW9ucy5pbmplY3QgPSB7fTtcbiAgaWYgKEFycmF5LmlzQXJyYXkoaW5qZWN0KSkge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaW5qZWN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICBub3JtYWxpemVkW2luamVjdFtpXV0gPSB7IGZyb206IGluamVjdFtpXSB9O1xuICAgIH1cbiAgfSBlbHNlIGlmIChpc1BsYWluT2JqZWN0KGluamVjdCkpIHtcbiAgICBmb3IgKHZhciBrZXkgaW4gaW5qZWN0KSB7XG4gICAgICB2YXIgdmFsID0gaW5qZWN0W2tleV07XG4gICAgICBub3JtYWxpemVkW2tleV0gPSBpc1BsYWluT2JqZWN0KHZhbClcbiAgICAgICAgPyBleHRlbmQoeyBmcm9tOiBrZXkgfSwgdmFsKVxuICAgICAgICA6IHsgZnJvbTogdmFsIH07XG4gICAgfVxuICB9IGVsc2UgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICB3YXJuKFxuICAgICAgXCJJbnZhbGlkIHZhbHVlIGZvciBvcHRpb24gXFxcImluamVjdFxcXCI6IGV4cGVjdGVkIGFuIEFycmF5IG9yIGFuIE9iamVjdCwgXCIgK1xuICAgICAgXCJidXQgZ290IFwiICsgKHRvUmF3VHlwZShpbmplY3QpKSArIFwiLlwiLFxuICAgICAgdm1cbiAgICApO1xuICB9XG59XG5cbi8qKlxuICogTm9ybWFsaXplIHJhdyBmdW5jdGlvbiBkaXJlY3RpdmVzIGludG8gb2JqZWN0IGZvcm1hdC5cbiAqL1xuZnVuY3Rpb24gbm9ybWFsaXplRGlyZWN0aXZlcyAob3B0aW9ucykge1xuICB2YXIgZGlycyA9IG9wdGlvbnMuZGlyZWN0aXZlcztcbiAgaWYgKGRpcnMpIHtcbiAgICBmb3IgKHZhciBrZXkgaW4gZGlycykge1xuICAgICAgdmFyIGRlZiQkMSA9IGRpcnNba2V5XTtcbiAgICAgIGlmICh0eXBlb2YgZGVmJCQxID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGRpcnNba2V5XSA9IHsgYmluZDogZGVmJCQxLCB1cGRhdGU6IGRlZiQkMSB9O1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBhc3NlcnRPYmplY3RUeXBlIChuYW1lLCB2YWx1ZSwgdm0pIHtcbiAgaWYgKCFpc1BsYWluT2JqZWN0KHZhbHVlKSkge1xuICAgIHdhcm4oXG4gICAgICBcIkludmFsaWQgdmFsdWUgZm9yIG9wdGlvbiBcXFwiXCIgKyBuYW1lICsgXCJcXFwiOiBleHBlY3RlZCBhbiBPYmplY3QsIFwiICtcbiAgICAgIFwiYnV0IGdvdCBcIiArICh0b1Jhd1R5cGUodmFsdWUpKSArIFwiLlwiLFxuICAgICAgdm1cbiAgICApO1xuICB9XG59XG5cbi8qKlxuICogTWVyZ2UgdHdvIG9wdGlvbiBvYmplY3RzIGludG8gYSBuZXcgb25lLlxuICogQ29yZSB1dGlsaXR5IHVzZWQgaW4gYm90aCBpbnN0YW50aWF0aW9uIGFuZCBpbmhlcml0YW5jZS5cbiAqL1xuZnVuY3Rpb24gbWVyZ2VPcHRpb25zIChcbiAgcGFyZW50LFxuICBjaGlsZCxcbiAgdm1cbikge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGNoZWNrQ29tcG9uZW50cyhjaGlsZCk7XG4gIH1cblxuICBpZiAodHlwZW9mIGNoaWxkID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY2hpbGQgPSBjaGlsZC5vcHRpb25zO1xuICB9XG5cbiAgbm9ybWFsaXplUHJvcHMoY2hpbGQsIHZtKTtcbiAgbm9ybWFsaXplSW5qZWN0KGNoaWxkLCB2bSk7XG4gIG5vcm1hbGl6ZURpcmVjdGl2ZXMoY2hpbGQpO1xuXG4gIC8vIEFwcGx5IGV4dGVuZHMgYW5kIG1peGlucyBvbiB0aGUgY2hpbGQgb3B0aW9ucyxcbiAgLy8gYnV0IG9ubHkgaWYgaXQgaXMgYSByYXcgb3B0aW9ucyBvYmplY3QgdGhhdCBpc24ndFxuICAvLyB0aGUgcmVzdWx0IG9mIGFub3RoZXIgbWVyZ2VPcHRpb25zIGNhbGwuXG4gIC8vIE9ubHkgbWVyZ2VkIG9wdGlvbnMgaGFzIHRoZSBfYmFzZSBwcm9wZXJ0eS5cbiAgaWYgKCFjaGlsZC5fYmFzZSkge1xuICAgIGlmIChjaGlsZC5leHRlbmRzKSB7XG4gICAgICBwYXJlbnQgPSBtZXJnZU9wdGlvbnMocGFyZW50LCBjaGlsZC5leHRlbmRzLCB2bSk7XG4gICAgfVxuICAgIGlmIChjaGlsZC5taXhpbnMpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gY2hpbGQubWl4aW5zLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICBwYXJlbnQgPSBtZXJnZU9wdGlvbnMocGFyZW50LCBjaGlsZC5taXhpbnNbaV0sIHZtKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB2YXIgb3B0aW9ucyA9IHt9O1xuICB2YXIga2V5O1xuICBmb3IgKGtleSBpbiBwYXJlbnQpIHtcbiAgICBtZXJnZUZpZWxkKGtleSk7XG4gIH1cbiAgZm9yIChrZXkgaW4gY2hpbGQpIHtcbiAgICBpZiAoIWhhc093bihwYXJlbnQsIGtleSkpIHtcbiAgICAgIG1lcmdlRmllbGQoa2V5KTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gbWVyZ2VGaWVsZCAoa2V5KSB7XG4gICAgdmFyIHN0cmF0ID0gc3RyYXRzW2tleV0gfHwgZGVmYXVsdFN0cmF0O1xuICAgIG9wdGlvbnNba2V5XSA9IHN0cmF0KHBhcmVudFtrZXldLCBjaGlsZFtrZXldLCB2bSwga2V5KTtcbiAgfVxuICByZXR1cm4gb3B0aW9uc1xufVxuXG4vKipcbiAqIFJlc29sdmUgYW4gYXNzZXQuXG4gKiBUaGlzIGZ1bmN0aW9uIGlzIHVzZWQgYmVjYXVzZSBjaGlsZCBpbnN0YW5jZXMgbmVlZCBhY2Nlc3NcbiAqIHRvIGFzc2V0cyBkZWZpbmVkIGluIGl0cyBhbmNlc3RvciBjaGFpbi5cbiAqL1xuZnVuY3Rpb24gcmVzb2x2ZUFzc2V0IChcbiAgb3B0aW9ucyxcbiAgdHlwZSxcbiAgaWQsXG4gIHdhcm5NaXNzaW5nXG4pIHtcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gIGlmICh0eXBlb2YgaWQgIT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuXG4gIH1cbiAgdmFyIGFzc2V0cyA9IG9wdGlvbnNbdHlwZV07XG4gIC8vIGNoZWNrIGxvY2FsIHJlZ2lzdHJhdGlvbiB2YXJpYXRpb25zIGZpcnN0XG4gIGlmIChoYXNPd24oYXNzZXRzLCBpZCkpIHsgcmV0dXJuIGFzc2V0c1tpZF0gfVxuICB2YXIgY2FtZWxpemVkSWQgPSBjYW1lbGl6ZShpZCk7XG4gIGlmIChoYXNPd24oYXNzZXRzLCBjYW1lbGl6ZWRJZCkpIHsgcmV0dXJuIGFzc2V0c1tjYW1lbGl6ZWRJZF0gfVxuICB2YXIgUGFzY2FsQ2FzZUlkID0gY2FwaXRhbGl6ZShjYW1lbGl6ZWRJZCk7XG4gIGlmIChoYXNPd24oYXNzZXRzLCBQYXNjYWxDYXNlSWQpKSB7IHJldHVybiBhc3NldHNbUGFzY2FsQ2FzZUlkXSB9XG4gIC8vIGZhbGxiYWNrIHRvIHByb3RvdHlwZSBjaGFpblxuICB2YXIgcmVzID0gYXNzZXRzW2lkXSB8fCBhc3NldHNbY2FtZWxpemVkSWRdIHx8IGFzc2V0c1tQYXNjYWxDYXNlSWRdO1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB3YXJuTWlzc2luZyAmJiAhcmVzKSB7XG4gICAgd2FybihcbiAgICAgICdGYWlsZWQgdG8gcmVzb2x2ZSAnICsgdHlwZS5zbGljZSgwLCAtMSkgKyAnOiAnICsgaWQsXG4gICAgICBvcHRpb25zXG4gICAgKTtcbiAgfVxuICByZXR1cm4gcmVzXG59XG5cbi8qICAqL1xuXG5cblxuZnVuY3Rpb24gdmFsaWRhdGVQcm9wIChcbiAga2V5LFxuICBwcm9wT3B0aW9ucyxcbiAgcHJvcHNEYXRhLFxuICB2bVxuKSB7XG4gIHZhciBwcm9wID0gcHJvcE9wdGlvbnNba2V5XTtcbiAgdmFyIGFic2VudCA9ICFoYXNPd24ocHJvcHNEYXRhLCBrZXkpO1xuICB2YXIgdmFsdWUgPSBwcm9wc0RhdGFba2V5XTtcbiAgLy8gYm9vbGVhbiBjYXN0aW5nXG4gIHZhciBib29sZWFuSW5kZXggPSBnZXRUeXBlSW5kZXgoQm9vbGVhbiwgcHJvcC50eXBlKTtcbiAgaWYgKGJvb2xlYW5JbmRleCA+IC0xKSB7XG4gICAgaWYgKGFic2VudCAmJiAhaGFzT3duKHByb3AsICdkZWZhdWx0JykpIHtcbiAgICAgIHZhbHVlID0gZmFsc2U7XG4gICAgfSBlbHNlIGlmICh2YWx1ZSA9PT0gJycgfHwgdmFsdWUgPT09IGh5cGhlbmF0ZShrZXkpKSB7XG4gICAgICAvLyBvbmx5IGNhc3QgZW1wdHkgc3RyaW5nIC8gc2FtZSBuYW1lIHRvIGJvb2xlYW4gaWZcbiAgICAgIC8vIGJvb2xlYW4gaGFzIGhpZ2hlciBwcmlvcml0eVxuICAgICAgdmFyIHN0cmluZ0luZGV4ID0gZ2V0VHlwZUluZGV4KFN0cmluZywgcHJvcC50eXBlKTtcbiAgICAgIGlmIChzdHJpbmdJbmRleCA8IDAgfHwgYm9vbGVhbkluZGV4IDwgc3RyaW5nSW5kZXgpIHtcbiAgICAgICAgdmFsdWUgPSB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAvLyBjaGVjayBkZWZhdWx0IHZhbHVlXG4gIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdmFsdWUgPSBnZXRQcm9wRGVmYXVsdFZhbHVlKHZtLCBwcm9wLCBrZXkpO1xuICAgIC8vIHNpbmNlIHRoZSBkZWZhdWx0IHZhbHVlIGlzIGEgZnJlc2ggY29weSxcbiAgICAvLyBtYWtlIHN1cmUgdG8gb2JzZXJ2ZSBpdC5cbiAgICB2YXIgcHJldlNob3VsZE9ic2VydmUgPSBzaG91bGRPYnNlcnZlO1xuICAgIHRvZ2dsZU9ic2VydmluZyh0cnVlKTtcbiAgICBvYnNlcnZlKHZhbHVlKTtcbiAgICB0b2dnbGVPYnNlcnZpbmcocHJldlNob3VsZE9ic2VydmUpO1xuICB9XG4gIGlmIChcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmXG4gICAgLy8gc2tpcCB2YWxpZGF0aW9uIGZvciB3ZWV4IHJlY3ljbGUtbGlzdCBjaGlsZCBjb21wb25lbnQgcHJvcHNcbiAgICAhKGZhbHNlKVxuICApIHtcbiAgICBhc3NlcnRQcm9wKHByb3AsIGtleSwgdmFsdWUsIHZtLCBhYnNlbnQpO1xuICB9XG4gIHJldHVybiB2YWx1ZVxufVxuXG4vKipcbiAqIEdldCB0aGUgZGVmYXVsdCB2YWx1ZSBvZiBhIHByb3AuXG4gKi9cbmZ1bmN0aW9uIGdldFByb3BEZWZhdWx0VmFsdWUgKHZtLCBwcm9wLCBrZXkpIHtcbiAgLy8gbm8gZGVmYXVsdCwgcmV0dXJuIHVuZGVmaW5lZFxuICBpZiAoIWhhc093bihwcm9wLCAnZGVmYXVsdCcpKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZFxuICB9XG4gIHZhciBkZWYgPSBwcm9wLmRlZmF1bHQ7XG4gIC8vIHdhcm4gYWdhaW5zdCBub24tZmFjdG9yeSBkZWZhdWx0cyBmb3IgT2JqZWN0ICYgQXJyYXlcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgaXNPYmplY3QoZGVmKSkge1xuICAgIHdhcm4oXG4gICAgICAnSW52YWxpZCBkZWZhdWx0IHZhbHVlIGZvciBwcm9wIFwiJyArIGtleSArICdcIjogJyArXG4gICAgICAnUHJvcHMgd2l0aCB0eXBlIE9iamVjdC9BcnJheSBtdXN0IHVzZSBhIGZhY3RvcnkgZnVuY3Rpb24gJyArXG4gICAgICAndG8gcmV0dXJuIHRoZSBkZWZhdWx0IHZhbHVlLicsXG4gICAgICB2bVxuICAgICk7XG4gIH1cbiAgLy8gdGhlIHJhdyBwcm9wIHZhbHVlIHdhcyBhbHNvIHVuZGVmaW5lZCBmcm9tIHByZXZpb3VzIHJlbmRlcixcbiAgLy8gcmV0dXJuIHByZXZpb3VzIGRlZmF1bHQgdmFsdWUgdG8gYXZvaWQgdW5uZWNlc3Nhcnkgd2F0Y2hlciB0cmlnZ2VyXG4gIGlmICh2bSAmJiB2bS4kb3B0aW9ucy5wcm9wc0RhdGEgJiZcbiAgICB2bS4kb3B0aW9ucy5wcm9wc0RhdGFba2V5XSA9PT0gdW5kZWZpbmVkICYmXG4gICAgdm0uX3Byb3BzW2tleV0gIT09IHVuZGVmaW5lZFxuICApIHtcbiAgICByZXR1cm4gdm0uX3Byb3BzW2tleV1cbiAgfVxuICAvLyBjYWxsIGZhY3RvcnkgZnVuY3Rpb24gZm9yIG5vbi1GdW5jdGlvbiB0eXBlc1xuICAvLyBhIHZhbHVlIGlzIEZ1bmN0aW9uIGlmIGl0cyBwcm90b3R5cGUgaXMgZnVuY3Rpb24gZXZlbiBhY3Jvc3MgZGlmZmVyZW50IGV4ZWN1dGlvbiBjb250ZXh0XG4gIHJldHVybiB0eXBlb2YgZGVmID09PSAnZnVuY3Rpb24nICYmIGdldFR5cGUocHJvcC50eXBlKSAhPT0gJ0Z1bmN0aW9uJ1xuICAgID8gZGVmLmNhbGwodm0pXG4gICAgOiBkZWZcbn1cblxuLyoqXG4gKiBBc3NlcnQgd2hldGhlciBhIHByb3AgaXMgdmFsaWQuXG4gKi9cbmZ1bmN0aW9uIGFzc2VydFByb3AgKFxuICBwcm9wLFxuICBuYW1lLFxuICB2YWx1ZSxcbiAgdm0sXG4gIGFic2VudFxuKSB7XG4gIGlmIChwcm9wLnJlcXVpcmVkICYmIGFic2VudCkge1xuICAgIHdhcm4oXG4gICAgICAnTWlzc2luZyByZXF1aXJlZCBwcm9wOiBcIicgKyBuYW1lICsgJ1wiJyxcbiAgICAgIHZtXG4gICAgKTtcbiAgICByZXR1cm5cbiAgfVxuICBpZiAodmFsdWUgPT0gbnVsbCAmJiAhcHJvcC5yZXF1aXJlZCkge1xuICAgIHJldHVyblxuICB9XG4gIHZhciB0eXBlID0gcHJvcC50eXBlO1xuICB2YXIgdmFsaWQgPSAhdHlwZSB8fCB0eXBlID09PSB0cnVlO1xuICB2YXIgZXhwZWN0ZWRUeXBlcyA9IFtdO1xuICBpZiAodHlwZSkge1xuICAgIGlmICghQXJyYXkuaXNBcnJheSh0eXBlKSkge1xuICAgICAgdHlwZSA9IFt0eXBlXTtcbiAgICB9XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0eXBlLmxlbmd0aCAmJiAhdmFsaWQ7IGkrKykge1xuICAgICAgdmFyIGFzc2VydGVkVHlwZSA9IGFzc2VydFR5cGUodmFsdWUsIHR5cGVbaV0pO1xuICAgICAgZXhwZWN0ZWRUeXBlcy5wdXNoKGFzc2VydGVkVHlwZS5leHBlY3RlZFR5cGUgfHwgJycpO1xuICAgICAgdmFsaWQgPSBhc3NlcnRlZFR5cGUudmFsaWQ7XG4gICAgfVxuICB9XG5cbiAgaWYgKCF2YWxpZCkge1xuICAgIHdhcm4oXG4gICAgICBnZXRJbnZhbGlkVHlwZU1lc3NhZ2UobmFtZSwgdmFsdWUsIGV4cGVjdGVkVHlwZXMpLFxuICAgICAgdm1cbiAgICApO1xuICAgIHJldHVyblxuICB9XG4gIHZhciB2YWxpZGF0b3IgPSBwcm9wLnZhbGlkYXRvcjtcbiAgaWYgKHZhbGlkYXRvcikge1xuICAgIGlmICghdmFsaWRhdG9yKHZhbHVlKSkge1xuICAgICAgd2FybihcbiAgICAgICAgJ0ludmFsaWQgcHJvcDogY3VzdG9tIHZhbGlkYXRvciBjaGVjayBmYWlsZWQgZm9yIHByb3AgXCInICsgbmFtZSArICdcIi4nLFxuICAgICAgICB2bVxuICAgICAgKTtcbiAgICB9XG4gIH1cbn1cblxudmFyIHNpbXBsZUNoZWNrUkUgPSAvXihTdHJpbmd8TnVtYmVyfEJvb2xlYW58RnVuY3Rpb258U3ltYm9sKSQvO1xuXG5mdW5jdGlvbiBhc3NlcnRUeXBlICh2YWx1ZSwgdHlwZSkge1xuICB2YXIgdmFsaWQ7XG4gIHZhciBleHBlY3RlZFR5cGUgPSBnZXRUeXBlKHR5cGUpO1xuICBpZiAoc2ltcGxlQ2hlY2tSRS50ZXN0KGV4cGVjdGVkVHlwZSkpIHtcbiAgICB2YXIgdCA9IHR5cGVvZiB2YWx1ZTtcbiAgICB2YWxpZCA9IHQgPT09IGV4cGVjdGVkVHlwZS50b0xvd2VyQ2FzZSgpO1xuICAgIC8vIGZvciBwcmltaXRpdmUgd3JhcHBlciBvYmplY3RzXG4gICAgaWYgKCF2YWxpZCAmJiB0ID09PSAnb2JqZWN0Jykge1xuICAgICAgdmFsaWQgPSB2YWx1ZSBpbnN0YW5jZW9mIHR5cGU7XG4gICAgfVxuICB9IGVsc2UgaWYgKGV4cGVjdGVkVHlwZSA9PT0gJ09iamVjdCcpIHtcbiAgICB2YWxpZCA9IGlzUGxhaW5PYmplY3QodmFsdWUpO1xuICB9IGVsc2UgaWYgKGV4cGVjdGVkVHlwZSA9PT0gJ0FycmF5Jykge1xuICAgIHZhbGlkID0gQXJyYXkuaXNBcnJheSh2YWx1ZSk7XG4gIH0gZWxzZSB7XG4gICAgdmFsaWQgPSB2YWx1ZSBpbnN0YW5jZW9mIHR5cGU7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICB2YWxpZDogdmFsaWQsXG4gICAgZXhwZWN0ZWRUeXBlOiBleHBlY3RlZFR5cGVcbiAgfVxufVxuXG4vKipcbiAqIFVzZSBmdW5jdGlvbiBzdHJpbmcgbmFtZSB0byBjaGVjayBidWlsdC1pbiB0eXBlcyxcbiAqIGJlY2F1c2UgYSBzaW1wbGUgZXF1YWxpdHkgY2hlY2sgd2lsbCBmYWlsIHdoZW4gcnVubmluZ1xuICogYWNyb3NzIGRpZmZlcmVudCB2bXMgLyBpZnJhbWVzLlxuICovXG5mdW5jdGlvbiBnZXRUeXBlIChmbikge1xuICB2YXIgbWF0Y2ggPSBmbiAmJiBmbi50b1N0cmluZygpLm1hdGNoKC9eXFxzKmZ1bmN0aW9uIChcXHcrKS8pO1xuICByZXR1cm4gbWF0Y2ggPyBtYXRjaFsxXSA6ICcnXG59XG5cbmZ1bmN0aW9uIGlzU2FtZVR5cGUgKGEsIGIpIHtcbiAgcmV0dXJuIGdldFR5cGUoYSkgPT09IGdldFR5cGUoYilcbn1cblxuZnVuY3Rpb24gZ2V0VHlwZUluZGV4ICh0eXBlLCBleHBlY3RlZFR5cGVzKSB7XG4gIGlmICghQXJyYXkuaXNBcnJheShleHBlY3RlZFR5cGVzKSkge1xuICAgIHJldHVybiBpc1NhbWVUeXBlKGV4cGVjdGVkVHlwZXMsIHR5cGUpID8gMCA6IC0xXG4gIH1cbiAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGV4cGVjdGVkVHlwZXMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICBpZiAoaXNTYW1lVHlwZShleHBlY3RlZFR5cGVzW2ldLCB0eXBlKSkge1xuICAgICAgcmV0dXJuIGlcbiAgICB9XG4gIH1cbiAgcmV0dXJuIC0xXG59XG5cbmZ1bmN0aW9uIGdldEludmFsaWRUeXBlTWVzc2FnZSAobmFtZSwgdmFsdWUsIGV4cGVjdGVkVHlwZXMpIHtcbiAgdmFyIG1lc3NhZ2UgPSBcIkludmFsaWQgcHJvcDogdHlwZSBjaGVjayBmYWlsZWQgZm9yIHByb3AgXFxcIlwiICsgbmFtZSArIFwiXFxcIi5cIiArXG4gICAgXCIgRXhwZWN0ZWQgXCIgKyAoZXhwZWN0ZWRUeXBlcy5tYXAoY2FwaXRhbGl6ZSkuam9pbignLCAnKSk7XG4gIHZhciBleHBlY3RlZFR5cGUgPSBleHBlY3RlZFR5cGVzWzBdO1xuICB2YXIgcmVjZWl2ZWRUeXBlID0gdG9SYXdUeXBlKHZhbHVlKTtcbiAgdmFyIGV4cGVjdGVkVmFsdWUgPSBzdHlsZVZhbHVlKHZhbHVlLCBleHBlY3RlZFR5cGUpO1xuICB2YXIgcmVjZWl2ZWRWYWx1ZSA9IHN0eWxlVmFsdWUodmFsdWUsIHJlY2VpdmVkVHlwZSk7XG4gIC8vIGNoZWNrIGlmIHdlIG5lZWQgdG8gc3BlY2lmeSBleHBlY3RlZCB2YWx1ZVxuICBpZiAoZXhwZWN0ZWRUeXBlcy5sZW5ndGggPT09IDEgJiZcbiAgICAgIGlzRXhwbGljYWJsZShleHBlY3RlZFR5cGUpICYmXG4gICAgICAhaXNCb29sZWFuKGV4cGVjdGVkVHlwZSwgcmVjZWl2ZWRUeXBlKSkge1xuICAgIG1lc3NhZ2UgKz0gXCIgd2l0aCB2YWx1ZSBcIiArIGV4cGVjdGVkVmFsdWU7XG4gIH1cbiAgbWVzc2FnZSArPSBcIiwgZ290IFwiICsgcmVjZWl2ZWRUeXBlICsgXCIgXCI7XG4gIC8vIGNoZWNrIGlmIHdlIG5lZWQgdG8gc3BlY2lmeSByZWNlaXZlZCB2YWx1ZVxuICBpZiAoaXNFeHBsaWNhYmxlKHJlY2VpdmVkVHlwZSkpIHtcbiAgICBtZXNzYWdlICs9IFwid2l0aCB2YWx1ZSBcIiArIHJlY2VpdmVkVmFsdWUgKyBcIi5cIjtcbiAgfVxuICByZXR1cm4gbWVzc2FnZVxufVxuXG5mdW5jdGlvbiBzdHlsZVZhbHVlICh2YWx1ZSwgdHlwZSkge1xuICBpZiAodHlwZSA9PT0gJ1N0cmluZycpIHtcbiAgICByZXR1cm4gKFwiXFxcIlwiICsgdmFsdWUgKyBcIlxcXCJcIilcbiAgfSBlbHNlIGlmICh0eXBlID09PSAnTnVtYmVyJykge1xuICAgIHJldHVybiAoXCJcIiArIChOdW1iZXIodmFsdWUpKSlcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gKFwiXCIgKyB2YWx1ZSlcbiAgfVxufVxuXG5mdW5jdGlvbiBpc0V4cGxpY2FibGUgKHZhbHVlKSB7XG4gIHZhciBleHBsaWNpdFR5cGVzID0gWydzdHJpbmcnLCAnbnVtYmVyJywgJ2Jvb2xlYW4nXTtcbiAgcmV0dXJuIGV4cGxpY2l0VHlwZXMuc29tZShmdW5jdGlvbiAoZWxlbSkgeyByZXR1cm4gdmFsdWUudG9Mb3dlckNhc2UoKSA9PT0gZWxlbTsgfSlcbn1cblxuZnVuY3Rpb24gaXNCb29sZWFuICgpIHtcbiAgdmFyIGFyZ3MgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgd2hpbGUgKCBsZW4tLSApIGFyZ3NbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gXTtcblxuICByZXR1cm4gYXJncy5zb21lKGZ1bmN0aW9uIChlbGVtKSB7IHJldHVybiBlbGVtLnRvTG93ZXJDYXNlKCkgPT09ICdib29sZWFuJzsgfSlcbn1cblxuLyogICovXG5cbmZ1bmN0aW9uIGhhbmRsZUVycm9yIChlcnIsIHZtLCBpbmZvKSB7XG4gIC8vIERlYWN0aXZhdGUgZGVwcyB0cmFja2luZyB3aGlsZSBwcm9jZXNzaW5nIGVycm9yIGhhbmRsZXIgdG8gYXZvaWQgcG9zc2libGUgaW5maW5pdGUgcmVuZGVyaW5nLlxuICAvLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS92dWVqcy92dWV4L2lzc3Vlcy8xNTA1XG4gIHB1c2hUYXJnZXQoKTtcbiAgdHJ5IHtcbiAgICBpZiAodm0pIHtcbiAgICAgIHZhciBjdXIgPSB2bTtcbiAgICAgIHdoaWxlICgoY3VyID0gY3VyLiRwYXJlbnQpKSB7XG4gICAgICAgIHZhciBob29rcyA9IGN1ci4kb3B0aW9ucy5lcnJvckNhcHR1cmVkO1xuICAgICAgICBpZiAoaG9va3MpIHtcbiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGhvb2tzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICB2YXIgY2FwdHVyZSA9IGhvb2tzW2ldLmNhbGwoY3VyLCBlcnIsIHZtLCBpbmZvKSA9PT0gZmFsc2U7XG4gICAgICAgICAgICAgIGlmIChjYXB0dXJlKSB7IHJldHVybiB9XG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgIGdsb2JhbEhhbmRsZUVycm9yKGUsIGN1ciwgJ2Vycm9yQ2FwdHVyZWQgaG9vaycpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBnbG9iYWxIYW5kbGVFcnJvcihlcnIsIHZtLCBpbmZvKTtcbiAgfSBmaW5hbGx5IHtcbiAgICBwb3BUYXJnZXQoKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpbnZva2VXaXRoRXJyb3JIYW5kbGluZyAoXG4gIGhhbmRsZXIsXG4gIGNvbnRleHQsXG4gIGFyZ3MsXG4gIHZtLFxuICBpbmZvXG4pIHtcbiAgdmFyIHJlcztcbiAgdHJ5IHtcbiAgICByZXMgPSBhcmdzID8gaGFuZGxlci5hcHBseShjb250ZXh0LCBhcmdzKSA6IGhhbmRsZXIuY2FsbChjb250ZXh0KTtcbiAgICBpZiAocmVzICYmICFyZXMuX2lzVnVlICYmIGlzUHJvbWlzZShyZXMpICYmICFyZXMuX2hhbmRsZWQpIHtcbiAgICAgIHJlcy5jYXRjaChmdW5jdGlvbiAoZSkgeyByZXR1cm4gaGFuZGxlRXJyb3IoZSwgdm0sIGluZm8gKyBcIiAoUHJvbWlzZS9hc3luYylcIik7IH0pO1xuICAgICAgLy8gaXNzdWUgIzk1MTFcbiAgICAgIC8vIGF2b2lkIGNhdGNoIHRyaWdnZXJpbmcgbXVsdGlwbGUgdGltZXMgd2hlbiBuZXN0ZWQgY2FsbHNcbiAgICAgIHJlcy5faGFuZGxlZCA9IHRydWU7XG4gICAgfVxuICB9IGNhdGNoIChlKSB7XG4gICAgaGFuZGxlRXJyb3IoZSwgdm0sIGluZm8pO1xuICB9XG4gIHJldHVybiByZXNcbn1cblxuZnVuY3Rpb24gZ2xvYmFsSGFuZGxlRXJyb3IgKGVyciwgdm0sIGluZm8pIHtcbiAgaWYgKGNvbmZpZy5lcnJvckhhbmRsZXIpIHtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIGNvbmZpZy5lcnJvckhhbmRsZXIuY2FsbChudWxsLCBlcnIsIHZtLCBpbmZvKVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIC8vIGlmIHRoZSB1c2VyIGludGVudGlvbmFsbHkgdGhyb3dzIHRoZSBvcmlnaW5hbCBlcnJvciBpbiB0aGUgaGFuZGxlcixcbiAgICAgIC8vIGRvIG5vdCBsb2cgaXQgdHdpY2VcbiAgICAgIGlmIChlICE9PSBlcnIpIHtcbiAgICAgICAgbG9nRXJyb3IoZSwgbnVsbCwgJ2NvbmZpZy5lcnJvckhhbmRsZXInKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgbG9nRXJyb3IoZXJyLCB2bSwgaW5mbyk7XG59XG5cbmZ1bmN0aW9uIGxvZ0Vycm9yIChlcnIsIHZtLCBpbmZvKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgd2FybigoXCJFcnJvciBpbiBcIiArIGluZm8gKyBcIjogXFxcIlwiICsgKGVyci50b1N0cmluZygpKSArIFwiXFxcIlwiKSwgdm0pO1xuICB9XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gIGlmICgoaW5Ccm93c2VyIHx8IGluV2VleCkgJiYgdHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9IGVsc2Uge1xuICAgIHRocm93IGVyclxuICB9XG59XG5cbi8qICAqL1xuXG52YXIgaXNVc2luZ01pY3JvVGFzayA9IGZhbHNlO1xuXG52YXIgY2FsbGJhY2tzID0gW107XG52YXIgcGVuZGluZyA9IGZhbHNlO1xuXG5mdW5jdGlvbiBmbHVzaENhbGxiYWNrcyAoKSB7XG4gIHBlbmRpbmcgPSBmYWxzZTtcbiAgdmFyIGNvcGllcyA9IGNhbGxiYWNrcy5zbGljZSgwKTtcbiAgY2FsbGJhY2tzLmxlbmd0aCA9IDA7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgY29waWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgY29waWVzW2ldKCk7XG4gIH1cbn1cblxuLy8gSGVyZSB3ZSBoYXZlIGFzeW5jIGRlZmVycmluZyB3cmFwcGVycyB1c2luZyBtaWNyb3Rhc2tzLlxuLy8gSW4gMi41IHdlIHVzZWQgKG1hY3JvKSB0YXNrcyAoaW4gY29tYmluYXRpb24gd2l0aCBtaWNyb3Rhc2tzKS5cbi8vIEhvd2V2ZXIsIGl0IGhhcyBzdWJ0bGUgcHJvYmxlbXMgd2hlbiBzdGF0ZSBpcyBjaGFuZ2VkIHJpZ2h0IGJlZm9yZSByZXBhaW50XG4vLyAoZS5nLiAjNjgxMywgb3V0LWluIHRyYW5zaXRpb25zKS5cbi8vIEFsc28sIHVzaW5nIChtYWNybykgdGFza3MgaW4gZXZlbnQgaGFuZGxlciB3b3VsZCBjYXVzZSBzb21lIHdlaXJkIGJlaGF2aW9yc1xuLy8gdGhhdCBjYW5ub3QgYmUgY2lyY3VtdmVudGVkIChlLmcuICM3MTA5LCAjNzE1MywgIzc1NDYsICM3ODM0LCAjODEwOSkuXG4vLyBTbyB3ZSBub3cgdXNlIG1pY3JvdGFza3MgZXZlcnl3aGVyZSwgYWdhaW4uXG4vLyBBIG1ham9yIGRyYXdiYWNrIG9mIHRoaXMgdHJhZGVvZmYgaXMgdGhhdCB0aGVyZSBhcmUgc29tZSBzY2VuYXJpb3Ncbi8vIHdoZXJlIG1pY3JvdGFza3MgaGF2ZSB0b28gaGlnaCBhIHByaW9yaXR5IGFuZCBmaXJlIGluIGJldHdlZW4gc3VwcG9zZWRseVxuLy8gc2VxdWVudGlhbCBldmVudHMgKGUuZy4gIzQ1MjEsICM2NjkwLCB3aGljaCBoYXZlIHdvcmthcm91bmRzKVxuLy8gb3IgZXZlbiBiZXR3ZWVuIGJ1YmJsaW5nIG9mIHRoZSBzYW1lIGV2ZW50ICgjNjU2NikuXG52YXIgdGltZXJGdW5jO1xuXG4vLyBUaGUgbmV4dFRpY2sgYmVoYXZpb3IgbGV2ZXJhZ2VzIHRoZSBtaWNyb3Rhc2sgcXVldWUsIHdoaWNoIGNhbiBiZSBhY2Nlc3NlZFxuLy8gdmlhIGVpdGhlciBuYXRpdmUgUHJvbWlzZS50aGVuIG9yIE11dGF0aW9uT2JzZXJ2ZXIuXG4vLyBNdXRhdGlvbk9ic2VydmVyIGhhcyB3aWRlciBzdXBwb3J0LCBob3dldmVyIGl0IGlzIHNlcmlvdXNseSBidWdnZWQgaW5cbi8vIFVJV2ViVmlldyBpbiBpT1MgPj0gOS4zLjMgd2hlbiB0cmlnZ2VyZWQgaW4gdG91Y2ggZXZlbnQgaGFuZGxlcnMuIEl0XG4vLyBjb21wbGV0ZWx5IHN0b3BzIHdvcmtpbmcgYWZ0ZXIgdHJpZ2dlcmluZyBhIGZldyB0aW1lcy4uLiBzbywgaWYgbmF0aXZlXG4vLyBQcm9taXNlIGlzIGF2YWlsYWJsZSwgd2Ugd2lsbCB1c2UgaXQ6XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCwgJGZsb3ctZGlzYWJsZS1saW5lICovXG5pZiAodHlwZW9mIFByb21pc2UgIT09ICd1bmRlZmluZWQnICYmIGlzTmF0aXZlKFByb21pc2UpKSB7XG4gIHZhciBwID0gUHJvbWlzZS5yZXNvbHZlKCk7XG4gIHRpbWVyRnVuYyA9IGZ1bmN0aW9uICgpIHtcbiAgICBwLnRoZW4oZmx1c2hDYWxsYmFja3MpO1xuICAgIC8vIEluIHByb2JsZW1hdGljIFVJV2ViVmlld3MsIFByb21pc2UudGhlbiBkb2Vzbid0IGNvbXBsZXRlbHkgYnJlYWssIGJ1dFxuICAgIC8vIGl0IGNhbiBnZXQgc3R1Y2sgaW4gYSB3ZWlyZCBzdGF0ZSB3aGVyZSBjYWxsYmFja3MgYXJlIHB1c2hlZCBpbnRvIHRoZVxuICAgIC8vIG1pY3JvdGFzayBxdWV1ZSBidXQgdGhlIHF1ZXVlIGlzbid0IGJlaW5nIGZsdXNoZWQsIHVudGlsIHRoZSBicm93c2VyXG4gICAgLy8gbmVlZHMgdG8gZG8gc29tZSBvdGhlciB3b3JrLCBlLmcuIGhhbmRsZSBhIHRpbWVyLiBUaGVyZWZvcmUgd2UgY2FuXG4gICAgLy8gXCJmb3JjZVwiIHRoZSBtaWNyb3Rhc2sgcXVldWUgdG8gYmUgZmx1c2hlZCBieSBhZGRpbmcgYW4gZW1wdHkgdGltZXIuXG4gICAgaWYgKGlzSU9TKSB7IHNldFRpbWVvdXQobm9vcCk7IH1cbiAgfTtcbiAgaXNVc2luZ01pY3JvVGFzayA9IHRydWU7XG59IGVsc2UgaWYgKCFpc0lFICYmIHR5cGVvZiBNdXRhdGlvbk9ic2VydmVyICE9PSAndW5kZWZpbmVkJyAmJiAoXG4gIGlzTmF0aXZlKE11dGF0aW9uT2JzZXJ2ZXIpIHx8XG4gIC8vIFBoYW50b21KUyBhbmQgaU9TIDcueFxuICBNdXRhdGlvbk9ic2VydmVyLnRvU3RyaW5nKCkgPT09ICdbb2JqZWN0IE11dGF0aW9uT2JzZXJ2ZXJDb25zdHJ1Y3Rvcl0nXG4pKSB7XG4gIC8vIFVzZSBNdXRhdGlvbk9ic2VydmVyIHdoZXJlIG5hdGl2ZSBQcm9taXNlIGlzIG5vdCBhdmFpbGFibGUsXG4gIC8vIGUuZy4gUGhhbnRvbUpTLCBpT1M3LCBBbmRyb2lkIDQuNFxuICAvLyAoIzY0NjYgTXV0YXRpb25PYnNlcnZlciBpcyB1bnJlbGlhYmxlIGluIElFMTEpXG4gIHZhciBjb3VudGVyID0gMTtcbiAgdmFyIG9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoZmx1c2hDYWxsYmFja3MpO1xuICB2YXIgdGV4dE5vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShTdHJpbmcoY291bnRlcikpO1xuICBvYnNlcnZlci5vYnNlcnZlKHRleHROb2RlLCB7XG4gICAgY2hhcmFjdGVyRGF0YTogdHJ1ZVxuICB9KTtcbiAgdGltZXJGdW5jID0gZnVuY3Rpb24gKCkge1xuICAgIGNvdW50ZXIgPSAoY291bnRlciArIDEpICUgMjtcbiAgICB0ZXh0Tm9kZS5kYXRhID0gU3RyaW5nKGNvdW50ZXIpO1xuICB9O1xuICBpc1VzaW5nTWljcm9UYXNrID0gdHJ1ZTtcbn0gZWxzZSBpZiAodHlwZW9mIHNldEltbWVkaWF0ZSAhPT0gJ3VuZGVmaW5lZCcgJiYgaXNOYXRpdmUoc2V0SW1tZWRpYXRlKSkge1xuICAvLyBGYWxsYmFjayB0byBzZXRJbW1lZGlhdGUuXG4gIC8vIFRlY2hpbmljYWxseSBpdCBsZXZlcmFnZXMgdGhlIChtYWNybykgdGFzayBxdWV1ZSxcbiAgLy8gYnV0IGl0IGlzIHN0aWxsIGEgYmV0dGVyIGNob2ljZSB0aGFuIHNldFRpbWVvdXQuXG4gIHRpbWVyRnVuYyA9IGZ1bmN0aW9uICgpIHtcbiAgICBzZXRJbW1lZGlhdGUoZmx1c2hDYWxsYmFja3MpO1xuICB9O1xufSBlbHNlIHtcbiAgLy8gRmFsbGJhY2sgdG8gc2V0VGltZW91dC5cbiAgdGltZXJGdW5jID0gZnVuY3Rpb24gKCkge1xuICAgIHNldFRpbWVvdXQoZmx1c2hDYWxsYmFja3MsIDApO1xuICB9O1xufVxuXG5mdW5jdGlvbiBuZXh0VGljayAoY2IsIGN0eCkge1xuICB2YXIgX3Jlc29sdmU7XG4gIGNhbGxiYWNrcy5wdXNoKGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoY2IpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNiLmNhbGwoY3R4KTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgaGFuZGxlRXJyb3IoZSwgY3R4LCAnbmV4dFRpY2snKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKF9yZXNvbHZlKSB7XG4gICAgICBfcmVzb2x2ZShjdHgpO1xuICAgIH1cbiAgfSk7XG4gIGlmICghcGVuZGluZykge1xuICAgIHBlbmRpbmcgPSB0cnVlO1xuICAgIHRpbWVyRnVuYygpO1xuICB9XG4gIC8vICRmbG93LWRpc2FibGUtbGluZVxuICBpZiAoIWNiICYmIHR5cGVvZiBQcm9taXNlICE9PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xuICAgICAgX3Jlc29sdmUgPSByZXNvbHZlO1xuICAgIH0pXG4gIH1cbn1cblxuLyogICovXG5cbi8qIG5vdCB0eXBlIGNoZWNraW5nIHRoaXMgZmlsZSBiZWNhdXNlIGZsb3cgZG9lc24ndCBwbGF5IHdlbGwgd2l0aCBQcm94eSAqL1xuXG52YXIgaW5pdFByb3h5O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgYWxsb3dlZEdsb2JhbHMgPSBtYWtlTWFwKFxuICAgICdJbmZpbml0eSx1bmRlZmluZWQsTmFOLGlzRmluaXRlLGlzTmFOLCcgK1xuICAgICdwYXJzZUZsb2F0LHBhcnNlSW50LGRlY29kZVVSSSxkZWNvZGVVUklDb21wb25lbnQsZW5jb2RlVVJJLGVuY29kZVVSSUNvbXBvbmVudCwnICtcbiAgICAnTWF0aCxOdW1iZXIsRGF0ZSxBcnJheSxPYmplY3QsQm9vbGVhbixTdHJpbmcsUmVnRXhwLE1hcCxTZXQsSlNPTixJbnRsLCcgK1xuICAgICdyZXF1aXJlJyAvLyBmb3IgV2VicGFjay9Ccm93c2VyaWZ5XG4gICk7XG5cbiAgdmFyIHdhcm5Ob25QcmVzZW50ID0gZnVuY3Rpb24gKHRhcmdldCwga2V5KSB7XG4gICAgd2FybihcbiAgICAgIFwiUHJvcGVydHkgb3IgbWV0aG9kIFxcXCJcIiArIGtleSArIFwiXFxcIiBpcyBub3QgZGVmaW5lZCBvbiB0aGUgaW5zdGFuY2UgYnV0IFwiICtcbiAgICAgICdyZWZlcmVuY2VkIGR1cmluZyByZW5kZXIuIE1ha2Ugc3VyZSB0aGF0IHRoaXMgcHJvcGVydHkgaXMgcmVhY3RpdmUsICcgK1xuICAgICAgJ2VpdGhlciBpbiB0aGUgZGF0YSBvcHRpb24sIG9yIGZvciBjbGFzcy1iYXNlZCBjb21wb25lbnRzLCBieSAnICtcbiAgICAgICdpbml0aWFsaXppbmcgdGhlIHByb3BlcnR5LiAnICtcbiAgICAgICdTZWU6IGh0dHBzOi8vdnVlanMub3JnL3YyL2d1aWRlL3JlYWN0aXZpdHkuaHRtbCNEZWNsYXJpbmctUmVhY3RpdmUtUHJvcGVydGllcy4nLFxuICAgICAgdGFyZ2V0XG4gICAgKTtcbiAgfTtcblxuICB2YXIgd2FyblJlc2VydmVkUHJlZml4ID0gZnVuY3Rpb24gKHRhcmdldCwga2V5KSB7XG4gICAgd2FybihcbiAgICAgIFwiUHJvcGVydHkgXFxcIlwiICsga2V5ICsgXCJcXFwiIG11c3QgYmUgYWNjZXNzZWQgd2l0aCBcXFwiJGRhdGEuXCIgKyBrZXkgKyBcIlxcXCIgYmVjYXVzZSBcIiArXG4gICAgICAncHJvcGVydGllcyBzdGFydGluZyB3aXRoIFwiJFwiIG9yIFwiX1wiIGFyZSBub3QgcHJveGllZCBpbiB0aGUgVnVlIGluc3RhbmNlIHRvICcgK1xuICAgICAgJ3ByZXZlbnQgY29uZmxpY3RzIHdpdGggVnVlIGludGVybmFscycgK1xuICAgICAgJ1NlZTogaHR0cHM6Ly92dWVqcy5vcmcvdjIvYXBpLyNkYXRhJyxcbiAgICAgIHRhcmdldFxuICAgICk7XG4gIH07XG5cbiAgdmFyIGhhc1Byb3h5ID1cbiAgICB0eXBlb2YgUHJveHkgIT09ICd1bmRlZmluZWQnICYmIGlzTmF0aXZlKFByb3h5KTtcblxuICBpZiAoaGFzUHJveHkpIHtcbiAgICB2YXIgaXNCdWlsdEluTW9kaWZpZXIgPSBtYWtlTWFwKCdzdG9wLHByZXZlbnQsc2VsZixjdHJsLHNoaWZ0LGFsdCxtZXRhLGV4YWN0Jyk7XG4gICAgY29uZmlnLmtleUNvZGVzID0gbmV3IFByb3h5KGNvbmZpZy5rZXlDb2Rlcywge1xuICAgICAgc2V0OiBmdW5jdGlvbiBzZXQgKHRhcmdldCwga2V5LCB2YWx1ZSkge1xuICAgICAgICBpZiAoaXNCdWlsdEluTW9kaWZpZXIoa2V5KSkge1xuICAgICAgICAgIHdhcm4oKFwiQXZvaWQgb3ZlcndyaXRpbmcgYnVpbHQtaW4gbW9kaWZpZXIgaW4gY29uZmlnLmtleUNvZGVzOiAuXCIgKyBrZXkpKTtcbiAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHZhbHVlO1xuICAgICAgICAgIHJldHVybiB0cnVlXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHZhciBoYXNIYW5kbGVyID0ge1xuICAgIGhhczogZnVuY3Rpb24gaGFzICh0YXJnZXQsIGtleSkge1xuICAgICAgdmFyIGhhcyA9IGtleSBpbiB0YXJnZXQ7XG4gICAgICB2YXIgaXNBbGxvd2VkID0gYWxsb3dlZEdsb2JhbHMoa2V5KSB8fFxuICAgICAgICAodHlwZW9mIGtleSA9PT0gJ3N0cmluZycgJiYga2V5LmNoYXJBdCgwKSA9PT0gJ18nICYmICEoa2V5IGluIHRhcmdldC4kZGF0YSkpO1xuICAgICAgaWYgKCFoYXMgJiYgIWlzQWxsb3dlZCkge1xuICAgICAgICBpZiAoa2V5IGluIHRhcmdldC4kZGF0YSkgeyB3YXJuUmVzZXJ2ZWRQcmVmaXgodGFyZ2V0LCBrZXkpOyB9XG4gICAgICAgIGVsc2UgeyB3YXJuTm9uUHJlc2VudCh0YXJnZXQsIGtleSk7IH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBoYXMgfHwgIWlzQWxsb3dlZFxuICAgIH1cbiAgfTtcblxuICB2YXIgZ2V0SGFuZGxlciA9IHtcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCAodGFyZ2V0LCBrZXkpIHtcbiAgICAgIGlmICh0eXBlb2Yga2V5ID09PSAnc3RyaW5nJyAmJiAhKGtleSBpbiB0YXJnZXQpKSB7XG4gICAgICAgIGlmIChrZXkgaW4gdGFyZ2V0LiRkYXRhKSB7IHdhcm5SZXNlcnZlZFByZWZpeCh0YXJnZXQsIGtleSk7IH1cbiAgICAgICAgZWxzZSB7IHdhcm5Ob25QcmVzZW50KHRhcmdldCwga2V5KTsgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHRhcmdldFtrZXldXG4gICAgfVxuICB9O1xuXG4gIGluaXRQcm94eSA9IGZ1bmN0aW9uIGluaXRQcm94eSAodm0pIHtcbiAgICBpZiAoaGFzUHJveHkpIHtcbiAgICAgIC8vIGRldGVybWluZSB3aGljaCBwcm94eSBoYW5kbGVyIHRvIHVzZVxuICAgICAgdmFyIG9wdGlvbnMgPSB2bS4kb3B0aW9ucztcbiAgICAgIHZhciBoYW5kbGVycyA9IG9wdGlvbnMucmVuZGVyICYmIG9wdGlvbnMucmVuZGVyLl93aXRoU3RyaXBwZWRcbiAgICAgICAgPyBnZXRIYW5kbGVyXG4gICAgICAgIDogaGFzSGFuZGxlcjtcbiAgICAgIHZtLl9yZW5kZXJQcm94eSA9IG5ldyBQcm94eSh2bSwgaGFuZGxlcnMpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2bS5fcmVuZGVyUHJveHkgPSB2bTtcbiAgICB9XG4gIH07XG59XG5cbi8qICAqL1xuXG52YXIgc2Vlbk9iamVjdHMgPSBuZXcgX1NldCgpO1xuXG4vKipcbiAqIFJlY3Vyc2l2ZWx5IHRyYXZlcnNlIGFuIG9iamVjdCB0byBldm9rZSBhbGwgY29udmVydGVkXG4gKiBnZXR0ZXJzLCBzbyB0aGF0IGV2ZXJ5IG5lc3RlZCBwcm9wZXJ0eSBpbnNpZGUgdGhlIG9iamVjdFxuICogaXMgY29sbGVjdGVkIGFzIGEgXCJkZWVwXCIgZGVwZW5kZW5jeS5cbiAqL1xuZnVuY3Rpb24gdHJhdmVyc2UgKHZhbCkge1xuICBfdHJhdmVyc2UodmFsLCBzZWVuT2JqZWN0cyk7XG4gIHNlZW5PYmplY3RzLmNsZWFyKCk7XG59XG5cbmZ1bmN0aW9uIF90cmF2ZXJzZSAodmFsLCBzZWVuKSB7XG4gIHZhciBpLCBrZXlzO1xuICB2YXIgaXNBID0gQXJyYXkuaXNBcnJheSh2YWwpO1xuICBpZiAoKCFpc0EgJiYgIWlzT2JqZWN0KHZhbCkpIHx8IE9iamVjdC5pc0Zyb3plbih2YWwpIHx8IHZhbCBpbnN0YW5jZW9mIFZOb2RlKSB7XG4gICAgcmV0dXJuXG4gIH1cbiAgaWYgKHZhbC5fX29iX18pIHtcbiAgICB2YXIgZGVwSWQgPSB2YWwuX19vYl9fLmRlcC5pZDtcbiAgICBpZiAoc2Vlbi5oYXMoZGVwSWQpKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgc2Vlbi5hZGQoZGVwSWQpO1xuICB9XG4gIGlmIChpc0EpIHtcbiAgICBpID0gdmFsLmxlbmd0aDtcbiAgICB3aGlsZSAoaS0tKSB7IF90cmF2ZXJzZSh2YWxbaV0sIHNlZW4pOyB9XG4gIH0gZWxzZSB7XG4gICAga2V5cyA9IE9iamVjdC5rZXlzKHZhbCk7XG4gICAgaSA9IGtleXMubGVuZ3RoO1xuICAgIHdoaWxlIChpLS0pIHsgX3RyYXZlcnNlKHZhbFtrZXlzW2ldXSwgc2Vlbik7IH1cbiAgfVxufVxuXG52YXIgbWFyaztcbnZhciBtZWFzdXJlO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgcGVyZiA9IGluQnJvd3NlciAmJiB3aW5kb3cucGVyZm9ybWFuY2U7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICBpZiAoXG4gICAgcGVyZiAmJlxuICAgIHBlcmYubWFyayAmJlxuICAgIHBlcmYubWVhc3VyZSAmJlxuICAgIHBlcmYuY2xlYXJNYXJrcyAmJlxuICAgIHBlcmYuY2xlYXJNZWFzdXJlc1xuICApIHtcbiAgICBtYXJrID0gZnVuY3Rpb24gKHRhZykgeyByZXR1cm4gcGVyZi5tYXJrKHRhZyk7IH07XG4gICAgbWVhc3VyZSA9IGZ1bmN0aW9uIChuYW1lLCBzdGFydFRhZywgZW5kVGFnKSB7XG4gICAgICBwZXJmLm1lYXN1cmUobmFtZSwgc3RhcnRUYWcsIGVuZFRhZyk7XG4gICAgICBwZXJmLmNsZWFyTWFya3Moc3RhcnRUYWcpO1xuICAgICAgcGVyZi5jbGVhck1hcmtzKGVuZFRhZyk7XG4gICAgICAvLyBwZXJmLmNsZWFyTWVhc3VyZXMobmFtZSlcbiAgICB9O1xuICB9XG59XG5cbi8qICAqL1xuXG52YXIgbm9ybWFsaXplRXZlbnQgPSBjYWNoZWQoZnVuY3Rpb24gKG5hbWUpIHtcbiAgdmFyIHBhc3NpdmUgPSBuYW1lLmNoYXJBdCgwKSA9PT0gJyYnO1xuICBuYW1lID0gcGFzc2l2ZSA/IG5hbWUuc2xpY2UoMSkgOiBuYW1lO1xuICB2YXIgb25jZSQkMSA9IG5hbWUuY2hhckF0KDApID09PSAnfic7IC8vIFByZWZpeGVkIGxhc3QsIGNoZWNrZWQgZmlyc3RcbiAgbmFtZSA9IG9uY2UkJDEgPyBuYW1lLnNsaWNlKDEpIDogbmFtZTtcbiAgdmFyIGNhcHR1cmUgPSBuYW1lLmNoYXJBdCgwKSA9PT0gJyEnO1xuICBuYW1lID0gY2FwdHVyZSA/IG5hbWUuc2xpY2UoMSkgOiBuYW1lO1xuICByZXR1cm4ge1xuICAgIG5hbWU6IG5hbWUsXG4gICAgb25jZTogb25jZSQkMSxcbiAgICBjYXB0dXJlOiBjYXB0dXJlLFxuICAgIHBhc3NpdmU6IHBhc3NpdmVcbiAgfVxufSk7XG5cbmZ1bmN0aW9uIGNyZWF0ZUZuSW52b2tlciAoZm5zLCB2bSkge1xuICBmdW5jdGlvbiBpbnZva2VyICgpIHtcbiAgICB2YXIgYXJndW1lbnRzJDEgPSBhcmd1bWVudHM7XG5cbiAgICB2YXIgZm5zID0gaW52b2tlci5mbnM7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZm5zKSkge1xuICAgICAgdmFyIGNsb25lZCA9IGZucy5zbGljZSgpO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjbG9uZWQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaW52b2tlV2l0aEVycm9ySGFuZGxpbmcoY2xvbmVkW2ldLCBudWxsLCBhcmd1bWVudHMkMSwgdm0sIFwidi1vbiBoYW5kbGVyXCIpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyByZXR1cm4gaGFuZGxlciByZXR1cm4gdmFsdWUgZm9yIHNpbmdsZSBoYW5kbGVyc1xuICAgICAgcmV0dXJuIGludm9rZVdpdGhFcnJvckhhbmRsaW5nKGZucywgbnVsbCwgYXJndW1lbnRzLCB2bSwgXCJ2LW9uIGhhbmRsZXJcIilcbiAgICB9XG4gIH1cbiAgaW52b2tlci5mbnMgPSBmbnM7XG4gIHJldHVybiBpbnZva2VyXG59XG5cbmZ1bmN0aW9uIHVwZGF0ZUxpc3RlbmVycyAoXG4gIG9uLFxuICBvbGRPbixcbiAgYWRkLFxuICByZW1vdmUkJDEsXG4gIGNyZWF0ZU9uY2VIYW5kbGVyLFxuICB2bVxuKSB7XG4gIHZhciBuYW1lLCBkZWYkJDEsIGN1ciwgb2xkLCBldmVudDtcbiAgZm9yIChuYW1lIGluIG9uKSB7XG4gICAgZGVmJCQxID0gY3VyID0gb25bbmFtZV07XG4gICAgb2xkID0gb2xkT25bbmFtZV07XG4gICAgZXZlbnQgPSBub3JtYWxpemVFdmVudChuYW1lKTtcbiAgICBpZiAoaXNVbmRlZihjdXIpKSB7XG4gICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHdhcm4oXG4gICAgICAgIFwiSW52YWxpZCBoYW5kbGVyIGZvciBldmVudCBcXFwiXCIgKyAoZXZlbnQubmFtZSkgKyBcIlxcXCI6IGdvdCBcIiArIFN0cmluZyhjdXIpLFxuICAgICAgICB2bVxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKGlzVW5kZWYob2xkKSkge1xuICAgICAgaWYgKGlzVW5kZWYoY3VyLmZucykpIHtcbiAgICAgICAgY3VyID0gb25bbmFtZV0gPSBjcmVhdGVGbkludm9rZXIoY3VyLCB2bSk7XG4gICAgICB9XG4gICAgICBpZiAoaXNUcnVlKGV2ZW50Lm9uY2UpKSB7XG4gICAgICAgIGN1ciA9IG9uW25hbWVdID0gY3JlYXRlT25jZUhhbmRsZXIoZXZlbnQubmFtZSwgY3VyLCBldmVudC5jYXB0dXJlKTtcbiAgICAgIH1cbiAgICAgIGFkZChldmVudC5uYW1lLCBjdXIsIGV2ZW50LmNhcHR1cmUsIGV2ZW50LnBhc3NpdmUsIGV2ZW50LnBhcmFtcyk7XG4gICAgfSBlbHNlIGlmIChjdXIgIT09IG9sZCkge1xuICAgICAgb2xkLmZucyA9IGN1cjtcbiAgICAgIG9uW25hbWVdID0gb2xkO1xuICAgIH1cbiAgfVxuICBmb3IgKG5hbWUgaW4gb2xkT24pIHtcbiAgICBpZiAoaXNVbmRlZihvbltuYW1lXSkpIHtcbiAgICAgIGV2ZW50ID0gbm9ybWFsaXplRXZlbnQobmFtZSk7XG4gICAgICByZW1vdmUkJDEoZXZlbnQubmFtZSwgb2xkT25bbmFtZV0sIGV2ZW50LmNhcHR1cmUpO1xuICAgIH1cbiAgfVxufVxuXG4vKiAgKi9cblxuZnVuY3Rpb24gbWVyZ2VWTm9kZUhvb2sgKGRlZiwgaG9va0tleSwgaG9vaykge1xuICBpZiAoZGVmIGluc3RhbmNlb2YgVk5vZGUpIHtcbiAgICBkZWYgPSBkZWYuZGF0YS5ob29rIHx8IChkZWYuZGF0YS5ob29rID0ge30pO1xuICB9XG4gIHZhciBpbnZva2VyO1xuICB2YXIgb2xkSG9vayA9IGRlZltob29rS2V5XTtcblxuICBmdW5jdGlvbiB3cmFwcGVkSG9vayAoKSB7XG4gICAgaG9vay5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIC8vIGltcG9ydGFudDogcmVtb3ZlIG1lcmdlZCBob29rIHRvIGVuc3VyZSBpdCdzIGNhbGxlZCBvbmx5IG9uY2VcbiAgICAvLyBhbmQgcHJldmVudCBtZW1vcnkgbGVha1xuICAgIHJlbW92ZShpbnZva2VyLmZucywgd3JhcHBlZEhvb2spO1xuICB9XG5cbiAgaWYgKGlzVW5kZWYob2xkSG9vaykpIHtcbiAgICAvLyBubyBleGlzdGluZyBob29rXG4gICAgaW52b2tlciA9IGNyZWF0ZUZuSW52b2tlcihbd3JhcHBlZEhvb2tdKTtcbiAgfSBlbHNlIHtcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICBpZiAoaXNEZWYob2xkSG9vay5mbnMpICYmIGlzVHJ1ZShvbGRIb29rLm1lcmdlZCkpIHtcbiAgICAgIC8vIGFscmVhZHkgYSBtZXJnZWQgaW52b2tlclxuICAgICAgaW52b2tlciA9IG9sZEhvb2s7XG4gICAgICBpbnZva2VyLmZucy5wdXNoKHdyYXBwZWRIb29rKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gZXhpc3RpbmcgcGxhaW4gaG9va1xuICAgICAgaW52b2tlciA9IGNyZWF0ZUZuSW52b2tlcihbb2xkSG9vaywgd3JhcHBlZEhvb2tdKTtcbiAgICB9XG4gIH1cblxuICBpbnZva2VyLm1lcmdlZCA9IHRydWU7XG4gIGRlZltob29rS2V5XSA9IGludm9rZXI7XG59XG5cbi8qICAqL1xuXG5mdW5jdGlvbiBleHRyYWN0UHJvcHNGcm9tVk5vZGVEYXRhIChcbiAgZGF0YSxcbiAgQ3RvcixcbiAgdGFnXG4pIHtcbiAgLy8gd2UgYXJlIG9ubHkgZXh0cmFjdGluZyByYXcgdmFsdWVzIGhlcmUuXG4gIC8vIHZhbGlkYXRpb24gYW5kIGRlZmF1bHQgdmFsdWVzIGFyZSBoYW5kbGVkIGluIHRoZSBjaGlsZFxuICAvLyBjb21wb25lbnQgaXRzZWxmLlxuICB2YXIgcHJvcE9wdGlvbnMgPSBDdG9yLm9wdGlvbnMucHJvcHM7XG4gIGlmIChpc1VuZGVmKHByb3BPcHRpb25zKSkge1xuICAgIHJldHVyblxuICB9XG4gIHZhciByZXMgPSB7fTtcbiAgdmFyIGF0dHJzID0gZGF0YS5hdHRycztcbiAgdmFyIHByb3BzID0gZGF0YS5wcm9wcztcbiAgaWYgKGlzRGVmKGF0dHJzKSB8fCBpc0RlZihwcm9wcykpIHtcbiAgICBmb3IgKHZhciBrZXkgaW4gcHJvcE9wdGlvbnMpIHtcbiAgICAgIHZhciBhbHRLZXkgPSBoeXBoZW5hdGUoa2V5KTtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIHZhciBrZXlJbkxvd2VyQ2FzZSA9IGtleS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICBpZiAoXG4gICAgICAgICAga2V5ICE9PSBrZXlJbkxvd2VyQ2FzZSAmJlxuICAgICAgICAgIGF0dHJzICYmIGhhc093bihhdHRycywga2V5SW5Mb3dlckNhc2UpXG4gICAgICAgICkge1xuICAgICAgICAgIHRpcChcbiAgICAgICAgICAgIFwiUHJvcCBcXFwiXCIgKyBrZXlJbkxvd2VyQ2FzZSArIFwiXFxcIiBpcyBwYXNzZWQgdG8gY29tcG9uZW50IFwiICtcbiAgICAgICAgICAgIChmb3JtYXRDb21wb25lbnROYW1lKHRhZyB8fCBDdG9yKSkgKyBcIiwgYnV0IHRoZSBkZWNsYXJlZCBwcm9wIG5hbWUgaXNcIiArXG4gICAgICAgICAgICBcIiBcXFwiXCIgKyBrZXkgKyBcIlxcXCIuIFwiICtcbiAgICAgICAgICAgIFwiTm90ZSB0aGF0IEhUTUwgYXR0cmlidXRlcyBhcmUgY2FzZS1pbnNlbnNpdGl2ZSBhbmQgY2FtZWxDYXNlZCBcIiArXG4gICAgICAgICAgICBcInByb3BzIG5lZWQgdG8gdXNlIHRoZWlyIGtlYmFiLWNhc2UgZXF1aXZhbGVudHMgd2hlbiB1c2luZyBpbi1ET00gXCIgK1xuICAgICAgICAgICAgXCJ0ZW1wbGF0ZXMuIFlvdSBzaG91bGQgcHJvYmFibHkgdXNlIFxcXCJcIiArIGFsdEtleSArIFwiXFxcIiBpbnN0ZWFkIG9mIFxcXCJcIiArIGtleSArIFwiXFxcIi5cIlxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGNoZWNrUHJvcChyZXMsIHByb3BzLCBrZXksIGFsdEtleSwgdHJ1ZSkgfHxcbiAgICAgIGNoZWNrUHJvcChyZXMsIGF0dHJzLCBrZXksIGFsdEtleSwgZmFsc2UpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzXG59XG5cbmZ1bmN0aW9uIGNoZWNrUHJvcCAoXG4gIHJlcyxcbiAgaGFzaCxcbiAga2V5LFxuICBhbHRLZXksXG4gIHByZXNlcnZlXG4pIHtcbiAgaWYgKGlzRGVmKGhhc2gpKSB7XG4gICAgaWYgKGhhc093bihoYXNoLCBrZXkpKSB7XG4gICAgICByZXNba2V5XSA9IGhhc2hba2V5XTtcbiAgICAgIGlmICghcHJlc2VydmUpIHtcbiAgICAgICAgZGVsZXRlIGhhc2hba2V5XTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0cnVlXG4gICAgfSBlbHNlIGlmIChoYXNPd24oaGFzaCwgYWx0S2V5KSkge1xuICAgICAgcmVzW2tleV0gPSBoYXNoW2FsdEtleV07XG4gICAgICBpZiAoIXByZXNlcnZlKSB7XG4gICAgICAgIGRlbGV0ZSBoYXNoW2FsdEtleV07XG4gICAgICB9XG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2Vcbn1cblxuLyogICovXG5cbi8vIFRoZSB0ZW1wbGF0ZSBjb21waWxlciBhdHRlbXB0cyB0byBtaW5pbWl6ZSB0aGUgbmVlZCBmb3Igbm9ybWFsaXphdGlvbiBieVxuLy8gc3RhdGljYWxseSBhbmFseXppbmcgdGhlIHRlbXBsYXRlIGF0IGNvbXBpbGUgdGltZS5cbi8vXG4vLyBGb3IgcGxhaW4gSFRNTCBtYXJrdXAsIG5vcm1hbGl6YXRpb24gY2FuIGJlIGNvbXBsZXRlbHkgc2tpcHBlZCBiZWNhdXNlIHRoZVxuLy8gZ2VuZXJhdGVkIHJlbmRlciBmdW5jdGlvbiBpcyBndWFyYW50ZWVkIHRvIHJldHVybiBBcnJheTxWTm9kZT4uIFRoZXJlIGFyZVxuLy8gdHdvIGNhc2VzIHdoZXJlIGV4dHJhIG5vcm1hbGl6YXRpb24gaXMgbmVlZGVkOlxuXG4vLyAxLiBXaGVuIHRoZSBjaGlsZHJlbiBjb250YWlucyBjb21wb25lbnRzIC0gYmVjYXVzZSBhIGZ1bmN0aW9uYWwgY29tcG9uZW50XG4vLyBtYXkgcmV0dXJuIGFuIEFycmF5IGluc3RlYWQgb2YgYSBzaW5nbGUgcm9vdC4gSW4gdGhpcyBjYXNlLCBqdXN0IGEgc2ltcGxlXG4vLyBub3JtYWxpemF0aW9uIGlzIG5lZWRlZCAtIGlmIGFueSBjaGlsZCBpcyBhbiBBcnJheSwgd2UgZmxhdHRlbiB0aGUgd2hvbGVcbi8vIHRoaW5nIHdpdGggQXJyYXkucHJvdG90eXBlLmNvbmNhdC4gSXQgaXMgZ3VhcmFudGVlZCB0byBiZSBvbmx5IDEtbGV2ZWwgZGVlcFxuLy8gYmVjYXVzZSBmdW5jdGlvbmFsIGNvbXBvbmVudHMgYWxyZWFkeSBub3JtYWxpemUgdGhlaXIgb3duIGNoaWxkcmVuLlxuZnVuY3Rpb24gc2ltcGxlTm9ybWFsaXplQ2hpbGRyZW4gKGNoaWxkcmVuKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZHJlbltpXSkpIHtcbiAgICAgIHJldHVybiBBcnJheS5wcm90b3R5cGUuY29uY2F0LmFwcGx5KFtdLCBjaGlsZHJlbilcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGNoaWxkcmVuXG59XG5cbi8vIDIuIFdoZW4gdGhlIGNoaWxkcmVuIGNvbnRhaW5zIGNvbnN0cnVjdHMgdGhhdCBhbHdheXMgZ2VuZXJhdGVkIG5lc3RlZCBBcnJheXMsXG4vLyBlLmcuIDx0ZW1wbGF0ZT4sIDxzbG90Piwgdi1mb3IsIG9yIHdoZW4gdGhlIGNoaWxkcmVuIGlzIHByb3ZpZGVkIGJ5IHVzZXJcbi8vIHdpdGggaGFuZC13cml0dGVuIHJlbmRlciBmdW5jdGlvbnMgLyBKU1guIEluIHN1Y2ggY2FzZXMgYSBmdWxsIG5vcm1hbGl6YXRpb25cbi8vIGlzIG5lZWRlZCB0byBjYXRlciB0byBhbGwgcG9zc2libGUgdHlwZXMgb2YgY2hpbGRyZW4gdmFsdWVzLlxuZnVuY3Rpb24gbm9ybWFsaXplQ2hpbGRyZW4gKGNoaWxkcmVuKSB7XG4gIHJldHVybiBpc1ByaW1pdGl2ZShjaGlsZHJlbilcbiAgICA/IFtjcmVhdGVUZXh0Vk5vZGUoY2hpbGRyZW4pXVxuICAgIDogQXJyYXkuaXNBcnJheShjaGlsZHJlbilcbiAgICAgID8gbm9ybWFsaXplQXJyYXlDaGlsZHJlbihjaGlsZHJlbilcbiAgICAgIDogdW5kZWZpbmVkXG59XG5cbmZ1bmN0aW9uIGlzVGV4dE5vZGUgKG5vZGUpIHtcbiAgcmV0dXJuIGlzRGVmKG5vZGUpICYmIGlzRGVmKG5vZGUudGV4dCkgJiYgaXNGYWxzZShub2RlLmlzQ29tbWVudClcbn1cblxuZnVuY3Rpb24gbm9ybWFsaXplQXJyYXlDaGlsZHJlbiAoY2hpbGRyZW4sIG5lc3RlZEluZGV4KSB7XG4gIHZhciByZXMgPSBbXTtcbiAgdmFyIGksIGMsIGxhc3RJbmRleCwgbGFzdDtcbiAgZm9yIChpID0gMDsgaSA8IGNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG4gICAgYyA9IGNoaWxkcmVuW2ldO1xuICAgIGlmIChpc1VuZGVmKGMpIHx8IHR5cGVvZiBjID09PSAnYm9vbGVhbicpIHsgY29udGludWUgfVxuICAgIGxhc3RJbmRleCA9IHJlcy5sZW5ndGggLSAxO1xuICAgIGxhc3QgPSByZXNbbGFzdEluZGV4XTtcbiAgICAvLyAgbmVzdGVkXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoYykpIHtcbiAgICAgIGlmIChjLmxlbmd0aCA+IDApIHtcbiAgICAgICAgYyA9IG5vcm1hbGl6ZUFycmF5Q2hpbGRyZW4oYywgKChuZXN0ZWRJbmRleCB8fCAnJykgKyBcIl9cIiArIGkpKTtcbiAgICAgICAgLy8gbWVyZ2UgYWRqYWNlbnQgdGV4dCBub2Rlc1xuICAgICAgICBpZiAoaXNUZXh0Tm9kZShjWzBdKSAmJiBpc1RleHROb2RlKGxhc3QpKSB7XG4gICAgICAgICAgcmVzW2xhc3RJbmRleF0gPSBjcmVhdGVUZXh0Vk5vZGUobGFzdC50ZXh0ICsgKGNbMF0pLnRleHQpO1xuICAgICAgICAgIGMuc2hpZnQoKTtcbiAgICAgICAgfVxuICAgICAgICByZXMucHVzaC5hcHBseShyZXMsIGMpO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoaXNQcmltaXRpdmUoYykpIHtcbiAgICAgIGlmIChpc1RleHROb2RlKGxhc3QpKSB7XG4gICAgICAgIC8vIG1lcmdlIGFkamFjZW50IHRleHQgbm9kZXNcbiAgICAgICAgLy8gdGhpcyBpcyBuZWNlc3NhcnkgZm9yIFNTUiBoeWRyYXRpb24gYmVjYXVzZSB0ZXh0IG5vZGVzIGFyZVxuICAgICAgICAvLyBlc3NlbnRpYWxseSBtZXJnZWQgd2hlbiByZW5kZXJlZCB0byBIVE1MIHN0cmluZ3NcbiAgICAgICAgcmVzW2xhc3RJbmRleF0gPSBjcmVhdGVUZXh0Vk5vZGUobGFzdC50ZXh0ICsgYyk7XG4gICAgICB9IGVsc2UgaWYgKGMgIT09ICcnKSB7XG4gICAgICAgIC8vIGNvbnZlcnQgcHJpbWl0aXZlIHRvIHZub2RlXG4gICAgICAgIHJlcy5wdXNoKGNyZWF0ZVRleHRWTm9kZShjKSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChpc1RleHROb2RlKGMpICYmIGlzVGV4dE5vZGUobGFzdCkpIHtcbiAgICAgICAgLy8gbWVyZ2UgYWRqYWNlbnQgdGV4dCBub2Rlc1xuICAgICAgICByZXNbbGFzdEluZGV4XSA9IGNyZWF0ZVRleHRWTm9kZShsYXN0LnRleHQgKyBjLnRleHQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gZGVmYXVsdCBrZXkgZm9yIG5lc3RlZCBhcnJheSBjaGlsZHJlbiAobGlrZWx5IGdlbmVyYXRlZCBieSB2LWZvcilcbiAgICAgICAgaWYgKGlzVHJ1ZShjaGlsZHJlbi5faXNWTGlzdCkgJiZcbiAgICAgICAgICBpc0RlZihjLnRhZykgJiZcbiAgICAgICAgICBpc1VuZGVmKGMua2V5KSAmJlxuICAgICAgICAgIGlzRGVmKG5lc3RlZEluZGV4KSkge1xuICAgICAgICAgIGMua2V5ID0gXCJfX3ZsaXN0XCIgKyBuZXN0ZWRJbmRleCArIFwiX1wiICsgaSArIFwiX19cIjtcbiAgICAgICAgfVxuICAgICAgICByZXMucHVzaChjKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc1xufVxuXG4vKiAgKi9cblxuZnVuY3Rpb24gaW5pdFByb3ZpZGUgKHZtKSB7XG4gIHZhciBwcm92aWRlID0gdm0uJG9wdGlvbnMucHJvdmlkZTtcbiAgaWYgKHByb3ZpZGUpIHtcbiAgICB2bS5fcHJvdmlkZWQgPSB0eXBlb2YgcHJvdmlkZSA9PT0gJ2Z1bmN0aW9uJ1xuICAgICAgPyBwcm92aWRlLmNhbGwodm0pXG4gICAgICA6IHByb3ZpZGU7XG4gIH1cbn1cblxuZnVuY3Rpb24gaW5pdEluamVjdGlvbnMgKHZtKSB7XG4gIHZhciByZXN1bHQgPSByZXNvbHZlSW5qZWN0KHZtLiRvcHRpb25zLmluamVjdCwgdm0pO1xuICBpZiAocmVzdWx0KSB7XG4gICAgdG9nZ2xlT2JzZXJ2aW5nKGZhbHNlKTtcbiAgICBPYmplY3Qua2V5cyhyZXN1bHQpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIGRlZmluZVJlYWN0aXZlJCQxKHZtLCBrZXksIHJlc3VsdFtrZXldLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgd2FybihcbiAgICAgICAgICAgIFwiQXZvaWQgbXV0YXRpbmcgYW4gaW5qZWN0ZWQgdmFsdWUgZGlyZWN0bHkgc2luY2UgdGhlIGNoYW5nZXMgd2lsbCBiZSBcIiArXG4gICAgICAgICAgICBcIm92ZXJ3cml0dGVuIHdoZW5ldmVyIHRoZSBwcm92aWRlZCBjb21wb25lbnQgcmUtcmVuZGVycy4gXCIgK1xuICAgICAgICAgICAgXCJpbmplY3Rpb24gYmVpbmcgbXV0YXRlZDogXFxcIlwiICsga2V5ICsgXCJcXFwiXCIsXG4gICAgICAgICAgICB2bVxuICAgICAgICAgICk7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZGVmaW5lUmVhY3RpdmUkJDEodm0sIGtleSwgcmVzdWx0W2tleV0pO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHRvZ2dsZU9ic2VydmluZyh0cnVlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiByZXNvbHZlSW5qZWN0IChpbmplY3QsIHZtKSB7XG4gIGlmIChpbmplY3QpIHtcbiAgICAvLyBpbmplY3QgaXMgOmFueSBiZWNhdXNlIGZsb3cgaXMgbm90IHNtYXJ0IGVub3VnaCB0byBmaWd1cmUgb3V0IGNhY2hlZFxuICAgIHZhciByZXN1bHQgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgIHZhciBrZXlzID0gaGFzU3ltYm9sXG4gICAgICA/IFJlZmxlY3Qub3duS2V5cyhpbmplY3QpXG4gICAgICA6IE9iamVjdC5rZXlzKGluamVjdCk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuICAgICAgLy8gIzY1NzQgaW4gY2FzZSB0aGUgaW5qZWN0IG9iamVjdCBpcyBvYnNlcnZlZC4uLlxuICAgICAgaWYgKGtleSA9PT0gJ19fb2JfXycpIHsgY29udGludWUgfVxuICAgICAgdmFyIHByb3ZpZGVLZXkgPSBpbmplY3Rba2V5XS5mcm9tO1xuICAgICAgdmFyIHNvdXJjZSA9IHZtO1xuICAgICAgd2hpbGUgKHNvdXJjZSkge1xuICAgICAgICBpZiAoc291cmNlLl9wcm92aWRlZCAmJiBoYXNPd24oc291cmNlLl9wcm92aWRlZCwgcHJvdmlkZUtleSkpIHtcbiAgICAgICAgICByZXN1bHRba2V5XSA9IHNvdXJjZS5fcHJvdmlkZWRbcHJvdmlkZUtleV07XG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgfVxuICAgICAgICBzb3VyY2UgPSBzb3VyY2UuJHBhcmVudDtcbiAgICAgIH1cbiAgICAgIGlmICghc291cmNlKSB7XG4gICAgICAgIGlmICgnZGVmYXVsdCcgaW4gaW5qZWN0W2tleV0pIHtcbiAgICAgICAgICB2YXIgcHJvdmlkZURlZmF1bHQgPSBpbmplY3Rba2V5XS5kZWZhdWx0O1xuICAgICAgICAgIHJlc3VsdFtrZXldID0gdHlwZW9mIHByb3ZpZGVEZWZhdWx0ID09PSAnZnVuY3Rpb24nXG4gICAgICAgICAgICA/IHByb3ZpZGVEZWZhdWx0LmNhbGwodm0pXG4gICAgICAgICAgICA6IHByb3ZpZGVEZWZhdWx0O1xuICAgICAgICB9IGVsc2UgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICB3YXJuKChcIkluamVjdGlvbiBcXFwiXCIgKyBrZXkgKyBcIlxcXCIgbm90IGZvdW5kXCIpLCB2bSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdFxuICB9XG59XG5cbi8qICAqL1xuXG5cblxuLyoqXG4gKiBSdW50aW1lIGhlbHBlciBmb3IgcmVzb2x2aW5nIHJhdyBjaGlsZHJlbiBWTm9kZXMgaW50byBhIHNsb3Qgb2JqZWN0LlxuICovXG5mdW5jdGlvbiByZXNvbHZlU2xvdHMgKFxuICBjaGlsZHJlbixcbiAgY29udGV4dFxuKSB7XG4gIGlmICghY2hpbGRyZW4gfHwgIWNoaWxkcmVuLmxlbmd0aCkge1xuICAgIHJldHVybiB7fVxuICB9XG4gIHZhciBzbG90cyA9IHt9O1xuICBmb3IgKHZhciBpID0gMCwgbCA9IGNoaWxkcmVuLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIHZhciBjaGlsZCA9IGNoaWxkcmVuW2ldO1xuICAgIHZhciBkYXRhID0gY2hpbGQuZGF0YTtcbiAgICAvLyByZW1vdmUgc2xvdCBhdHRyaWJ1dGUgaWYgdGhlIG5vZGUgaXMgcmVzb2x2ZWQgYXMgYSBWdWUgc2xvdCBub2RlXG4gICAgaWYgKGRhdGEgJiYgZGF0YS5hdHRycyAmJiBkYXRhLmF0dHJzLnNsb3QpIHtcbiAgICAgIGRlbGV0ZSBkYXRhLmF0dHJzLnNsb3Q7XG4gICAgfVxuICAgIC8vIG5hbWVkIHNsb3RzIHNob3VsZCBvbmx5IGJlIHJlc3BlY3RlZCBpZiB0aGUgdm5vZGUgd2FzIHJlbmRlcmVkIGluIHRoZVxuICAgIC8vIHNhbWUgY29udGV4dC5cbiAgICBpZiAoKGNoaWxkLmNvbnRleHQgPT09IGNvbnRleHQgfHwgY2hpbGQuZm5Db250ZXh0ID09PSBjb250ZXh0KSAmJlxuICAgICAgZGF0YSAmJiBkYXRhLnNsb3QgIT0gbnVsbFxuICAgICkge1xuICAgICAgdmFyIG5hbWUgPSBkYXRhLnNsb3Q7XG4gICAgICB2YXIgc2xvdCA9IChzbG90c1tuYW1lXSB8fCAoc2xvdHNbbmFtZV0gPSBbXSkpO1xuICAgICAgaWYgKGNoaWxkLnRhZyA9PT0gJ3RlbXBsYXRlJykge1xuICAgICAgICBzbG90LnB1c2guYXBwbHkoc2xvdCwgY2hpbGQuY2hpbGRyZW4gfHwgW10pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2xvdC5wdXNoKGNoaWxkKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgKHNsb3RzLmRlZmF1bHQgfHwgKHNsb3RzLmRlZmF1bHQgPSBbXSkpLnB1c2goY2hpbGQpO1xuICAgIH1cbiAgfVxuICAvLyBpZ25vcmUgc2xvdHMgdGhhdCBjb250YWlucyBvbmx5IHdoaXRlc3BhY2VcbiAgZm9yICh2YXIgbmFtZSQxIGluIHNsb3RzKSB7XG4gICAgaWYgKHNsb3RzW25hbWUkMV0uZXZlcnkoaXNXaGl0ZXNwYWNlKSkge1xuICAgICAgZGVsZXRlIHNsb3RzW25hbWUkMV07XG4gICAgfVxuICB9XG4gIHJldHVybiBzbG90c1xufVxuXG5mdW5jdGlvbiBpc1doaXRlc3BhY2UgKG5vZGUpIHtcbiAgcmV0dXJuIChub2RlLmlzQ29tbWVudCAmJiAhbm9kZS5hc3luY0ZhY3RvcnkpIHx8IG5vZGUudGV4dCA9PT0gJyAnXG59XG5cbi8qICAqL1xuXG5mdW5jdGlvbiBub3JtYWxpemVTY29wZWRTbG90cyAoXG4gIHNsb3RzLFxuICBub3JtYWxTbG90cyxcbiAgcHJldlNsb3RzXG4pIHtcbiAgdmFyIHJlcztcbiAgdmFyIGhhc05vcm1hbFNsb3RzID0gT2JqZWN0LmtleXMobm9ybWFsU2xvdHMpLmxlbmd0aCA+IDA7XG4gIHZhciBpc1N0YWJsZSA9IHNsb3RzID8gISFzbG90cy4kc3RhYmxlIDogIWhhc05vcm1hbFNsb3RzO1xuICB2YXIga2V5ID0gc2xvdHMgJiYgc2xvdHMuJGtleTtcbiAgaWYgKCFzbG90cykge1xuICAgIHJlcyA9IHt9O1xuICB9IGVsc2UgaWYgKHNsb3RzLl9ub3JtYWxpemVkKSB7XG4gICAgLy8gZmFzdCBwYXRoIDE6IGNoaWxkIGNvbXBvbmVudCByZS1yZW5kZXIgb25seSwgcGFyZW50IGRpZCBub3QgY2hhbmdlXG4gICAgcmV0dXJuIHNsb3RzLl9ub3JtYWxpemVkXG4gIH0gZWxzZSBpZiAoXG4gICAgaXNTdGFibGUgJiZcbiAgICBwcmV2U2xvdHMgJiZcbiAgICBwcmV2U2xvdHMgIT09IGVtcHR5T2JqZWN0ICYmXG4gICAga2V5ID09PSBwcmV2U2xvdHMuJGtleSAmJlxuICAgICFoYXNOb3JtYWxTbG90cyAmJlxuICAgICFwcmV2U2xvdHMuJGhhc05vcm1hbFxuICApIHtcbiAgICAvLyBmYXN0IHBhdGggMjogc3RhYmxlIHNjb3BlZCBzbG90cyB3LyBubyBub3JtYWwgc2xvdHMgdG8gcHJveHksXG4gICAgLy8gb25seSBuZWVkIHRvIG5vcm1hbGl6ZSBvbmNlXG4gICAgcmV0dXJuIHByZXZTbG90c1xuICB9IGVsc2Uge1xuICAgIHJlcyA9IHt9O1xuICAgIGZvciAodmFyIGtleSQxIGluIHNsb3RzKSB7XG4gICAgICBpZiAoc2xvdHNba2V5JDFdICYmIGtleSQxWzBdICE9PSAnJCcpIHtcbiAgICAgICAgcmVzW2tleSQxXSA9IG5vcm1hbGl6ZVNjb3BlZFNsb3Qobm9ybWFsU2xvdHMsIGtleSQxLCBzbG90c1trZXkkMV0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAvLyBleHBvc2Ugbm9ybWFsIHNsb3RzIG9uIHNjb3BlZFNsb3RzXG4gIGZvciAodmFyIGtleSQyIGluIG5vcm1hbFNsb3RzKSB7XG4gICAgaWYgKCEoa2V5JDIgaW4gcmVzKSkge1xuICAgICAgcmVzW2tleSQyXSA9IHByb3h5Tm9ybWFsU2xvdChub3JtYWxTbG90cywga2V5JDIpO1xuICAgIH1cbiAgfVxuICAvLyBhdm9yaWF6IHNlZW1zIHRvIG1vY2sgYSBub24tZXh0ZW5zaWJsZSAkc2NvcGVkU2xvdHMgb2JqZWN0XG4gIC8vIGFuZCB3aGVuIHRoYXQgaXMgcGFzc2VkIGRvd24gdGhpcyB3b3VsZCBjYXVzZSBhbiBlcnJvclxuICBpZiAoc2xvdHMgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShzbG90cykpIHtcbiAgICAoc2xvdHMpLl9ub3JtYWxpemVkID0gcmVzO1xuICB9XG4gIGRlZihyZXMsICckc3RhYmxlJywgaXNTdGFibGUpO1xuICBkZWYocmVzLCAnJGtleScsIGtleSk7XG4gIGRlZihyZXMsICckaGFzTm9ybWFsJywgaGFzTm9ybWFsU2xvdHMpO1xuICByZXR1cm4gcmVzXG59XG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZVNjb3BlZFNsb3Qobm9ybWFsU2xvdHMsIGtleSwgZm4pIHtcbiAgdmFyIG5vcm1hbGl6ZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHJlcyA9IGFyZ3VtZW50cy5sZW5ndGggPyBmbi5hcHBseShudWxsLCBhcmd1bWVudHMpIDogZm4oe30pO1xuICAgIHJlcyA9IHJlcyAmJiB0eXBlb2YgcmVzID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheShyZXMpXG4gICAgICA/IFtyZXNdIC8vIHNpbmdsZSB2bm9kZVxuICAgICAgOiBub3JtYWxpemVDaGlsZHJlbihyZXMpO1xuICAgIHJldHVybiByZXMgJiYgKFxuICAgICAgcmVzLmxlbmd0aCA9PT0gMCB8fFxuICAgICAgKHJlcy5sZW5ndGggPT09IDEgJiYgcmVzWzBdLmlzQ29tbWVudCkgLy8gIzk2NThcbiAgICApID8gdW5kZWZpbmVkXG4gICAgICA6IHJlc1xuICB9O1xuICAvLyB0aGlzIGlzIGEgc2xvdCB1c2luZyB0aGUgbmV3IHYtc2xvdCBzeW50YXggd2l0aG91dCBzY29wZS4gYWx0aG91Z2ggaXQgaXNcbiAgLy8gY29tcGlsZWQgYXMgYSBzY29wZWQgc2xvdCwgcmVuZGVyIGZuIHVzZXJzIHdvdWxkIGV4cGVjdCBpdCB0byBiZSBwcmVzZW50XG4gIC8vIG9uIHRoaXMuJHNsb3RzIGJlY2F1c2UgdGhlIHVzYWdlIGlzIHNlbWFudGljYWxseSBhIG5vcm1hbCBzbG90LlxuICBpZiAoZm4ucHJveHkpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobm9ybWFsU2xvdHMsIGtleSwge1xuICAgICAgZ2V0OiBub3JtYWxpemVkLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICB9XG4gIHJldHVybiBub3JtYWxpemVkXG59XG5cbmZ1bmN0aW9uIHByb3h5Tm9ybWFsU2xvdChzbG90cywga2V5KSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiBzbG90c1trZXldOyB9XG59XG5cbi8qICAqL1xuXG4vKipcbiAqIFJ1bnRpbWUgaGVscGVyIGZvciByZW5kZXJpbmcgdi1mb3IgbGlzdHMuXG4gKi9cbmZ1bmN0aW9uIHJlbmRlckxpc3QgKFxuICB2YWwsXG4gIHJlbmRlclxuKSB7XG4gIHZhciByZXQsIGksIGwsIGtleXMsIGtleTtcbiAgaWYgKEFycmF5LmlzQXJyYXkodmFsKSB8fCB0eXBlb2YgdmFsID09PSAnc3RyaW5nJykge1xuICAgIHJldCA9IG5ldyBBcnJheSh2YWwubGVuZ3RoKTtcbiAgICBmb3IgKGkgPSAwLCBsID0gdmFsLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgcmV0W2ldID0gcmVuZGVyKHZhbFtpXSwgaSk7XG4gICAgfVxuICB9IGVsc2UgaWYgKHR5cGVvZiB2YWwgPT09ICdudW1iZXInKSB7XG4gICAgcmV0ID0gbmV3IEFycmF5KHZhbCk7XG4gICAgZm9yIChpID0gMDsgaSA8IHZhbDsgaSsrKSB7XG4gICAgICByZXRbaV0gPSByZW5kZXIoaSArIDEsIGkpO1xuICAgIH1cbiAgfSBlbHNlIGlmIChpc09iamVjdCh2YWwpKSB7XG4gICAgaWYgKGhhc1N5bWJvbCAmJiB2YWxbU3ltYm9sLml0ZXJhdG9yXSkge1xuICAgICAgcmV0ID0gW107XG4gICAgICB2YXIgaXRlcmF0b3IgPSB2YWxbU3ltYm9sLml0ZXJhdG9yXSgpO1xuICAgICAgdmFyIHJlc3VsdCA9IGl0ZXJhdG9yLm5leHQoKTtcbiAgICAgIHdoaWxlICghcmVzdWx0LmRvbmUpIHtcbiAgICAgICAgcmV0LnB1c2gocmVuZGVyKHJlc3VsdC52YWx1ZSwgcmV0Lmxlbmd0aCkpO1xuICAgICAgICByZXN1bHQgPSBpdGVyYXRvci5uZXh0KCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGtleXMgPSBPYmplY3Qua2V5cyh2YWwpO1xuICAgICAgcmV0ID0gbmV3IEFycmF5KGtleXMubGVuZ3RoKTtcbiAgICAgIGZvciAoaSA9IDAsIGwgPSBrZXlzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICBrZXkgPSBrZXlzW2ldO1xuICAgICAgICByZXRbaV0gPSByZW5kZXIodmFsW2tleV0sIGtleSwgaSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGlmICghaXNEZWYocmV0KSkge1xuICAgIHJldCA9IFtdO1xuICB9XG4gIChyZXQpLl9pc1ZMaXN0ID0gdHJ1ZTtcbiAgcmV0dXJuIHJldFxufVxuXG4vKiAgKi9cblxuLyoqXG4gKiBSdW50aW1lIGhlbHBlciBmb3IgcmVuZGVyaW5nIDxzbG90PlxuICovXG5mdW5jdGlvbiByZW5kZXJTbG90IChcbiAgbmFtZSxcbiAgZmFsbGJhY2ssXG4gIHByb3BzLFxuICBiaW5kT2JqZWN0XG4pIHtcbiAgdmFyIHNjb3BlZFNsb3RGbiA9IHRoaXMuJHNjb3BlZFNsb3RzW25hbWVdO1xuICB2YXIgbm9kZXM7XG4gIGlmIChzY29wZWRTbG90Rm4pIHsgLy8gc2NvcGVkIHNsb3RcbiAgICBwcm9wcyA9IHByb3BzIHx8IHt9O1xuICAgIGlmIChiaW5kT2JqZWN0KSB7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiAhaXNPYmplY3QoYmluZE9iamVjdCkpIHtcbiAgICAgICAgd2FybihcbiAgICAgICAgICAnc2xvdCB2LWJpbmQgd2l0aG91dCBhcmd1bWVudCBleHBlY3RzIGFuIE9iamVjdCcsXG4gICAgICAgICAgdGhpc1xuICAgICAgICApO1xuICAgICAgfVxuICAgICAgcHJvcHMgPSBleHRlbmQoZXh0ZW5kKHt9LCBiaW5kT2JqZWN0KSwgcHJvcHMpO1xuICAgIH1cbiAgICBub2RlcyA9IHNjb3BlZFNsb3RGbihwcm9wcykgfHwgZmFsbGJhY2s7XG4gIH0gZWxzZSB7XG4gICAgbm9kZXMgPSB0aGlzLiRzbG90c1tuYW1lXSB8fCBmYWxsYmFjaztcbiAgfVxuXG4gIHZhciB0YXJnZXQgPSBwcm9wcyAmJiBwcm9wcy5zbG90O1xuICBpZiAodGFyZ2V0KSB7XG4gICAgcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3RlbXBsYXRlJywgeyBzbG90OiB0YXJnZXQgfSwgbm9kZXMpXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIG5vZGVzXG4gIH1cbn1cblxuLyogICovXG5cbi8qKlxuICogUnVudGltZSBoZWxwZXIgZm9yIHJlc29sdmluZyBmaWx0ZXJzXG4gKi9cbmZ1bmN0aW9uIHJlc29sdmVGaWx0ZXIgKGlkKSB7XG4gIHJldHVybiByZXNvbHZlQXNzZXQodGhpcy4kb3B0aW9ucywgJ2ZpbHRlcnMnLCBpZCwgdHJ1ZSkgfHwgaWRlbnRpdHlcbn1cblxuLyogICovXG5cbmZ1bmN0aW9uIGlzS2V5Tm90TWF0Y2ggKGV4cGVjdCwgYWN0dWFsKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGV4cGVjdCkpIHtcbiAgICByZXR1cm4gZXhwZWN0LmluZGV4T2YoYWN0dWFsKSA9PT0gLTFcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZXhwZWN0ICE9PSBhY3R1YWxcbiAgfVxufVxuXG4vKipcbiAqIFJ1bnRpbWUgaGVscGVyIGZvciBjaGVja2luZyBrZXlDb2RlcyBmcm9tIGNvbmZpZy5cbiAqIGV4cG9zZWQgYXMgVnVlLnByb3RvdHlwZS5fa1xuICogcGFzc2luZyBpbiBldmVudEtleU5hbWUgYXMgbGFzdCBhcmd1bWVudCBzZXBhcmF0ZWx5IGZvciBiYWNrd2FyZHMgY29tcGF0XG4gKi9cbmZ1bmN0aW9uIGNoZWNrS2V5Q29kZXMgKFxuICBldmVudEtleUNvZGUsXG4gIGtleSxcbiAgYnVpbHRJbktleUNvZGUsXG4gIGV2ZW50S2V5TmFtZSxcbiAgYnVpbHRJbktleU5hbWVcbikge1xuICB2YXIgbWFwcGVkS2V5Q29kZSA9IGNvbmZpZy5rZXlDb2Rlc1trZXldIHx8IGJ1aWx0SW5LZXlDb2RlO1xuICBpZiAoYnVpbHRJbktleU5hbWUgJiYgZXZlbnRLZXlOYW1lICYmICFjb25maWcua2V5Q29kZXNba2V5XSkge1xuICAgIHJldHVybiBpc0tleU5vdE1hdGNoKGJ1aWx0SW5LZXlOYW1lLCBldmVudEtleU5hbWUpXG4gIH0gZWxzZSBpZiAobWFwcGVkS2V5Q29kZSkge1xuICAgIHJldHVybiBpc0tleU5vdE1hdGNoKG1hcHBlZEtleUNvZGUsIGV2ZW50S2V5Q29kZSlcbiAgfSBlbHNlIGlmIChldmVudEtleU5hbWUpIHtcbiAgICByZXR1cm4gaHlwaGVuYXRlKGV2ZW50S2V5TmFtZSkgIT09IGtleVxuICB9XG59XG5cbi8qICAqL1xuXG4vKipcbiAqIFJ1bnRpbWUgaGVscGVyIGZvciBtZXJnaW5nIHYtYmluZD1cIm9iamVjdFwiIGludG8gYSBWTm9kZSdzIGRhdGEuXG4gKi9cbmZ1bmN0aW9uIGJpbmRPYmplY3RQcm9wcyAoXG4gIGRhdGEsXG4gIHRhZyxcbiAgdmFsdWUsXG4gIGFzUHJvcCxcbiAgaXNTeW5jXG4pIHtcbiAgaWYgKHZhbHVlKSB7XG4gICAgaWYgKCFpc09iamVjdCh2YWx1ZSkpIHtcbiAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgd2FybihcbiAgICAgICAgJ3YtYmluZCB3aXRob3V0IGFyZ3VtZW50IGV4cGVjdHMgYW4gT2JqZWN0IG9yIEFycmF5IHZhbHVlJyxcbiAgICAgICAgdGhpc1xuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgIHZhbHVlID0gdG9PYmplY3QodmFsdWUpO1xuICAgICAgfVxuICAgICAgdmFyIGhhc2g7XG4gICAgICB2YXIgbG9vcCA9IGZ1bmN0aW9uICgga2V5ICkge1xuICAgICAgICBpZiAoXG4gICAgICAgICAga2V5ID09PSAnY2xhc3MnIHx8XG4gICAgICAgICAga2V5ID09PSAnc3R5bGUnIHx8XG4gICAgICAgICAgaXNSZXNlcnZlZEF0dHJpYnV0ZShrZXkpXG4gICAgICAgICkge1xuICAgICAgICAgIGhhc2ggPSBkYXRhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciB0eXBlID0gZGF0YS5hdHRycyAmJiBkYXRhLmF0dHJzLnR5cGU7XG4gICAgICAgICAgaGFzaCA9IGFzUHJvcCB8fCBjb25maWcubXVzdFVzZVByb3AodGFnLCB0eXBlLCBrZXkpXG4gICAgICAgICAgICA/IGRhdGEuZG9tUHJvcHMgfHwgKGRhdGEuZG9tUHJvcHMgPSB7fSlcbiAgICAgICAgICAgIDogZGF0YS5hdHRycyB8fCAoZGF0YS5hdHRycyA9IHt9KTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgY2FtZWxpemVkS2V5ID0gY2FtZWxpemUoa2V5KTtcbiAgICAgICAgdmFyIGh5cGhlbmF0ZWRLZXkgPSBoeXBoZW5hdGUoa2V5KTtcbiAgICAgICAgaWYgKCEoY2FtZWxpemVkS2V5IGluIGhhc2gpICYmICEoaHlwaGVuYXRlZEtleSBpbiBoYXNoKSkge1xuICAgICAgICAgIGhhc2hba2V5XSA9IHZhbHVlW2tleV07XG5cbiAgICAgICAgICBpZiAoaXNTeW5jKSB7XG4gICAgICAgICAgICB2YXIgb24gPSBkYXRhLm9uIHx8IChkYXRhLm9uID0ge30pO1xuICAgICAgICAgICAgb25bKFwidXBkYXRlOlwiICsga2V5KV0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7XG4gICAgICAgICAgICAgIHZhbHVlW2tleV0gPSAkZXZlbnQ7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgZm9yICh2YXIga2V5IGluIHZhbHVlKSBsb29wKCBrZXkgKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGRhdGFcbn1cblxuLyogICovXG5cbi8qKlxuICogUnVudGltZSBoZWxwZXIgZm9yIHJlbmRlcmluZyBzdGF0aWMgdHJlZXMuXG4gKi9cbmZ1bmN0aW9uIHJlbmRlclN0YXRpYyAoXG4gIGluZGV4LFxuICBpc0luRm9yXG4pIHtcbiAgdmFyIGNhY2hlZCA9IHRoaXMuX3N0YXRpY1RyZWVzIHx8ICh0aGlzLl9zdGF0aWNUcmVlcyA9IFtdKTtcbiAgdmFyIHRyZWUgPSBjYWNoZWRbaW5kZXhdO1xuICAvLyBpZiBoYXMgYWxyZWFkeS1yZW5kZXJlZCBzdGF0aWMgdHJlZSBhbmQgbm90IGluc2lkZSB2LWZvcixcbiAgLy8gd2UgY2FuIHJldXNlIHRoZSBzYW1lIHRyZWUuXG4gIGlmICh0cmVlICYmICFpc0luRm9yKSB7XG4gICAgcmV0dXJuIHRyZWVcbiAgfVxuICAvLyBvdGhlcndpc2UsIHJlbmRlciBhIGZyZXNoIHRyZWUuXG4gIHRyZWUgPSBjYWNoZWRbaW5kZXhdID0gdGhpcy4kb3B0aW9ucy5zdGF0aWNSZW5kZXJGbnNbaW5kZXhdLmNhbGwoXG4gICAgdGhpcy5fcmVuZGVyUHJveHksXG4gICAgbnVsbCxcbiAgICB0aGlzIC8vIGZvciByZW5kZXIgZm5zIGdlbmVyYXRlZCBmb3IgZnVuY3Rpb25hbCBjb21wb25lbnQgdGVtcGxhdGVzXG4gICk7XG4gIG1hcmtTdGF0aWModHJlZSwgKFwiX19zdGF0aWNfX1wiICsgaW5kZXgpLCBmYWxzZSk7XG4gIHJldHVybiB0cmVlXG59XG5cbi8qKlxuICogUnVudGltZSBoZWxwZXIgZm9yIHYtb25jZS5cbiAqIEVmZmVjdGl2ZWx5IGl0IG1lYW5zIG1hcmtpbmcgdGhlIG5vZGUgYXMgc3RhdGljIHdpdGggYSB1bmlxdWUga2V5LlxuICovXG5mdW5jdGlvbiBtYXJrT25jZSAoXG4gIHRyZWUsXG4gIGluZGV4LFxuICBrZXlcbikge1xuICBtYXJrU3RhdGljKHRyZWUsIChcIl9fb25jZV9fXCIgKyBpbmRleCArIChrZXkgPyAoXCJfXCIgKyBrZXkpIDogXCJcIikpLCB0cnVlKTtcbiAgcmV0dXJuIHRyZWVcbn1cblxuZnVuY3Rpb24gbWFya1N0YXRpYyAoXG4gIHRyZWUsXG4gIGtleSxcbiAgaXNPbmNlXG4pIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkodHJlZSkpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRyZWUubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmICh0cmVlW2ldICYmIHR5cGVvZiB0cmVlW2ldICE9PSAnc3RyaW5nJykge1xuICAgICAgICBtYXJrU3RhdGljTm9kZSh0cmVlW2ldLCAoa2V5ICsgXCJfXCIgKyBpKSwgaXNPbmNlKTtcbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgbWFya1N0YXRpY05vZGUodHJlZSwga2V5LCBpc09uY2UpO1xuICB9XG59XG5cbmZ1bmN0aW9uIG1hcmtTdGF0aWNOb2RlIChub2RlLCBrZXksIGlzT25jZSkge1xuICBub2RlLmlzU3RhdGljID0gdHJ1ZTtcbiAgbm9kZS5rZXkgPSBrZXk7XG4gIG5vZGUuaXNPbmNlID0gaXNPbmNlO1xufVxuXG4vKiAgKi9cblxuZnVuY3Rpb24gYmluZE9iamVjdExpc3RlbmVycyAoZGF0YSwgdmFsdWUpIHtcbiAgaWYgKHZhbHVlKSB7XG4gICAgaWYgKCFpc1BsYWluT2JqZWN0KHZhbHVlKSkge1xuICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB3YXJuKFxuICAgICAgICAndi1vbiB3aXRob3V0IGFyZ3VtZW50IGV4cGVjdHMgYW4gT2JqZWN0IHZhbHVlJyxcbiAgICAgICAgdGhpc1xuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIG9uID0gZGF0YS5vbiA9IGRhdGEub24gPyBleHRlbmQoe30sIGRhdGEub24pIDoge307XG4gICAgICBmb3IgKHZhciBrZXkgaW4gdmFsdWUpIHtcbiAgICAgICAgdmFyIGV4aXN0aW5nID0gb25ba2V5XTtcbiAgICAgICAgdmFyIG91cnMgPSB2YWx1ZVtrZXldO1xuICAgICAgICBvbltrZXldID0gZXhpc3RpbmcgPyBbXS5jb25jYXQoZXhpc3RpbmcsIG91cnMpIDogb3VycztcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIGRhdGFcbn1cblxuLyogICovXG5cbmZ1bmN0aW9uIHJlc29sdmVTY29wZWRTbG90cyAoXG4gIGZucywgLy8gc2VlIGZsb3cvdm5vZGVcbiAgcmVzLFxuICAvLyB0aGUgZm9sbG93aW5nIGFyZSBhZGRlZCBpbiAyLjZcbiAgaGFzRHluYW1pY0tleXMsXG4gIGNvbnRlbnRIYXNoS2V5XG4pIHtcbiAgcmVzID0gcmVzIHx8IHsgJHN0YWJsZTogIWhhc0R5bmFtaWNLZXlzIH07XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgZm5zLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNsb3QgPSBmbnNbaV07XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoc2xvdCkpIHtcbiAgICAgIHJlc29sdmVTY29wZWRTbG90cyhzbG90LCByZXMsIGhhc0R5bmFtaWNLZXlzKTtcbiAgICB9IGVsc2UgaWYgKHNsb3QpIHtcbiAgICAgIC8vIG1hcmtlciBmb3IgcmV2ZXJzZSBwcm94eWluZyB2LXNsb3Qgd2l0aG91dCBzY29wZSBvbiB0aGlzLiRzbG90c1xuICAgICAgaWYgKHNsb3QucHJveHkpIHtcbiAgICAgICAgc2xvdC5mbi5wcm94eSA9IHRydWU7XG4gICAgICB9XG4gICAgICByZXNbc2xvdC5rZXldID0gc2xvdC5mbjtcbiAgICB9XG4gIH1cbiAgaWYgKGNvbnRlbnRIYXNoS2V5KSB7XG4gICAgKHJlcykuJGtleSA9IGNvbnRlbnRIYXNoS2V5O1xuICB9XG4gIHJldHVybiByZXNcbn1cblxuLyogICovXG5cbmZ1bmN0aW9uIGJpbmREeW5hbWljS2V5cyAoYmFzZU9iaiwgdmFsdWVzKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdmFsdWVzLmxlbmd0aDsgaSArPSAyKSB7XG4gICAgdmFyIGtleSA9IHZhbHVlc1tpXTtcbiAgICBpZiAodHlwZW9mIGtleSA9PT0gJ3N0cmluZycgJiYga2V5KSB7XG4gICAgICBiYXNlT2JqW3ZhbHVlc1tpXV0gPSB2YWx1ZXNbaSArIDFdO1xuICAgIH0gZWxzZSBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBrZXkgIT09ICcnICYmIGtleSAhPT0gbnVsbCkge1xuICAgICAgLy8gbnVsbCBpcyBhIHNwZWljYWwgdmFsdWUgZm9yIGV4cGxpY2l0bHkgcmVtb3ZpbmcgYSBiaW5kaW5nXG4gICAgICB3YXJuKFxuICAgICAgICAoXCJJbnZhbGlkIHZhbHVlIGZvciBkeW5hbWljIGRpcmVjdGl2ZSBhcmd1bWVudCAoZXhwZWN0ZWQgc3RyaW5nIG9yIG51bGwpOiBcIiArIGtleSksXG4gICAgICAgIHRoaXNcbiAgICAgICk7XG4gICAgfVxuICB9XG4gIHJldHVybiBiYXNlT2JqXG59XG5cbi8vIGhlbHBlciB0byBkeW5hbWljYWxseSBhcHBlbmQgbW9kaWZpZXIgcnVudGltZSBtYXJrZXJzIHRvIGV2ZW50IG5hbWVzLlxuLy8gZW5zdXJlIG9ubHkgYXBwZW5kIHdoZW4gdmFsdWUgaXMgYWxyZWFkeSBzdHJpbmcsIG90aGVyd2lzZSBpdCB3aWxsIGJlIGNhc3Rcbi8vIHRvIHN0cmluZyBhbmQgY2F1c2UgdGhlIHR5cGUgY2hlY2sgdG8gbWlzcy5cbmZ1bmN0aW9uIHByZXBlbmRNb2RpZmllciAodmFsdWUsIHN5bWJvbCkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyA/IHN5bWJvbCArIHZhbHVlIDogdmFsdWVcbn1cblxuLyogICovXG5cbmZ1bmN0aW9uIGluc3RhbGxSZW5kZXJIZWxwZXJzICh0YXJnZXQpIHtcbiAgdGFyZ2V0Ll9vID0gbWFya09uY2U7XG4gIHRhcmdldC5fbiA9IHRvTnVtYmVyO1xuICB0YXJnZXQuX3MgPSB0b1N0cmluZztcbiAgdGFyZ2V0Ll9sID0gcmVuZGVyTGlzdDtcbiAgdGFyZ2V0Ll90ID0gcmVuZGVyU2xvdDtcbiAgdGFyZ2V0Ll9xID0gbG9vc2VFcXVhbDtcbiAgdGFyZ2V0Ll9pID0gbG9vc2VJbmRleE9mO1xuICB0YXJnZXQuX20gPSByZW5kZXJTdGF0aWM7XG4gIHRhcmdldC5fZiA9IHJlc29sdmVGaWx0ZXI7XG4gIHRhcmdldC5fayA9IGNoZWNrS2V5Q29kZXM7XG4gIHRhcmdldC5fYiA9IGJpbmRPYmplY3RQcm9wcztcbiAgdGFyZ2V0Ll92ID0gY3JlYXRlVGV4dFZOb2RlO1xuICB0YXJnZXQuX2UgPSBjcmVhdGVFbXB0eVZOb2RlO1xuICB0YXJnZXQuX3UgPSByZXNvbHZlU2NvcGVkU2xvdHM7XG4gIHRhcmdldC5fZyA9IGJpbmRPYmplY3RMaXN0ZW5lcnM7XG4gIHRhcmdldC5fZCA9IGJpbmREeW5hbWljS2V5cztcbiAgdGFyZ2V0Ll9wID0gcHJlcGVuZE1vZGlmaWVyO1xufVxuXG4vKiAgKi9cblxuZnVuY3Rpb24gRnVuY3Rpb25hbFJlbmRlckNvbnRleHQgKFxuICBkYXRhLFxuICBwcm9wcyxcbiAgY2hpbGRyZW4sXG4gIHBhcmVudCxcbiAgQ3RvclxuKSB7XG4gIHZhciB0aGlzJDEgPSB0aGlzO1xuXG4gIHZhciBvcHRpb25zID0gQ3Rvci5vcHRpb25zO1xuICAvLyBlbnN1cmUgdGhlIGNyZWF0ZUVsZW1lbnQgZnVuY3Rpb24gaW4gZnVuY3Rpb25hbCBjb21wb25lbnRzXG4gIC8vIGdldHMgYSB1bmlxdWUgY29udGV4dCAtIHRoaXMgaXMgbmVjZXNzYXJ5IGZvciBjb3JyZWN0IG5hbWVkIHNsb3QgY2hlY2tcbiAgdmFyIGNvbnRleHRWbTtcbiAgaWYgKGhhc093bihwYXJlbnQsICdfdWlkJykpIHtcbiAgICBjb250ZXh0Vm0gPSBPYmplY3QuY3JlYXRlKHBhcmVudCk7XG4gICAgLy8gJGZsb3ctZGlzYWJsZS1saW5lXG4gICAgY29udGV4dFZtLl9vcmlnaW5hbCA9IHBhcmVudDtcbiAgfSBlbHNlIHtcbiAgICAvLyB0aGUgY29udGV4dCB2bSBwYXNzZWQgaW4gaXMgYSBmdW5jdGlvbmFsIGNvbnRleHQgYXMgd2VsbC5cbiAgICAvLyBpbiB0aGlzIGNhc2Ugd2Ugd2FudCB0byBtYWtlIHN1cmUgd2UgYXJlIGFibGUgdG8gZ2V0IGEgaG9sZCB0byB0aGVcbiAgICAvLyByZWFsIGNvbnRleHQgaW5zdGFuY2UuXG4gICAgY29udGV4dFZtID0gcGFyZW50O1xuICAgIC8vICRmbG93LWRpc2FibGUtbGluZVxuICAgIHBhcmVudCA9IHBhcmVudC5fb3JpZ2luYWw7XG4gIH1cbiAgdmFyIGlzQ29tcGlsZWQgPSBpc1RydWUob3B0aW9ucy5fY29tcGlsZWQpO1xuICB2YXIgbmVlZE5vcm1hbGl6YXRpb24gPSAhaXNDb21waWxlZDtcblxuICB0aGlzLmRhdGEgPSBkYXRhO1xuICB0aGlzLnByb3BzID0gcHJvcHM7XG4gIHRoaXMuY2hpbGRyZW4gPSBjaGlsZHJlbjtcbiAgdGhpcy5wYXJlbnQgPSBwYXJlbnQ7XG4gIHRoaXMubGlzdGVuZXJzID0gZGF0YS5vbiB8fCBlbXB0eU9iamVjdDtcbiAgdGhpcy5pbmplY3Rpb25zID0gcmVzb2x2ZUluamVjdChvcHRpb25zLmluamVjdCwgcGFyZW50KTtcbiAgdGhpcy5zbG90cyA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoIXRoaXMkMS4kc2xvdHMpIHtcbiAgICAgIG5vcm1hbGl6ZVNjb3BlZFNsb3RzKFxuICAgICAgICBkYXRhLnNjb3BlZFNsb3RzLFxuICAgICAgICB0aGlzJDEuJHNsb3RzID0gcmVzb2x2ZVNsb3RzKGNoaWxkcmVuLCBwYXJlbnQpXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcyQxLiRzbG90c1xuICB9O1xuXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCAnc2NvcGVkU2xvdHMnLCAoe1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQgKCkge1xuICAgICAgcmV0dXJuIG5vcm1hbGl6ZVNjb3BlZFNsb3RzKGRhdGEuc2NvcGVkU2xvdHMsIHRoaXMuc2xvdHMoKSlcbiAgICB9XG4gIH0pKTtcblxuICAvLyBzdXBwb3J0IGZvciBjb21waWxlZCBmdW5jdGlvbmFsIHRlbXBsYXRlXG4gIGlmIChpc0NvbXBpbGVkKSB7XG4gICAgLy8gZXhwb3NpbmcgJG9wdGlvbnMgZm9yIHJlbmRlclN0YXRpYygpXG4gICAgdGhpcy4kb3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgLy8gcHJlLXJlc29sdmUgc2xvdHMgZm9yIHJlbmRlclNsb3QoKVxuICAgIHRoaXMuJHNsb3RzID0gdGhpcy5zbG90cygpO1xuICAgIHRoaXMuJHNjb3BlZFNsb3RzID0gbm9ybWFsaXplU2NvcGVkU2xvdHMoZGF0YS5zY29wZWRTbG90cywgdGhpcy4kc2xvdHMpO1xuICB9XG5cbiAgaWYgKG9wdGlvbnMuX3Njb3BlSWQpIHtcbiAgICB0aGlzLl9jID0gZnVuY3Rpb24gKGEsIGIsIGMsIGQpIHtcbiAgICAgIHZhciB2bm9kZSA9IGNyZWF0ZUVsZW1lbnQoY29udGV4dFZtLCBhLCBiLCBjLCBkLCBuZWVkTm9ybWFsaXphdGlvbik7XG4gICAgICBpZiAodm5vZGUgJiYgIUFycmF5LmlzQXJyYXkodm5vZGUpKSB7XG4gICAgICAgIHZub2RlLmZuU2NvcGVJZCA9IG9wdGlvbnMuX3Njb3BlSWQ7XG4gICAgICAgIHZub2RlLmZuQ29udGV4dCA9IHBhcmVudDtcbiAgICAgIH1cbiAgICAgIHJldHVybiB2bm9kZVxuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5fYyA9IGZ1bmN0aW9uIChhLCBiLCBjLCBkKSB7IHJldHVybiBjcmVhdGVFbGVtZW50KGNvbnRleHRWbSwgYSwgYiwgYywgZCwgbmVlZE5vcm1hbGl6YXRpb24pOyB9O1xuICB9XG59XG5cbmluc3RhbGxSZW5kZXJIZWxwZXJzKEZ1bmN0aW9uYWxSZW5kZXJDb250ZXh0LnByb3RvdHlwZSk7XG5cbmZ1bmN0aW9uIGNyZWF0ZUZ1bmN0aW9uYWxDb21wb25lbnQgKFxuICBDdG9yLFxuICBwcm9wc0RhdGEsXG4gIGRhdGEsXG4gIGNvbnRleHRWbSxcbiAgY2hpbGRyZW5cbikge1xuICB2YXIgb3B0aW9ucyA9IEN0b3Iub3B0aW9ucztcbiAgdmFyIHByb3BzID0ge307XG4gIHZhciBwcm9wT3B0aW9ucyA9IG9wdGlvbnMucHJvcHM7XG4gIGlmIChpc0RlZihwcm9wT3B0aW9ucykpIHtcbiAgICBmb3IgKHZhciBrZXkgaW4gcHJvcE9wdGlvbnMpIHtcbiAgICAgIHByb3BzW2tleV0gPSB2YWxpZGF0ZVByb3Aoa2V5LCBwcm9wT3B0aW9ucywgcHJvcHNEYXRhIHx8IGVtcHR5T2JqZWN0KTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgaWYgKGlzRGVmKGRhdGEuYXR0cnMpKSB7IG1lcmdlUHJvcHMocHJvcHMsIGRhdGEuYXR0cnMpOyB9XG4gICAgaWYgKGlzRGVmKGRhdGEucHJvcHMpKSB7IG1lcmdlUHJvcHMocHJvcHMsIGRhdGEucHJvcHMpOyB9XG4gIH1cblxuICB2YXIgcmVuZGVyQ29udGV4dCA9IG5ldyBGdW5jdGlvbmFsUmVuZGVyQ29udGV4dChcbiAgICBkYXRhLFxuICAgIHByb3BzLFxuICAgIGNoaWxkcmVuLFxuICAgIGNvbnRleHRWbSxcbiAgICBDdG9yXG4gICk7XG5cbiAgdmFyIHZub2RlID0gb3B0aW9ucy5yZW5kZXIuY2FsbChudWxsLCByZW5kZXJDb250ZXh0Ll9jLCByZW5kZXJDb250ZXh0KTtcblxuICBpZiAodm5vZGUgaW5zdGFuY2VvZiBWTm9kZSkge1xuICAgIHJldHVybiBjbG9uZUFuZE1hcmtGdW5jdGlvbmFsUmVzdWx0KHZub2RlLCBkYXRhLCByZW5kZXJDb250ZXh0LnBhcmVudCwgb3B0aW9ucywgcmVuZGVyQ29udGV4dClcbiAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KHZub2RlKSkge1xuICAgIHZhciB2bm9kZXMgPSBub3JtYWxpemVDaGlsZHJlbih2bm9kZSkgfHwgW107XG4gICAgdmFyIHJlcyA9IG5ldyBBcnJheSh2bm9kZXMubGVuZ3RoKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHZub2Rlcy5sZW5ndGg7IGkrKykge1xuICAgICAgcmVzW2ldID0gY2xvbmVBbmRNYXJrRnVuY3Rpb25hbFJlc3VsdCh2bm9kZXNbaV0sIGRhdGEsIHJlbmRlckNvbnRleHQucGFyZW50LCBvcHRpb25zLCByZW5kZXJDb250ZXh0KTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc1xuICB9XG59XG5cbmZ1bmN0aW9uIGNsb25lQW5kTWFya0Z1bmN0aW9uYWxSZXN1bHQgKHZub2RlLCBkYXRhLCBjb250ZXh0Vm0sIG9wdGlvbnMsIHJlbmRlckNvbnRleHQpIHtcbiAgLy8gIzc4MTcgY2xvbmUgbm9kZSBiZWZvcmUgc2V0dGluZyBmbkNvbnRleHQsIG90aGVyd2lzZSBpZiB0aGUgbm9kZSBpcyByZXVzZWRcbiAgLy8gKGUuZy4gaXQgd2FzIGZyb20gYSBjYWNoZWQgbm9ybWFsIHNsb3QpIHRoZSBmbkNvbnRleHQgY2F1c2VzIG5hbWVkIHNsb3RzXG4gIC8vIHRoYXQgc2hvdWxkIG5vdCBiZSBtYXRjaGVkIHRvIG1hdGNoLlxuICB2YXIgY2xvbmUgPSBjbG9uZVZOb2RlKHZub2RlKTtcbiAgY2xvbmUuZm5Db250ZXh0ID0gY29udGV4dFZtO1xuICBjbG9uZS5mbk9wdGlvbnMgPSBvcHRpb25zO1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIChjbG9uZS5kZXZ0b29sc01ldGEgPSBjbG9uZS5kZXZ0b29sc01ldGEgfHwge30pLnJlbmRlckNvbnRleHQgPSByZW5kZXJDb250ZXh0O1xuICB9XG4gIGlmIChkYXRhLnNsb3QpIHtcbiAgICAoY2xvbmUuZGF0YSB8fCAoY2xvbmUuZGF0YSA9IHt9KSkuc2xvdCA9IGRhdGEuc2xvdDtcbiAgfVxuICByZXR1cm4gY2xvbmVcbn1cblxuZnVuY3Rpb24gbWVyZ2VQcm9wcyAodG8sIGZyb20pIHtcbiAgZm9yICh2YXIga2V5IGluIGZyb20pIHtcbiAgICB0b1tjYW1lbGl6ZShrZXkpXSA9IGZyb21ba2V5XTtcbiAgfVxufVxuXG4vKiAgKi9cblxuLyogICovXG5cbi8qICAqL1xuXG4vKiAgKi9cblxuLy8gaW5saW5lIGhvb2tzIHRvIGJlIGludm9rZWQgb24gY29tcG9uZW50IFZOb2RlcyBkdXJpbmcgcGF0Y2hcbnZhciBjb21wb25lbnRWTm9kZUhvb2tzID0ge1xuICBpbml0OiBmdW5jdGlvbiBpbml0ICh2bm9kZSwgaHlkcmF0aW5nKSB7XG4gICAgaWYgKFxuICAgICAgdm5vZGUuY29tcG9uZW50SW5zdGFuY2UgJiZcbiAgICAgICF2bm9kZS5jb21wb25lbnRJbnN0YW5jZS5faXNEZXN0cm95ZWQgJiZcbiAgICAgIHZub2RlLmRhdGEua2VlcEFsaXZlXG4gICAgKSB7XG4gICAgICAvLyBrZXB0LWFsaXZlIGNvbXBvbmVudHMsIHRyZWF0IGFzIGEgcGF0Y2hcbiAgICAgIHZhciBtb3VudGVkTm9kZSA9IHZub2RlOyAvLyB3b3JrIGFyb3VuZCBmbG93XG4gICAgICBjb21wb25lbnRWTm9kZUhvb2tzLnByZXBhdGNoKG1vdW50ZWROb2RlLCBtb3VudGVkTm9kZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBjaGlsZCA9IHZub2RlLmNvbXBvbmVudEluc3RhbmNlID0gY3JlYXRlQ29tcG9uZW50SW5zdGFuY2VGb3JWbm9kZShcbiAgICAgICAgdm5vZGUsXG4gICAgICAgIGFjdGl2ZUluc3RhbmNlXG4gICAgICApO1xuICAgICAgY2hpbGQuJG1vdW50KGh5ZHJhdGluZyA/IHZub2RlLmVsbSA6IHVuZGVmaW5lZCwgaHlkcmF0aW5nKTtcbiAgICB9XG4gIH0sXG5cbiAgcHJlcGF0Y2g6IGZ1bmN0aW9uIHByZXBhdGNoIChvbGRWbm9kZSwgdm5vZGUpIHtcbiAgICB2YXIgb3B0aW9ucyA9IHZub2RlLmNvbXBvbmVudE9wdGlvbnM7XG4gICAgdmFyIGNoaWxkID0gdm5vZGUuY29tcG9uZW50SW5zdGFuY2UgPSBvbGRWbm9kZS5jb21wb25lbnRJbnN0YW5jZTtcbiAgICB1cGRhdGVDaGlsZENvbXBvbmVudChcbiAgICAgIGNoaWxkLFxuICAgICAgb3B0aW9ucy5wcm9wc0RhdGEsIC8vIHVwZGF0ZWQgcHJvcHNcbiAgICAgIG9wdGlvbnMubGlzdGVuZXJzLCAvLyB1cGRhdGVkIGxpc3RlbmVyc1xuICAgICAgdm5vZGUsIC8vIG5ldyBwYXJlbnQgdm5vZGVcbiAgICAgIG9wdGlvbnMuY2hpbGRyZW4gLy8gbmV3IGNoaWxkcmVuXG4gICAgKTtcbiAgfSxcblxuICBpbnNlcnQ6IGZ1bmN0aW9uIGluc2VydCAodm5vZGUpIHtcbiAgICB2YXIgY29udGV4dCA9IHZub2RlLmNvbnRleHQ7XG4gICAgdmFyIGNvbXBvbmVudEluc3RhbmNlID0gdm5vZGUuY29tcG9uZW50SW5zdGFuY2U7XG4gICAgaWYgKCFjb21wb25lbnRJbnN0YW5jZS5faXNNb3VudGVkKSB7XG4gICAgICBjb21wb25lbnRJbnN0YW5jZS5faXNNb3VudGVkID0gdHJ1ZTtcbiAgICAgIGNhbGxIb29rKGNvbXBvbmVudEluc3RhbmNlLCAnbW91bnRlZCcpO1xuICAgIH1cbiAgICBpZiAodm5vZGUuZGF0YS5rZWVwQWxpdmUpIHtcbiAgICAgIGlmIChjb250ZXh0Ll9pc01vdW50ZWQpIHtcbiAgICAgICAgLy8gdnVlLXJvdXRlciMxMjEyXG4gICAgICAgIC8vIER1cmluZyB1cGRhdGVzLCBhIGtlcHQtYWxpdmUgY29tcG9uZW50J3MgY2hpbGQgY29tcG9uZW50cyBtYXlcbiAgICAgICAgLy8gY2hhbmdlLCBzbyBkaXJlY3RseSB3YWxraW5nIHRoZSB0cmVlIGhlcmUgbWF5IGNhbGwgYWN0aXZhdGVkIGhvb2tzXG4gICAgICAgIC8vIG9uIGluY29ycmVjdCBjaGlsZHJlbi4gSW5zdGVhZCB3ZSBwdXNoIHRoZW0gaW50byBhIHF1ZXVlIHdoaWNoIHdpbGxcbiAgICAgICAgLy8gYmUgcHJvY2Vzc2VkIGFmdGVyIHRoZSB3aG9sZSBwYXRjaCBwcm9jZXNzIGVuZGVkLlxuICAgICAgICBxdWV1ZUFjdGl2YXRlZENvbXBvbmVudChjb21wb25lbnRJbnN0YW5jZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBhY3RpdmF0ZUNoaWxkQ29tcG9uZW50KGNvbXBvbmVudEluc3RhbmNlLCB0cnVlIC8qIGRpcmVjdCAqLyk7XG4gICAgICB9XG4gICAgfVxuICB9LFxuXG4gIGRlc3Ryb3k6IGZ1bmN0aW9uIGRlc3Ryb3kgKHZub2RlKSB7XG4gICAgdmFyIGNvbXBvbmVudEluc3RhbmNlID0gdm5vZGUuY29tcG9uZW50SW5zdGFuY2U7XG4gICAgaWYgKCFjb21wb25lbnRJbnN0YW5jZS5faXNEZXN0cm95ZWQpIHtcbiAgICAgIGlmICghdm5vZGUuZGF0YS5rZWVwQWxpdmUpIHtcbiAgICAgICAgY29tcG9uZW50SW5zdGFuY2UuJGRlc3Ryb3koKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGRlYWN0aXZhdGVDaGlsZENvbXBvbmVudChjb21wb25lbnRJbnN0YW5jZSwgdHJ1ZSAvKiBkaXJlY3QgKi8pO1xuICAgICAgfVxuICAgIH1cbiAgfVxufTtcblxudmFyIGhvb2tzVG9NZXJnZSA9IE9iamVjdC5rZXlzKGNvbXBvbmVudFZOb2RlSG9va3MpO1xuXG5mdW5jdGlvbiBjcmVhdGVDb21wb25lbnQgKFxuICBDdG9yLFxuICBkYXRhLFxuICBjb250ZXh0LFxuICBjaGlsZHJlbixcbiAgdGFnXG4pIHtcbiAgaWYgKGlzVW5kZWYoQ3RvcikpIHtcbiAgICByZXR1cm5cbiAgfVxuXG4gIHZhciBiYXNlQ3RvciA9IGNvbnRleHQuJG9wdGlvbnMuX2Jhc2U7XG5cbiAgLy8gcGxhaW4gb3B0aW9ucyBvYmplY3Q6IHR1cm4gaXQgaW50byBhIGNvbnN0cnVjdG9yXG4gIGlmIChpc09iamVjdChDdG9yKSkge1xuICAgIEN0b3IgPSBiYXNlQ3Rvci5leHRlbmQoQ3Rvcik7XG4gIH1cblxuICAvLyBpZiBhdCB0aGlzIHN0YWdlIGl0J3Mgbm90IGEgY29uc3RydWN0b3Igb3IgYW4gYXN5bmMgY29tcG9uZW50IGZhY3RvcnksXG4gIC8vIHJlamVjdC5cbiAgaWYgKHR5cGVvZiBDdG9yICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIHdhcm4oKFwiSW52YWxpZCBDb21wb25lbnQgZGVmaW5pdGlvbjogXCIgKyAoU3RyaW5nKEN0b3IpKSksIGNvbnRleHQpO1xuICAgIH1cbiAgICByZXR1cm5cbiAgfVxuXG4gIC8vIGFzeW5jIGNvbXBvbmVudFxuICB2YXIgYXN5bmNGYWN0b3J5O1xuICBpZiAoaXNVbmRlZihDdG9yLmNpZCkpIHtcbiAgICBhc3luY0ZhY3RvcnkgPSBDdG9yO1xuICAgIEN0b3IgPSByZXNvbHZlQXN5bmNDb21wb25lbnQoYXN5bmNGYWN0b3J5LCBiYXNlQ3Rvcik7XG4gICAgaWYgKEN0b3IgPT09IHVuZGVmaW5lZCkge1xuICAgICAgLy8gcmV0dXJuIGEgcGxhY2Vob2xkZXIgbm9kZSBmb3IgYXN5bmMgY29tcG9uZW50LCB3aGljaCBpcyByZW5kZXJlZFxuICAgICAgLy8gYXMgYSBjb21tZW50IG5vZGUgYnV0IHByZXNlcnZlcyBhbGwgdGhlIHJhdyBpbmZvcm1hdGlvbiBmb3IgdGhlIG5vZGUuXG4gICAgICAvLyB0aGUgaW5mb3JtYXRpb24gd2lsbCBiZSB1c2VkIGZvciBhc3luYyBzZXJ2ZXItcmVuZGVyaW5nIGFuZCBoeWRyYXRpb24uXG4gICAgICByZXR1cm4gY3JlYXRlQXN5bmNQbGFjZWhvbGRlcihcbiAgICAgICAgYXN5bmNGYWN0b3J5LFxuICAgICAgICBkYXRhLFxuICAgICAgICBjb250ZXh0LFxuICAgICAgICBjaGlsZHJlbixcbiAgICAgICAgdGFnXG4gICAgICApXG4gICAgfVxuICB9XG5cbiAgZGF0YSA9IGRhdGEgfHwge307XG5cbiAgLy8gcmVzb2x2ZSBjb25zdHJ1Y3RvciBvcHRpb25zIGluIGNhc2UgZ2xvYmFsIG1peGlucyBhcmUgYXBwbGllZCBhZnRlclxuICAvLyBjb21wb25lbnQgY29uc3RydWN0b3IgY3JlYXRpb25cbiAgcmVzb2x2ZUNvbnN0cnVjdG9yT3B0aW9ucyhDdG9yKTtcblxuICAvLyB0cmFuc2Zvcm0gY29tcG9uZW50IHYtbW9kZWwgZGF0YSBpbnRvIHByb3BzICYgZXZlbnRzXG4gIGlmIChpc0RlZihkYXRhLm1vZGVsKSkge1xuICAgIHRyYW5zZm9ybU1vZGVsKEN0b3Iub3B0aW9ucywgZGF0YSk7XG4gIH1cblxuICAvLyBleHRyYWN0IHByb3BzXG4gIHZhciBwcm9wc0RhdGEgPSBleHRyYWN0UHJvcHNGcm9tVk5vZGVEYXRhKGRhdGEsIEN0b3IsIHRhZyk7XG5cbiAgLy8gZnVuY3Rpb25hbCBjb21wb25lbnRcbiAgaWYgKGlzVHJ1ZShDdG9yLm9wdGlvbnMuZnVuY3Rpb25hbCkpIHtcbiAgICByZXR1cm4gY3JlYXRlRnVuY3Rpb25hbENvbXBvbmVudChDdG9yLCBwcm9wc0RhdGEsIGRhdGEsIGNvbnRleHQsIGNoaWxkcmVuKVxuICB9XG5cbiAgLy8gZXh0cmFjdCBsaXN0ZW5lcnMsIHNpbmNlIHRoZXNlIG5lZWRzIHRvIGJlIHRyZWF0ZWQgYXNcbiAgLy8gY2hpbGQgY29tcG9uZW50IGxpc3RlbmVycyBpbnN0ZWFkIG9mIERPTSBsaXN0ZW5lcnNcbiAgdmFyIGxpc3RlbmVycyA9IGRhdGEub247XG4gIC8vIHJlcGxhY2Ugd2l0aCBsaXN0ZW5lcnMgd2l0aCAubmF0aXZlIG1vZGlmaWVyXG4gIC8vIHNvIGl0IGdldHMgcHJvY2Vzc2VkIGR1cmluZyBwYXJlbnQgY29tcG9uZW50IHBhdGNoLlxuICBkYXRhLm9uID0gZGF0YS5uYXRpdmVPbjtcblxuICBpZiAoaXNUcnVlKEN0b3Iub3B0aW9ucy5hYnN0cmFjdCkpIHtcbiAgICAvLyBhYnN0cmFjdCBjb21wb25lbnRzIGRvIG5vdCBrZWVwIGFueXRoaW5nXG4gICAgLy8gb3RoZXIgdGhhbiBwcm9wcyAmIGxpc3RlbmVycyAmIHNsb3RcblxuICAgIC8vIHdvcmsgYXJvdW5kIGZsb3dcbiAgICB2YXIgc2xvdCA9IGRhdGEuc2xvdDtcbiAgICBkYXRhID0ge307XG4gICAgaWYgKHNsb3QpIHtcbiAgICAgIGRhdGEuc2xvdCA9IHNsb3Q7XG4gICAgfVxuICB9XG5cbiAgLy8gaW5zdGFsbCBjb21wb25lbnQgbWFuYWdlbWVudCBob29rcyBvbnRvIHRoZSBwbGFjZWhvbGRlciBub2RlXG4gIGluc3RhbGxDb21wb25lbnRIb29rcyhkYXRhKTtcblxuICAvLyByZXR1cm4gYSBwbGFjZWhvbGRlciB2bm9kZVxuICB2YXIgbmFtZSA9IEN0b3Iub3B0aW9ucy5uYW1lIHx8IHRhZztcbiAgdmFyIHZub2RlID0gbmV3IFZOb2RlKFxuICAgIChcInZ1ZS1jb21wb25lbnQtXCIgKyAoQ3Rvci5jaWQpICsgKG5hbWUgPyAoXCItXCIgKyBuYW1lKSA6ICcnKSksXG4gICAgZGF0YSwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgY29udGV4dCxcbiAgICB7IEN0b3I6IEN0b3IsIHByb3BzRGF0YTogcHJvcHNEYXRhLCBsaXN0ZW5lcnM6IGxpc3RlbmVycywgdGFnOiB0YWcsIGNoaWxkcmVuOiBjaGlsZHJlbiB9LFxuICAgIGFzeW5jRmFjdG9yeVxuICApO1xuXG4gIHJldHVybiB2bm9kZVxufVxuXG5mdW5jdGlvbiBjcmVhdGVDb21wb25lbnRJbnN0YW5jZUZvclZub2RlIChcbiAgdm5vZGUsIC8vIHdlIGtub3cgaXQncyBNb3VudGVkQ29tcG9uZW50Vk5vZGUgYnV0IGZsb3cgZG9lc24ndFxuICBwYXJlbnQgLy8gYWN0aXZlSW5zdGFuY2UgaW4gbGlmZWN5Y2xlIHN0YXRlXG4pIHtcbiAgdmFyIG9wdGlvbnMgPSB7XG4gICAgX2lzQ29tcG9uZW50OiB0cnVlLFxuICAgIF9wYXJlbnRWbm9kZTogdm5vZGUsXG4gICAgcGFyZW50OiBwYXJlbnRcbiAgfTtcbiAgLy8gY2hlY2sgaW5saW5lLXRlbXBsYXRlIHJlbmRlciBmdW5jdGlvbnNcbiAgdmFyIGlubGluZVRlbXBsYXRlID0gdm5vZGUuZGF0YS5pbmxpbmVUZW1wbGF0ZTtcbiAgaWYgKGlzRGVmKGlubGluZVRlbXBsYXRlKSkge1xuICAgIG9wdGlvbnMucmVuZGVyID0gaW5saW5lVGVtcGxhdGUucmVuZGVyO1xuICAgIG9wdGlvbnMuc3RhdGljUmVuZGVyRm5zID0gaW5saW5lVGVtcGxhdGUuc3RhdGljUmVuZGVyRm5zO1xuICB9XG4gIHJldHVybiBuZXcgdm5vZGUuY29tcG9uZW50T3B0aW9ucy5DdG9yKG9wdGlvbnMpXG59XG5cbmZ1bmN0aW9uIGluc3RhbGxDb21wb25lbnRIb29rcyAoZGF0YSkge1xuICB2YXIgaG9va3MgPSBkYXRhLmhvb2sgfHwgKGRhdGEuaG9vayA9IHt9KTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBob29rc1RvTWVyZ2UubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIga2V5ID0gaG9va3NUb01lcmdlW2ldO1xuICAgIHZhciBleGlzdGluZyA9IGhvb2tzW2tleV07XG4gICAgdmFyIHRvTWVyZ2UgPSBjb21wb25lbnRWTm9kZUhvb2tzW2tleV07XG4gICAgaWYgKGV4aXN0aW5nICE9PSB0b01lcmdlICYmICEoZXhpc3RpbmcgJiYgZXhpc3RpbmcuX21lcmdlZCkpIHtcbiAgICAgIGhvb2tzW2tleV0gPSBleGlzdGluZyA/IG1lcmdlSG9vayQxKHRvTWVyZ2UsIGV4aXN0aW5nKSA6IHRvTWVyZ2U7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIG1lcmdlSG9vayQxIChmMSwgZjIpIHtcbiAgdmFyIG1lcmdlZCA9IGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgLy8gZmxvdyBjb21wbGFpbnMgYWJvdXQgZXh0cmEgYXJncyB3aGljaCBpcyB3aHkgd2UgdXNlIGFueVxuICAgIGYxKGEsIGIpO1xuICAgIGYyKGEsIGIpO1xuICB9O1xuICBtZXJnZWQuX21lcmdlZCA9IHRydWU7XG4gIHJldHVybiBtZXJnZWRcbn1cblxuLy8gdHJhbnNmb3JtIGNvbXBvbmVudCB2LW1vZGVsIGluZm8gKHZhbHVlIGFuZCBjYWxsYmFjaykgaW50b1xuLy8gcHJvcCBhbmQgZXZlbnQgaGFuZGxlciByZXNwZWN0aXZlbHkuXG5mdW5jdGlvbiB0cmFuc2Zvcm1Nb2RlbCAob3B0aW9ucywgZGF0YSkge1xuICB2YXIgcHJvcCA9IChvcHRpb25zLm1vZGVsICYmIG9wdGlvbnMubW9kZWwucHJvcCkgfHwgJ3ZhbHVlJztcbiAgdmFyIGV2ZW50ID0gKG9wdGlvbnMubW9kZWwgJiYgb3B0aW9ucy5tb2RlbC5ldmVudCkgfHwgJ2lucHV0J1xuICA7KGRhdGEuYXR0cnMgfHwgKGRhdGEuYXR0cnMgPSB7fSkpW3Byb3BdID0gZGF0YS5tb2RlbC52YWx1ZTtcbiAgdmFyIG9uID0gZGF0YS5vbiB8fCAoZGF0YS5vbiA9IHt9KTtcbiAgdmFyIGV4aXN0aW5nID0gb25bZXZlbnRdO1xuICB2YXIgY2FsbGJhY2sgPSBkYXRhLm1vZGVsLmNhbGxiYWNrO1xuICBpZiAoaXNEZWYoZXhpc3RpbmcpKSB7XG4gICAgaWYgKFxuICAgICAgQXJyYXkuaXNBcnJheShleGlzdGluZylcbiAgICAgICAgPyBleGlzdGluZy5pbmRleE9mKGNhbGxiYWNrKSA9PT0gLTFcbiAgICAgICAgOiBleGlzdGluZyAhPT0gY2FsbGJhY2tcbiAgICApIHtcbiAgICAgIG9uW2V2ZW50XSA9IFtjYWxsYmFja10uY29uY2F0KGV4aXN0aW5nKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgb25bZXZlbnRdID0gY2FsbGJhY2s7XG4gIH1cbn1cblxuLyogICovXG5cbnZhciBTSU1QTEVfTk9STUFMSVpFID0gMTtcbnZhciBBTFdBWVNfTk9STUFMSVpFID0gMjtcblxuLy8gd3JhcHBlciBmdW5jdGlvbiBmb3IgcHJvdmlkaW5nIGEgbW9yZSBmbGV4aWJsZSBpbnRlcmZhY2Vcbi8vIHdpdGhvdXQgZ2V0dGluZyB5ZWxsZWQgYXQgYnkgZmxvd1xuZnVuY3Rpb24gY3JlYXRlRWxlbWVudCAoXG4gIGNvbnRleHQsXG4gIHRhZyxcbiAgZGF0YSxcbiAgY2hpbGRyZW4sXG4gIG5vcm1hbGl6YXRpb25UeXBlLFxuICBhbHdheXNOb3JtYWxpemVcbikge1xuICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSB8fCBpc1ByaW1pdGl2ZShkYXRhKSkge1xuICAgIG5vcm1hbGl6YXRpb25UeXBlID0gY2hpbGRyZW47XG4gICAgY2hpbGRyZW4gPSBkYXRhO1xuICAgIGRhdGEgPSB1bmRlZmluZWQ7XG4gIH1cbiAgaWYgKGlzVHJ1ZShhbHdheXNOb3JtYWxpemUpKSB7XG4gICAgbm9ybWFsaXphdGlvblR5cGUgPSBBTFdBWVNfTk9STUFMSVpFO1xuICB9XG4gIHJldHVybiBfY3JlYXRlRWxlbWVudChjb250ZXh0LCB0YWcsIGRhdGEsIGNoaWxkcmVuLCBub3JtYWxpemF0aW9uVHlwZSlcbn1cblxuZnVuY3Rpb24gX2NyZWF0ZUVsZW1lbnQgKFxuICBjb250ZXh0LFxuICB0YWcsXG4gIGRhdGEsXG4gIGNoaWxkcmVuLFxuICBub3JtYWxpemF0aW9uVHlwZVxuKSB7XG4gIGlmIChpc0RlZihkYXRhKSAmJiBpc0RlZigoZGF0YSkuX19vYl9fKSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgd2FybihcbiAgICAgIFwiQXZvaWQgdXNpbmcgb2JzZXJ2ZWQgZGF0YSBvYmplY3QgYXMgdm5vZGUgZGF0YTogXCIgKyAoSlNPTi5zdHJpbmdpZnkoZGF0YSkpICsgXCJcXG5cIiArXG4gICAgICAnQWx3YXlzIGNyZWF0ZSBmcmVzaCB2bm9kZSBkYXRhIG9iamVjdHMgaW4gZWFjaCByZW5kZXIhJyxcbiAgICAgIGNvbnRleHRcbiAgICApO1xuICAgIHJldHVybiBjcmVhdGVFbXB0eVZOb2RlKClcbiAgfVxuICAvLyBvYmplY3Qgc3ludGF4IGluIHYtYmluZFxuICBpZiAoaXNEZWYoZGF0YSkgJiYgaXNEZWYoZGF0YS5pcykpIHtcbiAgICB0YWcgPSBkYXRhLmlzO1xuICB9XG4gIGlmICghdGFnKSB7XG4gICAgLy8gaW4gY2FzZSBvZiBjb21wb25lbnQgOmlzIHNldCB0byBmYWxzeSB2YWx1ZVxuICAgIHJldHVybiBjcmVhdGVFbXB0eVZOb2RlKClcbiAgfVxuICAvLyB3YXJuIGFnYWluc3Qgbm9uLXByaW1pdGl2ZSBrZXlcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiZcbiAgICBpc0RlZihkYXRhKSAmJiBpc0RlZihkYXRhLmtleSkgJiYgIWlzUHJpbWl0aXZlKGRhdGEua2V5KVxuICApIHtcbiAgICB7XG4gICAgICB3YXJuKFxuICAgICAgICAnQXZvaWQgdXNpbmcgbm9uLXByaW1pdGl2ZSB2YWx1ZSBhcyBrZXksICcgK1xuICAgICAgICAndXNlIHN0cmluZy9udW1iZXIgdmFsdWUgaW5zdGVhZC4nLFxuICAgICAgICBjb250ZXh0XG4gICAgICApO1xuICAgIH1cbiAgfVxuICAvLyBzdXBwb3J0IHNpbmdsZSBmdW5jdGlvbiBjaGlsZHJlbiBhcyBkZWZhdWx0IHNjb3BlZCBzbG90XG4gIGlmIChBcnJheS5pc0FycmF5KGNoaWxkcmVuKSAmJlxuICAgIHR5cGVvZiBjaGlsZHJlblswXSA9PT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICBkYXRhID0gZGF0YSB8fCB7fTtcbiAgICBkYXRhLnNjb3BlZFNsb3RzID0geyBkZWZhdWx0OiBjaGlsZHJlblswXSB9O1xuICAgIGNoaWxkcmVuLmxlbmd0aCA9IDA7XG4gIH1cbiAgaWYgKG5vcm1hbGl6YXRpb25UeXBlID09PSBBTFdBWVNfTk9STUFMSVpFKSB7XG4gICAgY2hpbGRyZW4gPSBub3JtYWxpemVDaGlsZHJlbihjaGlsZHJlbik7XG4gIH0gZWxzZSBpZiAobm9ybWFsaXphdGlvblR5cGUgPT09IFNJTVBMRV9OT1JNQUxJWkUpIHtcbiAgICBjaGlsZHJlbiA9IHNpbXBsZU5vcm1hbGl6ZUNoaWxkcmVuKGNoaWxkcmVuKTtcbiAgfVxuICB2YXIgdm5vZGUsIG5zO1xuICBpZiAodHlwZW9mIHRhZyA9PT0gJ3N0cmluZycpIHtcbiAgICB2YXIgQ3RvcjtcbiAgICBucyA9IChjb250ZXh0LiR2bm9kZSAmJiBjb250ZXh0LiR2bm9kZS5ucykgfHwgY29uZmlnLmdldFRhZ05hbWVzcGFjZSh0YWcpO1xuICAgIGlmIChjb25maWcuaXNSZXNlcnZlZFRhZyh0YWcpKSB7XG4gICAgICAvLyBwbGF0Zm9ybSBidWlsdC1pbiBlbGVtZW50c1xuICAgICAgdm5vZGUgPSBuZXcgVk5vZGUoXG4gICAgICAgIGNvbmZpZy5wYXJzZVBsYXRmb3JtVGFnTmFtZSh0YWcpLCBkYXRhLCBjaGlsZHJlbixcbiAgICAgICAgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGNvbnRleHRcbiAgICAgICk7XG4gICAgfSBlbHNlIGlmICgoIWRhdGEgfHwgIWRhdGEucHJlKSAmJiBpc0RlZihDdG9yID0gcmVzb2x2ZUFzc2V0KGNvbnRleHQuJG9wdGlvbnMsICdjb21wb25lbnRzJywgdGFnKSkpIHtcbiAgICAgIC8vIGNvbXBvbmVudFxuICAgICAgdm5vZGUgPSBjcmVhdGVDb21wb25lbnQoQ3RvciwgZGF0YSwgY29udGV4dCwgY2hpbGRyZW4sIHRhZyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIHVua25vd24gb3IgdW5saXN0ZWQgbmFtZXNwYWNlZCBlbGVtZW50c1xuICAgICAgLy8gY2hlY2sgYXQgcnVudGltZSBiZWNhdXNlIGl0IG1heSBnZXQgYXNzaWduZWQgYSBuYW1lc3BhY2Ugd2hlbiBpdHNcbiAgICAgIC8vIHBhcmVudCBub3JtYWxpemVzIGNoaWxkcmVuXG4gICAgICB2bm9kZSA9IG5ldyBWTm9kZShcbiAgICAgICAgdGFnLCBkYXRhLCBjaGlsZHJlbixcbiAgICAgICAgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGNvbnRleHRcbiAgICAgICk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIC8vIGRpcmVjdCBjb21wb25lbnQgb3B0aW9ucyAvIGNvbnN0cnVjdG9yXG4gICAgdm5vZGUgPSBjcmVhdGVDb21wb25lbnQodGFnLCBkYXRhLCBjb250ZXh0LCBjaGlsZHJlbik7XG4gIH1cbiAgaWYgKEFycmF5LmlzQXJyYXkodm5vZGUpKSB7XG4gICAgcmV0dXJuIHZub2RlXG4gIH0gZWxzZSBpZiAoaXNEZWYodm5vZGUpKSB7XG4gICAgaWYgKGlzRGVmKG5zKSkgeyBhcHBseU5TKHZub2RlLCBucyk7IH1cbiAgICBpZiAoaXNEZWYoZGF0YSkpIHsgcmVnaXN0ZXJEZWVwQmluZGluZ3MoZGF0YSk7IH1cbiAgICByZXR1cm4gdm5vZGVcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gY3JlYXRlRW1wdHlWTm9kZSgpXG4gIH1cbn1cblxuZnVuY3Rpb24gYXBwbHlOUyAodm5vZGUsIG5zLCBmb3JjZSkge1xuICB2bm9kZS5ucyA9IG5zO1xuICBpZiAodm5vZGUudGFnID09PSAnZm9yZWlnbk9iamVjdCcpIHtcbiAgICAvLyB1c2UgZGVmYXVsdCBuYW1lc3BhY2UgaW5zaWRlIGZvcmVpZ25PYmplY3RcbiAgICBucyA9IHVuZGVmaW5lZDtcbiAgICBmb3JjZSA9IHRydWU7XG4gIH1cbiAgaWYgKGlzRGVmKHZub2RlLmNoaWxkcmVuKSkge1xuICAgIGZvciAodmFyIGkgPSAwLCBsID0gdm5vZGUuY2hpbGRyZW4ubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICB2YXIgY2hpbGQgPSB2bm9kZS5jaGlsZHJlbltpXTtcbiAgICAgIGlmIChpc0RlZihjaGlsZC50YWcpICYmIChcbiAgICAgICAgaXNVbmRlZihjaGlsZC5ucykgfHwgKGlzVHJ1ZShmb3JjZSkgJiYgY2hpbGQudGFnICE9PSAnc3ZnJykpKSB7XG4gICAgICAgIGFwcGx5TlMoY2hpbGQsIG5zLCBmb3JjZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8vIHJlZiAjNTMxOFxuLy8gbmVjZXNzYXJ5IHRvIGVuc3VyZSBwYXJlbnQgcmUtcmVuZGVyIHdoZW4gZGVlcCBiaW5kaW5ncyBsaWtlIDpzdHlsZSBhbmRcbi8vIDpjbGFzcyBhcmUgdXNlZCBvbiBzbG90IG5vZGVzXG5mdW5jdGlvbiByZWdpc3RlckRlZXBCaW5kaW5ncyAoZGF0YSkge1xuICBpZiAoaXNPYmplY3QoZGF0YS5zdHlsZSkpIHtcbiAgICB0cmF2ZXJzZShkYXRhLnN0eWxlKTtcbiAgfVxuICBpZiAoaXNPYmplY3QoZGF0YS5jbGFzcykpIHtcbiAgICB0cmF2ZXJzZShkYXRhLmNsYXNzKTtcbiAgfVxufVxuXG4vKiAgKi9cblxuZnVuY3Rpb24gaW5pdFJlbmRlciAodm0pIHtcbiAgdm0uX3Zub2RlID0gbnVsbDsgLy8gdGhlIHJvb3Qgb2YgdGhlIGNoaWxkIHRyZWVcbiAgdm0uX3N0YXRpY1RyZWVzID0gbnVsbDsgLy8gdi1vbmNlIGNhY2hlZCB0cmVlc1xuICB2YXIgb3B0aW9ucyA9IHZtLiRvcHRpb25zO1xuICB2YXIgcGFyZW50Vm5vZGUgPSB2bS4kdm5vZGUgPSBvcHRpb25zLl9wYXJlbnRWbm9kZTsgLy8gdGhlIHBsYWNlaG9sZGVyIG5vZGUgaW4gcGFyZW50IHRyZWVcbiAgdmFyIHJlbmRlckNvbnRleHQgPSBwYXJlbnRWbm9kZSAmJiBwYXJlbnRWbm9kZS5jb250ZXh0O1xuICB2bS4kc2xvdHMgPSByZXNvbHZlU2xvdHMob3B0aW9ucy5fcmVuZGVyQ2hpbGRyZW4sIHJlbmRlckNvbnRleHQpO1xuICB2bS4kc2NvcGVkU2xvdHMgPSBlbXB0eU9iamVjdDtcbiAgLy8gYmluZCB0aGUgY3JlYXRlRWxlbWVudCBmbiB0byB0aGlzIGluc3RhbmNlXG4gIC8vIHNvIHRoYXQgd2UgZ2V0IHByb3BlciByZW5kZXIgY29udGV4dCBpbnNpZGUgaXQuXG4gIC8vIGFyZ3Mgb3JkZXI6IHRhZywgZGF0YSwgY2hpbGRyZW4sIG5vcm1hbGl6YXRpb25UeXBlLCBhbHdheXNOb3JtYWxpemVcbiAgLy8gaW50ZXJuYWwgdmVyc2lvbiBpcyB1c2VkIGJ5IHJlbmRlciBmdW5jdGlvbnMgY29tcGlsZWQgZnJvbSB0ZW1wbGF0ZXNcbiAgdm0uX2MgPSBmdW5jdGlvbiAoYSwgYiwgYywgZCkgeyByZXR1cm4gY3JlYXRlRWxlbWVudCh2bSwgYSwgYiwgYywgZCwgZmFsc2UpOyB9O1xuICAvLyBub3JtYWxpemF0aW9uIGlzIGFsd2F5cyBhcHBsaWVkIGZvciB0aGUgcHVibGljIHZlcnNpb24sIHVzZWQgaW5cbiAgLy8gdXNlci13cml0dGVuIHJlbmRlciBmdW5jdGlvbnMuXG4gIHZtLiRjcmVhdGVFbGVtZW50ID0gZnVuY3Rpb24gKGEsIGIsIGMsIGQpIHsgcmV0dXJuIGNyZWF0ZUVsZW1lbnQodm0sIGEsIGIsIGMsIGQsIHRydWUpOyB9O1xuXG4gIC8vICRhdHRycyAmICRsaXN0ZW5lcnMgYXJlIGV4cG9zZWQgZm9yIGVhc2llciBIT0MgY3JlYXRpb24uXG4gIC8vIHRoZXkgbmVlZCB0byBiZSByZWFjdGl2ZSBzbyB0aGF0IEhPQ3MgdXNpbmcgdGhlbSBhcmUgYWx3YXlzIHVwZGF0ZWRcbiAgdmFyIHBhcmVudERhdGEgPSBwYXJlbnRWbm9kZSAmJiBwYXJlbnRWbm9kZS5kYXRhO1xuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgZGVmaW5lUmVhY3RpdmUkJDEodm0sICckYXR0cnMnLCBwYXJlbnREYXRhICYmIHBhcmVudERhdGEuYXR0cnMgfHwgZW1wdHlPYmplY3QsIGZ1bmN0aW9uICgpIHtcbiAgICAgICFpc1VwZGF0aW5nQ2hpbGRDb21wb25lbnQgJiYgd2FybihcIiRhdHRycyBpcyByZWFkb25seS5cIiwgdm0pO1xuICAgIH0sIHRydWUpO1xuICAgIGRlZmluZVJlYWN0aXZlJCQxKHZtLCAnJGxpc3RlbmVycycsIG9wdGlvbnMuX3BhcmVudExpc3RlbmVycyB8fCBlbXB0eU9iamVjdCwgZnVuY3Rpb24gKCkge1xuICAgICAgIWlzVXBkYXRpbmdDaGlsZENvbXBvbmVudCAmJiB3YXJuKFwiJGxpc3RlbmVycyBpcyByZWFkb25seS5cIiwgdm0pO1xuICAgIH0sIHRydWUpO1xuICB9IGVsc2Uge1xuICAgIGRlZmluZVJlYWN0aXZlJCQxKHZtLCAnJGF0dHJzJywgcGFyZW50RGF0YSAmJiBwYXJlbnREYXRhLmF0dHJzIHx8IGVtcHR5T2JqZWN0LCBudWxsLCB0cnVlKTtcbiAgICBkZWZpbmVSZWFjdGl2ZSQkMSh2bSwgJyRsaXN0ZW5lcnMnLCBvcHRpb25zLl9wYXJlbnRMaXN0ZW5lcnMgfHwgZW1wdHlPYmplY3QsIG51bGwsIHRydWUpO1xuICB9XG59XG5cbnZhciBjdXJyZW50UmVuZGVyaW5nSW5zdGFuY2UgPSBudWxsO1xuXG5mdW5jdGlvbiByZW5kZXJNaXhpbiAoVnVlKSB7XG4gIC8vIGluc3RhbGwgcnVudGltZSBjb252ZW5pZW5jZSBoZWxwZXJzXG4gIGluc3RhbGxSZW5kZXJIZWxwZXJzKFZ1ZS5wcm90b3R5cGUpO1xuXG4gIFZ1ZS5wcm90b3R5cGUuJG5leHRUaWNrID0gZnVuY3Rpb24gKGZuKSB7XG4gICAgcmV0dXJuIG5leHRUaWNrKGZuLCB0aGlzKVxuICB9O1xuXG4gIFZ1ZS5wcm90b3R5cGUuX3JlbmRlciA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgdm0gPSB0aGlzO1xuICAgIHZhciByZWYgPSB2bS4kb3B0aW9ucztcbiAgICB2YXIgcmVuZGVyID0gcmVmLnJlbmRlcjtcbiAgICB2YXIgX3BhcmVudFZub2RlID0gcmVmLl9wYXJlbnRWbm9kZTtcblxuICAgIGlmIChfcGFyZW50Vm5vZGUpIHtcbiAgICAgIHZtLiRzY29wZWRTbG90cyA9IG5vcm1hbGl6ZVNjb3BlZFNsb3RzKFxuICAgICAgICBfcGFyZW50Vm5vZGUuZGF0YS5zY29wZWRTbG90cyxcbiAgICAgICAgdm0uJHNsb3RzLFxuICAgICAgICB2bS4kc2NvcGVkU2xvdHNcbiAgICAgICk7XG4gICAgfVxuXG4gICAgLy8gc2V0IHBhcmVudCB2bm9kZS4gdGhpcyBhbGxvd3MgcmVuZGVyIGZ1bmN0aW9ucyB0byBoYXZlIGFjY2Vzc1xuICAgIC8vIHRvIHRoZSBkYXRhIG9uIHRoZSBwbGFjZWhvbGRlciBub2RlLlxuICAgIHZtLiR2bm9kZSA9IF9wYXJlbnRWbm9kZTtcbiAgICAvLyByZW5kZXIgc2VsZlxuICAgIHZhciB2bm9kZTtcbiAgICB0cnkge1xuICAgICAgLy8gVGhlcmUncyBubyBuZWVkIHRvIG1haW50YWluIGEgc3RhY2sgYmVjYXVlcyBhbGwgcmVuZGVyIGZucyBhcmUgY2FsbGVkXG4gICAgICAvLyBzZXBhcmF0ZWx5IGZyb20gb25lIGFub3RoZXIuIE5lc3RlZCBjb21wb25lbnQncyByZW5kZXIgZm5zIGFyZSBjYWxsZWRcbiAgICAgIC8vIHdoZW4gcGFyZW50IGNvbXBvbmVudCBpcyBwYXRjaGVkLlxuICAgICAgY3VycmVudFJlbmRlcmluZ0luc3RhbmNlID0gdm07XG4gICAgICB2bm9kZSA9IHJlbmRlci5jYWxsKHZtLl9yZW5kZXJQcm94eSwgdm0uJGNyZWF0ZUVsZW1lbnQpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGhhbmRsZUVycm9yKGUsIHZtLCBcInJlbmRlclwiKTtcbiAgICAgIC8vIHJldHVybiBlcnJvciByZW5kZXIgcmVzdWx0LFxuICAgICAgLy8gb3IgcHJldmlvdXMgdm5vZGUgdG8gcHJldmVudCByZW5kZXIgZXJyb3IgY2F1c2luZyBibGFuayBjb21wb25lbnRcbiAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB2bS4kb3B0aW9ucy5yZW5kZXJFcnJvcikge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIHZub2RlID0gdm0uJG9wdGlvbnMucmVuZGVyRXJyb3IuY2FsbCh2bS5fcmVuZGVyUHJveHksIHZtLiRjcmVhdGVFbGVtZW50LCBlKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIGhhbmRsZUVycm9yKGUsIHZtLCBcInJlbmRlckVycm9yXCIpO1xuICAgICAgICAgIHZub2RlID0gdm0uX3Zub2RlO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2bm9kZSA9IHZtLl92bm9kZTtcbiAgICAgIH1cbiAgICB9IGZpbmFsbHkge1xuICAgICAgY3VycmVudFJlbmRlcmluZ0luc3RhbmNlID0gbnVsbDtcbiAgICB9XG4gICAgLy8gaWYgdGhlIHJldHVybmVkIGFycmF5IGNvbnRhaW5zIG9ubHkgYSBzaW5nbGUgbm9kZSwgYWxsb3cgaXRcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2bm9kZSkgJiYgdm5vZGUubGVuZ3RoID09PSAxKSB7XG4gICAgICB2bm9kZSA9IHZub2RlWzBdO1xuICAgIH1cbiAgICAvLyByZXR1cm4gZW1wdHkgdm5vZGUgaW4gY2FzZSB0aGUgcmVuZGVyIGZ1bmN0aW9uIGVycm9yZWQgb3V0XG4gICAgaWYgKCEodm5vZGUgaW5zdGFuY2VvZiBWTm9kZSkpIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIEFycmF5LmlzQXJyYXkodm5vZGUpKSB7XG4gICAgICAgIHdhcm4oXG4gICAgICAgICAgJ011bHRpcGxlIHJvb3Qgbm9kZXMgcmV0dXJuZWQgZnJvbSByZW5kZXIgZnVuY3Rpb24uIFJlbmRlciBmdW5jdGlvbiAnICtcbiAgICAgICAgICAnc2hvdWxkIHJldHVybiBhIHNpbmdsZSByb290IG5vZGUuJyxcbiAgICAgICAgICB2bVxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgdm5vZGUgPSBjcmVhdGVFbXB0eVZOb2RlKCk7XG4gICAgfVxuICAgIC8vIHNldCBwYXJlbnRcbiAgICB2bm9kZS5wYXJlbnQgPSBfcGFyZW50Vm5vZGU7XG4gICAgcmV0dXJuIHZub2RlXG4gIH07XG59XG5cbi8qICAqL1xuXG5mdW5jdGlvbiBlbnN1cmVDdG9yIChjb21wLCBiYXNlKSB7XG4gIGlmIChcbiAgICBjb21wLl9fZXNNb2R1bGUgfHxcbiAgICAoaGFzU3ltYm9sICYmIGNvbXBbU3ltYm9sLnRvU3RyaW5nVGFnXSA9PT0gJ01vZHVsZScpXG4gICkge1xuICAgIGNvbXAgPSBjb21wLmRlZmF1bHQ7XG4gIH1cbiAgcmV0dXJuIGlzT2JqZWN0KGNvbXApXG4gICAgPyBiYXNlLmV4dGVuZChjb21wKVxuICAgIDogY29tcFxufVxuXG5mdW5jdGlvbiBjcmVhdGVBc3luY1BsYWNlaG9sZGVyIChcbiAgZmFjdG9yeSxcbiAgZGF0YSxcbiAgY29udGV4dCxcbiAgY2hpbGRyZW4sXG4gIHRhZ1xuKSB7XG4gIHZhciBub2RlID0gY3JlYXRlRW1wdHlWTm9kZSgpO1xuICBub2RlLmFzeW5jRmFjdG9yeSA9IGZhY3Rvcnk7XG4gIG5vZGUuYXN5bmNNZXRhID0geyBkYXRhOiBkYXRhLCBjb250ZXh0OiBjb250ZXh0LCBjaGlsZHJlbjogY2hpbGRyZW4sIHRhZzogdGFnIH07XG4gIHJldHVybiBub2RlXG59XG5cbmZ1bmN0aW9uIHJlc29sdmVBc3luY0NvbXBvbmVudCAoXG4gIGZhY3RvcnksXG4gIGJhc2VDdG9yXG4pIHtcbiAgaWYgKGlzVHJ1ZShmYWN0b3J5LmVycm9yKSAmJiBpc0RlZihmYWN0b3J5LmVycm9yQ29tcCkpIHtcbiAgICByZXR1cm4gZmFjdG9yeS5lcnJvckNvbXBcbiAgfVxuXG4gIGlmIChpc0RlZihmYWN0b3J5LnJlc29sdmVkKSkge1xuICAgIHJldHVybiBmYWN0b3J5LnJlc29sdmVkXG4gIH1cblxuICB2YXIgb3duZXIgPSBjdXJyZW50UmVuZGVyaW5nSW5zdGFuY2U7XG4gIGlmIChvd25lciAmJiBpc0RlZihmYWN0b3J5Lm93bmVycykgJiYgZmFjdG9yeS5vd25lcnMuaW5kZXhPZihvd25lcikgPT09IC0xKSB7XG4gICAgLy8gYWxyZWFkeSBwZW5kaW5nXG4gICAgZmFjdG9yeS5vd25lcnMucHVzaChvd25lcik7XG4gIH1cblxuICBpZiAoaXNUcnVlKGZhY3RvcnkubG9hZGluZykgJiYgaXNEZWYoZmFjdG9yeS5sb2FkaW5nQ29tcCkpIHtcbiAgICByZXR1cm4gZmFjdG9yeS5sb2FkaW5nQ29tcFxuICB9XG5cbiAgaWYgKG93bmVyICYmICFpc0RlZihmYWN0b3J5Lm93bmVycykpIHtcbiAgICB2YXIgb3duZXJzID0gZmFjdG9yeS5vd25lcnMgPSBbb3duZXJdO1xuICAgIHZhciBzeW5jID0gdHJ1ZTtcbiAgICB2YXIgdGltZXJMb2FkaW5nID0gbnVsbDtcbiAgICB2YXIgdGltZXJUaW1lb3V0ID0gbnVsbFxuXG4gICAgOyhvd25lcikuJG9uKCdob29rOmRlc3Ryb3llZCcsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlbW92ZShvd25lcnMsIG93bmVyKTsgfSk7XG5cbiAgICB2YXIgZm9yY2VSZW5kZXIgPSBmdW5jdGlvbiAocmVuZGVyQ29tcGxldGVkKSB7XG4gICAgICBmb3IgKHZhciBpID0gMCwgbCA9IG93bmVycy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgKG93bmVyc1tpXSkuJGZvcmNlVXBkYXRlKCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChyZW5kZXJDb21wbGV0ZWQpIHtcbiAgICAgICAgb3duZXJzLmxlbmd0aCA9IDA7XG4gICAgICAgIGlmICh0aW1lckxvYWRpbmcgIT09IG51bGwpIHtcbiAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXJMb2FkaW5nKTtcbiAgICAgICAgICB0aW1lckxvYWRpbmcgPSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aW1lclRpbWVvdXQgIT09IG51bGwpIHtcbiAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXJUaW1lb3V0KTtcbiAgICAgICAgICB0aW1lclRpbWVvdXQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICAgIHZhciByZXNvbHZlID0gb25jZShmdW5jdGlvbiAocmVzKSB7XG4gICAgICAvLyBjYWNoZSByZXNvbHZlZFxuICAgICAgZmFjdG9yeS5yZXNvbHZlZCA9IGVuc3VyZUN0b3IocmVzLCBiYXNlQ3Rvcik7XG4gICAgICAvLyBpbnZva2UgY2FsbGJhY2tzIG9ubHkgaWYgdGhpcyBpcyBub3QgYSBzeW5jaHJvbm91cyByZXNvbHZlXG4gICAgICAvLyAoYXN5bmMgcmVzb2x2ZXMgYXJlIHNoaW1tZWQgYXMgc3luY2hyb25vdXMgZHVyaW5nIFNTUilcbiAgICAgIGlmICghc3luYykge1xuICAgICAgICBmb3JjZVJlbmRlcih0cnVlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG93bmVycy5sZW5ndGggPSAwO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgdmFyIHJlamVjdCA9IG9uY2UoZnVuY3Rpb24gKHJlYXNvbikge1xuICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB3YXJuKFxuICAgICAgICBcIkZhaWxlZCB0byByZXNvbHZlIGFzeW5jIGNvbXBvbmVudDogXCIgKyAoU3RyaW5nKGZhY3RvcnkpKSArXG4gICAgICAgIChyZWFzb24gPyAoXCJcXG5SZWFzb246IFwiICsgcmVhc29uKSA6ICcnKVxuICAgICAgKTtcbiAgICAgIGlmIChpc0RlZihmYWN0b3J5LmVycm9yQ29tcCkpIHtcbiAgICAgICAgZmFjdG9yeS5lcnJvciA9IHRydWU7XG4gICAgICAgIGZvcmNlUmVuZGVyKHRydWUpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgdmFyIHJlcyA9IGZhY3RvcnkocmVzb2x2ZSwgcmVqZWN0KTtcblxuICAgIGlmIChpc09iamVjdChyZXMpKSB7XG4gICAgICBpZiAoaXNQcm9taXNlKHJlcykpIHtcbiAgICAgICAgLy8gKCkgPT4gUHJvbWlzZVxuICAgICAgICBpZiAoaXNVbmRlZihmYWN0b3J5LnJlc29sdmVkKSkge1xuICAgICAgICAgIHJlcy50aGVuKHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoaXNQcm9taXNlKHJlcy5jb21wb25lbnQpKSB7XG4gICAgICAgIHJlcy5jb21wb25lbnQudGhlbihyZXNvbHZlLCByZWplY3QpO1xuXG4gICAgICAgIGlmIChpc0RlZihyZXMuZXJyb3IpKSB7XG4gICAgICAgICAgZmFjdG9yeS5lcnJvckNvbXAgPSBlbnN1cmVDdG9yKHJlcy5lcnJvciwgYmFzZUN0b3IpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGlzRGVmKHJlcy5sb2FkaW5nKSkge1xuICAgICAgICAgIGZhY3RvcnkubG9hZGluZ0NvbXAgPSBlbnN1cmVDdG9yKHJlcy5sb2FkaW5nLCBiYXNlQ3Rvcik7XG4gICAgICAgICAgaWYgKHJlcy5kZWxheSA9PT0gMCkge1xuICAgICAgICAgICAgZmFjdG9yeS5sb2FkaW5nID0gdHJ1ZTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGltZXJMb2FkaW5nID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIHRpbWVyTG9hZGluZyA9IG51bGw7XG4gICAgICAgICAgICAgIGlmIChpc1VuZGVmKGZhY3RvcnkucmVzb2x2ZWQpICYmIGlzVW5kZWYoZmFjdG9yeS5lcnJvcikpIHtcbiAgICAgICAgICAgICAgICBmYWN0b3J5LmxvYWRpbmcgPSB0cnVlO1xuICAgICAgICAgICAgICAgIGZvcmNlUmVuZGVyKGZhbHNlKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgcmVzLmRlbGF5IHx8IDIwMCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGlzRGVmKHJlcy50aW1lb3V0KSkge1xuICAgICAgICAgIHRpbWVyVGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdGltZXJUaW1lb3V0ID0gbnVsbDtcbiAgICAgICAgICAgIGlmIChpc1VuZGVmKGZhY3RvcnkucmVzb2x2ZWQpKSB7XG4gICAgICAgICAgICAgIHJlamVjdChcbiAgICAgICAgICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nXG4gICAgICAgICAgICAgICAgICA/IChcInRpbWVvdXQgKFwiICsgKHJlcy50aW1lb3V0KSArIFwibXMpXCIpXG4gICAgICAgICAgICAgICAgICA6IG51bGxcbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LCByZXMudGltZW91dCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBzeW5jID0gZmFsc2U7XG4gICAgLy8gcmV0dXJuIGluIGNhc2UgcmVzb2x2ZWQgc3luY2hyb25vdXNseVxuICAgIHJldHVybiBmYWN0b3J5LmxvYWRpbmdcbiAgICAgID8gZmFjdG9yeS5sb2FkaW5nQ29tcFxuICAgICAgOiBmYWN0b3J5LnJlc29sdmVkXG4gIH1cbn1cblxuLyogICovXG5cbmZ1bmN0aW9uIGlzQXN5bmNQbGFjZWhvbGRlciAobm9kZSkge1xuICByZXR1cm4gbm9kZS5pc0NvbW1lbnQgJiYgbm9kZS5hc3luY0ZhY3Rvcnlcbn1cblxuLyogICovXG5cbmZ1bmN0aW9uIGdldEZpcnN0Q29tcG9uZW50Q2hpbGQgKGNoaWxkcmVuKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGNoaWxkcmVuKSkge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBjID0gY2hpbGRyZW5baV07XG4gICAgICBpZiAoaXNEZWYoYykgJiYgKGlzRGVmKGMuY29tcG9uZW50T3B0aW9ucykgfHwgaXNBc3luY1BsYWNlaG9sZGVyKGMpKSkge1xuICAgICAgICByZXR1cm4gY1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vKiAgKi9cblxuLyogICovXG5cbmZ1bmN0aW9uIGluaXRFdmVudHMgKHZtKSB7XG4gIHZtLl9ldmVudHMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICB2bS5faGFzSG9va0V2ZW50ID0gZmFsc2U7XG4gIC8vIGluaXQgcGFyZW50IGF0dGFjaGVkIGV2ZW50c1xuICB2YXIgbGlzdGVuZXJzID0gdm0uJG9wdGlvbnMuX3BhcmVudExpc3RlbmVycztcbiAgaWYgKGxpc3RlbmVycykge1xuICAgIHVwZGF0ZUNvbXBvbmVudExpc3RlbmVycyh2bSwgbGlzdGVuZXJzKTtcbiAgfVxufVxuXG52YXIgdGFyZ2V0O1xuXG5mdW5jdGlvbiBhZGQgKGV2ZW50LCBmbikge1xuICB0YXJnZXQuJG9uKGV2ZW50LCBmbik7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZSQxIChldmVudCwgZm4pIHtcbiAgdGFyZ2V0LiRvZmYoZXZlbnQsIGZuKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlT25jZUhhbmRsZXIgKGV2ZW50LCBmbikge1xuICB2YXIgX3RhcmdldCA9IHRhcmdldDtcbiAgcmV0dXJuIGZ1bmN0aW9uIG9uY2VIYW5kbGVyICgpIHtcbiAgICB2YXIgcmVzID0gZm4uYXBwbHkobnVsbCwgYXJndW1lbnRzKTtcbiAgICBpZiAocmVzICE9PSBudWxsKSB7XG4gICAgICBfdGFyZ2V0LiRvZmYoZXZlbnQsIG9uY2VIYW5kbGVyKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gdXBkYXRlQ29tcG9uZW50TGlzdGVuZXJzIChcbiAgdm0sXG4gIGxpc3RlbmVycyxcbiAgb2xkTGlzdGVuZXJzXG4pIHtcbiAgdGFyZ2V0ID0gdm07XG4gIHVwZGF0ZUxpc3RlbmVycyhsaXN0ZW5lcnMsIG9sZExpc3RlbmVycyB8fCB7fSwgYWRkLCByZW1vdmUkMSwgY3JlYXRlT25jZUhhbmRsZXIsIHZtKTtcbiAgdGFyZ2V0ID0gdW5kZWZpbmVkO1xufVxuXG5mdW5jdGlvbiBldmVudHNNaXhpbiAoVnVlKSB7XG4gIHZhciBob29rUkUgPSAvXmhvb2s6LztcbiAgVnVlLnByb3RvdHlwZS4kb24gPSBmdW5jdGlvbiAoZXZlbnQsIGZuKSB7XG4gICAgdmFyIHZtID0gdGhpcztcbiAgICBpZiAoQXJyYXkuaXNBcnJheShldmVudCkpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gZXZlbnQubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIHZtLiRvbihldmVudFtpXSwgZm4pO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAodm0uX2V2ZW50c1tldmVudF0gfHwgKHZtLl9ldmVudHNbZXZlbnRdID0gW10pKS5wdXNoKGZuKTtcbiAgICAgIC8vIG9wdGltaXplIGhvb2s6ZXZlbnQgY29zdCBieSB1c2luZyBhIGJvb2xlYW4gZmxhZyBtYXJrZWQgYXQgcmVnaXN0cmF0aW9uXG4gICAgICAvLyBpbnN0ZWFkIG9mIGEgaGFzaCBsb29rdXBcbiAgICAgIGlmIChob29rUkUudGVzdChldmVudCkpIHtcbiAgICAgICAgdm0uX2hhc0hvb2tFdmVudCA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB2bVxuICB9O1xuXG4gIFZ1ZS5wcm90b3R5cGUuJG9uY2UgPSBmdW5jdGlvbiAoZXZlbnQsIGZuKSB7XG4gICAgdmFyIHZtID0gdGhpcztcbiAgICBmdW5jdGlvbiBvbiAoKSB7XG4gICAgICB2bS4kb2ZmKGV2ZW50LCBvbik7XG4gICAgICBmbi5hcHBseSh2bSwgYXJndW1lbnRzKTtcbiAgICB9XG4gICAgb24uZm4gPSBmbjtcbiAgICB2bS4kb24oZXZlbnQsIG9uKTtcbiAgICByZXR1cm4gdm1cbiAgfTtcblxuICBWdWUucHJvdG90eXBlLiRvZmYgPSBmdW5jdGlvbiAoZXZlbnQsIGZuKSB7XG4gICAgdmFyIHZtID0gdGhpcztcbiAgICAvLyBhbGxcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgIHZtLl9ldmVudHMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgICAgcmV0dXJuIHZtXG4gICAgfVxuICAgIC8vIGFycmF5IG9mIGV2ZW50c1xuICAgIGlmIChBcnJheS5pc0FycmF5KGV2ZW50KSkge1xuICAgICAgZm9yICh2YXIgaSQxID0gMCwgbCA9IGV2ZW50Lmxlbmd0aDsgaSQxIDwgbDsgaSQxKyspIHtcbiAgICAgICAgdm0uJG9mZihldmVudFtpJDFdLCBmbik7XG4gICAgICB9XG4gICAgICByZXR1cm4gdm1cbiAgICB9XG4gICAgLy8gc3BlY2lmaWMgZXZlbnRcbiAgICB2YXIgY2JzID0gdm0uX2V2ZW50c1tldmVudF07XG4gICAgaWYgKCFjYnMpIHtcbiAgICAgIHJldHVybiB2bVxuICAgIH1cbiAgICBpZiAoIWZuKSB7XG4gICAgICB2bS5fZXZlbnRzW2V2ZW50XSA9IG51bGw7XG4gICAgICByZXR1cm4gdm1cbiAgICB9XG4gICAgLy8gc3BlY2lmaWMgaGFuZGxlclxuICAgIHZhciBjYjtcbiAgICB2YXIgaSA9IGNicy5sZW5ndGg7XG4gICAgd2hpbGUgKGktLSkge1xuICAgICAgY2IgPSBjYnNbaV07XG4gICAgICBpZiAoY2IgPT09IGZuIHx8IGNiLmZuID09PSBmbikge1xuICAgICAgICBjYnMuc3BsaWNlKGksIDEpO1xuICAgICAgICBicmVha1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdm1cbiAgfTtcblxuICBWdWUucHJvdG90eXBlLiRlbWl0ID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgdmFyIHZtID0gdGhpcztcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgdmFyIGxvd2VyQ2FzZUV2ZW50ID0gZXZlbnQudG9Mb3dlckNhc2UoKTtcbiAgICAgIGlmIChsb3dlckNhc2VFdmVudCAhPT0gZXZlbnQgJiYgdm0uX2V2ZW50c1tsb3dlckNhc2VFdmVudF0pIHtcbiAgICAgICAgdGlwKFxuICAgICAgICAgIFwiRXZlbnQgXFxcIlwiICsgbG93ZXJDYXNlRXZlbnQgKyBcIlxcXCIgaXMgZW1pdHRlZCBpbiBjb21wb25lbnQgXCIgK1xuICAgICAgICAgIChmb3JtYXRDb21wb25lbnROYW1lKHZtKSkgKyBcIiBidXQgdGhlIGhhbmRsZXIgaXMgcmVnaXN0ZXJlZCBmb3IgXFxcIlwiICsgZXZlbnQgKyBcIlxcXCIuIFwiICtcbiAgICAgICAgICBcIk5vdGUgdGhhdCBIVE1MIGF0dHJpYnV0ZXMgYXJlIGNhc2UtaW5zZW5zaXRpdmUgYW5kIHlvdSBjYW5ub3QgdXNlIFwiICtcbiAgICAgICAgICBcInYtb24gdG8gbGlzdGVuIHRvIGNhbWVsQ2FzZSBldmVudHMgd2hlbiB1c2luZyBpbi1ET00gdGVtcGxhdGVzLiBcIiArXG4gICAgICAgICAgXCJZb3Ugc2hvdWxkIHByb2JhYmx5IHVzZSBcXFwiXCIgKyAoaHlwaGVuYXRlKGV2ZW50KSkgKyBcIlxcXCIgaW5zdGVhZCBvZiBcXFwiXCIgKyBldmVudCArIFwiXFxcIi5cIlxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cbiAgICB2YXIgY2JzID0gdm0uX2V2ZW50c1tldmVudF07XG4gICAgaWYgKGNicykge1xuICAgICAgY2JzID0gY2JzLmxlbmd0aCA+IDEgPyB0b0FycmF5KGNicykgOiBjYnM7XG4gICAgICB2YXIgYXJncyA9IHRvQXJyYXkoYXJndW1lbnRzLCAxKTtcbiAgICAgIHZhciBpbmZvID0gXCJldmVudCBoYW5kbGVyIGZvciBcXFwiXCIgKyBldmVudCArIFwiXFxcIlwiO1xuICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBjYnMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGludm9rZVdpdGhFcnJvckhhbmRsaW5nKGNic1tpXSwgdm0sIGFyZ3MsIHZtLCBpbmZvKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHZtXG4gIH07XG59XG5cbi8qICAqL1xuXG52YXIgYWN0aXZlSW5zdGFuY2UgPSBudWxsO1xudmFyIGlzVXBkYXRpbmdDaGlsZENvbXBvbmVudCA9IGZhbHNlO1xuXG5mdW5jdGlvbiBzZXRBY3RpdmVJbnN0YW5jZSh2bSkge1xuICB2YXIgcHJldkFjdGl2ZUluc3RhbmNlID0gYWN0aXZlSW5zdGFuY2U7XG4gIGFjdGl2ZUluc3RhbmNlID0gdm07XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgYWN0aXZlSW5zdGFuY2UgPSBwcmV2QWN0aXZlSW5zdGFuY2U7XG4gIH1cbn1cblxuZnVuY3Rpb24gaW5pdExpZmVjeWNsZSAodm0pIHtcbiAgdmFyIG9wdGlvbnMgPSB2bS4kb3B0aW9ucztcblxuICAvLyBsb2NhdGUgZmlyc3Qgbm9uLWFic3RyYWN0IHBhcmVudFxuICB2YXIgcGFyZW50ID0gb3B0aW9ucy5wYXJlbnQ7XG4gIGlmIChwYXJlbnQgJiYgIW9wdGlvbnMuYWJzdHJhY3QpIHtcbiAgICB3aGlsZSAocGFyZW50LiRvcHRpb25zLmFic3RyYWN0ICYmIHBhcmVudC4kcGFyZW50KSB7XG4gICAgICBwYXJlbnQgPSBwYXJlbnQuJHBhcmVudDtcbiAgICB9XG4gICAgcGFyZW50LiRjaGlsZHJlbi5wdXNoKHZtKTtcbiAgfVxuXG4gIHZtLiRwYXJlbnQgPSBwYXJlbnQ7XG4gIHZtLiRyb290ID0gcGFyZW50ID8gcGFyZW50LiRyb290IDogdm07XG5cbiAgdm0uJGNoaWxkcmVuID0gW107XG4gIHZtLiRyZWZzID0ge307XG5cbiAgdm0uX3dhdGNoZXIgPSBudWxsO1xuICB2bS5faW5hY3RpdmUgPSBudWxsO1xuICB2bS5fZGlyZWN0SW5hY3RpdmUgPSBmYWxzZTtcbiAgdm0uX2lzTW91bnRlZCA9IGZhbHNlO1xuICB2bS5faXNEZXN0cm95ZWQgPSBmYWxzZTtcbiAgdm0uX2lzQmVpbmdEZXN0cm95ZWQgPSBmYWxzZTtcbn1cblxuZnVuY3Rpb24gbGlmZWN5Y2xlTWl4aW4gKFZ1ZSkge1xuICBWdWUucHJvdG90eXBlLl91cGRhdGUgPSBmdW5jdGlvbiAodm5vZGUsIGh5ZHJhdGluZykge1xuICAgIHZhciB2bSA9IHRoaXM7XG4gICAgdmFyIHByZXZFbCA9IHZtLiRlbDtcbiAgICB2YXIgcHJldlZub2RlID0gdm0uX3Zub2RlO1xuICAgIHZhciByZXN0b3JlQWN0aXZlSW5zdGFuY2UgPSBzZXRBY3RpdmVJbnN0YW5jZSh2bSk7XG4gICAgdm0uX3Zub2RlID0gdm5vZGU7XG4gICAgLy8gVnVlLnByb3RvdHlwZS5fX3BhdGNoX18gaXMgaW5qZWN0ZWQgaW4gZW50cnkgcG9pbnRzXG4gICAgLy8gYmFzZWQgb24gdGhlIHJlbmRlcmluZyBiYWNrZW5kIHVzZWQuXG4gICAgaWYgKCFwcmV2Vm5vZGUpIHtcbiAgICAgIC8vIGluaXRpYWwgcmVuZGVyXG4gICAgICB2bS4kZWwgPSB2bS5fX3BhdGNoX18odm0uJGVsLCB2bm9kZSwgaHlkcmF0aW5nLCBmYWxzZSAvKiByZW1vdmVPbmx5ICovKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gdXBkYXRlc1xuICAgICAgdm0uJGVsID0gdm0uX19wYXRjaF9fKHByZXZWbm9kZSwgdm5vZGUpO1xuICAgIH1cbiAgICByZXN0b3JlQWN0aXZlSW5zdGFuY2UoKTtcbiAgICAvLyB1cGRhdGUgX192dWVfXyByZWZlcmVuY2VcbiAgICBpZiAocHJldkVsKSB7XG4gICAgICBwcmV2RWwuX192dWVfXyA9IG51bGw7XG4gICAgfVxuICAgIGlmICh2bS4kZWwpIHtcbiAgICAgIHZtLiRlbC5fX3Z1ZV9fID0gdm07XG4gICAgfVxuICAgIC8vIGlmIHBhcmVudCBpcyBhbiBIT0MsIHVwZGF0ZSBpdHMgJGVsIGFzIHdlbGxcbiAgICBpZiAodm0uJHZub2RlICYmIHZtLiRwYXJlbnQgJiYgdm0uJHZub2RlID09PSB2bS4kcGFyZW50Ll92bm9kZSkge1xuICAgICAgdm0uJHBhcmVudC4kZWwgPSB2bS4kZWw7XG4gICAgfVxuICAgIC8vIHVwZGF0ZWQgaG9vayBpcyBjYWxsZWQgYnkgdGhlIHNjaGVkdWxlciB0byBlbnN1cmUgdGhhdCBjaGlsZHJlbiBhcmVcbiAgICAvLyB1cGRhdGVkIGluIGEgcGFyZW50J3MgdXBkYXRlZCBob29rLlxuICB9O1xuXG4gIFZ1ZS5wcm90b3R5cGUuJGZvcmNlVXBkYXRlID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciB2bSA9IHRoaXM7XG4gICAgaWYgKHZtLl93YXRjaGVyKSB7XG4gICAgICB2bS5fd2F0Y2hlci51cGRhdGUoKTtcbiAgICB9XG4gIH07XG5cbiAgVnVlLnByb3RvdHlwZS4kZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgdm0gPSB0aGlzO1xuICAgIGlmICh2bS5faXNCZWluZ0Rlc3Ryb3llZCkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIGNhbGxIb29rKHZtLCAnYmVmb3JlRGVzdHJveScpO1xuICAgIHZtLl9pc0JlaW5nRGVzdHJveWVkID0gdHJ1ZTtcbiAgICAvLyByZW1vdmUgc2VsZiBmcm9tIHBhcmVudFxuICAgIHZhciBwYXJlbnQgPSB2bS4kcGFyZW50O1xuICAgIGlmIChwYXJlbnQgJiYgIXBhcmVudC5faXNCZWluZ0Rlc3Ryb3llZCAmJiAhdm0uJG9wdGlvbnMuYWJzdHJhY3QpIHtcbiAgICAgIHJlbW92ZShwYXJlbnQuJGNoaWxkcmVuLCB2bSk7XG4gICAgfVxuICAgIC8vIHRlYXJkb3duIHdhdGNoZXJzXG4gICAgaWYgKHZtLl93YXRjaGVyKSB7XG4gICAgICB2bS5fd2F0Y2hlci50ZWFyZG93bigpO1xuICAgIH1cbiAgICB2YXIgaSA9IHZtLl93YXRjaGVycy5sZW5ndGg7XG4gICAgd2hpbGUgKGktLSkge1xuICAgICAgdm0uX3dhdGNoZXJzW2ldLnRlYXJkb3duKCk7XG4gICAgfVxuICAgIC8vIHJlbW92ZSByZWZlcmVuY2UgZnJvbSBkYXRhIG9iXG4gICAgLy8gZnJvemVuIG9iamVjdCBtYXkgbm90IGhhdmUgb2JzZXJ2ZXIuXG4gICAgaWYgKHZtLl9kYXRhLl9fb2JfXykge1xuICAgICAgdm0uX2RhdGEuX19vYl9fLnZtQ291bnQtLTtcbiAgICB9XG4gICAgLy8gY2FsbCB0aGUgbGFzdCBob29rLi4uXG4gICAgdm0uX2lzRGVzdHJveWVkID0gdHJ1ZTtcbiAgICAvLyBpbnZva2UgZGVzdHJveSBob29rcyBvbiBjdXJyZW50IHJlbmRlcmVkIHRyZWVcbiAgICB2bS5fX3BhdGNoX18odm0uX3Zub2RlLCBudWxsKTtcbiAgICAvLyBmaXJlIGRlc3Ryb3llZCBob29rXG4gICAgY2FsbEhvb2sodm0sICdkZXN0cm95ZWQnKTtcbiAgICAvLyB0dXJuIG9mZiBhbGwgaW5zdGFuY2UgbGlzdGVuZXJzLlxuICAgIHZtLiRvZmYoKTtcbiAgICAvLyByZW1vdmUgX192dWVfXyByZWZlcmVuY2VcbiAgICBpZiAodm0uJGVsKSB7XG4gICAgICB2bS4kZWwuX192dWVfXyA9IG51bGw7XG4gICAgfVxuICAgIC8vIHJlbGVhc2UgY2lyY3VsYXIgcmVmZXJlbmNlICgjNjc1OSlcbiAgICBpZiAodm0uJHZub2RlKSB7XG4gICAgICB2bS4kdm5vZGUucGFyZW50ID0gbnVsbDtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIG1vdW50Q29tcG9uZW50IChcbiAgdm0sXG4gIGVsLFxuICBoeWRyYXRpbmdcbikge1xuICB2bS4kZWwgPSBlbDtcbiAgaWYgKCF2bS4kb3B0aW9ucy5yZW5kZXIpIHtcbiAgICB2bS4kb3B0aW9ucy5yZW5kZXIgPSBjcmVhdGVFbXB0eVZOb2RlO1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICAgIGlmICgodm0uJG9wdGlvbnMudGVtcGxhdGUgJiYgdm0uJG9wdGlvbnMudGVtcGxhdGUuY2hhckF0KDApICE9PSAnIycpIHx8XG4gICAgICAgIHZtLiRvcHRpb25zLmVsIHx8IGVsKSB7XG4gICAgICAgIHdhcm4oXG4gICAgICAgICAgJ1lvdSBhcmUgdXNpbmcgdGhlIHJ1bnRpbWUtb25seSBidWlsZCBvZiBWdWUgd2hlcmUgdGhlIHRlbXBsYXRlICcgK1xuICAgICAgICAgICdjb21waWxlciBpcyBub3QgYXZhaWxhYmxlLiBFaXRoZXIgcHJlLWNvbXBpbGUgdGhlIHRlbXBsYXRlcyBpbnRvICcgK1xuICAgICAgICAgICdyZW5kZXIgZnVuY3Rpb25zLCBvciB1c2UgdGhlIGNvbXBpbGVyLWluY2x1ZGVkIGJ1aWxkLicsXG4gICAgICAgICAgdm1cbiAgICAgICAgKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdhcm4oXG4gICAgICAgICAgJ0ZhaWxlZCB0byBtb3VudCBjb21wb25lbnQ6IHRlbXBsYXRlIG9yIHJlbmRlciBmdW5jdGlvbiBub3QgZGVmaW5lZC4nLFxuICAgICAgICAgIHZtXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGNhbGxIb29rKHZtLCAnYmVmb3JlTW91bnQnKTtcblxuICB2YXIgdXBkYXRlQ29tcG9uZW50O1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgY29uZmlnLnBlcmZvcm1hbmNlICYmIG1hcmspIHtcbiAgICB1cGRhdGVDb21wb25lbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgbmFtZSA9IHZtLl9uYW1lO1xuICAgICAgdmFyIGlkID0gdm0uX3VpZDtcbiAgICAgIHZhciBzdGFydFRhZyA9IFwidnVlLXBlcmYtc3RhcnQ6XCIgKyBpZDtcbiAgICAgIHZhciBlbmRUYWcgPSBcInZ1ZS1wZXJmLWVuZDpcIiArIGlkO1xuXG4gICAgICBtYXJrKHN0YXJ0VGFnKTtcbiAgICAgIHZhciB2bm9kZSA9IHZtLl9yZW5kZXIoKTtcbiAgICAgIG1hcmsoZW5kVGFnKTtcbiAgICAgIG1lYXN1cmUoKFwidnVlIFwiICsgbmFtZSArIFwiIHJlbmRlclwiKSwgc3RhcnRUYWcsIGVuZFRhZyk7XG5cbiAgICAgIG1hcmsoc3RhcnRUYWcpO1xuICAgICAgdm0uX3VwZGF0ZSh2bm9kZSwgaHlkcmF0aW5nKTtcbiAgICAgIG1hcmsoZW5kVGFnKTtcbiAgICAgIG1lYXN1cmUoKFwidnVlIFwiICsgbmFtZSArIFwiIHBhdGNoXCIpLCBzdGFydFRhZywgZW5kVGFnKTtcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIHVwZGF0ZUNvbXBvbmVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZtLl91cGRhdGUodm0uX3JlbmRlcigpLCBoeWRyYXRpbmcpO1xuICAgIH07XG4gIH1cblxuICAvLyB3ZSBzZXQgdGhpcyB0byB2bS5fd2F0Y2hlciBpbnNpZGUgdGhlIHdhdGNoZXIncyBjb25zdHJ1Y3RvclxuICAvLyBzaW5jZSB0aGUgd2F0Y2hlcidzIGluaXRpYWwgcGF0Y2ggbWF5IGNhbGwgJGZvcmNlVXBkYXRlIChlLmcuIGluc2lkZSBjaGlsZFxuICAvLyBjb21wb25lbnQncyBtb3VudGVkIGhvb2spLCB3aGljaCByZWxpZXMgb24gdm0uX3dhdGNoZXIgYmVpbmcgYWxyZWFkeSBkZWZpbmVkXG4gIG5ldyBXYXRjaGVyKHZtLCB1cGRhdGVDb21wb25lbnQsIG5vb3AsIHtcbiAgICBiZWZvcmU6IGZ1bmN0aW9uIGJlZm9yZSAoKSB7XG4gICAgICBpZiAodm0uX2lzTW91bnRlZCAmJiAhdm0uX2lzRGVzdHJveWVkKSB7XG4gICAgICAgIGNhbGxIb29rKHZtLCAnYmVmb3JlVXBkYXRlJyk7XG4gICAgICB9XG4gICAgfVxuICB9LCB0cnVlIC8qIGlzUmVuZGVyV2F0Y2hlciAqLyk7XG4gIGh5ZHJhdGluZyA9IGZhbHNlO1xuXG4gIC8vIG1hbnVhbGx5IG1vdW50ZWQgaW5zdGFuY2UsIGNhbGwgbW91bnRlZCBvbiBzZWxmXG4gIC8vIG1vdW50ZWQgaXMgY2FsbGVkIGZvciByZW5kZXItY3JlYXRlZCBjaGlsZCBjb21wb25lbnRzIGluIGl0cyBpbnNlcnRlZCBob29rXG4gIGlmICh2bS4kdm5vZGUgPT0gbnVsbCkge1xuICAgIHZtLl9pc01vdW50ZWQgPSB0cnVlO1xuICAgIGNhbGxIb29rKHZtLCAnbW91bnRlZCcpO1xuICB9XG4gIHJldHVybiB2bVxufVxuXG5mdW5jdGlvbiB1cGRhdGVDaGlsZENvbXBvbmVudCAoXG4gIHZtLFxuICBwcm9wc0RhdGEsXG4gIGxpc3RlbmVycyxcbiAgcGFyZW50Vm5vZGUsXG4gIHJlbmRlckNoaWxkcmVuXG4pIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBpc1VwZGF0aW5nQ2hpbGRDb21wb25lbnQgPSB0cnVlO1xuICB9XG5cbiAgLy8gZGV0ZXJtaW5lIHdoZXRoZXIgY29tcG9uZW50IGhhcyBzbG90IGNoaWxkcmVuXG4gIC8vIHdlIG5lZWQgdG8gZG8gdGhpcyBiZWZvcmUgb3ZlcndyaXRpbmcgJG9wdGlvbnMuX3JlbmRlckNoaWxkcmVuLlxuXG4gIC8vIGNoZWNrIGlmIHRoZXJlIGFyZSBkeW5hbWljIHNjb3BlZFNsb3RzIChoYW5kLXdyaXR0ZW4gb3IgY29tcGlsZWQgYnV0IHdpdGhcbiAgLy8gZHluYW1pYyBzbG90IG5hbWVzKS4gU3RhdGljIHNjb3BlZCBzbG90cyBjb21waWxlZCBmcm9tIHRlbXBsYXRlIGhhcyB0aGVcbiAgLy8gXCIkc3RhYmxlXCIgbWFya2VyLlxuICB2YXIgbmV3U2NvcGVkU2xvdHMgPSBwYXJlbnRWbm9kZS5kYXRhLnNjb3BlZFNsb3RzO1xuICB2YXIgb2xkU2NvcGVkU2xvdHMgPSB2bS4kc2NvcGVkU2xvdHM7XG4gIHZhciBoYXNEeW5hbWljU2NvcGVkU2xvdCA9ICEhKFxuICAgIChuZXdTY29wZWRTbG90cyAmJiAhbmV3U2NvcGVkU2xvdHMuJHN0YWJsZSkgfHxcbiAgICAob2xkU2NvcGVkU2xvdHMgIT09IGVtcHR5T2JqZWN0ICYmICFvbGRTY29wZWRTbG90cy4kc3RhYmxlKSB8fFxuICAgIChuZXdTY29wZWRTbG90cyAmJiB2bS4kc2NvcGVkU2xvdHMuJGtleSAhPT0gbmV3U2NvcGVkU2xvdHMuJGtleSlcbiAgKTtcblxuICAvLyBBbnkgc3RhdGljIHNsb3QgY2hpbGRyZW4gZnJvbSB0aGUgcGFyZW50IG1heSBoYXZlIGNoYW5nZWQgZHVyaW5nIHBhcmVudCdzXG4gIC8vIHVwZGF0ZS4gRHluYW1pYyBzY29wZWQgc2xvdHMgbWF5IGFsc28gaGF2ZSBjaGFuZ2VkLiBJbiBzdWNoIGNhc2VzLCBhIGZvcmNlZFxuICAvLyB1cGRhdGUgaXMgbmVjZXNzYXJ5IHRvIGVuc3VyZSBjb3JyZWN0bmVzcy5cbiAgdmFyIG5lZWRzRm9yY2VVcGRhdGUgPSAhIShcbiAgICByZW5kZXJDaGlsZHJlbiB8fCAgICAgICAgICAgICAgIC8vIGhhcyBuZXcgc3RhdGljIHNsb3RzXG4gICAgdm0uJG9wdGlvbnMuX3JlbmRlckNoaWxkcmVuIHx8ICAvLyBoYXMgb2xkIHN0YXRpYyBzbG90c1xuICAgIGhhc0R5bmFtaWNTY29wZWRTbG90XG4gICk7XG5cbiAgdm0uJG9wdGlvbnMuX3BhcmVudFZub2RlID0gcGFyZW50Vm5vZGU7XG4gIHZtLiR2bm9kZSA9IHBhcmVudFZub2RlOyAvLyB1cGRhdGUgdm0ncyBwbGFjZWhvbGRlciBub2RlIHdpdGhvdXQgcmUtcmVuZGVyXG5cbiAgaWYgKHZtLl92bm9kZSkgeyAvLyB1cGRhdGUgY2hpbGQgdHJlZSdzIHBhcmVudFxuICAgIHZtLl92bm9kZS5wYXJlbnQgPSBwYXJlbnRWbm9kZTtcbiAgfVxuICB2bS4kb3B0aW9ucy5fcmVuZGVyQ2hpbGRyZW4gPSByZW5kZXJDaGlsZHJlbjtcblxuICAvLyB1cGRhdGUgJGF0dHJzIGFuZCAkbGlzdGVuZXJzIGhhc2hcbiAgLy8gdGhlc2UgYXJlIGFsc28gcmVhY3RpdmUgc28gdGhleSBtYXkgdHJpZ2dlciBjaGlsZCB1cGRhdGUgaWYgdGhlIGNoaWxkXG4gIC8vIHVzZWQgdGhlbSBkdXJpbmcgcmVuZGVyXG4gIHZtLiRhdHRycyA9IHBhcmVudFZub2RlLmRhdGEuYXR0cnMgfHwgZW1wdHlPYmplY3Q7XG4gIHZtLiRsaXN0ZW5lcnMgPSBsaXN0ZW5lcnMgfHwgZW1wdHlPYmplY3Q7XG5cbiAgLy8gdXBkYXRlIHByb3BzXG4gIGlmIChwcm9wc0RhdGEgJiYgdm0uJG9wdGlvbnMucHJvcHMpIHtcbiAgICB0b2dnbGVPYnNlcnZpbmcoZmFsc2UpO1xuICAgIHZhciBwcm9wcyA9IHZtLl9wcm9wcztcbiAgICB2YXIgcHJvcEtleXMgPSB2bS4kb3B0aW9ucy5fcHJvcEtleXMgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wS2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGtleSA9IHByb3BLZXlzW2ldO1xuICAgICAgdmFyIHByb3BPcHRpb25zID0gdm0uJG9wdGlvbnMucHJvcHM7IC8vIHd0ZiBmbG93P1xuICAgICAgcHJvcHNba2V5XSA9IHZhbGlkYXRlUHJvcChrZXksIHByb3BPcHRpb25zLCBwcm9wc0RhdGEsIHZtKTtcbiAgICB9XG4gICAgdG9nZ2xlT2JzZXJ2aW5nKHRydWUpO1xuICAgIC8vIGtlZXAgYSBjb3B5IG9mIHJhdyBwcm9wc0RhdGFcbiAgICB2bS4kb3B0aW9ucy5wcm9wc0RhdGEgPSBwcm9wc0RhdGE7XG4gIH1cblxuICAvLyB1cGRhdGUgbGlzdGVuZXJzXG4gIGxpc3RlbmVycyA9IGxpc3RlbmVycyB8fCBlbXB0eU9iamVjdDtcbiAgdmFyIG9sZExpc3RlbmVycyA9IHZtLiRvcHRpb25zLl9wYXJlbnRMaXN0ZW5lcnM7XG4gIHZtLiRvcHRpb25zLl9wYXJlbnRMaXN0ZW5lcnMgPSBsaXN0ZW5lcnM7XG4gIHVwZGF0ZUNvbXBvbmVudExpc3RlbmVycyh2bSwgbGlzdGVuZXJzLCBvbGRMaXN0ZW5lcnMpO1xuXG4gIC8vIHJlc29sdmUgc2xvdHMgKyBmb3JjZSB1cGRhdGUgaWYgaGFzIGNoaWxkcmVuXG4gIGlmIChuZWVkc0ZvcmNlVXBkYXRlKSB7XG4gICAgdm0uJHNsb3RzID0gcmVzb2x2ZVNsb3RzKHJlbmRlckNoaWxkcmVuLCBwYXJlbnRWbm9kZS5jb250ZXh0KTtcbiAgICB2bS4kZm9yY2VVcGRhdGUoKTtcbiAgfVxuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgaXNVcGRhdGluZ0NoaWxkQ29tcG9uZW50ID0gZmFsc2U7XG4gIH1cbn1cblxuZnVuY3Rpb24gaXNJbkluYWN0aXZlVHJlZSAodm0pIHtcbiAgd2hpbGUgKHZtICYmICh2bSA9IHZtLiRwYXJlbnQpKSB7XG4gICAgaWYgKHZtLl9pbmFjdGl2ZSkgeyByZXR1cm4gdHJ1ZSB9XG4gIH1cbiAgcmV0dXJuIGZhbHNlXG59XG5cbmZ1bmN0aW9uIGFjdGl2YXRlQ2hpbGRDb21wb25lbnQgKHZtLCBkaXJlY3QpIHtcbiAgaWYgKGRpcmVjdCkge1xuICAgIHZtLl9kaXJlY3RJbmFjdGl2ZSA9IGZhbHNlO1xuICAgIGlmIChpc0luSW5hY3RpdmVUcmVlKHZtKSkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuICB9IGVsc2UgaWYgKHZtLl9kaXJlY3RJbmFjdGl2ZSkge1xuICAgIHJldHVyblxuICB9XG4gIGlmICh2bS5faW5hY3RpdmUgfHwgdm0uX2luYWN0aXZlID09PSBudWxsKSB7XG4gICAgdm0uX2luYWN0aXZlID0gZmFsc2U7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB2bS4kY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICAgIGFjdGl2YXRlQ2hpbGRDb21wb25lbnQodm0uJGNoaWxkcmVuW2ldKTtcbiAgICB9XG4gICAgY2FsbEhvb2sodm0sICdhY3RpdmF0ZWQnKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBkZWFjdGl2YXRlQ2hpbGRDb21wb25lbnQgKHZtLCBkaXJlY3QpIHtcbiAgaWYgKGRpcmVjdCkge1xuICAgIHZtLl9kaXJlY3RJbmFjdGl2ZSA9IHRydWU7XG4gICAgaWYgKGlzSW5JbmFjdGl2ZVRyZWUodm0pKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG4gIH1cbiAgaWYgKCF2bS5faW5hY3RpdmUpIHtcbiAgICB2bS5faW5hY3RpdmUgPSB0cnVlO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdm0uJGNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG4gICAgICBkZWFjdGl2YXRlQ2hpbGRDb21wb25lbnQodm0uJGNoaWxkcmVuW2ldKTtcbiAgICB9XG4gICAgY2FsbEhvb2sodm0sICdkZWFjdGl2YXRlZCcpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNhbGxIb29rICh2bSwgaG9vaykge1xuICAvLyAjNzU3MyBkaXNhYmxlIGRlcCBjb2xsZWN0aW9uIHdoZW4gaW52b2tpbmcgbGlmZWN5Y2xlIGhvb2tzXG4gIHB1c2hUYXJnZXQoKTtcbiAgdmFyIGhhbmRsZXJzID0gdm0uJG9wdGlvbnNbaG9va107XG4gIHZhciBpbmZvID0gaG9vayArIFwiIGhvb2tcIjtcbiAgaWYgKGhhbmRsZXJzKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIGogPSBoYW5kbGVycy5sZW5ndGg7IGkgPCBqOyBpKyspIHtcbiAgICAgIGludm9rZVdpdGhFcnJvckhhbmRsaW5nKGhhbmRsZXJzW2ldLCB2bSwgbnVsbCwgdm0sIGluZm8pO1xuICAgIH1cbiAgfVxuICBpZiAodm0uX2hhc0hvb2tFdmVudCkge1xuICAgIHZtLiRlbWl0KCdob29rOicgKyBob29rKTtcbiAgfVxuICBwb3BUYXJnZXQoKTtcbn1cblxuLyogICovXG5cbnZhciBNQVhfVVBEQVRFX0NPVU5UID0gMTAwO1xuXG52YXIgcXVldWUgPSBbXTtcbnZhciBhY3RpdmF0ZWRDaGlsZHJlbiA9IFtdO1xudmFyIGhhcyA9IHt9O1xudmFyIGNpcmN1bGFyID0ge307XG52YXIgd2FpdGluZyA9IGZhbHNlO1xudmFyIGZsdXNoaW5nID0gZmFsc2U7XG52YXIgaW5kZXggPSAwO1xuXG4vKipcbiAqIFJlc2V0IHRoZSBzY2hlZHVsZXIncyBzdGF0ZS5cbiAqL1xuZnVuY3Rpb24gcmVzZXRTY2hlZHVsZXJTdGF0ZSAoKSB7XG4gIGluZGV4ID0gcXVldWUubGVuZ3RoID0gYWN0aXZhdGVkQ2hpbGRyZW4ubGVuZ3RoID0gMDtcbiAgaGFzID0ge307XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgY2lyY3VsYXIgPSB7fTtcbiAgfVxuICB3YWl0aW5nID0gZmx1c2hpbmcgPSBmYWxzZTtcbn1cblxuLy8gQXN5bmMgZWRnZSBjYXNlICM2NTY2IHJlcXVpcmVzIHNhdmluZyB0aGUgdGltZXN0YW1wIHdoZW4gZXZlbnQgbGlzdGVuZXJzIGFyZVxuLy8gYXR0YWNoZWQuIEhvd2V2ZXIsIGNhbGxpbmcgcGVyZm9ybWFuY2Uubm93KCkgaGFzIGEgcGVyZiBvdmVyaGVhZCBlc3BlY2lhbGx5XG4vLyBpZiB0aGUgcGFnZSBoYXMgdGhvdXNhbmRzIG9mIGV2ZW50IGxpc3RlbmVycy4gSW5zdGVhZCwgd2UgdGFrZSBhIHRpbWVzdGFtcFxuLy8gZXZlcnkgdGltZSB0aGUgc2NoZWR1bGVyIGZsdXNoZXMgYW5kIHVzZSB0aGF0IGZvciBhbGwgZXZlbnQgbGlzdGVuZXJzXG4vLyBhdHRhY2hlZCBkdXJpbmcgdGhhdCBmbHVzaC5cbnZhciBjdXJyZW50Rmx1c2hUaW1lc3RhbXAgPSAwO1xuXG4vLyBBc3luYyBlZGdlIGNhc2UgZml4IHJlcXVpcmVzIHN0b3JpbmcgYW4gZXZlbnQgbGlzdGVuZXIncyBhdHRhY2ggdGltZXN0YW1wLlxudmFyIGdldE5vdyA9IERhdGUubm93O1xuXG4vLyBEZXRlcm1pbmUgd2hhdCBldmVudCB0aW1lc3RhbXAgdGhlIGJyb3dzZXIgaXMgdXNpbmcuIEFubm95aW5nbHksIHRoZVxuLy8gdGltZXN0YW1wIGNhbiBlaXRoZXIgYmUgaGktcmVzIChyZWxhdGl2ZSB0byBwYWdlIGxvYWQpIG9yIGxvdy1yZXNcbi8vIChyZWxhdGl2ZSB0byBVTklYIGVwb2NoKSwgc28gaW4gb3JkZXIgdG8gY29tcGFyZSB0aW1lIHdlIGhhdmUgdG8gdXNlIHRoZVxuLy8gc2FtZSB0aW1lc3RhbXAgdHlwZSB3aGVuIHNhdmluZyB0aGUgZmx1c2ggdGltZXN0YW1wLlxuLy8gQWxsIElFIHZlcnNpb25zIHVzZSBsb3ctcmVzIGV2ZW50IHRpbWVzdGFtcHMsIGFuZCBoYXZlIHByb2JsZW1hdGljIGNsb2NrXG4vLyBpbXBsZW1lbnRhdGlvbnMgKCM5NjMyKVxuaWYgKGluQnJvd3NlciAmJiAhaXNJRSkge1xuICB2YXIgcGVyZm9ybWFuY2UgPSB3aW5kb3cucGVyZm9ybWFuY2U7XG4gIGlmIChcbiAgICBwZXJmb3JtYW5jZSAmJlxuICAgIHR5cGVvZiBwZXJmb3JtYW5jZS5ub3cgPT09ICdmdW5jdGlvbicgJiZcbiAgICBnZXROb3coKSA+IGRvY3VtZW50LmNyZWF0ZUV2ZW50KCdFdmVudCcpLnRpbWVTdGFtcFxuICApIHtcbiAgICAvLyBpZiB0aGUgZXZlbnQgdGltZXN0YW1wLCBhbHRob3VnaCBldmFsdWF0ZWQgQUZURVIgdGhlIERhdGUubm93KCksIGlzXG4gICAgLy8gc21hbGxlciB0aGFuIGl0LCBpdCBtZWFucyB0aGUgZXZlbnQgaXMgdXNpbmcgYSBoaS1yZXMgdGltZXN0YW1wLFxuICAgIC8vIGFuZCB3ZSBuZWVkIHRvIHVzZSB0aGUgaGktcmVzIHZlcnNpb24gZm9yIGV2ZW50IGxpc3RlbmVyIHRpbWVzdGFtcHMgYXNcbiAgICAvLyB3ZWxsLlxuICAgIGdldE5vdyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHBlcmZvcm1hbmNlLm5vdygpOyB9O1xuICB9XG59XG5cbi8qKlxuICogRmx1c2ggYm90aCBxdWV1ZXMgYW5kIHJ1biB0aGUgd2F0Y2hlcnMuXG4gKi9cbmZ1bmN0aW9uIGZsdXNoU2NoZWR1bGVyUXVldWUgKCkge1xuICBjdXJyZW50Rmx1c2hUaW1lc3RhbXAgPSBnZXROb3coKTtcbiAgZmx1c2hpbmcgPSB0cnVlO1xuICB2YXIgd2F0Y2hlciwgaWQ7XG5cbiAgLy8gU29ydCBxdWV1ZSBiZWZvcmUgZmx1c2guXG4gIC8vIFRoaXMgZW5zdXJlcyB0aGF0OlxuICAvLyAxLiBDb21wb25lbnRzIGFyZSB1cGRhdGVkIGZyb20gcGFyZW50IHRvIGNoaWxkLiAoYmVjYXVzZSBwYXJlbnQgaXMgYWx3YXlzXG4gIC8vICAgIGNyZWF0ZWQgYmVmb3JlIHRoZSBjaGlsZClcbiAgLy8gMi4gQSBjb21wb25lbnQncyB1c2VyIHdhdGNoZXJzIGFyZSBydW4gYmVmb3JlIGl0cyByZW5kZXIgd2F0Y2hlciAoYmVjYXVzZVxuICAvLyAgICB1c2VyIHdhdGNoZXJzIGFyZSBjcmVhdGVkIGJlZm9yZSB0aGUgcmVuZGVyIHdhdGNoZXIpXG4gIC8vIDMuIElmIGEgY29tcG9uZW50IGlzIGRlc3Ryb3llZCBkdXJpbmcgYSBwYXJlbnQgY29tcG9uZW50J3Mgd2F0Y2hlciBydW4sXG4gIC8vICAgIGl0cyB3YXRjaGVycyBjYW4gYmUgc2tpcHBlZC5cbiAgcXVldWUuc29ydChmdW5jdGlvbiAoYSwgYikgeyByZXR1cm4gYS5pZCAtIGIuaWQ7IH0pO1xuXG4gIC8vIGRvIG5vdCBjYWNoZSBsZW5ndGggYmVjYXVzZSBtb3JlIHdhdGNoZXJzIG1pZ2h0IGJlIHB1c2hlZFxuICAvLyBhcyB3ZSBydW4gZXhpc3Rpbmcgd2F0Y2hlcnNcbiAgZm9yIChpbmRleCA9IDA7IGluZGV4IDwgcXVldWUubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgd2F0Y2hlciA9IHF1ZXVlW2luZGV4XTtcbiAgICBpZiAod2F0Y2hlci5iZWZvcmUpIHtcbiAgICAgIHdhdGNoZXIuYmVmb3JlKCk7XG4gICAgfVxuICAgIGlkID0gd2F0Y2hlci5pZDtcbiAgICBoYXNbaWRdID0gbnVsbDtcbiAgICB3YXRjaGVyLnJ1bigpO1xuICAgIC8vIGluIGRldiBidWlsZCwgY2hlY2sgYW5kIHN0b3AgY2lyY3VsYXIgdXBkYXRlcy5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBoYXNbaWRdICE9IG51bGwpIHtcbiAgICAgIGNpcmN1bGFyW2lkXSA9IChjaXJjdWxhcltpZF0gfHwgMCkgKyAxO1xuICAgICAgaWYgKGNpcmN1bGFyW2lkXSA+IE1BWF9VUERBVEVfQ09VTlQpIHtcbiAgICAgICAgd2FybihcbiAgICAgICAgICAnWW91IG1heSBoYXZlIGFuIGluZmluaXRlIHVwZGF0ZSBsb29wICcgKyAoXG4gICAgICAgICAgICB3YXRjaGVyLnVzZXJcbiAgICAgICAgICAgICAgPyAoXCJpbiB3YXRjaGVyIHdpdGggZXhwcmVzc2lvbiBcXFwiXCIgKyAod2F0Y2hlci5leHByZXNzaW9uKSArIFwiXFxcIlwiKVxuICAgICAgICAgICAgICA6IFwiaW4gYSBjb21wb25lbnQgcmVuZGVyIGZ1bmN0aW9uLlwiXG4gICAgICAgICAgKSxcbiAgICAgICAgICB3YXRjaGVyLnZtXG4gICAgICAgICk7XG4gICAgICAgIGJyZWFrXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8ga2VlcCBjb3BpZXMgb2YgcG9zdCBxdWV1ZXMgYmVmb3JlIHJlc2V0dGluZyBzdGF0ZVxuICB2YXIgYWN0aXZhdGVkUXVldWUgPSBhY3RpdmF0ZWRDaGlsZHJlbi5zbGljZSgpO1xuICB2YXIgdXBkYXRlZFF1ZXVlID0gcXVldWUuc2xpY2UoKTtcblxuICByZXNldFNjaGVkdWxlclN0YXRlKCk7XG5cbiAgLy8gY2FsbCBjb21wb25lbnQgdXBkYXRlZCBhbmQgYWN0aXZhdGVkIGhvb2tzXG4gIGNhbGxBY3RpdmF0ZWRIb29rcyhhY3RpdmF0ZWRRdWV1ZSk7XG4gIGNhbGxVcGRhdGVkSG9va3ModXBkYXRlZFF1ZXVlKTtcblxuICAvLyBkZXZ0b29sIGhvb2tcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gIGlmIChkZXZ0b29scyAmJiBjb25maWcuZGV2dG9vbHMpIHtcbiAgICBkZXZ0b29scy5lbWl0KCdmbHVzaCcpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNhbGxVcGRhdGVkSG9va3MgKHF1ZXVlKSB7XG4gIHZhciBpID0gcXVldWUubGVuZ3RoO1xuICB3aGlsZSAoaS0tKSB7XG4gICAgdmFyIHdhdGNoZXIgPSBxdWV1ZVtpXTtcbiAgICB2YXIgdm0gPSB3YXRjaGVyLnZtO1xuICAgIGlmICh2bS5fd2F0Y2hlciA9PT0gd2F0Y2hlciAmJiB2bS5faXNNb3VudGVkICYmICF2bS5faXNEZXN0cm95ZWQpIHtcbiAgICAgIGNhbGxIb29rKHZtLCAndXBkYXRlZCcpO1xuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIFF1ZXVlIGEga2VwdC1hbGl2ZSBjb21wb25lbnQgdGhhdCB3YXMgYWN0aXZhdGVkIGR1cmluZyBwYXRjaC5cbiAqIFRoZSBxdWV1ZSB3aWxsIGJlIHByb2Nlc3NlZCBhZnRlciB0aGUgZW50aXJlIHRyZWUgaGFzIGJlZW4gcGF0Y2hlZC5cbiAqL1xuZnVuY3Rpb24gcXVldWVBY3RpdmF0ZWRDb21wb25lbnQgKHZtKSB7XG4gIC8vIHNldHRpbmcgX2luYWN0aXZlIHRvIGZhbHNlIGhlcmUgc28gdGhhdCBhIHJlbmRlciBmdW5jdGlvbiBjYW5cbiAgLy8gcmVseSBvbiBjaGVja2luZyB3aGV0aGVyIGl0J3MgaW4gYW4gaW5hY3RpdmUgdHJlZSAoZS5nLiByb3V0ZXItdmlldylcbiAgdm0uX2luYWN0aXZlID0gZmFsc2U7XG4gIGFjdGl2YXRlZENoaWxkcmVuLnB1c2godm0pO1xufVxuXG5mdW5jdGlvbiBjYWxsQWN0aXZhdGVkSG9va3MgKHF1ZXVlKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcXVldWUubGVuZ3RoOyBpKyspIHtcbiAgICBxdWV1ZVtpXS5faW5hY3RpdmUgPSB0cnVlO1xuICAgIGFjdGl2YXRlQ2hpbGRDb21wb25lbnQocXVldWVbaV0sIHRydWUgLyogdHJ1ZSAqLyk7XG4gIH1cbn1cblxuLyoqXG4gKiBQdXNoIGEgd2F0Y2hlciBpbnRvIHRoZSB3YXRjaGVyIHF1ZXVlLlxuICogSm9icyB3aXRoIGR1cGxpY2F0ZSBJRHMgd2lsbCBiZSBza2lwcGVkIHVubGVzcyBpdCdzXG4gKiBwdXNoZWQgd2hlbiB0aGUgcXVldWUgaXMgYmVpbmcgZmx1c2hlZC5cbiAqL1xuZnVuY3Rpb24gcXVldWVXYXRjaGVyICh3YXRjaGVyKSB7XG4gIHZhciBpZCA9IHdhdGNoZXIuaWQ7XG4gIGlmIChoYXNbaWRdID09IG51bGwpIHtcbiAgICBoYXNbaWRdID0gdHJ1ZTtcbiAgICBpZiAoIWZsdXNoaW5nKSB7XG4gICAgICBxdWV1ZS5wdXNoKHdhdGNoZXIpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBpZiBhbHJlYWR5IGZsdXNoaW5nLCBzcGxpY2UgdGhlIHdhdGNoZXIgYmFzZWQgb24gaXRzIGlkXG4gICAgICAvLyBpZiBhbHJlYWR5IHBhc3QgaXRzIGlkLCBpdCB3aWxsIGJlIHJ1biBuZXh0IGltbWVkaWF0ZWx5LlxuICAgICAgdmFyIGkgPSBxdWV1ZS5sZW5ndGggLSAxO1xuICAgICAgd2hpbGUgKGkgPiBpbmRleCAmJiBxdWV1ZVtpXS5pZCA+IHdhdGNoZXIuaWQpIHtcbiAgICAgICAgaS0tO1xuICAgICAgfVxuICAgICAgcXVldWUuc3BsaWNlKGkgKyAxLCAwLCB3YXRjaGVyKTtcbiAgICB9XG4gICAgLy8gcXVldWUgdGhlIGZsdXNoXG4gICAgaWYgKCF3YWl0aW5nKSB7XG4gICAgICB3YWl0aW5nID0gdHJ1ZTtcblxuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgIWNvbmZpZy5hc3luYykge1xuICAgICAgICBmbHVzaFNjaGVkdWxlclF1ZXVlKCk7XG4gICAgICAgIHJldHVyblxuICAgICAgfVxuICAgICAgbmV4dFRpY2soZmx1c2hTY2hlZHVsZXJRdWV1ZSk7XG4gICAgfVxuICB9XG59XG5cbi8qICAqL1xuXG5cblxudmFyIHVpZCQyID0gMDtcblxuLyoqXG4gKiBBIHdhdGNoZXIgcGFyc2VzIGFuIGV4cHJlc3Npb24sIGNvbGxlY3RzIGRlcGVuZGVuY2llcyxcbiAqIGFuZCBmaXJlcyBjYWxsYmFjayB3aGVuIHRoZSBleHByZXNzaW9uIHZhbHVlIGNoYW5nZXMuXG4gKiBUaGlzIGlzIHVzZWQgZm9yIGJvdGggdGhlICR3YXRjaCgpIGFwaSBhbmQgZGlyZWN0aXZlcy5cbiAqL1xudmFyIFdhdGNoZXIgPSBmdW5jdGlvbiBXYXRjaGVyIChcbiAgdm0sXG4gIGV4cE9yRm4sXG4gIGNiLFxuICBvcHRpb25zLFxuICBpc1JlbmRlcldhdGNoZXJcbikge1xuICB0aGlzLnZtID0gdm07XG4gIGlmIChpc1JlbmRlcldhdGNoZXIpIHtcbiAgICB2bS5fd2F0Y2hlciA9IHRoaXM7XG4gIH1cbiAgdm0uX3dhdGNoZXJzLnB1c2godGhpcyk7XG4gIC8vIG9wdGlvbnNcbiAgaWYgKG9wdGlvbnMpIHtcbiAgICB0aGlzLmRlZXAgPSAhIW9wdGlvbnMuZGVlcDtcbiAgICB0aGlzLnVzZXIgPSAhIW9wdGlvbnMudXNlcjtcbiAgICB0aGlzLmxhenkgPSAhIW9wdGlvbnMubGF6eTtcbiAgICB0aGlzLnN5bmMgPSAhIW9wdGlvbnMuc3luYztcbiAgICB0aGlzLmJlZm9yZSA9IG9wdGlvbnMuYmVmb3JlO1xuICB9IGVsc2Uge1xuICAgIHRoaXMuZGVlcCA9IHRoaXMudXNlciA9IHRoaXMubGF6eSA9IHRoaXMuc3luYyA9IGZhbHNlO1xuICB9XG4gIHRoaXMuY2IgPSBjYjtcbiAgdGhpcy5pZCA9ICsrdWlkJDI7IC8vIHVpZCBmb3IgYmF0Y2hpbmdcbiAgdGhpcy5hY3RpdmUgPSB0cnVlO1xuICB0aGlzLmRpcnR5ID0gdGhpcy5sYXp5OyAvLyBmb3IgbGF6eSB3YXRjaGVyc1xuICB0aGlzLmRlcHMgPSBbXTtcbiAgdGhpcy5uZXdEZXBzID0gW107XG4gIHRoaXMuZGVwSWRzID0gbmV3IF9TZXQoKTtcbiAgdGhpcy5uZXdEZXBJZHMgPSBuZXcgX1NldCgpO1xuICB0aGlzLmV4cHJlc3Npb24gPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nXG4gICAgPyBleHBPckZuLnRvU3RyaW5nKClcbiAgICA6ICcnO1xuICAvLyBwYXJzZSBleHByZXNzaW9uIGZvciBnZXR0ZXJcbiAgaWYgKHR5cGVvZiBleHBPckZuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhpcy5nZXR0ZXIgPSBleHBPckZuO1xuICB9IGVsc2Uge1xuICAgIHRoaXMuZ2V0dGVyID0gcGFyc2VQYXRoKGV4cE9yRm4pO1xuICAgIGlmICghdGhpcy5nZXR0ZXIpIHtcbiAgICAgIHRoaXMuZ2V0dGVyID0gbm9vcDtcbiAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgd2FybihcbiAgICAgICAgXCJGYWlsZWQgd2F0Y2hpbmcgcGF0aDogXFxcIlwiICsgZXhwT3JGbiArIFwiXFxcIiBcIiArXG4gICAgICAgICdXYXRjaGVyIG9ubHkgYWNjZXB0cyBzaW1wbGUgZG90LWRlbGltaXRlZCBwYXRocy4gJyArXG4gICAgICAgICdGb3IgZnVsbCBjb250cm9sLCB1c2UgYSBmdW5jdGlvbiBpbnN0ZWFkLicsXG4gICAgICAgIHZtXG4gICAgICApO1xuICAgIH1cbiAgfVxuICB0aGlzLnZhbHVlID0gdGhpcy5sYXp5XG4gICAgPyB1bmRlZmluZWRcbiAgICA6IHRoaXMuZ2V0KCk7XG59O1xuXG4vKipcbiAqIEV2YWx1YXRlIHRoZSBnZXR0ZXIsIGFuZCByZS1jb2xsZWN0IGRlcGVuZGVuY2llcy5cbiAqL1xuV2F0Y2hlci5wcm90b3R5cGUuZ2V0ID0gZnVuY3Rpb24gZ2V0ICgpIHtcbiAgcHVzaFRhcmdldCh0aGlzKTtcbiAgdmFyIHZhbHVlO1xuICB2YXIgdm0gPSB0aGlzLnZtO1xuICB0cnkge1xuICAgIHZhbHVlID0gdGhpcy5nZXR0ZXIuY2FsbCh2bSwgdm0pO1xuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKHRoaXMudXNlcikge1xuICAgICAgaGFuZGxlRXJyb3IoZSwgdm0sIChcImdldHRlciBmb3Igd2F0Y2hlciBcXFwiXCIgKyAodGhpcy5leHByZXNzaW9uKSArIFwiXFxcIlwiKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IGVcbiAgICB9XG4gIH0gZmluYWxseSB7XG4gICAgLy8gXCJ0b3VjaFwiIGV2ZXJ5IHByb3BlcnR5IHNvIHRoZXkgYXJlIGFsbCB0cmFja2VkIGFzXG4gICAgLy8gZGVwZW5kZW5jaWVzIGZvciBkZWVwIHdhdGNoaW5nXG4gICAgaWYgKHRoaXMuZGVlcCkge1xuICAgICAgdHJhdmVyc2UodmFsdWUpO1xuICAgIH1cbiAgICBwb3BUYXJnZXQoKTtcbiAgICB0aGlzLmNsZWFudXBEZXBzKCk7XG4gIH1cbiAgcmV0dXJuIHZhbHVlXG59O1xuXG4vKipcbiAqIEFkZCBhIGRlcGVuZGVuY3kgdG8gdGhpcyBkaXJlY3RpdmUuXG4gKi9cbldhdGNoZXIucHJvdG90eXBlLmFkZERlcCA9IGZ1bmN0aW9uIGFkZERlcCAoZGVwKSB7XG4gIHZhciBpZCA9IGRlcC5pZDtcbiAgaWYgKCF0aGlzLm5ld0RlcElkcy5oYXMoaWQpKSB7XG4gICAgdGhpcy5uZXdEZXBJZHMuYWRkKGlkKTtcbiAgICB0aGlzLm5ld0RlcHMucHVzaChkZXApO1xuICAgIGlmICghdGhpcy5kZXBJZHMuaGFzKGlkKSkge1xuICAgICAgZGVwLmFkZFN1Yih0aGlzKTtcbiAgICB9XG4gIH1cbn07XG5cbi8qKlxuICogQ2xlYW4gdXAgZm9yIGRlcGVuZGVuY3kgY29sbGVjdGlvbi5cbiAqL1xuV2F0Y2hlci5wcm90b3R5cGUuY2xlYW51cERlcHMgPSBmdW5jdGlvbiBjbGVhbnVwRGVwcyAoKSB7XG4gIHZhciBpID0gdGhpcy5kZXBzLmxlbmd0aDtcbiAgd2hpbGUgKGktLSkge1xuICAgIHZhciBkZXAgPSB0aGlzLmRlcHNbaV07XG4gICAgaWYgKCF0aGlzLm5ld0RlcElkcy5oYXMoZGVwLmlkKSkge1xuICAgICAgZGVwLnJlbW92ZVN1Yih0aGlzKTtcbiAgICB9XG4gIH1cbiAgdmFyIHRtcCA9IHRoaXMuZGVwSWRzO1xuICB0aGlzLmRlcElkcyA9IHRoaXMubmV3RGVwSWRzO1xuICB0aGlzLm5ld0RlcElkcyA9IHRtcDtcbiAgdGhpcy5uZXdEZXBJZHMuY2xlYXIoKTtcbiAgdG1wID0gdGhpcy5kZXBzO1xuICB0aGlzLmRlcHMgPSB0aGlzLm5ld0RlcHM7XG4gIHRoaXMubmV3RGVwcyA9IHRtcDtcbiAgdGhpcy5uZXdEZXBzLmxlbmd0aCA9IDA7XG59O1xuXG4vKipcbiAqIFN1YnNjcmliZXIgaW50ZXJmYWNlLlxuICogV2lsbCBiZSBjYWxsZWQgd2hlbiBhIGRlcGVuZGVuY3kgY2hhbmdlcy5cbiAqL1xuV2F0Y2hlci5wcm90b3R5cGUudXBkYXRlID0gZnVuY3Rpb24gdXBkYXRlICgpIHtcbiAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgaWYgKHRoaXMubGF6eSkge1xuICAgIHRoaXMuZGlydHkgPSB0cnVlO1xuICB9IGVsc2UgaWYgKHRoaXMuc3luYykge1xuICAgIHRoaXMucnVuKCk7XG4gIH0gZWxzZSB7XG4gICAgcXVldWVXYXRjaGVyKHRoaXMpO1xuICB9XG59O1xuXG4vKipcbiAqIFNjaGVkdWxlciBqb2IgaW50ZXJmYWNlLlxuICogV2lsbCBiZSBjYWxsZWQgYnkgdGhlIHNjaGVkdWxlci5cbiAqL1xuV2F0Y2hlci5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gcnVuICgpIHtcbiAgaWYgKHRoaXMuYWN0aXZlKSB7XG4gICAgdmFyIHZhbHVlID0gdGhpcy5nZXQoKTtcbiAgICBpZiAoXG4gICAgICB2YWx1ZSAhPT0gdGhpcy52YWx1ZSB8fFxuICAgICAgLy8gRGVlcCB3YXRjaGVycyBhbmQgd2F0Y2hlcnMgb24gT2JqZWN0L0FycmF5cyBzaG91bGQgZmlyZSBldmVuXG4gICAgICAvLyB3aGVuIHRoZSB2YWx1ZSBpcyB0aGUgc2FtZSwgYmVjYXVzZSB0aGUgdmFsdWUgbWF5XG4gICAgICAvLyBoYXZlIG11dGF0ZWQuXG4gICAgICBpc09iamVjdCh2YWx1ZSkgfHxcbiAgICAgIHRoaXMuZGVlcFxuICAgICkge1xuICAgICAgLy8gc2V0IG5ldyB2YWx1ZVxuICAgICAgdmFyIG9sZFZhbHVlID0gdGhpcy52YWx1ZTtcbiAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgICAgIGlmICh0aGlzLnVzZXIpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICB0aGlzLmNiLmNhbGwodGhpcy52bSwgdmFsdWUsIG9sZFZhbHVlKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIGhhbmRsZUVycm9yKGUsIHRoaXMudm0sIChcImNhbGxiYWNrIGZvciB3YXRjaGVyIFxcXCJcIiArICh0aGlzLmV4cHJlc3Npb24pICsgXCJcXFwiXCIpKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5jYi5jYWxsKHRoaXMudm0sIHZhbHVlLCBvbGRWYWx1ZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG59O1xuXG4vKipcbiAqIEV2YWx1YXRlIHRoZSB2YWx1ZSBvZiB0aGUgd2F0Y2hlci5cbiAqIFRoaXMgb25seSBnZXRzIGNhbGxlZCBmb3IgbGF6eSB3YXRjaGVycy5cbiAqL1xuV2F0Y2hlci5wcm90b3R5cGUuZXZhbHVhdGUgPSBmdW5jdGlvbiBldmFsdWF0ZSAoKSB7XG4gIHRoaXMudmFsdWUgPSB0aGlzLmdldCgpO1xuICB0aGlzLmRpcnR5ID0gZmFsc2U7XG59O1xuXG4vKipcbiAqIERlcGVuZCBvbiBhbGwgZGVwcyBjb2xsZWN0ZWQgYnkgdGhpcyB3YXRjaGVyLlxuICovXG5XYXRjaGVyLnByb3RvdHlwZS5kZXBlbmQgPSBmdW5jdGlvbiBkZXBlbmQgKCkge1xuICB2YXIgaSA9IHRoaXMuZGVwcy5sZW5ndGg7XG4gIHdoaWxlIChpLS0pIHtcbiAgICB0aGlzLmRlcHNbaV0uZGVwZW5kKCk7XG4gIH1cbn07XG5cbi8qKlxuICogUmVtb3ZlIHNlbGYgZnJvbSBhbGwgZGVwZW5kZW5jaWVzJyBzdWJzY3JpYmVyIGxpc3QuXG4gKi9cbldhdGNoZXIucHJvdG90eXBlLnRlYXJkb3duID0gZnVuY3Rpb24gdGVhcmRvd24gKCkge1xuICBpZiAodGhpcy5hY3RpdmUpIHtcbiAgICAvLyByZW1vdmUgc2VsZiBmcm9tIHZtJ3Mgd2F0Y2hlciBsaXN0XG4gICAgLy8gdGhpcyBpcyBhIHNvbWV3aGF0IGV4cGVuc2l2ZSBvcGVyYXRpb24gc28gd2Ugc2tpcCBpdFxuICAgIC8vIGlmIHRoZSB2bSBpcyBiZWluZyBkZXN0cm95ZWQuXG4gICAgaWYgKCF0aGlzLnZtLl9pc0JlaW5nRGVzdHJveWVkKSB7XG4gICAgICByZW1vdmUodGhpcy52bS5fd2F0Y2hlcnMsIHRoaXMpO1xuICAgIH1cbiAgICB2YXIgaSA9IHRoaXMuZGVwcy5sZW5ndGg7XG4gICAgd2hpbGUgKGktLSkge1xuICAgICAgdGhpcy5kZXBzW2ldLnJlbW92ZVN1Yih0aGlzKTtcbiAgICB9XG4gICAgdGhpcy5hY3RpdmUgPSBmYWxzZTtcbiAgfVxufTtcblxuLyogICovXG5cbnZhciBzaGFyZWRQcm9wZXJ0eURlZmluaXRpb24gPSB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBub29wLFxuICBzZXQ6IG5vb3Bcbn07XG5cbmZ1bmN0aW9uIHByb3h5ICh0YXJnZXQsIHNvdXJjZUtleSwga2V5KSB7XG4gIHNoYXJlZFByb3BlcnR5RGVmaW5pdGlvbi5nZXQgPSBmdW5jdGlvbiBwcm94eUdldHRlciAoKSB7XG4gICAgcmV0dXJuIHRoaXNbc291cmNlS2V5XVtrZXldXG4gIH07XG4gIHNoYXJlZFByb3BlcnR5RGVmaW5pdGlvbi5zZXQgPSBmdW5jdGlvbiBwcm94eVNldHRlciAodmFsKSB7XG4gICAgdGhpc1tzb3VyY2VLZXldW2tleV0gPSB2YWw7XG4gIH07XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc2hhcmVkUHJvcGVydHlEZWZpbml0aW9uKTtcbn1cblxuZnVuY3Rpb24gaW5pdFN0YXRlICh2bSkge1xuICB2bS5fd2F0Y2hlcnMgPSBbXTtcbiAgdmFyIG9wdHMgPSB2bS4kb3B0aW9ucztcbiAgaWYgKG9wdHMucHJvcHMpIHsgaW5pdFByb3BzKHZtLCBvcHRzLnByb3BzKTsgfVxuICBpZiAob3B0cy5tZXRob2RzKSB7IGluaXRNZXRob2RzKHZtLCBvcHRzLm1ldGhvZHMpOyB9XG4gIGlmIChvcHRzLmRhdGEpIHtcbiAgICBpbml0RGF0YSh2bSk7XG4gIH0gZWxzZSB7XG4gICAgb2JzZXJ2ZSh2bS5fZGF0YSA9IHt9LCB0cnVlIC8qIGFzUm9vdERhdGEgKi8pO1xuICB9XG4gIGlmIChvcHRzLmNvbXB1dGVkKSB7IGluaXRDb21wdXRlZCh2bSwgb3B0cy5jb21wdXRlZCk7IH1cbiAgaWYgKG9wdHMud2F0Y2ggJiYgb3B0cy53YXRjaCAhPT0gbmF0aXZlV2F0Y2gpIHtcbiAgICBpbml0V2F0Y2godm0sIG9wdHMud2F0Y2gpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGluaXRQcm9wcyAodm0sIHByb3BzT3B0aW9ucykge1xuICB2YXIgcHJvcHNEYXRhID0gdm0uJG9wdGlvbnMucHJvcHNEYXRhIHx8IHt9O1xuICB2YXIgcHJvcHMgPSB2bS5fcHJvcHMgPSB7fTtcbiAgLy8gY2FjaGUgcHJvcCBrZXlzIHNvIHRoYXQgZnV0dXJlIHByb3BzIHVwZGF0ZXMgY2FuIGl0ZXJhdGUgdXNpbmcgQXJyYXlcbiAgLy8gaW5zdGVhZCBvZiBkeW5hbWljIG9iamVjdCBrZXkgZW51bWVyYXRpb24uXG4gIHZhciBrZXlzID0gdm0uJG9wdGlvbnMuX3Byb3BLZXlzID0gW107XG4gIHZhciBpc1Jvb3QgPSAhdm0uJHBhcmVudDtcbiAgLy8gcm9vdCBpbnN0YW5jZSBwcm9wcyBzaG91bGQgYmUgY29udmVydGVkXG4gIGlmICghaXNSb290KSB7XG4gICAgdG9nZ2xlT2JzZXJ2aW5nKGZhbHNlKTtcbiAgfVxuICB2YXIgbG9vcCA9IGZ1bmN0aW9uICgga2V5ICkge1xuICAgIGtleXMucHVzaChrZXkpO1xuICAgIHZhciB2YWx1ZSA9IHZhbGlkYXRlUHJvcChrZXksIHByb3BzT3B0aW9ucywgcHJvcHNEYXRhLCB2bSk7XG4gICAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgdmFyIGh5cGhlbmF0ZWRLZXkgPSBoeXBoZW5hdGUoa2V5KTtcbiAgICAgIGlmIChpc1Jlc2VydmVkQXR0cmlidXRlKGh5cGhlbmF0ZWRLZXkpIHx8XG4gICAgICAgICAgY29uZmlnLmlzUmVzZXJ2ZWRBdHRyKGh5cGhlbmF0ZWRLZXkpKSB7XG4gICAgICAgIHdhcm4oXG4gICAgICAgICAgKFwiXFxcIlwiICsgaHlwaGVuYXRlZEtleSArIFwiXFxcIiBpcyBhIHJlc2VydmVkIGF0dHJpYnV0ZSBhbmQgY2Fubm90IGJlIHVzZWQgYXMgY29tcG9uZW50IHByb3AuXCIpLFxuICAgICAgICAgIHZtXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICBkZWZpbmVSZWFjdGl2ZSQkMShwcm9wcywga2V5LCB2YWx1ZSwgZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIWlzUm9vdCAmJiAhaXNVcGRhdGluZ0NoaWxkQ29tcG9uZW50KSB7XG4gICAgICAgICAgd2FybihcbiAgICAgICAgICAgIFwiQXZvaWQgbXV0YXRpbmcgYSBwcm9wIGRpcmVjdGx5IHNpbmNlIHRoZSB2YWx1ZSB3aWxsIGJlIFwiICtcbiAgICAgICAgICAgIFwib3ZlcndyaXR0ZW4gd2hlbmV2ZXIgdGhlIHBhcmVudCBjb21wb25lbnQgcmUtcmVuZGVycy4gXCIgK1xuICAgICAgICAgICAgXCJJbnN0ZWFkLCB1c2UgYSBkYXRhIG9yIGNvbXB1dGVkIHByb3BlcnR5IGJhc2VkIG9uIHRoZSBwcm9wJ3MgXCIgK1xuICAgICAgICAgICAgXCJ2YWx1ZS4gUHJvcCBiZWluZyBtdXRhdGVkOiBcXFwiXCIgKyBrZXkgKyBcIlxcXCJcIixcbiAgICAgICAgICAgIHZtXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRlZmluZVJlYWN0aXZlJCQxKHByb3BzLCBrZXksIHZhbHVlKTtcbiAgICB9XG4gICAgLy8gc3RhdGljIHByb3BzIGFyZSBhbHJlYWR5IHByb3hpZWQgb24gdGhlIGNvbXBvbmVudCdzIHByb3RvdHlwZVxuICAgIC8vIGR1cmluZyBWdWUuZXh0ZW5kKCkuIFdlIG9ubHkgbmVlZCB0byBwcm94eSBwcm9wcyBkZWZpbmVkIGF0XG4gICAgLy8gaW5zdGFudGlhdGlvbiBoZXJlLlxuICAgIGlmICghKGtleSBpbiB2bSkpIHtcbiAgICAgIHByb3h5KHZtLCBcIl9wcm9wc1wiLCBrZXkpO1xuICAgIH1cbiAgfTtcblxuICBmb3IgKHZhciBrZXkgaW4gcHJvcHNPcHRpb25zKSBsb29wKCBrZXkgKTtcbiAgdG9nZ2xlT2JzZXJ2aW5nKHRydWUpO1xufVxuXG5mdW5jdGlvbiBpbml0RGF0YSAodm0pIHtcbiAgdmFyIGRhdGEgPSB2bS4kb3B0aW9ucy5kYXRhO1xuICBkYXRhID0gdm0uX2RhdGEgPSB0eXBlb2YgZGF0YSA9PT0gJ2Z1bmN0aW9uJ1xuICAgID8gZ2V0RGF0YShkYXRhLCB2bSlcbiAgICA6IGRhdGEgfHwge307XG4gIGlmICghaXNQbGFpbk9iamVjdChkYXRhKSkge1xuICAgIGRhdGEgPSB7fTtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHdhcm4oXG4gICAgICAnZGF0YSBmdW5jdGlvbnMgc2hvdWxkIHJldHVybiBhbiBvYmplY3Q6XFxuJyArXG4gICAgICAnaHR0cHM6Ly92dWVqcy5vcmcvdjIvZ3VpZGUvY29tcG9uZW50cy5odG1sI2RhdGEtTXVzdC1CZS1hLUZ1bmN0aW9uJyxcbiAgICAgIHZtXG4gICAgKTtcbiAgfVxuICAvLyBwcm94eSBkYXRhIG9uIGluc3RhbmNlXG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMoZGF0YSk7XG4gIHZhciBwcm9wcyA9IHZtLiRvcHRpb25zLnByb3BzO1xuICB2YXIgbWV0aG9kcyA9IHZtLiRvcHRpb25zLm1ldGhvZHM7XG4gIHZhciBpID0ga2V5cy5sZW5ndGg7XG4gIHdoaWxlIChpLS0pIHtcbiAgICB2YXIga2V5ID0ga2V5c1tpXTtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaWYgKG1ldGhvZHMgJiYgaGFzT3duKG1ldGhvZHMsIGtleSkpIHtcbiAgICAgICAgd2FybihcbiAgICAgICAgICAoXCJNZXRob2QgXFxcIlwiICsga2V5ICsgXCJcXFwiIGhhcyBhbHJlYWR5IGJlZW4gZGVmaW5lZCBhcyBhIGRhdGEgcHJvcGVydHkuXCIpLFxuICAgICAgICAgIHZtXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChwcm9wcyAmJiBoYXNPd24ocHJvcHMsIGtleSkpIHtcbiAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgd2FybihcbiAgICAgICAgXCJUaGUgZGF0YSBwcm9wZXJ0eSBcXFwiXCIgKyBrZXkgKyBcIlxcXCIgaXMgYWxyZWFkeSBkZWNsYXJlZCBhcyBhIHByb3AuIFwiICtcbiAgICAgICAgXCJVc2UgcHJvcCBkZWZhdWx0IHZhbHVlIGluc3RlYWQuXCIsXG4gICAgICAgIHZtXG4gICAgICApO1xuICAgIH0gZWxzZSBpZiAoIWlzUmVzZXJ2ZWQoa2V5KSkge1xuICAgICAgcHJveHkodm0sIFwiX2RhdGFcIiwga2V5KTtcbiAgICB9XG4gIH1cbiAgLy8gb2JzZXJ2ZSBkYXRhXG4gIG9ic2VydmUoZGF0YSwgdHJ1ZSAvKiBhc1Jvb3REYXRhICovKTtcbn1cblxuZnVuY3Rpb24gZ2V0RGF0YSAoZGF0YSwgdm0pIHtcbiAgLy8gIzc1NzMgZGlzYWJsZSBkZXAgY29sbGVjdGlvbiB3aGVuIGludm9raW5nIGRhdGEgZ2V0dGVyc1xuICBwdXNoVGFyZ2V0KCk7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGRhdGEuY2FsbCh2bSwgdm0pXG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBoYW5kbGVFcnJvcihlLCB2bSwgXCJkYXRhKClcIik7XG4gICAgcmV0dXJuIHt9XG4gIH0gZmluYWxseSB7XG4gICAgcG9wVGFyZ2V0KCk7XG4gIH1cbn1cblxudmFyIGNvbXB1dGVkV2F0Y2hlck9wdGlvbnMgPSB7IGxhenk6IHRydWUgfTtcblxuZnVuY3Rpb24gaW5pdENvbXB1dGVkICh2bSwgY29tcHV0ZWQpIHtcbiAgLy8gJGZsb3ctZGlzYWJsZS1saW5lXG4gIHZhciB3YXRjaGVycyA9IHZtLl9jb21wdXRlZFdhdGNoZXJzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgLy8gY29tcHV0ZWQgcHJvcGVydGllcyBhcmUganVzdCBnZXR0ZXJzIGR1cmluZyBTU1JcbiAgdmFyIGlzU1NSID0gaXNTZXJ2ZXJSZW5kZXJpbmcoKTtcblxuICBmb3IgKHZhciBrZXkgaW4gY29tcHV0ZWQpIHtcbiAgICB2YXIgdXNlckRlZiA9IGNvbXB1dGVkW2tleV07XG4gICAgdmFyIGdldHRlciA9IHR5cGVvZiB1c2VyRGVmID09PSAnZnVuY3Rpb24nID8gdXNlckRlZiA6IHVzZXJEZWYuZ2V0O1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGdldHRlciA9PSBudWxsKSB7XG4gICAgICB3YXJuKFxuICAgICAgICAoXCJHZXR0ZXIgaXMgbWlzc2luZyBmb3IgY29tcHV0ZWQgcHJvcGVydHkgXFxcIlwiICsga2V5ICsgXCJcXFwiLlwiKSxcbiAgICAgICAgdm1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKCFpc1NTUikge1xuICAgICAgLy8gY3JlYXRlIGludGVybmFsIHdhdGNoZXIgZm9yIHRoZSBjb21wdXRlZCBwcm9wZXJ0eS5cbiAgICAgIHdhdGNoZXJzW2tleV0gPSBuZXcgV2F0Y2hlcihcbiAgICAgICAgdm0sXG4gICAgICAgIGdldHRlciB8fCBub29wLFxuICAgICAgICBub29wLFxuICAgICAgICBjb21wdXRlZFdhdGNoZXJPcHRpb25zXG4gICAgICApO1xuICAgIH1cblxuICAgIC8vIGNvbXBvbmVudC1kZWZpbmVkIGNvbXB1dGVkIHByb3BlcnRpZXMgYXJlIGFscmVhZHkgZGVmaW5lZCBvbiB0aGVcbiAgICAvLyBjb21wb25lbnQgcHJvdG90eXBlLiBXZSBvbmx5IG5lZWQgdG8gZGVmaW5lIGNvbXB1dGVkIHByb3BlcnRpZXMgZGVmaW5lZFxuICAgIC8vIGF0IGluc3RhbnRpYXRpb24gaGVyZS5cbiAgICBpZiAoIShrZXkgaW4gdm0pKSB7XG4gICAgICBkZWZpbmVDb21wdXRlZCh2bSwga2V5LCB1c2VyRGVmKTtcbiAgICB9IGVsc2UgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmIChrZXkgaW4gdm0uJGRhdGEpIHtcbiAgICAgICAgd2FybigoXCJUaGUgY29tcHV0ZWQgcHJvcGVydHkgXFxcIlwiICsga2V5ICsgXCJcXFwiIGlzIGFscmVhZHkgZGVmaW5lZCBpbiBkYXRhLlwiKSwgdm0pO1xuICAgICAgfSBlbHNlIGlmICh2bS4kb3B0aW9ucy5wcm9wcyAmJiBrZXkgaW4gdm0uJG9wdGlvbnMucHJvcHMpIHtcbiAgICAgICAgd2FybigoXCJUaGUgY29tcHV0ZWQgcHJvcGVydHkgXFxcIlwiICsga2V5ICsgXCJcXFwiIGlzIGFscmVhZHkgZGVmaW5lZCBhcyBhIHByb3AuXCIpLCB2bSk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGRlZmluZUNvbXB1dGVkIChcbiAgdGFyZ2V0LFxuICBrZXksXG4gIHVzZXJEZWZcbikge1xuICB2YXIgc2hvdWxkQ2FjaGUgPSAhaXNTZXJ2ZXJSZW5kZXJpbmcoKTtcbiAgaWYgKHR5cGVvZiB1c2VyRGVmID09PSAnZnVuY3Rpb24nKSB7XG4gICAgc2hhcmVkUHJvcGVydHlEZWZpbml0aW9uLmdldCA9IHNob3VsZENhY2hlXG4gICAgICA/IGNyZWF0ZUNvbXB1dGVkR2V0dGVyKGtleSlcbiAgICAgIDogY3JlYXRlR2V0dGVySW52b2tlcih1c2VyRGVmKTtcbiAgICBzaGFyZWRQcm9wZXJ0eURlZmluaXRpb24uc2V0ID0gbm9vcDtcbiAgfSBlbHNlIHtcbiAgICBzaGFyZWRQcm9wZXJ0eURlZmluaXRpb24uZ2V0ID0gdXNlckRlZi5nZXRcbiAgICAgID8gc2hvdWxkQ2FjaGUgJiYgdXNlckRlZi5jYWNoZSAhPT0gZmFsc2VcbiAgICAgICAgPyBjcmVhdGVDb21wdXRlZEdldHRlcihrZXkpXG4gICAgICAgIDogY3JlYXRlR2V0dGVySW52b2tlcih1c2VyRGVmLmdldClcbiAgICAgIDogbm9vcDtcbiAgICBzaGFyZWRQcm9wZXJ0eURlZmluaXRpb24uc2V0ID0gdXNlckRlZi5zZXQgfHwgbm9vcDtcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJlxuICAgICAgc2hhcmVkUHJvcGVydHlEZWZpbml0aW9uLnNldCA9PT0gbm9vcCkge1xuICAgIHNoYXJlZFByb3BlcnR5RGVmaW5pdGlvbi5zZXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB3YXJuKFxuICAgICAgICAoXCJDb21wdXRlZCBwcm9wZXJ0eSBcXFwiXCIgKyBrZXkgKyBcIlxcXCIgd2FzIGFzc2lnbmVkIHRvIGJ1dCBpdCBoYXMgbm8gc2V0dGVyLlwiKSxcbiAgICAgICAgdGhpc1xuICAgICAgKTtcbiAgICB9O1xuICB9XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc2hhcmVkUHJvcGVydHlEZWZpbml0aW9uKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlQ29tcHV0ZWRHZXR0ZXIgKGtleSkge1xuICByZXR1cm4gZnVuY3Rpb24gY29tcHV0ZWRHZXR0ZXIgKCkge1xuICAgIHZhciB3YXRjaGVyID0gdGhpcy5fY29tcHV0ZWRXYXRjaGVycyAmJiB0aGlzLl9jb21wdXRlZFdhdGNoZXJzW2tleV07XG4gICAgaWYgKHdhdGNoZXIpIHtcbiAgICAgIGlmICh3YXRjaGVyLmRpcnR5KSB7XG4gICAgICAgIHdhdGNoZXIuZXZhbHVhdGUoKTtcbiAgICAgIH1cbiAgICAgIGlmIChEZXAudGFyZ2V0KSB7XG4gICAgICAgIHdhdGNoZXIuZGVwZW5kKCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gd2F0Y2hlci52YWx1ZVxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVHZXR0ZXJJbnZva2VyKGZuKSB7XG4gIHJldHVybiBmdW5jdGlvbiBjb21wdXRlZEdldHRlciAoKSB7XG4gICAgcmV0dXJuIGZuLmNhbGwodGhpcywgdGhpcylcbiAgfVxufVxuXG5mdW5jdGlvbiBpbml0TWV0aG9kcyAodm0sIG1ldGhvZHMpIHtcbiAgdmFyIHByb3BzID0gdm0uJG9wdGlvbnMucHJvcHM7XG4gIGZvciAodmFyIGtleSBpbiBtZXRob2RzKSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmICh0eXBlb2YgbWV0aG9kc1trZXldICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHdhcm4oXG4gICAgICAgICAgXCJNZXRob2QgXFxcIlwiICsga2V5ICsgXCJcXFwiIGhhcyB0eXBlIFxcXCJcIiArICh0eXBlb2YgbWV0aG9kc1trZXldKSArIFwiXFxcIiBpbiB0aGUgY29tcG9uZW50IGRlZmluaXRpb24uIFwiICtcbiAgICAgICAgICBcIkRpZCB5b3UgcmVmZXJlbmNlIHRoZSBmdW5jdGlvbiBjb3JyZWN0bHk/XCIsXG4gICAgICAgICAgdm1cbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIGlmIChwcm9wcyAmJiBoYXNPd24ocHJvcHMsIGtleSkpIHtcbiAgICAgICAgd2FybihcbiAgICAgICAgICAoXCJNZXRob2QgXFxcIlwiICsga2V5ICsgXCJcXFwiIGhhcyBhbHJlYWR5IGJlZW4gZGVmaW5lZCBhcyBhIHByb3AuXCIpLFxuICAgICAgICAgIHZtXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICBpZiAoKGtleSBpbiB2bSkgJiYgaXNSZXNlcnZlZChrZXkpKSB7XG4gICAgICAgIHdhcm4oXG4gICAgICAgICAgXCJNZXRob2QgXFxcIlwiICsga2V5ICsgXCJcXFwiIGNvbmZsaWN0cyB3aXRoIGFuIGV4aXN0aW5nIFZ1ZSBpbnN0YW5jZSBtZXRob2QuIFwiICtcbiAgICAgICAgICBcIkF2b2lkIGRlZmluaW5nIGNvbXBvbmVudCBtZXRob2RzIHRoYXQgc3RhcnQgd2l0aCBfIG9yICQuXCJcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG4gICAgdm1ba2V5XSA9IHR5cGVvZiBtZXRob2RzW2tleV0gIT09ICdmdW5jdGlvbicgPyBub29wIDogYmluZChtZXRob2RzW2tleV0sIHZtKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpbml0V2F0Y2ggKHZtLCB3YXRjaCkge1xuICBmb3IgKHZhciBrZXkgaW4gd2F0Y2gpIHtcbiAgICB2YXIgaGFuZGxlciA9IHdhdGNoW2tleV07XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoaGFuZGxlcikpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaGFuZGxlci5sZW5ndGg7IGkrKykge1xuICAgICAgICBjcmVhdGVXYXRjaGVyKHZtLCBrZXksIGhhbmRsZXJbaV0pO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjcmVhdGVXYXRjaGVyKHZtLCBrZXksIGhhbmRsZXIpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVXYXRjaGVyIChcbiAgdm0sXG4gIGV4cE9yRm4sXG4gIGhhbmRsZXIsXG4gIG9wdGlvbnNcbikge1xuICBpZiAoaXNQbGFpbk9iamVjdChoYW5kbGVyKSkge1xuICAgIG9wdGlvbnMgPSBoYW5kbGVyO1xuICAgIGhhbmRsZXIgPSBoYW5kbGVyLmhhbmRsZXI7XG4gIH1cbiAgaWYgKHR5cGVvZiBoYW5kbGVyID09PSAnc3RyaW5nJykge1xuICAgIGhhbmRsZXIgPSB2bVtoYW5kbGVyXTtcbiAgfVxuICByZXR1cm4gdm0uJHdhdGNoKGV4cE9yRm4sIGhhbmRsZXIsIG9wdGlvbnMpXG59XG5cbmZ1bmN0aW9uIHN0YXRlTWl4aW4gKFZ1ZSkge1xuICAvLyBmbG93IHNvbWVob3cgaGFzIHByb2JsZW1zIHdpdGggZGlyZWN0bHkgZGVjbGFyZWQgZGVmaW5pdGlvbiBvYmplY3RcbiAgLy8gd2hlbiB1c2luZyBPYmplY3QuZGVmaW5lUHJvcGVydHksIHNvIHdlIGhhdmUgdG8gcHJvY2VkdXJhbGx5IGJ1aWxkIHVwXG4gIC8vIHRoZSBvYmplY3QgaGVyZS5cbiAgdmFyIGRhdGFEZWYgPSB7fTtcbiAgZGF0YURlZi5nZXQgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLl9kYXRhIH07XG4gIHZhciBwcm9wc0RlZiA9IHt9O1xuICBwcm9wc0RlZi5nZXQgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLl9wcm9wcyB9O1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGRhdGFEZWYuc2V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgd2FybihcbiAgICAgICAgJ0F2b2lkIHJlcGxhY2luZyBpbnN0YW5jZSByb290ICRkYXRhLiAnICtcbiAgICAgICAgJ1VzZSBuZXN0ZWQgZGF0YSBwcm9wZXJ0aWVzIGluc3RlYWQuJyxcbiAgICAgICAgdGhpc1xuICAgICAgKTtcbiAgICB9O1xuICAgIHByb3BzRGVmLnNldCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHdhcm4oXCIkcHJvcHMgaXMgcmVhZG9ubHkuXCIsIHRoaXMpO1xuICAgIH07XG4gIH1cbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFZ1ZS5wcm90b3R5cGUsICckZGF0YScsIGRhdGFEZWYpO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoVnVlLnByb3RvdHlwZSwgJyRwcm9wcycsIHByb3BzRGVmKTtcblxuICBWdWUucHJvdG90eXBlLiRzZXQgPSBzZXQ7XG4gIFZ1ZS5wcm90b3R5cGUuJGRlbGV0ZSA9IGRlbDtcblxuICBWdWUucHJvdG90eXBlLiR3YXRjaCA9IGZ1bmN0aW9uIChcbiAgICBleHBPckZuLFxuICAgIGNiLFxuICAgIG9wdGlvbnNcbiAgKSB7XG4gICAgdmFyIHZtID0gdGhpcztcbiAgICBpZiAoaXNQbGFpbk9iamVjdChjYikpIHtcbiAgICAgIHJldHVybiBjcmVhdGVXYXRjaGVyKHZtLCBleHBPckZuLCBjYiwgb3B0aW9ucylcbiAgICB9XG4gICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gICAgb3B0aW9ucy51c2VyID0gdHJ1ZTtcbiAgICB2YXIgd2F0Y2hlciA9IG5ldyBXYXRjaGVyKHZtLCBleHBPckZuLCBjYiwgb3B0aW9ucyk7XG4gICAgaWYgKG9wdGlvbnMuaW1tZWRpYXRlKSB7XG4gICAgICB0cnkge1xuICAgICAgICBjYi5jYWxsKHZtLCB3YXRjaGVyLnZhbHVlKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGhhbmRsZUVycm9yKGVycm9yLCB2bSwgKFwiY2FsbGJhY2sgZm9yIGltbWVkaWF0ZSB3YXRjaGVyIFxcXCJcIiArICh3YXRjaGVyLmV4cHJlc3Npb24pICsgXCJcXFwiXCIpKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHVud2F0Y2hGbiAoKSB7XG4gICAgICB3YXRjaGVyLnRlYXJkb3duKCk7XG4gICAgfVxuICB9O1xufVxuXG4vKiAgKi9cblxudmFyIHVpZCQzID0gMDtcblxuZnVuY3Rpb24gaW5pdE1peGluIChWdWUpIHtcbiAgVnVlLnByb3RvdHlwZS5faW5pdCA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgdmFyIHZtID0gdGhpcztcbiAgICAvLyBhIHVpZFxuICAgIHZtLl91aWQgPSB1aWQkMysrO1xuXG4gICAgdmFyIHN0YXJ0VGFnLCBlbmRUYWc7XG4gICAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgY29uZmlnLnBlcmZvcm1hbmNlICYmIG1hcmspIHtcbiAgICAgIHN0YXJ0VGFnID0gXCJ2dWUtcGVyZi1zdGFydDpcIiArICh2bS5fdWlkKTtcbiAgICAgIGVuZFRhZyA9IFwidnVlLXBlcmYtZW5kOlwiICsgKHZtLl91aWQpO1xuICAgICAgbWFyayhzdGFydFRhZyk7XG4gICAgfVxuXG4gICAgLy8gYSBmbGFnIHRvIGF2b2lkIHRoaXMgYmVpbmcgb2JzZXJ2ZWRcbiAgICB2bS5faXNWdWUgPSB0cnVlO1xuICAgIC8vIG1lcmdlIG9wdGlvbnNcbiAgICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLl9pc0NvbXBvbmVudCkge1xuICAgICAgLy8gb3B0aW1pemUgaW50ZXJuYWwgY29tcG9uZW50IGluc3RhbnRpYXRpb25cbiAgICAgIC8vIHNpbmNlIGR5bmFtaWMgb3B0aW9ucyBtZXJnaW5nIGlzIHByZXR0eSBzbG93LCBhbmQgbm9uZSBvZiB0aGVcbiAgICAgIC8vIGludGVybmFsIGNvbXBvbmVudCBvcHRpb25zIG5lZWRzIHNwZWNpYWwgdHJlYXRtZW50LlxuICAgICAgaW5pdEludGVybmFsQ29tcG9uZW50KHZtLCBvcHRpb25zKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdm0uJG9wdGlvbnMgPSBtZXJnZU9wdGlvbnMoXG4gICAgICAgIHJlc29sdmVDb25zdHJ1Y3Rvck9wdGlvbnModm0uY29uc3RydWN0b3IpLFxuICAgICAgICBvcHRpb25zIHx8IHt9LFxuICAgICAgICB2bVxuICAgICAgKTtcbiAgICB9XG4gICAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaW5pdFByb3h5KHZtKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdm0uX3JlbmRlclByb3h5ID0gdm07XG4gICAgfVxuICAgIC8vIGV4cG9zZSByZWFsIHNlbGZcbiAgICB2bS5fc2VsZiA9IHZtO1xuICAgIGluaXRMaWZlY3ljbGUodm0pO1xuICAgIGluaXRFdmVudHModm0pO1xuICAgIGluaXRSZW5kZXIodm0pO1xuICAgIGNhbGxIb29rKHZtLCAnYmVmb3JlQ3JlYXRlJyk7XG4gICAgaW5pdEluamVjdGlvbnModm0pOyAvLyByZXNvbHZlIGluamVjdGlvbnMgYmVmb3JlIGRhdGEvcHJvcHNcbiAgICBpbml0U3RhdGUodm0pO1xuICAgIGluaXRQcm92aWRlKHZtKTsgLy8gcmVzb2x2ZSBwcm92aWRlIGFmdGVyIGRhdGEvcHJvcHNcbiAgICBjYWxsSG9vayh2bSwgJ2NyZWF0ZWQnKTtcblxuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGNvbmZpZy5wZXJmb3JtYW5jZSAmJiBtYXJrKSB7XG4gICAgICB2bS5fbmFtZSA9IGZvcm1hdENvbXBvbmVudE5hbWUodm0sIGZhbHNlKTtcbiAgICAgIG1hcmsoZW5kVGFnKTtcbiAgICAgIG1lYXN1cmUoKFwidnVlIFwiICsgKHZtLl9uYW1lKSArIFwiIGluaXRcIiksIHN0YXJ0VGFnLCBlbmRUYWcpO1xuICAgIH1cblxuICAgIGlmICh2bS4kb3B0aW9ucy5lbCkge1xuICAgICAgdm0uJG1vdW50KHZtLiRvcHRpb25zLmVsKTtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIGluaXRJbnRlcm5hbENvbXBvbmVudCAodm0sIG9wdGlvbnMpIHtcbiAgdmFyIG9wdHMgPSB2bS4kb3B0aW9ucyA9IE9iamVjdC5jcmVhdGUodm0uY29uc3RydWN0b3Iub3B0aW9ucyk7XG4gIC8vIGRvaW5nIHRoaXMgYmVjYXVzZSBpdCdzIGZhc3RlciB0aGFuIGR5bmFtaWMgZW51bWVyYXRpb24uXG4gIHZhciBwYXJlbnRWbm9kZSA9IG9wdGlvbnMuX3BhcmVudFZub2RlO1xuICBvcHRzLnBhcmVudCA9IG9wdGlvbnMucGFyZW50O1xuICBvcHRzLl9wYXJlbnRWbm9kZSA9IHBhcmVudFZub2RlO1xuXG4gIHZhciB2bm9kZUNvbXBvbmVudE9wdGlvbnMgPSBwYXJlbnRWbm9kZS5jb21wb25lbnRPcHRpb25zO1xuICBvcHRzLnByb3BzRGF0YSA9IHZub2RlQ29tcG9uZW50T3B0aW9ucy5wcm9wc0RhdGE7XG4gIG9wdHMuX3BhcmVudExpc3RlbmVycyA9IHZub2RlQ29tcG9uZW50T3B0aW9ucy5saXN0ZW5lcnM7XG4gIG9wdHMuX3JlbmRlckNoaWxkcmVuID0gdm5vZGVDb21wb25lbnRPcHRpb25zLmNoaWxkcmVuO1xuICBvcHRzLl9jb21wb25lbnRUYWcgPSB2bm9kZUNvbXBvbmVudE9wdGlvbnMudGFnO1xuXG4gIGlmIChvcHRpb25zLnJlbmRlcikge1xuICAgIG9wdHMucmVuZGVyID0gb3B0aW9ucy5yZW5kZXI7XG4gICAgb3B0cy5zdGF0aWNSZW5kZXJGbnMgPSBvcHRpb25zLnN0YXRpY1JlbmRlckZucztcbiAgfVxufVxuXG5mdW5jdGlvbiByZXNvbHZlQ29uc3RydWN0b3JPcHRpb25zIChDdG9yKSB7XG4gIHZhciBvcHRpb25zID0gQ3Rvci5vcHRpb25zO1xuICBpZiAoQ3Rvci5zdXBlcikge1xuICAgIHZhciBzdXBlck9wdGlvbnMgPSByZXNvbHZlQ29uc3RydWN0b3JPcHRpb25zKEN0b3Iuc3VwZXIpO1xuICAgIHZhciBjYWNoZWRTdXBlck9wdGlvbnMgPSBDdG9yLnN1cGVyT3B0aW9ucztcbiAgICBpZiAoc3VwZXJPcHRpb25zICE9PSBjYWNoZWRTdXBlck9wdGlvbnMpIHtcbiAgICAgIC8vIHN1cGVyIG9wdGlvbiBjaGFuZ2VkLFxuICAgICAgLy8gbmVlZCB0byByZXNvbHZlIG5ldyBvcHRpb25zLlxuICAgICAgQ3Rvci5zdXBlck9wdGlvbnMgPSBzdXBlck9wdGlvbnM7XG4gICAgICAvLyBjaGVjayBpZiB0aGVyZSBhcmUgYW55IGxhdGUtbW9kaWZpZWQvYXR0YWNoZWQgb3B0aW9ucyAoIzQ5NzYpXG4gICAgICB2YXIgbW9kaWZpZWRPcHRpb25zID0gcmVzb2x2ZU1vZGlmaWVkT3B0aW9ucyhDdG9yKTtcbiAgICAgIC8vIHVwZGF0ZSBiYXNlIGV4dGVuZCBvcHRpb25zXG4gICAgICBpZiAobW9kaWZpZWRPcHRpb25zKSB7XG4gICAgICAgIGV4dGVuZChDdG9yLmV4dGVuZE9wdGlvbnMsIG1vZGlmaWVkT3B0aW9ucyk7XG4gICAgICB9XG4gICAgICBvcHRpb25zID0gQ3Rvci5vcHRpb25zID0gbWVyZ2VPcHRpb25zKHN1cGVyT3B0aW9ucywgQ3Rvci5leHRlbmRPcHRpb25zKTtcbiAgICAgIGlmIChvcHRpb25zLm5hbWUpIHtcbiAgICAgICAgb3B0aW9ucy5jb21wb25lbnRzW29wdGlvbnMubmFtZV0gPSBDdG9yO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gb3B0aW9uc1xufVxuXG5mdW5jdGlvbiByZXNvbHZlTW9kaWZpZWRPcHRpb25zIChDdG9yKSB7XG4gIHZhciBtb2RpZmllZDtcbiAgdmFyIGxhdGVzdCA9IEN0b3Iub3B0aW9ucztcbiAgdmFyIHNlYWxlZCA9IEN0b3Iuc2VhbGVkT3B0aW9ucztcbiAgZm9yICh2YXIga2V5IGluIGxhdGVzdCkge1xuICAgIGlmIChsYXRlc3Rba2V5XSAhPT0gc2VhbGVkW2tleV0pIHtcbiAgICAgIGlmICghbW9kaWZpZWQpIHsgbW9kaWZpZWQgPSB7fTsgfVxuICAgICAgbW9kaWZpZWRba2V5XSA9IGxhdGVzdFtrZXldO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbW9kaWZpZWRcbn1cblxuZnVuY3Rpb24gVnVlIChvcHRpb25zKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmXG4gICAgISh0aGlzIGluc3RhbmNlb2YgVnVlKVxuICApIHtcbiAgICB3YXJuKCdWdWUgaXMgYSBjb25zdHJ1Y3RvciBhbmQgc2hvdWxkIGJlIGNhbGxlZCB3aXRoIHRoZSBgbmV3YCBrZXl3b3JkJyk7XG4gIH1cbiAgdGhpcy5faW5pdChvcHRpb25zKTtcbn1cblxuaW5pdE1peGluKFZ1ZSk7XG5zdGF0ZU1peGluKFZ1ZSk7XG5ldmVudHNNaXhpbihWdWUpO1xubGlmZWN5Y2xlTWl4aW4oVnVlKTtcbnJlbmRlck1peGluKFZ1ZSk7XG5cbi8qICAqL1xuXG5mdW5jdGlvbiBpbml0VXNlIChWdWUpIHtcbiAgVnVlLnVzZSA9IGZ1bmN0aW9uIChwbHVnaW4pIHtcbiAgICB2YXIgaW5zdGFsbGVkUGx1Z2lucyA9ICh0aGlzLl9pbnN0YWxsZWRQbHVnaW5zIHx8ICh0aGlzLl9pbnN0YWxsZWRQbHVnaW5zID0gW10pKTtcbiAgICBpZiAoaW5zdGFsbGVkUGx1Z2lucy5pbmRleE9mKHBsdWdpbikgPiAtMSkge1xuICAgICAgcmV0dXJuIHRoaXNcbiAgICB9XG5cbiAgICAvLyBhZGRpdGlvbmFsIHBhcmFtZXRlcnNcbiAgICB2YXIgYXJncyA9IHRvQXJyYXkoYXJndW1lbnRzLCAxKTtcbiAgICBhcmdzLnVuc2hpZnQodGhpcyk7XG4gICAgaWYgKHR5cGVvZiBwbHVnaW4uaW5zdGFsbCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcGx1Z2luLmluc3RhbGwuYXBwbHkocGx1Z2luLCBhcmdzKTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBwbHVnaW4gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHBsdWdpbi5hcHBseShudWxsLCBhcmdzKTtcbiAgICB9XG4gICAgaW5zdGFsbGVkUGx1Z2lucy5wdXNoKHBsdWdpbik7XG4gICAgcmV0dXJuIHRoaXNcbiAgfTtcbn1cblxuLyogICovXG5cbmZ1bmN0aW9uIGluaXRNaXhpbiQxIChWdWUpIHtcbiAgVnVlLm1peGluID0gZnVuY3Rpb24gKG1peGluKSB7XG4gICAgdGhpcy5vcHRpb25zID0gbWVyZ2VPcHRpb25zKHRoaXMub3B0aW9ucywgbWl4aW4pO1xuICAgIHJldHVybiB0aGlzXG4gIH07XG59XG5cbi8qICAqL1xuXG5mdW5jdGlvbiBpbml0RXh0ZW5kIChWdWUpIHtcbiAgLyoqXG4gICAqIEVhY2ggaW5zdGFuY2UgY29uc3RydWN0b3IsIGluY2x1ZGluZyBWdWUsIGhhcyBhIHVuaXF1ZVxuICAgKiBjaWQuIFRoaXMgZW5hYmxlcyB1cyB0byBjcmVhdGUgd3JhcHBlZCBcImNoaWxkXG4gICAqIGNvbnN0cnVjdG9yc1wiIGZvciBwcm90b3R5cGFsIGluaGVyaXRhbmNlIGFuZCBjYWNoZSB0aGVtLlxuICAgKi9cbiAgVnVlLmNpZCA9IDA7XG4gIHZhciBjaWQgPSAxO1xuXG4gIC8qKlxuICAgKiBDbGFzcyBpbmhlcml0YW5jZVxuICAgKi9cbiAgVnVlLmV4dGVuZCA9IGZ1bmN0aW9uIChleHRlbmRPcHRpb25zKSB7XG4gICAgZXh0ZW5kT3B0aW9ucyA9IGV4dGVuZE9wdGlvbnMgfHwge307XG4gICAgdmFyIFN1cGVyID0gdGhpcztcbiAgICB2YXIgU3VwZXJJZCA9IFN1cGVyLmNpZDtcbiAgICB2YXIgY2FjaGVkQ3RvcnMgPSBleHRlbmRPcHRpb25zLl9DdG9yIHx8IChleHRlbmRPcHRpb25zLl9DdG9yID0ge30pO1xuICAgIGlmIChjYWNoZWRDdG9yc1tTdXBlcklkXSkge1xuICAgICAgcmV0dXJuIGNhY2hlZEN0b3JzW1N1cGVySWRdXG4gICAgfVxuXG4gICAgdmFyIG5hbWUgPSBleHRlbmRPcHRpb25zLm5hbWUgfHwgU3VwZXIub3B0aW9ucy5uYW1lO1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIG5hbWUpIHtcbiAgICAgIHZhbGlkYXRlQ29tcG9uZW50TmFtZShuYW1lKTtcbiAgICB9XG5cbiAgICB2YXIgU3ViID0gZnVuY3Rpb24gVnVlQ29tcG9uZW50IChvcHRpb25zKSB7XG4gICAgICB0aGlzLl9pbml0KG9wdGlvbnMpO1xuICAgIH07XG4gICAgU3ViLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoU3VwZXIucHJvdG90eXBlKTtcbiAgICBTdWIucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gU3ViO1xuICAgIFN1Yi5jaWQgPSBjaWQrKztcbiAgICBTdWIub3B0aW9ucyA9IG1lcmdlT3B0aW9ucyhcbiAgICAgIFN1cGVyLm9wdGlvbnMsXG4gICAgICBleHRlbmRPcHRpb25zXG4gICAgKTtcbiAgICBTdWJbJ3N1cGVyJ10gPSBTdXBlcjtcblxuICAgIC8vIEZvciBwcm9wcyBhbmQgY29tcHV0ZWQgcHJvcGVydGllcywgd2UgZGVmaW5lIHRoZSBwcm94eSBnZXR0ZXJzIG9uXG4gICAgLy8gdGhlIFZ1ZSBpbnN0YW5jZXMgYXQgZXh0ZW5zaW9uIHRpbWUsIG9uIHRoZSBleHRlbmRlZCBwcm90b3R5cGUuIFRoaXNcbiAgICAvLyBhdm9pZHMgT2JqZWN0LmRlZmluZVByb3BlcnR5IGNhbGxzIGZvciBlYWNoIGluc3RhbmNlIGNyZWF0ZWQuXG4gICAgaWYgKFN1Yi5vcHRpb25zLnByb3BzKSB7XG4gICAgICBpbml0UHJvcHMkMShTdWIpO1xuICAgIH1cbiAgICBpZiAoU3ViLm9wdGlvbnMuY29tcHV0ZWQpIHtcbiAgICAgIGluaXRDb21wdXRlZCQxKFN1Yik7XG4gICAgfVxuXG4gICAgLy8gYWxsb3cgZnVydGhlciBleHRlbnNpb24vbWl4aW4vcGx1Z2luIHVzYWdlXG4gICAgU3ViLmV4dGVuZCA9IFN1cGVyLmV4dGVuZDtcbiAgICBTdWIubWl4aW4gPSBTdXBlci5taXhpbjtcbiAgICBTdWIudXNlID0gU3VwZXIudXNlO1xuXG4gICAgLy8gY3JlYXRlIGFzc2V0IHJlZ2lzdGVycywgc28gZXh0ZW5kZWQgY2xhc3Nlc1xuICAgIC8vIGNhbiBoYXZlIHRoZWlyIHByaXZhdGUgYXNzZXRzIHRvby5cbiAgICBBU1NFVF9UWVBFUy5mb3JFYWNoKGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgICBTdWJbdHlwZV0gPSBTdXBlclt0eXBlXTtcbiAgICB9KTtcbiAgICAvLyBlbmFibGUgcmVjdXJzaXZlIHNlbGYtbG9va3VwXG4gICAgaWYgKG5hbWUpIHtcbiAgICAgIFN1Yi5vcHRpb25zLmNvbXBvbmVudHNbbmFtZV0gPSBTdWI7XG4gICAgfVxuXG4gICAgLy8ga2VlcCBhIHJlZmVyZW5jZSB0byB0aGUgc3VwZXIgb3B0aW9ucyBhdCBleHRlbnNpb24gdGltZS5cbiAgICAvLyBsYXRlciBhdCBpbnN0YW50aWF0aW9uIHdlIGNhbiBjaGVjayBpZiBTdXBlcidzIG9wdGlvbnMgaGF2ZVxuICAgIC8vIGJlZW4gdXBkYXRlZC5cbiAgICBTdWIuc3VwZXJPcHRpb25zID0gU3VwZXIub3B0aW9ucztcbiAgICBTdWIuZXh0ZW5kT3B0aW9ucyA9IGV4dGVuZE9wdGlvbnM7XG4gICAgU3ViLnNlYWxlZE9wdGlvbnMgPSBleHRlbmQoe30sIFN1Yi5vcHRpb25zKTtcblxuICAgIC8vIGNhY2hlIGNvbnN0cnVjdG9yXG4gICAgY2FjaGVkQ3RvcnNbU3VwZXJJZF0gPSBTdWI7XG4gICAgcmV0dXJuIFN1YlxuICB9O1xufVxuXG5mdW5jdGlvbiBpbml0UHJvcHMkMSAoQ29tcCkge1xuICB2YXIgcHJvcHMgPSBDb21wLm9wdGlvbnMucHJvcHM7XG4gIGZvciAodmFyIGtleSBpbiBwcm9wcykge1xuICAgIHByb3h5KENvbXAucHJvdG90eXBlLCBcIl9wcm9wc1wiLCBrZXkpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGluaXRDb21wdXRlZCQxIChDb21wKSB7XG4gIHZhciBjb21wdXRlZCA9IENvbXAub3B0aW9ucy5jb21wdXRlZDtcbiAgZm9yICh2YXIga2V5IGluIGNvbXB1dGVkKSB7XG4gICAgZGVmaW5lQ29tcHV0ZWQoQ29tcC5wcm90b3R5cGUsIGtleSwgY29tcHV0ZWRba2V5XSk7XG4gIH1cbn1cblxuLyogICovXG5cbmZ1bmN0aW9uIGluaXRBc3NldFJlZ2lzdGVycyAoVnVlKSB7XG4gIC8qKlxuICAgKiBDcmVhdGUgYXNzZXQgcmVnaXN0cmF0aW9uIG1ldGhvZHMuXG4gICAqL1xuICBBU1NFVF9UWVBFUy5mb3JFYWNoKGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgVnVlW3R5cGVdID0gZnVuY3Rpb24gKFxuICAgICAgaWQsXG4gICAgICBkZWZpbml0aW9uXG4gICAgKSB7XG4gICAgICBpZiAoIWRlZmluaXRpb24pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9uc1t0eXBlICsgJ3MnXVtpZF1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB0eXBlID09PSAnY29tcG9uZW50Jykge1xuICAgICAgICAgIHZhbGlkYXRlQ29tcG9uZW50TmFtZShpZCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGUgPT09ICdjb21wb25lbnQnICYmIGlzUGxhaW5PYmplY3QoZGVmaW5pdGlvbikpIHtcbiAgICAgICAgICBkZWZpbml0aW9uLm5hbWUgPSBkZWZpbml0aW9uLm5hbWUgfHwgaWQ7XG4gICAgICAgICAgZGVmaW5pdGlvbiA9IHRoaXMub3B0aW9ucy5fYmFzZS5leHRlbmQoZGVmaW5pdGlvbik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGUgPT09ICdkaXJlY3RpdmUnICYmIHR5cGVvZiBkZWZpbml0aW9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgZGVmaW5pdGlvbiA9IHsgYmluZDogZGVmaW5pdGlvbiwgdXBkYXRlOiBkZWZpbml0aW9uIH07XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5vcHRpb25zW3R5cGUgKyAncyddW2lkXSA9IGRlZmluaXRpb247XG4gICAgICAgIHJldHVybiBkZWZpbml0aW9uXG4gICAgICB9XG4gICAgfTtcbiAgfSk7XG59XG5cbi8qICAqL1xuXG5cblxuZnVuY3Rpb24gZ2V0Q29tcG9uZW50TmFtZSAob3B0cykge1xuICByZXR1cm4gb3B0cyAmJiAob3B0cy5DdG9yLm9wdGlvbnMubmFtZSB8fCBvcHRzLnRhZylcbn1cblxuZnVuY3Rpb24gbWF0Y2hlcyAocGF0dGVybiwgbmFtZSkge1xuICBpZiAoQXJyYXkuaXNBcnJheShwYXR0ZXJuKSkge1xuICAgIHJldHVybiBwYXR0ZXJuLmluZGV4T2YobmFtZSkgPiAtMVxuICB9IGVsc2UgaWYgKHR5cGVvZiBwYXR0ZXJuID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBwYXR0ZXJuLnNwbGl0KCcsJykuaW5kZXhPZihuYW1lKSA+IC0xXG4gIH0gZWxzZSBpZiAoaXNSZWdFeHAocGF0dGVybikpIHtcbiAgICByZXR1cm4gcGF0dGVybi50ZXN0KG5hbWUpXG4gIH1cbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgcmV0dXJuIGZhbHNlXG59XG5cbmZ1bmN0aW9uIHBydW5lQ2FjaGUgKGtlZXBBbGl2ZUluc3RhbmNlLCBmaWx0ZXIpIHtcbiAgdmFyIGNhY2hlID0ga2VlcEFsaXZlSW5zdGFuY2UuY2FjaGU7XG4gIHZhciBrZXlzID0ga2VlcEFsaXZlSW5zdGFuY2Uua2V5cztcbiAgdmFyIF92bm9kZSA9IGtlZXBBbGl2ZUluc3RhbmNlLl92bm9kZTtcbiAgZm9yICh2YXIga2V5IGluIGNhY2hlKSB7XG4gICAgdmFyIGNhY2hlZE5vZGUgPSBjYWNoZVtrZXldO1xuICAgIGlmIChjYWNoZWROb2RlKSB7XG4gICAgICB2YXIgbmFtZSA9IGdldENvbXBvbmVudE5hbWUoY2FjaGVkTm9kZS5jb21wb25lbnRPcHRpb25zKTtcbiAgICAgIGlmIChuYW1lICYmICFmaWx0ZXIobmFtZSkpIHtcbiAgICAgICAgcHJ1bmVDYWNoZUVudHJ5KGNhY2hlLCBrZXksIGtleXMsIF92bm9kZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIHBydW5lQ2FjaGVFbnRyeSAoXG4gIGNhY2hlLFxuICBrZXksXG4gIGtleXMsXG4gIGN1cnJlbnRcbikge1xuICB2YXIgY2FjaGVkJCQxID0gY2FjaGVba2V5XTtcbiAgaWYgKGNhY2hlZCQkMSAmJiAoIWN1cnJlbnQgfHwgY2FjaGVkJCQxLnRhZyAhPT0gY3VycmVudC50YWcpKSB7XG4gICAgY2FjaGVkJCQxLmNvbXBvbmVudEluc3RhbmNlLiRkZXN0cm95KCk7XG4gIH1cbiAgY2FjaGVba2V5XSA9IG51bGw7XG4gIHJlbW92ZShrZXlzLCBrZXkpO1xufVxuXG52YXIgcGF0dGVyblR5cGVzID0gW1N0cmluZywgUmVnRXhwLCBBcnJheV07XG5cbnZhciBLZWVwQWxpdmUgPSB7XG4gIG5hbWU6ICdrZWVwLWFsaXZlJyxcbiAgYWJzdHJhY3Q6IHRydWUsXG5cbiAgcHJvcHM6IHtcbiAgICBpbmNsdWRlOiBwYXR0ZXJuVHlwZXMsXG4gICAgZXhjbHVkZTogcGF0dGVyblR5cGVzLFxuICAgIG1heDogW1N0cmluZywgTnVtYmVyXVxuICB9LFxuXG4gIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQgKCkge1xuICAgIHRoaXMuY2FjaGUgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgIHRoaXMua2V5cyA9IFtdO1xuICB9LFxuXG4gIGRlc3Ryb3llZDogZnVuY3Rpb24gZGVzdHJveWVkICgpIHtcbiAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy5jYWNoZSkge1xuICAgICAgcHJ1bmVDYWNoZUVudHJ5KHRoaXMuY2FjaGUsIGtleSwgdGhpcy5rZXlzKTtcbiAgICB9XG4gIH0sXG5cbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCAoKSB7XG4gICAgdmFyIHRoaXMkMSA9IHRoaXM7XG5cbiAgICB0aGlzLiR3YXRjaCgnaW5jbHVkZScsIGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgIHBydW5lQ2FjaGUodGhpcyQxLCBmdW5jdGlvbiAobmFtZSkgeyByZXR1cm4gbWF0Y2hlcyh2YWwsIG5hbWUpOyB9KTtcbiAgICB9KTtcbiAgICB0aGlzLiR3YXRjaCgnZXhjbHVkZScsIGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgIHBydW5lQ2FjaGUodGhpcyQxLCBmdW5jdGlvbiAobmFtZSkgeyByZXR1cm4gIW1hdGNoZXModmFsLCBuYW1lKTsgfSk7XG4gICAgfSk7XG4gIH0sXG5cbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIgKCkge1xuICAgIHZhciBzbG90ID0gdGhpcy4kc2xvdHMuZGVmYXVsdDtcbiAgICB2YXIgdm5vZGUgPSBnZXRGaXJzdENvbXBvbmVudENoaWxkKHNsb3QpO1xuICAgIHZhciBjb21wb25lbnRPcHRpb25zID0gdm5vZGUgJiYgdm5vZGUuY29tcG9uZW50T3B0aW9ucztcbiAgICBpZiAoY29tcG9uZW50T3B0aW9ucykge1xuICAgICAgLy8gY2hlY2sgcGF0dGVyblxuICAgICAgdmFyIG5hbWUgPSBnZXRDb21wb25lbnROYW1lKGNvbXBvbmVudE9wdGlvbnMpO1xuICAgICAgdmFyIHJlZiA9IHRoaXM7XG4gICAgICB2YXIgaW5jbHVkZSA9IHJlZi5pbmNsdWRlO1xuICAgICAgdmFyIGV4Y2x1ZGUgPSByZWYuZXhjbHVkZTtcbiAgICAgIGlmIChcbiAgICAgICAgLy8gbm90IGluY2x1ZGVkXG4gICAgICAgIChpbmNsdWRlICYmICghbmFtZSB8fCAhbWF0Y2hlcyhpbmNsdWRlLCBuYW1lKSkpIHx8XG4gICAgICAgIC8vIGV4Y2x1ZGVkXG4gICAgICAgIChleGNsdWRlICYmIG5hbWUgJiYgbWF0Y2hlcyhleGNsdWRlLCBuYW1lKSlcbiAgICAgICkge1xuICAgICAgICByZXR1cm4gdm5vZGVcbiAgICAgIH1cblxuICAgICAgdmFyIHJlZiQxID0gdGhpcztcbiAgICAgIHZhciBjYWNoZSA9IHJlZiQxLmNhY2hlO1xuICAgICAgdmFyIGtleXMgPSByZWYkMS5rZXlzO1xuICAgICAgdmFyIGtleSA9IHZub2RlLmtleSA9PSBudWxsXG4gICAgICAgIC8vIHNhbWUgY29uc3RydWN0b3IgbWF5IGdldCByZWdpc3RlcmVkIGFzIGRpZmZlcmVudCBsb2NhbCBjb21wb25lbnRzXG4gICAgICAgIC8vIHNvIGNpZCBhbG9uZSBpcyBub3QgZW5vdWdoICgjMzI2OSlcbiAgICAgICAgPyBjb21wb25lbnRPcHRpb25zLkN0b3IuY2lkICsgKGNvbXBvbmVudE9wdGlvbnMudGFnID8gKFwiOjpcIiArIChjb21wb25lbnRPcHRpb25zLnRhZykpIDogJycpXG4gICAgICAgIDogdm5vZGUua2V5O1xuICAgICAgaWYgKGNhY2hlW2tleV0pIHtcbiAgICAgICAgdm5vZGUuY29tcG9uZW50SW5zdGFuY2UgPSBjYWNoZVtrZXldLmNvbXBvbmVudEluc3RhbmNlO1xuICAgICAgICAvLyBtYWtlIGN1cnJlbnQga2V5IGZyZXNoZXN0XG4gICAgICAgIHJlbW92ZShrZXlzLCBrZXkpO1xuICAgICAgICBrZXlzLnB1c2goa2V5KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNhY2hlW2tleV0gPSB2bm9kZTtcbiAgICAgICAga2V5cy5wdXNoKGtleSk7XG4gICAgICAgIC8vIHBydW5lIG9sZGVzdCBlbnRyeVxuICAgICAgICBpZiAodGhpcy5tYXggJiYga2V5cy5sZW5ndGggPiBwYXJzZUludCh0aGlzLm1heCkpIHtcbiAgICAgICAgICBwcnVuZUNhY2hlRW50cnkoY2FjaGUsIGtleXNbMF0sIGtleXMsIHRoaXMuX3Zub2RlKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB2bm9kZS5kYXRhLmtlZXBBbGl2ZSA9IHRydWU7XG4gICAgfVxuICAgIHJldHVybiB2bm9kZSB8fCAoc2xvdCAmJiBzbG90WzBdKVxuICB9XG59O1xuXG52YXIgYnVpbHRJbkNvbXBvbmVudHMgPSB7XG4gIEtlZXBBbGl2ZTogS2VlcEFsaXZlXG59O1xuXG4vKiAgKi9cblxuZnVuY3Rpb24gaW5pdEdsb2JhbEFQSSAoVnVlKSB7XG4gIC8vIGNvbmZpZ1xuICB2YXIgY29uZmlnRGVmID0ge307XG4gIGNvbmZpZ0RlZi5nZXQgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBjb25maWc7IH07XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgY29uZmlnRGVmLnNldCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHdhcm4oXG4gICAgICAgICdEbyBub3QgcmVwbGFjZSB0aGUgVnVlLmNvbmZpZyBvYmplY3QsIHNldCBpbmRpdmlkdWFsIGZpZWxkcyBpbnN0ZWFkLidcbiAgICAgICk7XG4gICAgfTtcbiAgfVxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoVnVlLCAnY29uZmlnJywgY29uZmlnRGVmKTtcblxuICAvLyBleHBvc2VkIHV0aWwgbWV0aG9kcy5cbiAgLy8gTk9URTogdGhlc2UgYXJlIG5vdCBjb25zaWRlcmVkIHBhcnQgb2YgdGhlIHB1YmxpYyBBUEkgLSBhdm9pZCByZWx5aW5nIG9uXG4gIC8vIHRoZW0gdW5sZXNzIHlvdSBhcmUgYXdhcmUgb2YgdGhlIHJpc2suXG4gIFZ1ZS51dGlsID0ge1xuICAgIHdhcm46IHdhcm4sXG4gICAgZXh0ZW5kOiBleHRlbmQsXG4gICAgbWVyZ2VPcHRpb25zOiBtZXJnZU9wdGlvbnMsXG4gICAgZGVmaW5lUmVhY3RpdmU6IGRlZmluZVJlYWN0aXZlJCQxXG4gIH07XG5cbiAgVnVlLnNldCA9IHNldDtcbiAgVnVlLmRlbGV0ZSA9IGRlbDtcbiAgVnVlLm5leHRUaWNrID0gbmV4dFRpY2s7XG5cbiAgLy8gMi42IGV4cGxpY2l0IG9ic2VydmFibGUgQVBJXG4gIFZ1ZS5vYnNlcnZhYmxlID0gZnVuY3Rpb24gKG9iaikge1xuICAgIG9ic2VydmUob2JqKTtcbiAgICByZXR1cm4gb2JqXG4gIH07XG5cbiAgVnVlLm9wdGlvbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICBBU1NFVF9UWVBFUy5mb3JFYWNoKGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgVnVlLm9wdGlvbnNbdHlwZSArICdzJ10gPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICB9KTtcblxuICAvLyB0aGlzIGlzIHVzZWQgdG8gaWRlbnRpZnkgdGhlIFwiYmFzZVwiIGNvbnN0cnVjdG9yIHRvIGV4dGVuZCBhbGwgcGxhaW4tb2JqZWN0XG4gIC8vIGNvbXBvbmVudHMgd2l0aCBpbiBXZWV4J3MgbXVsdGktaW5zdGFuY2Ugc2NlbmFyaW9zLlxuICBWdWUub3B0aW9ucy5fYmFzZSA9IFZ1ZTtcblxuICBleHRlbmQoVnVlLm9wdGlvbnMuY29tcG9uZW50cywgYnVpbHRJbkNvbXBvbmVudHMpO1xuXG4gIGluaXRVc2UoVnVlKTtcbiAgaW5pdE1peGluJDEoVnVlKTtcbiAgaW5pdEV4dGVuZChWdWUpO1xuICBpbml0QXNzZXRSZWdpc3RlcnMoVnVlKTtcbn1cblxuaW5pdEdsb2JhbEFQSShWdWUpO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoVnVlLnByb3RvdHlwZSwgJyRpc1NlcnZlcicsIHtcbiAgZ2V0OiBpc1NlcnZlclJlbmRlcmluZ1xufSk7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShWdWUucHJvdG90eXBlLCAnJHNzckNvbnRleHQnLCB7XG4gIGdldDogZnVuY3Rpb24gZ2V0ICgpIHtcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgIHJldHVybiB0aGlzLiR2bm9kZSAmJiB0aGlzLiR2bm9kZS5zc3JDb250ZXh0XG4gIH1cbn0pO1xuXG4vLyBleHBvc2UgRnVuY3Rpb25hbFJlbmRlckNvbnRleHQgZm9yIHNzciBydW50aW1lIGhlbHBlciBpbnN0YWxsYXRpb25cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShWdWUsICdGdW5jdGlvbmFsUmVuZGVyQ29udGV4dCcsIHtcbiAgdmFsdWU6IEZ1bmN0aW9uYWxSZW5kZXJDb250ZXh0XG59KTtcblxuVnVlLnZlcnNpb24gPSAnMi42LjEwJztcblxuLyogICovXG5cbi8vIHRoZXNlIGFyZSByZXNlcnZlZCBmb3Igd2ViIGJlY2F1c2UgdGhleSBhcmUgZGlyZWN0bHkgY29tcGlsZWQgYXdheVxuLy8gZHVyaW5nIHRlbXBsYXRlIGNvbXBpbGF0aW9uXG52YXIgaXNSZXNlcnZlZEF0dHIgPSBtYWtlTWFwKCdzdHlsZSxjbGFzcycpO1xuXG4vLyBhdHRyaWJ1dGVzIHRoYXQgc2hvdWxkIGJlIHVzaW5nIHByb3BzIGZvciBiaW5kaW5nXG52YXIgYWNjZXB0VmFsdWUgPSBtYWtlTWFwKCdpbnB1dCx0ZXh0YXJlYSxvcHRpb24sc2VsZWN0LHByb2dyZXNzJyk7XG52YXIgbXVzdFVzZVByb3AgPSBmdW5jdGlvbiAodGFnLCB0eXBlLCBhdHRyKSB7XG4gIHJldHVybiAoXG4gICAgKGF0dHIgPT09ICd2YWx1ZScgJiYgYWNjZXB0VmFsdWUodGFnKSkgJiYgdHlwZSAhPT0gJ2J1dHRvbicgfHxcbiAgICAoYXR0ciA9PT0gJ3NlbGVjdGVkJyAmJiB0YWcgPT09ICdvcHRpb24nKSB8fFxuICAgIChhdHRyID09PSAnY2hlY2tlZCcgJiYgdGFnID09PSAnaW5wdXQnKSB8fFxuICAgIChhdHRyID09PSAnbXV0ZWQnICYmIHRhZyA9PT0gJ3ZpZGVvJylcbiAgKVxufTtcblxudmFyIGlzRW51bWVyYXRlZEF0dHIgPSBtYWtlTWFwKCdjb250ZW50ZWRpdGFibGUsZHJhZ2dhYmxlLHNwZWxsY2hlY2snKTtcblxudmFyIGlzVmFsaWRDb250ZW50RWRpdGFibGVWYWx1ZSA9IG1ha2VNYXAoJ2V2ZW50cyxjYXJldCx0eXBpbmcscGxhaW50ZXh0LW9ubHknKTtcblxudmFyIGNvbnZlcnRFbnVtZXJhdGVkVmFsdWUgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICByZXR1cm4gaXNGYWxzeUF0dHJWYWx1ZSh2YWx1ZSkgfHwgdmFsdWUgPT09ICdmYWxzZSdcbiAgICA/ICdmYWxzZSdcbiAgICAvLyBhbGxvdyBhcmJpdHJhcnkgc3RyaW5nIHZhbHVlIGZvciBjb250ZW50ZWRpdGFibGVcbiAgICA6IGtleSA9PT0gJ2NvbnRlbnRlZGl0YWJsZScgJiYgaXNWYWxpZENvbnRlbnRFZGl0YWJsZVZhbHVlKHZhbHVlKVxuICAgICAgPyB2YWx1ZVxuICAgICAgOiAndHJ1ZSdcbn07XG5cbnZhciBpc0Jvb2xlYW5BdHRyID0gbWFrZU1hcChcbiAgJ2FsbG93ZnVsbHNjcmVlbixhc3luYyxhdXRvZm9jdXMsYXV0b3BsYXksY2hlY2tlZCxjb21wYWN0LGNvbnRyb2xzLGRlY2xhcmUsJyArXG4gICdkZWZhdWx0LGRlZmF1bHRjaGVja2VkLGRlZmF1bHRtdXRlZCxkZWZhdWx0c2VsZWN0ZWQsZGVmZXIsZGlzYWJsZWQsJyArXG4gICdlbmFibGVkLGZvcm1ub3ZhbGlkYXRlLGhpZGRlbixpbmRldGVybWluYXRlLGluZXJ0LGlzbWFwLGl0ZW1zY29wZSxsb29wLG11bHRpcGxlLCcgK1xuICAnbXV0ZWQsbm9ocmVmLG5vcmVzaXplLG5vc2hhZGUsbm92YWxpZGF0ZSxub3dyYXAsb3BlbixwYXVzZW9uZXhpdCxyZWFkb25seSwnICtcbiAgJ3JlcXVpcmVkLHJldmVyc2VkLHNjb3BlZCxzZWFtbGVzcyxzZWxlY3RlZCxzb3J0YWJsZSx0cmFuc2xhdGUsJyArXG4gICd0cnVlc3BlZWQsdHlwZW11c3RtYXRjaCx2aXNpYmxlJ1xuKTtcblxudmFyIHhsaW5rTlMgPSAnaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc7XG5cbnZhciBpc1hsaW5rID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgcmV0dXJuIG5hbWUuY2hhckF0KDUpID09PSAnOicgJiYgbmFtZS5zbGljZSgwLCA1KSA9PT0gJ3hsaW5rJ1xufTtcblxudmFyIGdldFhsaW5rUHJvcCA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gIHJldHVybiBpc1hsaW5rKG5hbWUpID8gbmFtZS5zbGljZSg2LCBuYW1lLmxlbmd0aCkgOiAnJ1xufTtcblxudmFyIGlzRmFsc3lBdHRyVmFsdWUgPSBmdW5jdGlvbiAodmFsKSB7XG4gIHJldHVybiB2YWwgPT0gbnVsbCB8fCB2YWwgPT09IGZhbHNlXG59O1xuXG4vKiAgKi9cblxuZnVuY3Rpb24gZ2VuQ2xhc3NGb3JWbm9kZSAodm5vZGUpIHtcbiAgdmFyIGRhdGEgPSB2bm9kZS5kYXRhO1xuICB2YXIgcGFyZW50Tm9kZSA9IHZub2RlO1xuICB2YXIgY2hpbGROb2RlID0gdm5vZGU7XG4gIHdoaWxlIChpc0RlZihjaGlsZE5vZGUuY29tcG9uZW50SW5zdGFuY2UpKSB7XG4gICAgY2hpbGROb2RlID0gY2hpbGROb2RlLmNvbXBvbmVudEluc3RhbmNlLl92bm9kZTtcbiAgICBpZiAoY2hpbGROb2RlICYmIGNoaWxkTm9kZS5kYXRhKSB7XG4gICAgICBkYXRhID0gbWVyZ2VDbGFzc0RhdGEoY2hpbGROb2RlLmRhdGEsIGRhdGEpO1xuICAgIH1cbiAgfVxuICB3aGlsZSAoaXNEZWYocGFyZW50Tm9kZSA9IHBhcmVudE5vZGUucGFyZW50KSkge1xuICAgIGlmIChwYXJlbnROb2RlICYmIHBhcmVudE5vZGUuZGF0YSkge1xuICAgICAgZGF0YSA9IG1lcmdlQ2xhc3NEYXRhKGRhdGEsIHBhcmVudE5vZGUuZGF0YSk7XG4gICAgfVxuICB9XG4gIHJldHVybiByZW5kZXJDbGFzcyhkYXRhLnN0YXRpY0NsYXNzLCBkYXRhLmNsYXNzKVxufVxuXG5mdW5jdGlvbiBtZXJnZUNsYXNzRGF0YSAoY2hpbGQsIHBhcmVudCkge1xuICByZXR1cm4ge1xuICAgIHN0YXRpY0NsYXNzOiBjb25jYXQoY2hpbGQuc3RhdGljQ2xhc3MsIHBhcmVudC5zdGF0aWNDbGFzcyksXG4gICAgY2xhc3M6IGlzRGVmKGNoaWxkLmNsYXNzKVxuICAgICAgPyBbY2hpbGQuY2xhc3MsIHBhcmVudC5jbGFzc11cbiAgICAgIDogcGFyZW50LmNsYXNzXG4gIH1cbn1cblxuZnVuY3Rpb24gcmVuZGVyQ2xhc3MgKFxuICBzdGF0aWNDbGFzcyxcbiAgZHluYW1pY0NsYXNzXG4pIHtcbiAgaWYgKGlzRGVmKHN0YXRpY0NsYXNzKSB8fCBpc0RlZihkeW5hbWljQ2xhc3MpKSB7XG4gICAgcmV0dXJuIGNvbmNhdChzdGF0aWNDbGFzcywgc3RyaW5naWZ5Q2xhc3MoZHluYW1pY0NsYXNzKSlcbiAgfVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICByZXR1cm4gJydcbn1cblxuZnVuY3Rpb24gY29uY2F0IChhLCBiKSB7XG4gIHJldHVybiBhID8gYiA/IChhICsgJyAnICsgYikgOiBhIDogKGIgfHwgJycpXG59XG5cbmZ1bmN0aW9uIHN0cmluZ2lmeUNsYXNzICh2YWx1ZSkge1xuICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gc3RyaW5naWZ5QXJyYXkodmFsdWUpXG4gIH1cbiAgaWYgKGlzT2JqZWN0KHZhbHVlKSkge1xuICAgIHJldHVybiBzdHJpbmdpZnlPYmplY3QodmFsdWUpXG4gIH1cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gdmFsdWVcbiAgfVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICByZXR1cm4gJydcbn1cblxuZnVuY3Rpb24gc3RyaW5naWZ5QXJyYXkgKHZhbHVlKSB7XG4gIHZhciByZXMgPSAnJztcbiAgdmFyIHN0cmluZ2lmaWVkO1xuICBmb3IgKHZhciBpID0gMCwgbCA9IHZhbHVlLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIGlmIChpc0RlZihzdHJpbmdpZmllZCA9IHN0cmluZ2lmeUNsYXNzKHZhbHVlW2ldKSkgJiYgc3RyaW5naWZpZWQgIT09ICcnKSB7XG4gICAgICBpZiAocmVzKSB7IHJlcyArPSAnICc7IH1cbiAgICAgIHJlcyArPSBzdHJpbmdpZmllZDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc1xufVxuXG5mdW5jdGlvbiBzdHJpbmdpZnlPYmplY3QgKHZhbHVlKSB7XG4gIHZhciByZXMgPSAnJztcbiAgZm9yICh2YXIga2V5IGluIHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlW2tleV0pIHtcbiAgICAgIGlmIChyZXMpIHsgcmVzICs9ICcgJzsgfVxuICAgICAgcmVzICs9IGtleTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc1xufVxuXG4vKiAgKi9cblxudmFyIG5hbWVzcGFjZU1hcCA9IHtcbiAgc3ZnOiAnaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnLFxuICBtYXRoOiAnaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTCdcbn07XG5cbnZhciBpc0hUTUxUYWcgPSBtYWtlTWFwKFxuICAnaHRtbCxib2R5LGJhc2UsaGVhZCxsaW5rLG1ldGEsc3R5bGUsdGl0bGUsJyArXG4gICdhZGRyZXNzLGFydGljbGUsYXNpZGUsZm9vdGVyLGhlYWRlcixoMSxoMixoMyxoNCxoNSxoNixoZ3JvdXAsbmF2LHNlY3Rpb24sJyArXG4gICdkaXYsZGQsZGwsZHQsZmlnY2FwdGlvbixmaWd1cmUscGljdHVyZSxocixpbWcsbGksbWFpbixvbCxwLHByZSx1bCwnICtcbiAgJ2EsYixhYmJyLGJkaSxiZG8sYnIsY2l0ZSxjb2RlLGRhdGEsZGZuLGVtLGksa2JkLG1hcmsscSxycCxydCxydGMscnVieSwnICtcbiAgJ3Msc2FtcCxzbWFsbCxzcGFuLHN0cm9uZyxzdWIsc3VwLHRpbWUsdSx2YXIsd2JyLGFyZWEsYXVkaW8sbWFwLHRyYWNrLHZpZGVvLCcgK1xuICAnZW1iZWQsb2JqZWN0LHBhcmFtLHNvdXJjZSxjYW52YXMsc2NyaXB0LG5vc2NyaXB0LGRlbCxpbnMsJyArXG4gICdjYXB0aW9uLGNvbCxjb2xncm91cCx0YWJsZSx0aGVhZCx0Ym9keSx0ZCx0aCx0ciwnICtcbiAgJ2J1dHRvbixkYXRhbGlzdCxmaWVsZHNldCxmb3JtLGlucHV0LGxhYmVsLGxlZ2VuZCxtZXRlcixvcHRncm91cCxvcHRpb24sJyArXG4gICdvdXRwdXQscHJvZ3Jlc3Msc2VsZWN0LHRleHRhcmVhLCcgK1xuICAnZGV0YWlscyxkaWFsb2csbWVudSxtZW51aXRlbSxzdW1tYXJ5LCcgK1xuICAnY29udGVudCxlbGVtZW50LHNoYWRvdyx0ZW1wbGF0ZSxibG9ja3F1b3RlLGlmcmFtZSx0Zm9vdCdcbik7XG5cbi8vIHRoaXMgbWFwIGlzIGludGVudGlvbmFsbHkgc2VsZWN0aXZlLCBvbmx5IGNvdmVyaW5nIFNWRyBlbGVtZW50cyB0aGF0IG1heVxuLy8gY29udGFpbiBjaGlsZCBlbGVtZW50cy5cbnZhciBpc1NWRyA9IG1ha2VNYXAoXG4gICdzdmcsYW5pbWF0ZSxjaXJjbGUsY2xpcHBhdGgsY3Vyc29yLGRlZnMsZGVzYyxlbGxpcHNlLGZpbHRlcixmb250LWZhY2UsJyArXG4gICdmb3JlaWduT2JqZWN0LGcsZ2x5cGgsaW1hZ2UsbGluZSxtYXJrZXIsbWFzayxtaXNzaW5nLWdseXBoLHBhdGgscGF0dGVybiwnICtcbiAgJ3BvbHlnb24scG9seWxpbmUscmVjdCxzd2l0Y2gsc3ltYm9sLHRleHQsdGV4dHBhdGgsdHNwYW4sdXNlLHZpZXcnLFxuICB0cnVlXG4pO1xuXG52YXIgaXNSZXNlcnZlZFRhZyA9IGZ1bmN0aW9uICh0YWcpIHtcbiAgcmV0dXJuIGlzSFRNTFRhZyh0YWcpIHx8IGlzU1ZHKHRhZylcbn07XG5cbmZ1bmN0aW9uIGdldFRhZ05hbWVzcGFjZSAodGFnKSB7XG4gIGlmIChpc1NWRyh0YWcpKSB7XG4gICAgcmV0dXJuICdzdmcnXG4gIH1cbiAgLy8gYmFzaWMgc3VwcG9ydCBmb3IgTWF0aE1MXG4gIC8vIG5vdGUgaXQgZG9lc24ndCBzdXBwb3J0IG90aGVyIE1hdGhNTCBlbGVtZW50cyBiZWluZyBjb21wb25lbnQgcm9vdHNcbiAgaWYgKHRhZyA9PT0gJ21hdGgnKSB7XG4gICAgcmV0dXJuICdtYXRoJ1xuICB9XG59XG5cbnZhciB1bmtub3duRWxlbWVudENhY2hlID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbmZ1bmN0aW9uIGlzVW5rbm93bkVsZW1lbnQgKHRhZykge1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgaWYgKCFpbkJyb3dzZXIpIHtcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG4gIGlmIChpc1Jlc2VydmVkVGFnKHRhZykpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuICB0YWcgPSB0YWcudG9Mb3dlckNhc2UoKTtcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gIGlmICh1bmtub3duRWxlbWVudENhY2hlW3RhZ10gIT0gbnVsbCkge1xuICAgIHJldHVybiB1bmtub3duRWxlbWVudENhY2hlW3RhZ11cbiAgfVxuICB2YXIgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHRhZyk7XG4gIGlmICh0YWcuaW5kZXhPZignLScpID4gLTEpIHtcbiAgICAvLyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8yODIxMDM2NC8xMDcwMjQ0XG4gICAgcmV0dXJuICh1bmtub3duRWxlbWVudENhY2hlW3RhZ10gPSAoXG4gICAgICBlbC5jb25zdHJ1Y3RvciA9PT0gd2luZG93LkhUTUxVbmtub3duRWxlbWVudCB8fFxuICAgICAgZWwuY29uc3RydWN0b3IgPT09IHdpbmRvdy5IVE1MRWxlbWVudFxuICAgICkpXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuICh1bmtub3duRWxlbWVudENhY2hlW3RhZ10gPSAvSFRNTFVua25vd25FbGVtZW50Ly50ZXN0KGVsLnRvU3RyaW5nKCkpKVxuICB9XG59XG5cbnZhciBpc1RleHRJbnB1dFR5cGUgPSBtYWtlTWFwKCd0ZXh0LG51bWJlcixwYXNzd29yZCxzZWFyY2gsZW1haWwsdGVsLHVybCcpO1xuXG4vKiAgKi9cblxuLyoqXG4gKiBRdWVyeSBhbiBlbGVtZW50IHNlbGVjdG9yIGlmIGl0J3Mgbm90IGFuIGVsZW1lbnQgYWxyZWFkeS5cbiAqL1xuZnVuY3Rpb24gcXVlcnkgKGVsKSB7XG4gIGlmICh0eXBlb2YgZWwgPT09ICdzdHJpbmcnKSB7XG4gICAgdmFyIHNlbGVjdGVkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihlbCk7XG4gICAgaWYgKCFzZWxlY3RlZCkge1xuICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB3YXJuKFxuICAgICAgICAnQ2Fubm90IGZpbmQgZWxlbWVudDogJyArIGVsXG4gICAgICApO1xuICAgICAgcmV0dXJuIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgfVxuICAgIHJldHVybiBzZWxlY3RlZFxuICB9IGVsc2Uge1xuICAgIHJldHVybiBlbFxuICB9XG59XG5cbi8qICAqL1xuXG5mdW5jdGlvbiBjcmVhdGVFbGVtZW50JDEgKHRhZ05hbWUsIHZub2RlKSB7XG4gIHZhciBlbG0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHRhZ05hbWUpO1xuICBpZiAodGFnTmFtZSAhPT0gJ3NlbGVjdCcpIHtcbiAgICByZXR1cm4gZWxtXG4gIH1cbiAgLy8gZmFsc2Ugb3IgbnVsbCB3aWxsIHJlbW92ZSB0aGUgYXR0cmlidXRlIGJ1dCB1bmRlZmluZWQgd2lsbCBub3RcbiAgaWYgKHZub2RlLmRhdGEgJiYgdm5vZGUuZGF0YS5hdHRycyAmJiB2bm9kZS5kYXRhLmF0dHJzLm11bHRpcGxlICE9PSB1bmRlZmluZWQpIHtcbiAgICBlbG0uc2V0QXR0cmlidXRlKCdtdWx0aXBsZScsICdtdWx0aXBsZScpO1xuICB9XG4gIHJldHVybiBlbG1cbn1cblxuZnVuY3Rpb24gY3JlYXRlRWxlbWVudE5TIChuYW1lc3BhY2UsIHRhZ05hbWUpIHtcbiAgcmV0dXJuIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhuYW1lc3BhY2VNYXBbbmFtZXNwYWNlXSwgdGFnTmFtZSlcbn1cblxuZnVuY3Rpb24gY3JlYXRlVGV4dE5vZGUgKHRleHQpIHtcbiAgcmV0dXJuIGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHRleHQpXG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvbW1lbnQgKHRleHQpIHtcbiAgcmV0dXJuIGRvY3VtZW50LmNyZWF0ZUNvbW1lbnQodGV4dClcbn1cblxuZnVuY3Rpb24gaW5zZXJ0QmVmb3JlIChwYXJlbnROb2RlLCBuZXdOb2RlLCByZWZlcmVuY2VOb2RlKSB7XG4gIHBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG5ld05vZGUsIHJlZmVyZW5jZU5vZGUpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVDaGlsZCAobm9kZSwgY2hpbGQpIHtcbiAgbm9kZS5yZW1vdmVDaGlsZChjaGlsZCk7XG59XG5cbmZ1bmN0aW9uIGFwcGVuZENoaWxkIChub2RlLCBjaGlsZCkge1xuICBub2RlLmFwcGVuZENoaWxkKGNoaWxkKTtcbn1cblxuZnVuY3Rpb24gcGFyZW50Tm9kZSAobm9kZSkge1xuICByZXR1cm4gbm9kZS5wYXJlbnROb2RlXG59XG5cbmZ1bmN0aW9uIG5leHRTaWJsaW5nIChub2RlKSB7XG4gIHJldHVybiBub2RlLm5leHRTaWJsaW5nXG59XG5cbmZ1bmN0aW9uIHRhZ05hbWUgKG5vZGUpIHtcbiAgcmV0dXJuIG5vZGUudGFnTmFtZVxufVxuXG5mdW5jdGlvbiBzZXRUZXh0Q29udGVudCAobm9kZSwgdGV4dCkge1xuICBub2RlLnRleHRDb250ZW50ID0gdGV4dDtcbn1cblxuZnVuY3Rpb24gc2V0U3R5bGVTY29wZSAobm9kZSwgc2NvcGVJZCkge1xuICBub2RlLnNldEF0dHJpYnV0ZShzY29wZUlkLCAnJyk7XG59XG5cbnZhciBub2RlT3BzID0gLyojX19QVVJFX18qL09iamVjdC5mcmVlemUoe1xuICBjcmVhdGVFbGVtZW50OiBjcmVhdGVFbGVtZW50JDEsXG4gIGNyZWF0ZUVsZW1lbnROUzogY3JlYXRlRWxlbWVudE5TLFxuICBjcmVhdGVUZXh0Tm9kZTogY3JlYXRlVGV4dE5vZGUsXG4gIGNyZWF0ZUNvbW1lbnQ6IGNyZWF0ZUNvbW1lbnQsXG4gIGluc2VydEJlZm9yZTogaW5zZXJ0QmVmb3JlLFxuICByZW1vdmVDaGlsZDogcmVtb3ZlQ2hpbGQsXG4gIGFwcGVuZENoaWxkOiBhcHBlbmRDaGlsZCxcbiAgcGFyZW50Tm9kZTogcGFyZW50Tm9kZSxcbiAgbmV4dFNpYmxpbmc6IG5leHRTaWJsaW5nLFxuICB0YWdOYW1lOiB0YWdOYW1lLFxuICBzZXRUZXh0Q29udGVudDogc2V0VGV4dENvbnRlbnQsXG4gIHNldFN0eWxlU2NvcGU6IHNldFN0eWxlU2NvcGVcbn0pO1xuXG4vKiAgKi9cblxudmFyIHJlZiA9IHtcbiAgY3JlYXRlOiBmdW5jdGlvbiBjcmVhdGUgKF8sIHZub2RlKSB7XG4gICAgcmVnaXN0ZXJSZWYodm5vZGUpO1xuICB9LFxuICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSAob2xkVm5vZGUsIHZub2RlKSB7XG4gICAgaWYgKG9sZFZub2RlLmRhdGEucmVmICE9PSB2bm9kZS5kYXRhLnJlZikge1xuICAgICAgcmVnaXN0ZXJSZWYob2xkVm5vZGUsIHRydWUpO1xuICAgICAgcmVnaXN0ZXJSZWYodm5vZGUpO1xuICAgIH1cbiAgfSxcbiAgZGVzdHJveTogZnVuY3Rpb24gZGVzdHJveSAodm5vZGUpIHtcbiAgICByZWdpc3RlclJlZih2bm9kZSwgdHJ1ZSk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIHJlZ2lzdGVyUmVmICh2bm9kZSwgaXNSZW1vdmFsKSB7XG4gIHZhciBrZXkgPSB2bm9kZS5kYXRhLnJlZjtcbiAgaWYgKCFpc0RlZihrZXkpKSB7IHJldHVybiB9XG5cbiAgdmFyIHZtID0gdm5vZGUuY29udGV4dDtcbiAgdmFyIHJlZiA9IHZub2RlLmNvbXBvbmVudEluc3RhbmNlIHx8IHZub2RlLmVsbTtcbiAgdmFyIHJlZnMgPSB2bS4kcmVmcztcbiAgaWYgKGlzUmVtb3ZhbCkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KHJlZnNba2V5XSkpIHtcbiAgICAgIHJlbW92ZShyZWZzW2tleV0sIHJlZik7XG4gICAgfSBlbHNlIGlmIChyZWZzW2tleV0gPT09IHJlZikge1xuICAgICAgcmVmc1trZXldID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBpZiAodm5vZGUuZGF0YS5yZWZJbkZvcikge1xuICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHJlZnNba2V5XSkpIHtcbiAgICAgICAgcmVmc1trZXldID0gW3JlZl07XG4gICAgICB9IGVsc2UgaWYgKHJlZnNba2V5XS5pbmRleE9mKHJlZikgPCAwKSB7XG4gICAgICAgIC8vICRmbG93LWRpc2FibGUtbGluZVxuICAgICAgICByZWZzW2tleV0ucHVzaChyZWYpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICByZWZzW2tleV0gPSByZWY7XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogVmlydHVhbCBET00gcGF0Y2hpbmcgYWxnb3JpdGhtIGJhc2VkIG9uIFNuYWJiZG9tIGJ5XG4gKiBTaW1vbiBGcmlpcyBWaW5kdW0gKEBwYWxkZXBpbmQpXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2VcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9wYWxkZXBpbmQvc25hYmJkb20vYmxvYi9tYXN0ZXIvTElDRU5TRVxuICpcbiAqIG1vZGlmaWVkIGJ5IEV2YW4gWW91IChAeXl4OTkwODAzKVxuICpcbiAqIE5vdCB0eXBlLWNoZWNraW5nIHRoaXMgYmVjYXVzZSB0aGlzIGZpbGUgaXMgcGVyZi1jcml0aWNhbCBhbmQgdGhlIGNvc3RcbiAqIG9mIG1ha2luZyBmbG93IHVuZGVyc3RhbmQgaXQgaXMgbm90IHdvcnRoIGl0LlxuICovXG5cbnZhciBlbXB0eU5vZGUgPSBuZXcgVk5vZGUoJycsIHt9LCBbXSk7XG5cbnZhciBob29rcyA9IFsnY3JlYXRlJywgJ2FjdGl2YXRlJywgJ3VwZGF0ZScsICdyZW1vdmUnLCAnZGVzdHJveSddO1xuXG5mdW5jdGlvbiBzYW1lVm5vZGUgKGEsIGIpIHtcbiAgcmV0dXJuIChcbiAgICBhLmtleSA9PT0gYi5rZXkgJiYgKFxuICAgICAgKFxuICAgICAgICBhLnRhZyA9PT0gYi50YWcgJiZcbiAgICAgICAgYS5pc0NvbW1lbnQgPT09IGIuaXNDb21tZW50ICYmXG4gICAgICAgIGlzRGVmKGEuZGF0YSkgPT09IGlzRGVmKGIuZGF0YSkgJiZcbiAgICAgICAgc2FtZUlucHV0VHlwZShhLCBiKVxuICAgICAgKSB8fCAoXG4gICAgICAgIGlzVHJ1ZShhLmlzQXN5bmNQbGFjZWhvbGRlcikgJiZcbiAgICAgICAgYS5hc3luY0ZhY3RvcnkgPT09IGIuYXN5bmNGYWN0b3J5ICYmXG4gICAgICAgIGlzVW5kZWYoYi5hc3luY0ZhY3RvcnkuZXJyb3IpXG4gICAgICApXG4gICAgKVxuICApXG59XG5cbmZ1bmN0aW9uIHNhbWVJbnB1dFR5cGUgKGEsIGIpIHtcbiAgaWYgKGEudGFnICE9PSAnaW5wdXQnKSB7IHJldHVybiB0cnVlIH1cbiAgdmFyIGk7XG4gIHZhciB0eXBlQSA9IGlzRGVmKGkgPSBhLmRhdGEpICYmIGlzRGVmKGkgPSBpLmF0dHJzKSAmJiBpLnR5cGU7XG4gIHZhciB0eXBlQiA9IGlzRGVmKGkgPSBiLmRhdGEpICYmIGlzRGVmKGkgPSBpLmF0dHJzKSAmJiBpLnR5cGU7XG4gIHJldHVybiB0eXBlQSA9PT0gdHlwZUIgfHwgaXNUZXh0SW5wdXRUeXBlKHR5cGVBKSAmJiBpc1RleHRJbnB1dFR5cGUodHlwZUIpXG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUtleVRvT2xkSWR4IChjaGlsZHJlbiwgYmVnaW5JZHgsIGVuZElkeCkge1xuICB2YXIgaSwga2V5O1xuICB2YXIgbWFwID0ge307XG4gIGZvciAoaSA9IGJlZ2luSWR4OyBpIDw9IGVuZElkeDsgKytpKSB7XG4gICAga2V5ID0gY2hpbGRyZW5baV0ua2V5O1xuICAgIGlmIChpc0RlZihrZXkpKSB7IG1hcFtrZXldID0gaTsgfVxuICB9XG4gIHJldHVybiBtYXBcbn1cblxuZnVuY3Rpb24gY3JlYXRlUGF0Y2hGdW5jdGlvbiAoYmFja2VuZCkge1xuICB2YXIgaSwgajtcbiAgdmFyIGNicyA9IHt9O1xuXG4gIHZhciBtb2R1bGVzID0gYmFja2VuZC5tb2R1bGVzO1xuICB2YXIgbm9kZU9wcyA9IGJhY2tlbmQubm9kZU9wcztcblxuICBmb3IgKGkgPSAwOyBpIDwgaG9va3MubGVuZ3RoOyArK2kpIHtcbiAgICBjYnNbaG9va3NbaV1dID0gW107XG4gICAgZm9yIChqID0gMDsgaiA8IG1vZHVsZXMubGVuZ3RoOyArK2opIHtcbiAgICAgIGlmIChpc0RlZihtb2R1bGVzW2pdW2hvb2tzW2ldXSkpIHtcbiAgICAgICAgY2JzW2hvb2tzW2ldXS5wdXNoKG1vZHVsZXNbal1baG9va3NbaV1dKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBlbXB0eU5vZGVBdCAoZWxtKSB7XG4gICAgcmV0dXJuIG5ldyBWTm9kZShub2RlT3BzLnRhZ05hbWUoZWxtKS50b0xvd2VyQ2FzZSgpLCB7fSwgW10sIHVuZGVmaW5lZCwgZWxtKVxuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlUm1DYiAoY2hpbGRFbG0sIGxpc3RlbmVycykge1xuICAgIGZ1bmN0aW9uIHJlbW92ZSQkMSAoKSB7XG4gICAgICBpZiAoLS1yZW1vdmUkJDEubGlzdGVuZXJzID09PSAwKSB7XG4gICAgICAgIHJlbW92ZU5vZGUoY2hpbGRFbG0pO1xuICAgICAgfVxuICAgIH1cbiAgICByZW1vdmUkJDEubGlzdGVuZXJzID0gbGlzdGVuZXJzO1xuICAgIHJldHVybiByZW1vdmUkJDFcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlbW92ZU5vZGUgKGVsKSB7XG4gICAgdmFyIHBhcmVudCA9IG5vZGVPcHMucGFyZW50Tm9kZShlbCk7XG4gICAgLy8gZWxlbWVudCBtYXkgaGF2ZSBhbHJlYWR5IGJlZW4gcmVtb3ZlZCBkdWUgdG8gdi1odG1sIC8gdi10ZXh0XG4gICAgaWYgKGlzRGVmKHBhcmVudCkpIHtcbiAgICAgIG5vZGVPcHMucmVtb3ZlQ2hpbGQocGFyZW50LCBlbCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaXNVbmtub3duRWxlbWVudCQkMSAodm5vZGUsIGluVlByZSkge1xuICAgIHJldHVybiAoXG4gICAgICAhaW5WUHJlICYmXG4gICAgICAhdm5vZGUubnMgJiZcbiAgICAgICEoXG4gICAgICAgIGNvbmZpZy5pZ25vcmVkRWxlbWVudHMubGVuZ3RoICYmXG4gICAgICAgIGNvbmZpZy5pZ25vcmVkRWxlbWVudHMuc29tZShmdW5jdGlvbiAoaWdub3JlKSB7XG4gICAgICAgICAgcmV0dXJuIGlzUmVnRXhwKGlnbm9yZSlcbiAgICAgICAgICAgID8gaWdub3JlLnRlc3Qodm5vZGUudGFnKVxuICAgICAgICAgICAgOiBpZ25vcmUgPT09IHZub2RlLnRhZ1xuICAgICAgICB9KVxuICAgICAgKSAmJlxuICAgICAgY29uZmlnLmlzVW5rbm93bkVsZW1lbnQodm5vZGUudGFnKVxuICAgIClcbiAgfVxuXG4gIHZhciBjcmVhdGluZ0VsbUluVlByZSA9IDA7XG5cbiAgZnVuY3Rpb24gY3JlYXRlRWxtIChcbiAgICB2bm9kZSxcbiAgICBpbnNlcnRlZFZub2RlUXVldWUsXG4gICAgcGFyZW50RWxtLFxuICAgIHJlZkVsbSxcbiAgICBuZXN0ZWQsXG4gICAgb3duZXJBcnJheSxcbiAgICBpbmRleFxuICApIHtcbiAgICBpZiAoaXNEZWYodm5vZGUuZWxtKSAmJiBpc0RlZihvd25lckFycmF5KSkge1xuICAgICAgLy8gVGhpcyB2bm9kZSB3YXMgdXNlZCBpbiBhIHByZXZpb3VzIHJlbmRlciFcbiAgICAgIC8vIG5vdyBpdCdzIHVzZWQgYXMgYSBuZXcgbm9kZSwgb3ZlcndyaXRpbmcgaXRzIGVsbSB3b3VsZCBjYXVzZVxuICAgICAgLy8gcG90ZW50aWFsIHBhdGNoIGVycm9ycyBkb3duIHRoZSByb2FkIHdoZW4gaXQncyB1c2VkIGFzIGFuIGluc2VydGlvblxuICAgICAgLy8gcmVmZXJlbmNlIG5vZGUuIEluc3RlYWQsIHdlIGNsb25lIHRoZSBub2RlIG9uLWRlbWFuZCBiZWZvcmUgY3JlYXRpbmdcbiAgICAgIC8vIGFzc29jaWF0ZWQgRE9NIGVsZW1lbnQgZm9yIGl0LlxuICAgICAgdm5vZGUgPSBvd25lckFycmF5W2luZGV4XSA9IGNsb25lVk5vZGUodm5vZGUpO1xuICAgIH1cblxuICAgIHZub2RlLmlzUm9vdEluc2VydCA9ICFuZXN0ZWQ7IC8vIGZvciB0cmFuc2l0aW9uIGVudGVyIGNoZWNrXG4gICAgaWYgKGNyZWF0ZUNvbXBvbmVudCh2bm9kZSwgaW5zZXJ0ZWRWbm9kZVF1ZXVlLCBwYXJlbnRFbG0sIHJlZkVsbSkpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIHZhciBkYXRhID0gdm5vZGUuZGF0YTtcbiAgICB2YXIgY2hpbGRyZW4gPSB2bm9kZS5jaGlsZHJlbjtcbiAgICB2YXIgdGFnID0gdm5vZGUudGFnO1xuICAgIGlmIChpc0RlZih0YWcpKSB7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICBpZiAoZGF0YSAmJiBkYXRhLnByZSkge1xuICAgICAgICAgIGNyZWF0aW5nRWxtSW5WUHJlKys7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzVW5rbm93bkVsZW1lbnQkJDEodm5vZGUsIGNyZWF0aW5nRWxtSW5WUHJlKSkge1xuICAgICAgICAgIHdhcm4oXG4gICAgICAgICAgICAnVW5rbm93biBjdXN0b20gZWxlbWVudDogPCcgKyB0YWcgKyAnPiAtIGRpZCB5b3UgJyArXG4gICAgICAgICAgICAncmVnaXN0ZXIgdGhlIGNvbXBvbmVudCBjb3JyZWN0bHk/IEZvciByZWN1cnNpdmUgY29tcG9uZW50cywgJyArXG4gICAgICAgICAgICAnbWFrZSBzdXJlIHRvIHByb3ZpZGUgdGhlIFwibmFtZVwiIG9wdGlvbi4nLFxuICAgICAgICAgICAgdm5vZGUuY29udGV4dFxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdm5vZGUuZWxtID0gdm5vZGUubnNcbiAgICAgICAgPyBub2RlT3BzLmNyZWF0ZUVsZW1lbnROUyh2bm9kZS5ucywgdGFnKVxuICAgICAgICA6IG5vZGVPcHMuY3JlYXRlRWxlbWVudCh0YWcsIHZub2RlKTtcbiAgICAgIHNldFNjb3BlKHZub2RlKTtcblxuICAgICAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgICB7XG4gICAgICAgIGNyZWF0ZUNoaWxkcmVuKHZub2RlLCBjaGlsZHJlbiwgaW5zZXJ0ZWRWbm9kZVF1ZXVlKTtcbiAgICAgICAgaWYgKGlzRGVmKGRhdGEpKSB7XG4gICAgICAgICAgaW52b2tlQ3JlYXRlSG9va3Modm5vZGUsIGluc2VydGVkVm5vZGVRdWV1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgaW5zZXJ0KHBhcmVudEVsbSwgdm5vZGUuZWxtLCByZWZFbG0pO1xuICAgICAgfVxuXG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBkYXRhICYmIGRhdGEucHJlKSB7XG4gICAgICAgIGNyZWF0aW5nRWxtSW5WUHJlLS07XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChpc1RydWUodm5vZGUuaXNDb21tZW50KSkge1xuICAgICAgdm5vZGUuZWxtID0gbm9kZU9wcy5jcmVhdGVDb21tZW50KHZub2RlLnRleHQpO1xuICAgICAgaW5zZXJ0KHBhcmVudEVsbSwgdm5vZGUuZWxtLCByZWZFbG0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB2bm9kZS5lbG0gPSBub2RlT3BzLmNyZWF0ZVRleHROb2RlKHZub2RlLnRleHQpO1xuICAgICAgaW5zZXJ0KHBhcmVudEVsbSwgdm5vZGUuZWxtLCByZWZFbG0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUNvbXBvbmVudCAodm5vZGUsIGluc2VydGVkVm5vZGVRdWV1ZSwgcGFyZW50RWxtLCByZWZFbG0pIHtcbiAgICB2YXIgaSA9IHZub2RlLmRhdGE7XG4gICAgaWYgKGlzRGVmKGkpKSB7XG4gICAgICB2YXIgaXNSZWFjdGl2YXRlZCA9IGlzRGVmKHZub2RlLmNvbXBvbmVudEluc3RhbmNlKSAmJiBpLmtlZXBBbGl2ZTtcbiAgICAgIGlmIChpc0RlZihpID0gaS5ob29rKSAmJiBpc0RlZihpID0gaS5pbml0KSkge1xuICAgICAgICBpKHZub2RlLCBmYWxzZSAvKiBoeWRyYXRpbmcgKi8pO1xuICAgICAgfVxuICAgICAgLy8gYWZ0ZXIgY2FsbGluZyB0aGUgaW5pdCBob29rLCBpZiB0aGUgdm5vZGUgaXMgYSBjaGlsZCBjb21wb25lbnRcbiAgICAgIC8vIGl0IHNob3VsZCd2ZSBjcmVhdGVkIGEgY2hpbGQgaW5zdGFuY2UgYW5kIG1vdW50ZWQgaXQuIHRoZSBjaGlsZFxuICAgICAgLy8gY29tcG9uZW50IGFsc28gaGFzIHNldCB0aGUgcGxhY2Vob2xkZXIgdm5vZGUncyBlbG0uXG4gICAgICAvLyBpbiB0aGF0IGNhc2Ugd2UgY2FuIGp1c3QgcmV0dXJuIHRoZSBlbGVtZW50IGFuZCBiZSBkb25lLlxuICAgICAgaWYgKGlzRGVmKHZub2RlLmNvbXBvbmVudEluc3RhbmNlKSkge1xuICAgICAgICBpbml0Q29tcG9uZW50KHZub2RlLCBpbnNlcnRlZFZub2RlUXVldWUpO1xuICAgICAgICBpbnNlcnQocGFyZW50RWxtLCB2bm9kZS5lbG0sIHJlZkVsbSk7XG4gICAgICAgIGlmIChpc1RydWUoaXNSZWFjdGl2YXRlZCkpIHtcbiAgICAgICAgICByZWFjdGl2YXRlQ29tcG9uZW50KHZub2RlLCBpbnNlcnRlZFZub2RlUXVldWUsIHBhcmVudEVsbSwgcmVmRWxtKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGluaXRDb21wb25lbnQgKHZub2RlLCBpbnNlcnRlZFZub2RlUXVldWUpIHtcbiAgICBpZiAoaXNEZWYodm5vZGUuZGF0YS5wZW5kaW5nSW5zZXJ0KSkge1xuICAgICAgaW5zZXJ0ZWRWbm9kZVF1ZXVlLnB1c2guYXBwbHkoaW5zZXJ0ZWRWbm9kZVF1ZXVlLCB2bm9kZS5kYXRhLnBlbmRpbmdJbnNlcnQpO1xuICAgICAgdm5vZGUuZGF0YS5wZW5kaW5nSW5zZXJ0ID0gbnVsbDtcbiAgICB9XG4gICAgdm5vZGUuZWxtID0gdm5vZGUuY29tcG9uZW50SW5zdGFuY2UuJGVsO1xuICAgIGlmIChpc1BhdGNoYWJsZSh2bm9kZSkpIHtcbiAgICAgIGludm9rZUNyZWF0ZUhvb2tzKHZub2RlLCBpbnNlcnRlZFZub2RlUXVldWUpO1xuICAgICAgc2V0U2NvcGUodm5vZGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBlbXB0eSBjb21wb25lbnQgcm9vdC5cbiAgICAgIC8vIHNraXAgYWxsIGVsZW1lbnQtcmVsYXRlZCBtb2R1bGVzIGV4Y2VwdCBmb3IgcmVmICgjMzQ1NSlcbiAgICAgIHJlZ2lzdGVyUmVmKHZub2RlKTtcbiAgICAgIC8vIG1ha2Ugc3VyZSB0byBpbnZva2UgdGhlIGluc2VydCBob29rXG4gICAgICBpbnNlcnRlZFZub2RlUXVldWUucHVzaCh2bm9kZSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmVhY3RpdmF0ZUNvbXBvbmVudCAodm5vZGUsIGluc2VydGVkVm5vZGVRdWV1ZSwgcGFyZW50RWxtLCByZWZFbG0pIHtcbiAgICB2YXIgaTtcbiAgICAvLyBoYWNrIGZvciAjNDMzOTogYSByZWFjdGl2YXRlZCBjb21wb25lbnQgd2l0aCBpbm5lciB0cmFuc2l0aW9uXG4gICAgLy8gZG9lcyBub3QgdHJpZ2dlciBiZWNhdXNlIHRoZSBpbm5lciBub2RlJ3MgY3JlYXRlZCBob29rcyBhcmUgbm90IGNhbGxlZFxuICAgIC8vIGFnYWluLiBJdCdzIG5vdCBpZGVhbCB0byBpbnZvbHZlIG1vZHVsZS1zcGVjaWZpYyBsb2dpYyBpbiBoZXJlIGJ1dFxuICAgIC8vIHRoZXJlIGRvZXNuJ3Qgc2VlbSB0byBiZSBhIGJldHRlciB3YXkgdG8gZG8gaXQuXG4gICAgdmFyIGlubmVyTm9kZSA9IHZub2RlO1xuICAgIHdoaWxlIChpbm5lck5vZGUuY29tcG9uZW50SW5zdGFuY2UpIHtcbiAgICAgIGlubmVyTm9kZSA9IGlubmVyTm9kZS5jb21wb25lbnRJbnN0YW5jZS5fdm5vZGU7XG4gICAgICBpZiAoaXNEZWYoaSA9IGlubmVyTm9kZS5kYXRhKSAmJiBpc0RlZihpID0gaS50cmFuc2l0aW9uKSkge1xuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgY2JzLmFjdGl2YXRlLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgY2JzLmFjdGl2YXRlW2ldKGVtcHR5Tm9kZSwgaW5uZXJOb2RlKTtcbiAgICAgICAgfVxuICAgICAgICBpbnNlcnRlZFZub2RlUXVldWUucHVzaChpbm5lck5vZGUpO1xuICAgICAgICBicmVha1xuICAgICAgfVxuICAgIH1cbiAgICAvLyB1bmxpa2UgYSBuZXdseSBjcmVhdGVkIGNvbXBvbmVudCxcbiAgICAvLyBhIHJlYWN0aXZhdGVkIGtlZXAtYWxpdmUgY29tcG9uZW50IGRvZXNuJ3QgaW5zZXJ0IGl0c2VsZlxuICAgIGluc2VydChwYXJlbnRFbG0sIHZub2RlLmVsbSwgcmVmRWxtKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGluc2VydCAocGFyZW50LCBlbG0sIHJlZiQkMSkge1xuICAgIGlmIChpc0RlZihwYXJlbnQpKSB7XG4gICAgICBpZiAoaXNEZWYocmVmJCQxKSkge1xuICAgICAgICBpZiAobm9kZU9wcy5wYXJlbnROb2RlKHJlZiQkMSkgPT09IHBhcmVudCkge1xuICAgICAgICAgIG5vZGVPcHMuaW5zZXJ0QmVmb3JlKHBhcmVudCwgZWxtLCByZWYkJDEpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBub2RlT3BzLmFwcGVuZENoaWxkKHBhcmVudCwgZWxtKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVDaGlsZHJlbiAodm5vZGUsIGNoaWxkcmVuLCBpbnNlcnRlZFZub2RlUXVldWUpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZHJlbikpIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIGNoZWNrRHVwbGljYXRlS2V5cyhjaGlsZHJlbik7XG4gICAgICB9XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNoaWxkcmVuLmxlbmd0aDsgKytpKSB7XG4gICAgICAgIGNyZWF0ZUVsbShjaGlsZHJlbltpXSwgaW5zZXJ0ZWRWbm9kZVF1ZXVlLCB2bm9kZS5lbG0sIG51bGwsIHRydWUsIGNoaWxkcmVuLCBpKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGlzUHJpbWl0aXZlKHZub2RlLnRleHQpKSB7XG4gICAgICBub2RlT3BzLmFwcGVuZENoaWxkKHZub2RlLmVsbSwgbm9kZU9wcy5jcmVhdGVUZXh0Tm9kZShTdHJpbmcodm5vZGUudGV4dCkpKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBpc1BhdGNoYWJsZSAodm5vZGUpIHtcbiAgICB3aGlsZSAodm5vZGUuY29tcG9uZW50SW5zdGFuY2UpIHtcbiAgICAgIHZub2RlID0gdm5vZGUuY29tcG9uZW50SW5zdGFuY2UuX3Zub2RlO1xuICAgIH1cbiAgICByZXR1cm4gaXNEZWYodm5vZGUudGFnKVxuICB9XG5cbiAgZnVuY3Rpb24gaW52b2tlQ3JlYXRlSG9va3MgKHZub2RlLCBpbnNlcnRlZFZub2RlUXVldWUpIHtcbiAgICBmb3IgKHZhciBpJDEgPSAwOyBpJDEgPCBjYnMuY3JlYXRlLmxlbmd0aDsgKytpJDEpIHtcbiAgICAgIGNicy5jcmVhdGVbaSQxXShlbXB0eU5vZGUsIHZub2RlKTtcbiAgICB9XG4gICAgaSA9IHZub2RlLmRhdGEuaG9vazsgLy8gUmV1c2UgdmFyaWFibGVcbiAgICBpZiAoaXNEZWYoaSkpIHtcbiAgICAgIGlmIChpc0RlZihpLmNyZWF0ZSkpIHsgaS5jcmVhdGUoZW1wdHlOb2RlLCB2bm9kZSk7IH1cbiAgICAgIGlmIChpc0RlZihpLmluc2VydCkpIHsgaW5zZXJ0ZWRWbm9kZVF1ZXVlLnB1c2godm5vZGUpOyB9XG4gICAgfVxuICB9XG5cbiAgLy8gc2V0IHNjb3BlIGlkIGF0dHJpYnV0ZSBmb3Igc2NvcGVkIENTUy5cbiAgLy8gdGhpcyBpcyBpbXBsZW1lbnRlZCBhcyBhIHNwZWNpYWwgY2FzZSB0byBhdm9pZCB0aGUgb3ZlcmhlYWRcbiAgLy8gb2YgZ29pbmcgdGhyb3VnaCB0aGUgbm9ybWFsIGF0dHJpYnV0ZSBwYXRjaGluZyBwcm9jZXNzLlxuICBmdW5jdGlvbiBzZXRTY29wZSAodm5vZGUpIHtcbiAgICB2YXIgaTtcbiAgICBpZiAoaXNEZWYoaSA9IHZub2RlLmZuU2NvcGVJZCkpIHtcbiAgICAgIG5vZGVPcHMuc2V0U3R5bGVTY29wZSh2bm9kZS5lbG0sIGkpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYW5jZXN0b3IgPSB2bm9kZTtcbiAgICAgIHdoaWxlIChhbmNlc3Rvcikge1xuICAgICAgICBpZiAoaXNEZWYoaSA9IGFuY2VzdG9yLmNvbnRleHQpICYmIGlzRGVmKGkgPSBpLiRvcHRpb25zLl9zY29wZUlkKSkge1xuICAgICAgICAgIG5vZGVPcHMuc2V0U3R5bGVTY29wZSh2bm9kZS5lbG0sIGkpO1xuICAgICAgICB9XG4gICAgICAgIGFuY2VzdG9yID0gYW5jZXN0b3IucGFyZW50O1xuICAgICAgfVxuICAgIH1cbiAgICAvLyBmb3Igc2xvdCBjb250ZW50IHRoZXkgc2hvdWxkIGFsc28gZ2V0IHRoZSBzY29wZUlkIGZyb20gdGhlIGhvc3QgaW5zdGFuY2UuXG4gICAgaWYgKGlzRGVmKGkgPSBhY3RpdmVJbnN0YW5jZSkgJiZcbiAgICAgIGkgIT09IHZub2RlLmNvbnRleHQgJiZcbiAgICAgIGkgIT09IHZub2RlLmZuQ29udGV4dCAmJlxuICAgICAgaXNEZWYoaSA9IGkuJG9wdGlvbnMuX3Njb3BlSWQpXG4gICAgKSB7XG4gICAgICBub2RlT3BzLnNldFN0eWxlU2NvcGUodm5vZGUuZWxtLCBpKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBhZGRWbm9kZXMgKHBhcmVudEVsbSwgcmVmRWxtLCB2bm9kZXMsIHN0YXJ0SWR4LCBlbmRJZHgsIGluc2VydGVkVm5vZGVRdWV1ZSkge1xuICAgIGZvciAoOyBzdGFydElkeCA8PSBlbmRJZHg7ICsrc3RhcnRJZHgpIHtcbiAgICAgIGNyZWF0ZUVsbSh2bm9kZXNbc3RhcnRJZHhdLCBpbnNlcnRlZFZub2RlUXVldWUsIHBhcmVudEVsbSwgcmVmRWxtLCBmYWxzZSwgdm5vZGVzLCBzdGFydElkeCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaW52b2tlRGVzdHJveUhvb2sgKHZub2RlKSB7XG4gICAgdmFyIGksIGo7XG4gICAgdmFyIGRhdGEgPSB2bm9kZS5kYXRhO1xuICAgIGlmIChpc0RlZihkYXRhKSkge1xuICAgICAgaWYgKGlzRGVmKGkgPSBkYXRhLmhvb2spICYmIGlzRGVmKGkgPSBpLmRlc3Ryb3kpKSB7IGkodm5vZGUpOyB9XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgY2JzLmRlc3Ryb3kubGVuZ3RoOyArK2kpIHsgY2JzLmRlc3Ryb3lbaV0odm5vZGUpOyB9XG4gICAgfVxuICAgIGlmIChpc0RlZihpID0gdm5vZGUuY2hpbGRyZW4pKSB7XG4gICAgICBmb3IgKGogPSAwOyBqIDwgdm5vZGUuY2hpbGRyZW4ubGVuZ3RoOyArK2opIHtcbiAgICAgICAgaW52b2tlRGVzdHJveUhvb2sodm5vZGUuY2hpbGRyZW5bal0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJlbW92ZVZub2RlcyAocGFyZW50RWxtLCB2bm9kZXMsIHN0YXJ0SWR4LCBlbmRJZHgpIHtcbiAgICBmb3IgKDsgc3RhcnRJZHggPD0gZW5kSWR4OyArK3N0YXJ0SWR4KSB7XG4gICAgICB2YXIgY2ggPSB2bm9kZXNbc3RhcnRJZHhdO1xuICAgICAgaWYgKGlzRGVmKGNoKSkge1xuICAgICAgICBpZiAoaXNEZWYoY2gudGFnKSkge1xuICAgICAgICAgIHJlbW92ZUFuZEludm9rZVJlbW92ZUhvb2soY2gpO1xuICAgICAgICAgIGludm9rZURlc3Ryb3lIb29rKGNoKTtcbiAgICAgICAgfSBlbHNlIHsgLy8gVGV4dCBub2RlXG4gICAgICAgICAgcmVtb3ZlTm9kZShjaC5lbG0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmVtb3ZlQW5kSW52b2tlUmVtb3ZlSG9vayAodm5vZGUsIHJtKSB7XG4gICAgaWYgKGlzRGVmKHJtKSB8fCBpc0RlZih2bm9kZS5kYXRhKSkge1xuICAgICAgdmFyIGk7XG4gICAgICB2YXIgbGlzdGVuZXJzID0gY2JzLnJlbW92ZS5sZW5ndGggKyAxO1xuICAgICAgaWYgKGlzRGVmKHJtKSkge1xuICAgICAgICAvLyB3ZSBoYXZlIGEgcmVjdXJzaXZlbHkgcGFzc2VkIGRvd24gcm0gY2FsbGJhY2tcbiAgICAgICAgLy8gaW5jcmVhc2UgdGhlIGxpc3RlbmVycyBjb3VudFxuICAgICAgICBybS5saXN0ZW5lcnMgKz0gbGlzdGVuZXJzO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gZGlyZWN0bHkgcmVtb3ZpbmdcbiAgICAgICAgcm0gPSBjcmVhdGVSbUNiKHZub2RlLmVsbSwgbGlzdGVuZXJzKTtcbiAgICAgIH1cbiAgICAgIC8vIHJlY3Vyc2l2ZWx5IGludm9rZSBob29rcyBvbiBjaGlsZCBjb21wb25lbnQgcm9vdCBub2RlXG4gICAgICBpZiAoaXNEZWYoaSA9IHZub2RlLmNvbXBvbmVudEluc3RhbmNlKSAmJiBpc0RlZihpID0gaS5fdm5vZGUpICYmIGlzRGVmKGkuZGF0YSkpIHtcbiAgICAgICAgcmVtb3ZlQW5kSW52b2tlUmVtb3ZlSG9vayhpLCBybSk7XG4gICAgICB9XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgY2JzLnJlbW92ZS5sZW5ndGg7ICsraSkge1xuICAgICAgICBjYnMucmVtb3ZlW2ldKHZub2RlLCBybSk7XG4gICAgICB9XG4gICAgICBpZiAoaXNEZWYoaSA9IHZub2RlLmRhdGEuaG9vaykgJiYgaXNEZWYoaSA9IGkucmVtb3ZlKSkge1xuICAgICAgICBpKHZub2RlLCBybSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBybSgpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICByZW1vdmVOb2RlKHZub2RlLmVsbSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gdXBkYXRlQ2hpbGRyZW4gKHBhcmVudEVsbSwgb2xkQ2gsIG5ld0NoLCBpbnNlcnRlZFZub2RlUXVldWUsIHJlbW92ZU9ubHkpIHtcbiAgICB2YXIgb2xkU3RhcnRJZHggPSAwO1xuICAgIHZhciBuZXdTdGFydElkeCA9IDA7XG4gICAgdmFyIG9sZEVuZElkeCA9IG9sZENoLmxlbmd0aCAtIDE7XG4gICAgdmFyIG9sZFN0YXJ0Vm5vZGUgPSBvbGRDaFswXTtcbiAgICB2YXIgb2xkRW5kVm5vZGUgPSBvbGRDaFtvbGRFbmRJZHhdO1xuICAgIHZhciBuZXdFbmRJZHggPSBuZXdDaC5sZW5ndGggLSAxO1xuICAgIHZhciBuZXdTdGFydFZub2RlID0gbmV3Q2hbMF07XG4gICAgdmFyIG5ld0VuZFZub2RlID0gbmV3Q2hbbmV3RW5kSWR4XTtcbiAgICB2YXIgb2xkS2V5VG9JZHgsIGlkeEluT2xkLCB2bm9kZVRvTW92ZSwgcmVmRWxtO1xuXG4gICAgLy8gcmVtb3ZlT25seSBpcyBhIHNwZWNpYWwgZmxhZyB1c2VkIG9ubHkgYnkgPHRyYW5zaXRpb24tZ3JvdXA+XG4gICAgLy8gdG8gZW5zdXJlIHJlbW92ZWQgZWxlbWVudHMgc3RheSBpbiBjb3JyZWN0IHJlbGF0aXZlIHBvc2l0aW9uc1xuICAgIC8vIGR1cmluZyBsZWF2aW5nIHRyYW5zaXRpb25zXG4gICAgdmFyIGNhbk1vdmUgPSAhcmVtb3ZlT25seTtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICBjaGVja0R1cGxpY2F0ZUtleXMobmV3Q2gpO1xuICAgIH1cblxuICAgIHdoaWxlIChvbGRTdGFydElkeCA8PSBvbGRFbmRJZHggJiYgbmV3U3RhcnRJZHggPD0gbmV3RW5kSWR4KSB7XG4gICAgICBpZiAoaXNVbmRlZihvbGRTdGFydFZub2RlKSkge1xuICAgICAgICBvbGRTdGFydFZub2RlID0gb2xkQ2hbKytvbGRTdGFydElkeF07IC8vIFZub2RlIGhhcyBiZWVuIG1vdmVkIGxlZnRcbiAgICAgIH0gZWxzZSBpZiAoaXNVbmRlZihvbGRFbmRWbm9kZSkpIHtcbiAgICAgICAgb2xkRW5kVm5vZGUgPSBvbGRDaFstLW9sZEVuZElkeF07XG4gICAgICB9IGVsc2UgaWYgKHNhbWVWbm9kZShvbGRTdGFydFZub2RlLCBuZXdTdGFydFZub2RlKSkge1xuICAgICAgICBwYXRjaFZub2RlKG9sZFN0YXJ0Vm5vZGUsIG5ld1N0YXJ0Vm5vZGUsIGluc2VydGVkVm5vZGVRdWV1ZSwgbmV3Q2gsIG5ld1N0YXJ0SWR4KTtcbiAgICAgICAgb2xkU3RhcnRWbm9kZSA9IG9sZENoWysrb2xkU3RhcnRJZHhdO1xuICAgICAgICBuZXdTdGFydFZub2RlID0gbmV3Q2hbKytuZXdTdGFydElkeF07XG4gICAgICB9IGVsc2UgaWYgKHNhbWVWbm9kZShvbGRFbmRWbm9kZSwgbmV3RW5kVm5vZGUpKSB7XG4gICAgICAgIHBhdGNoVm5vZGUob2xkRW5kVm5vZGUsIG5ld0VuZFZub2RlLCBpbnNlcnRlZFZub2RlUXVldWUsIG5ld0NoLCBuZXdFbmRJZHgpO1xuICAgICAgICBvbGRFbmRWbm9kZSA9IG9sZENoWy0tb2xkRW5kSWR4XTtcbiAgICAgICAgbmV3RW5kVm5vZGUgPSBuZXdDaFstLW5ld0VuZElkeF07XG4gICAgICB9IGVsc2UgaWYgKHNhbWVWbm9kZShvbGRTdGFydFZub2RlLCBuZXdFbmRWbm9kZSkpIHsgLy8gVm5vZGUgbW92ZWQgcmlnaHRcbiAgICAgICAgcGF0Y2hWbm9kZShvbGRTdGFydFZub2RlLCBuZXdFbmRWbm9kZSwgaW5zZXJ0ZWRWbm9kZVF1ZXVlLCBuZXdDaCwgbmV3RW5kSWR4KTtcbiAgICAgICAgY2FuTW92ZSAmJiBub2RlT3BzLmluc2VydEJlZm9yZShwYXJlbnRFbG0sIG9sZFN0YXJ0Vm5vZGUuZWxtLCBub2RlT3BzLm5leHRTaWJsaW5nKG9sZEVuZFZub2RlLmVsbSkpO1xuICAgICAgICBvbGRTdGFydFZub2RlID0gb2xkQ2hbKytvbGRTdGFydElkeF07XG4gICAgICAgIG5ld0VuZFZub2RlID0gbmV3Q2hbLS1uZXdFbmRJZHhdO1xuICAgICAgfSBlbHNlIGlmIChzYW1lVm5vZGUob2xkRW5kVm5vZGUsIG5ld1N0YXJ0Vm5vZGUpKSB7IC8vIFZub2RlIG1vdmVkIGxlZnRcbiAgICAgICAgcGF0Y2hWbm9kZShvbGRFbmRWbm9kZSwgbmV3U3RhcnRWbm9kZSwgaW5zZXJ0ZWRWbm9kZVF1ZXVlLCBuZXdDaCwgbmV3U3RhcnRJZHgpO1xuICAgICAgICBjYW5Nb3ZlICYmIG5vZGVPcHMuaW5zZXJ0QmVmb3JlKHBhcmVudEVsbSwgb2xkRW5kVm5vZGUuZWxtLCBvbGRTdGFydFZub2RlLmVsbSk7XG4gICAgICAgIG9sZEVuZFZub2RlID0gb2xkQ2hbLS1vbGRFbmRJZHhdO1xuICAgICAgICBuZXdTdGFydFZub2RlID0gbmV3Q2hbKytuZXdTdGFydElkeF07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoaXNVbmRlZihvbGRLZXlUb0lkeCkpIHsgb2xkS2V5VG9JZHggPSBjcmVhdGVLZXlUb09sZElkeChvbGRDaCwgb2xkU3RhcnRJZHgsIG9sZEVuZElkeCk7IH1cbiAgICAgICAgaWR4SW5PbGQgPSBpc0RlZihuZXdTdGFydFZub2RlLmtleSlcbiAgICAgICAgICA/IG9sZEtleVRvSWR4W25ld1N0YXJ0Vm5vZGUua2V5XVxuICAgICAgICAgIDogZmluZElkeEluT2xkKG5ld1N0YXJ0Vm5vZGUsIG9sZENoLCBvbGRTdGFydElkeCwgb2xkRW5kSWR4KTtcbiAgICAgICAgaWYgKGlzVW5kZWYoaWR4SW5PbGQpKSB7IC8vIE5ldyBlbGVtZW50XG4gICAgICAgICAgY3JlYXRlRWxtKG5ld1N0YXJ0Vm5vZGUsIGluc2VydGVkVm5vZGVRdWV1ZSwgcGFyZW50RWxtLCBvbGRTdGFydFZub2RlLmVsbSwgZmFsc2UsIG5ld0NoLCBuZXdTdGFydElkeCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdm5vZGVUb01vdmUgPSBvbGRDaFtpZHhJbk9sZF07XG4gICAgICAgICAgaWYgKHNhbWVWbm9kZSh2bm9kZVRvTW92ZSwgbmV3U3RhcnRWbm9kZSkpIHtcbiAgICAgICAgICAgIHBhdGNoVm5vZGUodm5vZGVUb01vdmUsIG5ld1N0YXJ0Vm5vZGUsIGluc2VydGVkVm5vZGVRdWV1ZSwgbmV3Q2gsIG5ld1N0YXJ0SWR4KTtcbiAgICAgICAgICAgIG9sZENoW2lkeEluT2xkXSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIGNhbk1vdmUgJiYgbm9kZU9wcy5pbnNlcnRCZWZvcmUocGFyZW50RWxtLCB2bm9kZVRvTW92ZS5lbG0sIG9sZFN0YXJ0Vm5vZGUuZWxtKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gc2FtZSBrZXkgYnV0IGRpZmZlcmVudCBlbGVtZW50LiB0cmVhdCBhcyBuZXcgZWxlbWVudFxuICAgICAgICAgICAgY3JlYXRlRWxtKG5ld1N0YXJ0Vm5vZGUsIGluc2VydGVkVm5vZGVRdWV1ZSwgcGFyZW50RWxtLCBvbGRTdGFydFZub2RlLmVsbSwgZmFsc2UsIG5ld0NoLCBuZXdTdGFydElkeCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIG5ld1N0YXJ0Vm5vZGUgPSBuZXdDaFsrK25ld1N0YXJ0SWR4XTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKG9sZFN0YXJ0SWR4ID4gb2xkRW5kSWR4KSB7XG4gICAgICByZWZFbG0gPSBpc1VuZGVmKG5ld0NoW25ld0VuZElkeCArIDFdKSA/IG51bGwgOiBuZXdDaFtuZXdFbmRJZHggKyAxXS5lbG07XG4gICAgICBhZGRWbm9kZXMocGFyZW50RWxtLCByZWZFbG0sIG5ld0NoLCBuZXdTdGFydElkeCwgbmV3RW5kSWR4LCBpbnNlcnRlZFZub2RlUXVldWUpO1xuICAgIH0gZWxzZSBpZiAobmV3U3RhcnRJZHggPiBuZXdFbmRJZHgpIHtcbiAgICAgIHJlbW92ZVZub2RlcyhwYXJlbnRFbG0sIG9sZENoLCBvbGRTdGFydElkeCwgb2xkRW5kSWR4KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBjaGVja0R1cGxpY2F0ZUtleXMgKGNoaWxkcmVuKSB7XG4gICAgdmFyIHNlZW5LZXlzID0ge307XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHZub2RlID0gY2hpbGRyZW5baV07XG4gICAgICB2YXIga2V5ID0gdm5vZGUua2V5O1xuICAgICAgaWYgKGlzRGVmKGtleSkpIHtcbiAgICAgICAgaWYgKHNlZW5LZXlzW2tleV0pIHtcbiAgICAgICAgICB3YXJuKFxuICAgICAgICAgICAgKFwiRHVwbGljYXRlIGtleXMgZGV0ZWN0ZWQ6ICdcIiArIGtleSArIFwiJy4gVGhpcyBtYXkgY2F1c2UgYW4gdXBkYXRlIGVycm9yLlwiKSxcbiAgICAgICAgICAgIHZub2RlLmNvbnRleHRcbiAgICAgICAgICApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHNlZW5LZXlzW2tleV0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gZmluZElkeEluT2xkIChub2RlLCBvbGRDaCwgc3RhcnQsIGVuZCkge1xuICAgIGZvciAodmFyIGkgPSBzdGFydDsgaSA8IGVuZDsgaSsrKSB7XG4gICAgICB2YXIgYyA9IG9sZENoW2ldO1xuICAgICAgaWYgKGlzRGVmKGMpICYmIHNhbWVWbm9kZShub2RlLCBjKSkgeyByZXR1cm4gaSB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcGF0Y2hWbm9kZSAoXG4gICAgb2xkVm5vZGUsXG4gICAgdm5vZGUsXG4gICAgaW5zZXJ0ZWRWbm9kZVF1ZXVlLFxuICAgIG93bmVyQXJyYXksXG4gICAgaW5kZXgsXG4gICAgcmVtb3ZlT25seVxuICApIHtcbiAgICBpZiAob2xkVm5vZGUgPT09IHZub2RlKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBpZiAoaXNEZWYodm5vZGUuZWxtKSAmJiBpc0RlZihvd25lckFycmF5KSkge1xuICAgICAgLy8gY2xvbmUgcmV1c2VkIHZub2RlXG4gICAgICB2bm9kZSA9IG93bmVyQXJyYXlbaW5kZXhdID0gY2xvbmVWTm9kZSh2bm9kZSk7XG4gICAgfVxuXG4gICAgdmFyIGVsbSA9IHZub2RlLmVsbSA9IG9sZFZub2RlLmVsbTtcblxuICAgIGlmIChpc1RydWUob2xkVm5vZGUuaXNBc3luY1BsYWNlaG9sZGVyKSkge1xuICAgICAgaWYgKGlzRGVmKHZub2RlLmFzeW5jRmFjdG9yeS5yZXNvbHZlZCkpIHtcbiAgICAgICAgaHlkcmF0ZShvbGRWbm9kZS5lbG0sIHZub2RlLCBpbnNlcnRlZFZub2RlUXVldWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdm5vZGUuaXNBc3luY1BsYWNlaG9sZGVyID0gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIC8vIHJldXNlIGVsZW1lbnQgZm9yIHN0YXRpYyB0cmVlcy5cbiAgICAvLyBub3RlIHdlIG9ubHkgZG8gdGhpcyBpZiB0aGUgdm5vZGUgaXMgY2xvbmVkIC1cbiAgICAvLyBpZiB0aGUgbmV3IG5vZGUgaXMgbm90IGNsb25lZCBpdCBtZWFucyB0aGUgcmVuZGVyIGZ1bmN0aW9ucyBoYXZlIGJlZW5cbiAgICAvLyByZXNldCBieSB0aGUgaG90LXJlbG9hZC1hcGkgYW5kIHdlIG5lZWQgdG8gZG8gYSBwcm9wZXIgcmUtcmVuZGVyLlxuICAgIGlmIChpc1RydWUodm5vZGUuaXNTdGF0aWMpICYmXG4gICAgICBpc1RydWUob2xkVm5vZGUuaXNTdGF0aWMpICYmXG4gICAgICB2bm9kZS5rZXkgPT09IG9sZFZub2RlLmtleSAmJlxuICAgICAgKGlzVHJ1ZSh2bm9kZS5pc0Nsb25lZCkgfHwgaXNUcnVlKHZub2RlLmlzT25jZSkpXG4gICAgKSB7XG4gICAgICB2bm9kZS5jb21wb25lbnRJbnN0YW5jZSA9IG9sZFZub2RlLmNvbXBvbmVudEluc3RhbmNlO1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgdmFyIGk7XG4gICAgdmFyIGRhdGEgPSB2bm9kZS5kYXRhO1xuICAgIGlmIChpc0RlZihkYXRhKSAmJiBpc0RlZihpID0gZGF0YS5ob29rKSAmJiBpc0RlZihpID0gaS5wcmVwYXRjaCkpIHtcbiAgICAgIGkob2xkVm5vZGUsIHZub2RlKTtcbiAgICB9XG5cbiAgICB2YXIgb2xkQ2ggPSBvbGRWbm9kZS5jaGlsZHJlbjtcbiAgICB2YXIgY2ggPSB2bm9kZS5jaGlsZHJlbjtcbiAgICBpZiAoaXNEZWYoZGF0YSkgJiYgaXNQYXRjaGFibGUodm5vZGUpKSB7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgY2JzLnVwZGF0ZS5sZW5ndGg7ICsraSkgeyBjYnMudXBkYXRlW2ldKG9sZFZub2RlLCB2bm9kZSk7IH1cbiAgICAgIGlmIChpc0RlZihpID0gZGF0YS5ob29rKSAmJiBpc0RlZihpID0gaS51cGRhdGUpKSB7IGkob2xkVm5vZGUsIHZub2RlKTsgfVxuICAgIH1cbiAgICBpZiAoaXNVbmRlZih2bm9kZS50ZXh0KSkge1xuICAgICAgaWYgKGlzRGVmKG9sZENoKSAmJiBpc0RlZihjaCkpIHtcbiAgICAgICAgaWYgKG9sZENoICE9PSBjaCkgeyB1cGRhdGVDaGlsZHJlbihlbG0sIG9sZENoLCBjaCwgaW5zZXJ0ZWRWbm9kZVF1ZXVlLCByZW1vdmVPbmx5KTsgfVxuICAgICAgfSBlbHNlIGlmIChpc0RlZihjaCkpIHtcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICBjaGVja0R1cGxpY2F0ZUtleXMoY2gpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc0RlZihvbGRWbm9kZS50ZXh0KSkgeyBub2RlT3BzLnNldFRleHRDb250ZW50KGVsbSwgJycpOyB9XG4gICAgICAgIGFkZFZub2RlcyhlbG0sIG51bGwsIGNoLCAwLCBjaC5sZW5ndGggLSAxLCBpbnNlcnRlZFZub2RlUXVldWUpO1xuICAgICAgfSBlbHNlIGlmIChpc0RlZihvbGRDaCkpIHtcbiAgICAgICAgcmVtb3ZlVm5vZGVzKGVsbSwgb2xkQ2gsIDAsIG9sZENoLmxlbmd0aCAtIDEpO1xuICAgICAgfSBlbHNlIGlmIChpc0RlZihvbGRWbm9kZS50ZXh0KSkge1xuICAgICAgICBub2RlT3BzLnNldFRleHRDb250ZW50KGVsbSwgJycpO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAob2xkVm5vZGUudGV4dCAhPT0gdm5vZGUudGV4dCkge1xuICAgICAgbm9kZU9wcy5zZXRUZXh0Q29udGVudChlbG0sIHZub2RlLnRleHQpO1xuICAgIH1cbiAgICBpZiAoaXNEZWYoZGF0YSkpIHtcbiAgICAgIGlmIChpc0RlZihpID0gZGF0YS5ob29rKSAmJiBpc0RlZihpID0gaS5wb3N0cGF0Y2gpKSB7IGkob2xkVm5vZGUsIHZub2RlKTsgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGludm9rZUluc2VydEhvb2sgKHZub2RlLCBxdWV1ZSwgaW5pdGlhbCkge1xuICAgIC8vIGRlbGF5IGluc2VydCBob29rcyBmb3IgY29tcG9uZW50IHJvb3Qgbm9kZXMsIGludm9rZSB0aGVtIGFmdGVyIHRoZVxuICAgIC8vIGVsZW1lbnQgaXMgcmVhbGx5IGluc2VydGVkXG4gICAgaWYgKGlzVHJ1ZShpbml0aWFsKSAmJiBpc0RlZih2bm9kZS5wYXJlbnQpKSB7XG4gICAgICB2bm9kZS5wYXJlbnQuZGF0YS5wZW5kaW5nSW5zZXJ0ID0gcXVldWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcXVldWUubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgcXVldWVbaV0uZGF0YS5ob29rLmluc2VydChxdWV1ZVtpXSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgdmFyIGh5ZHJhdGlvbkJhaWxlZCA9IGZhbHNlO1xuICAvLyBsaXN0IG9mIG1vZHVsZXMgdGhhdCBjYW4gc2tpcCBjcmVhdGUgaG9vayBkdXJpbmcgaHlkcmF0aW9uIGJlY2F1c2UgdGhleVxuICAvLyBhcmUgYWxyZWFkeSByZW5kZXJlZCBvbiB0aGUgY2xpZW50IG9yIGhhcyBubyBuZWVkIGZvciBpbml0aWFsaXphdGlvblxuICAvLyBOb3RlOiBzdHlsZSBpcyBleGNsdWRlZCBiZWNhdXNlIGl0IHJlbGllcyBvbiBpbml0aWFsIGNsb25lIGZvciBmdXR1cmVcbiAgLy8gZGVlcCB1cGRhdGVzICgjNzA2MykuXG4gIHZhciBpc1JlbmRlcmVkTW9kdWxlID0gbWFrZU1hcCgnYXR0cnMsY2xhc3Msc3RhdGljQ2xhc3Msc3RhdGljU3R5bGUsa2V5Jyk7XG5cbiAgLy8gTm90ZTogdGhpcyBpcyBhIGJyb3dzZXItb25seSBmdW5jdGlvbiBzbyB3ZSBjYW4gYXNzdW1lIGVsbXMgYXJlIERPTSBub2Rlcy5cbiAgZnVuY3Rpb24gaHlkcmF0ZSAoZWxtLCB2bm9kZSwgaW5zZXJ0ZWRWbm9kZVF1ZXVlLCBpblZQcmUpIHtcbiAgICB2YXIgaTtcbiAgICB2YXIgdGFnID0gdm5vZGUudGFnO1xuICAgIHZhciBkYXRhID0gdm5vZGUuZGF0YTtcbiAgICB2YXIgY2hpbGRyZW4gPSB2bm9kZS5jaGlsZHJlbjtcbiAgICBpblZQcmUgPSBpblZQcmUgfHwgKGRhdGEgJiYgZGF0YS5wcmUpO1xuICAgIHZub2RlLmVsbSA9IGVsbTtcblxuICAgIGlmIChpc1RydWUodm5vZGUuaXNDb21tZW50KSAmJiBpc0RlZih2bm9kZS5hc3luY0ZhY3RvcnkpKSB7XG4gICAgICB2bm9kZS5pc0FzeW5jUGxhY2Vob2xkZXIgPSB0cnVlO1xuICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG4gICAgLy8gYXNzZXJ0IG5vZGUgbWF0Y2hcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaWYgKCFhc3NlcnROb2RlTWF0Y2goZWxtLCB2bm9kZSwgaW5WUHJlKSkge1xuICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKGlzRGVmKGRhdGEpKSB7XG4gICAgICBpZiAoaXNEZWYoaSA9IGRhdGEuaG9vaykgJiYgaXNEZWYoaSA9IGkuaW5pdCkpIHsgaSh2bm9kZSwgdHJ1ZSAvKiBoeWRyYXRpbmcgKi8pOyB9XG4gICAgICBpZiAoaXNEZWYoaSA9IHZub2RlLmNvbXBvbmVudEluc3RhbmNlKSkge1xuICAgICAgICAvLyBjaGlsZCBjb21wb25lbnQuIGl0IHNob3VsZCBoYXZlIGh5ZHJhdGVkIGl0cyBvd24gdHJlZS5cbiAgICAgICAgaW5pdENvbXBvbmVudCh2bm9kZSwgaW5zZXJ0ZWRWbm9kZVF1ZXVlKTtcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKGlzRGVmKHRhZykpIHtcbiAgICAgIGlmIChpc0RlZihjaGlsZHJlbikpIHtcbiAgICAgICAgLy8gZW1wdHkgZWxlbWVudCwgYWxsb3cgY2xpZW50IHRvIHBpY2sgdXAgYW5kIHBvcHVsYXRlIGNoaWxkcmVuXG4gICAgICAgIGlmICghZWxtLmhhc0NoaWxkTm9kZXMoKSkge1xuICAgICAgICAgIGNyZWF0ZUNoaWxkcmVuKHZub2RlLCBjaGlsZHJlbiwgaW5zZXJ0ZWRWbm9kZVF1ZXVlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyB2LWh0bWwgYW5kIGRvbVByb3BzOiBpbm5lckhUTUxcbiAgICAgICAgICBpZiAoaXNEZWYoaSA9IGRhdGEpICYmIGlzRGVmKGkgPSBpLmRvbVByb3BzKSAmJiBpc0RlZihpID0gaS5pbm5lckhUTUwpKSB7XG4gICAgICAgICAgICBpZiAoaSAhPT0gZWxtLmlubmVySFRNTCkge1xuICAgICAgICAgICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiZcbiAgICAgICAgICAgICAgICB0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICAgICAgICAgICAgICAhaHlkcmF0aW9uQmFpbGVkXG4gICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgIGh5ZHJhdGlvbkJhaWxlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKCdQYXJlbnQ6ICcsIGVsbSk7XG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKCdzZXJ2ZXIgaW5uZXJIVE1MOiAnLCBpKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oJ2NsaWVudCBpbm5lckhUTUw6ICcsIGVsbS5pbm5lckhUTUwpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBpdGVyYXRlIGFuZCBjb21wYXJlIGNoaWxkcmVuIGxpc3RzXG4gICAgICAgICAgICB2YXIgY2hpbGRyZW5NYXRjaCA9IHRydWU7XG4gICAgICAgICAgICB2YXIgY2hpbGROb2RlID0gZWxtLmZpcnN0Q2hpbGQ7XG4gICAgICAgICAgICBmb3IgKHZhciBpJDEgPSAwOyBpJDEgPCBjaGlsZHJlbi5sZW5ndGg7IGkkMSsrKSB7XG4gICAgICAgICAgICAgIGlmICghY2hpbGROb2RlIHx8ICFoeWRyYXRlKGNoaWxkTm9kZSwgY2hpbGRyZW5baSQxXSwgaW5zZXJ0ZWRWbm9kZVF1ZXVlLCBpblZQcmUpKSB7XG4gICAgICAgICAgICAgICAgY2hpbGRyZW5NYXRjaCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgY2hpbGROb2RlID0gY2hpbGROb2RlLm5leHRTaWJsaW5nO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gaWYgY2hpbGROb2RlIGlzIG5vdCBudWxsLCBpdCBtZWFucyB0aGUgYWN0dWFsIGNoaWxkTm9kZXMgbGlzdCBpc1xuICAgICAgICAgICAgLy8gbG9uZ2VyIHRoYW4gdGhlIHZpcnR1YWwgY2hpbGRyZW4gbGlzdC5cbiAgICAgICAgICAgIGlmICghY2hpbGRyZW5NYXRjaCB8fCBjaGlsZE5vZGUpIHtcbiAgICAgICAgICAgICAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmXG4gICAgICAgICAgICAgICAgdHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnICYmXG4gICAgICAgICAgICAgICAgIWh5ZHJhdGlvbkJhaWxlZFxuICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICBoeWRyYXRpb25CYWlsZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybignUGFyZW50OiAnLCBlbG0pO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybignTWlzbWF0Y2hpbmcgY2hpbGROb2RlcyB2cy4gVk5vZGVzOiAnLCBlbG0uY2hpbGROb2RlcywgY2hpbGRyZW4pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKGlzRGVmKGRhdGEpKSB7XG4gICAgICAgIHZhciBmdWxsSW52b2tlID0gZmFsc2U7XG4gICAgICAgIGZvciAodmFyIGtleSBpbiBkYXRhKSB7XG4gICAgICAgICAgaWYgKCFpc1JlbmRlcmVkTW9kdWxlKGtleSkpIHtcbiAgICAgICAgICAgIGZ1bGxJbnZva2UgPSB0cnVlO1xuICAgICAgICAgICAgaW52b2tlQ3JlYXRlSG9va3Modm5vZGUsIGluc2VydGVkVm5vZGVRdWV1ZSk7XG4gICAgICAgICAgICBicmVha1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoIWZ1bGxJbnZva2UgJiYgZGF0YVsnY2xhc3MnXSkge1xuICAgICAgICAgIC8vIGVuc3VyZSBjb2xsZWN0aW5nIGRlcHMgZm9yIGRlZXAgY2xhc3MgYmluZGluZ3MgZm9yIGZ1dHVyZSB1cGRhdGVzXG4gICAgICAgICAgdHJhdmVyc2UoZGF0YVsnY2xhc3MnXSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGVsbS5kYXRhICE9PSB2bm9kZS50ZXh0KSB7XG4gICAgICBlbG0uZGF0YSA9IHZub2RlLnRleHQ7XG4gICAgfVxuICAgIHJldHVybiB0cnVlXG4gIH1cblxuICBmdW5jdGlvbiBhc3NlcnROb2RlTWF0Y2ggKG5vZGUsIHZub2RlLCBpblZQcmUpIHtcbiAgICBpZiAoaXNEZWYodm5vZGUudGFnKSkge1xuICAgICAgcmV0dXJuIHZub2RlLnRhZy5pbmRleE9mKCd2dWUtY29tcG9uZW50JykgPT09IDAgfHwgKFxuICAgICAgICAhaXNVbmtub3duRWxlbWVudCQkMSh2bm9kZSwgaW5WUHJlKSAmJlxuICAgICAgICB2bm9kZS50YWcudG9Mb3dlckNhc2UoKSA9PT0gKG5vZGUudGFnTmFtZSAmJiBub2RlLnRhZ05hbWUudG9Mb3dlckNhc2UoKSlcbiAgICAgIClcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG5vZGUubm9kZVR5cGUgPT09ICh2bm9kZS5pc0NvbW1lbnQgPyA4IDogMylcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gcGF0Y2ggKG9sZFZub2RlLCB2bm9kZSwgaHlkcmF0aW5nLCByZW1vdmVPbmx5KSB7XG4gICAgaWYgKGlzVW5kZWYodm5vZGUpKSB7XG4gICAgICBpZiAoaXNEZWYob2xkVm5vZGUpKSB7IGludm9rZURlc3Ryb3lIb29rKG9sZFZub2RlKTsgfVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgdmFyIGlzSW5pdGlhbFBhdGNoID0gZmFsc2U7XG4gICAgdmFyIGluc2VydGVkVm5vZGVRdWV1ZSA9IFtdO1xuXG4gICAgaWYgKGlzVW5kZWYob2xkVm5vZGUpKSB7XG4gICAgICAvLyBlbXB0eSBtb3VudCAobGlrZWx5IGFzIGNvbXBvbmVudCksIGNyZWF0ZSBuZXcgcm9vdCBlbGVtZW50XG4gICAgICBpc0luaXRpYWxQYXRjaCA9IHRydWU7XG4gICAgICBjcmVhdGVFbG0odm5vZGUsIGluc2VydGVkVm5vZGVRdWV1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBpc1JlYWxFbGVtZW50ID0gaXNEZWYob2xkVm5vZGUubm9kZVR5cGUpO1xuICAgICAgaWYgKCFpc1JlYWxFbGVtZW50ICYmIHNhbWVWbm9kZShvbGRWbm9kZSwgdm5vZGUpKSB7XG4gICAgICAgIC8vIHBhdGNoIGV4aXN0aW5nIHJvb3Qgbm9kZVxuICAgICAgICBwYXRjaFZub2RlKG9sZFZub2RlLCB2bm9kZSwgaW5zZXJ0ZWRWbm9kZVF1ZXVlLCBudWxsLCBudWxsLCByZW1vdmVPbmx5KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChpc1JlYWxFbGVtZW50KSB7XG4gICAgICAgICAgLy8gbW91bnRpbmcgdG8gYSByZWFsIGVsZW1lbnRcbiAgICAgICAgICAvLyBjaGVjayBpZiB0aGlzIGlzIHNlcnZlci1yZW5kZXJlZCBjb250ZW50IGFuZCBpZiB3ZSBjYW4gcGVyZm9ybVxuICAgICAgICAgIC8vIGEgc3VjY2Vzc2Z1bCBoeWRyYXRpb24uXG4gICAgICAgICAgaWYgKG9sZFZub2RlLm5vZGVUeXBlID09PSAxICYmIG9sZFZub2RlLmhhc0F0dHJpYnV0ZShTU1JfQVRUUikpIHtcbiAgICAgICAgICAgIG9sZFZub2RlLnJlbW92ZUF0dHJpYnV0ZShTU1JfQVRUUik7XG4gICAgICAgICAgICBoeWRyYXRpbmcgPSB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoaXNUcnVlKGh5ZHJhdGluZykpIHtcbiAgICAgICAgICAgIGlmIChoeWRyYXRlKG9sZFZub2RlLCB2bm9kZSwgaW5zZXJ0ZWRWbm9kZVF1ZXVlKSkge1xuICAgICAgICAgICAgICBpbnZva2VJbnNlcnRIb29rKHZub2RlLCBpbnNlcnRlZFZub2RlUXVldWUsIHRydWUpO1xuICAgICAgICAgICAgICByZXR1cm4gb2xkVm5vZGVcbiAgICAgICAgICAgIH0gZWxzZSBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgICB3YXJuKFxuICAgICAgICAgICAgICAgICdUaGUgY2xpZW50LXNpZGUgcmVuZGVyZWQgdmlydHVhbCBET00gdHJlZSBpcyBub3QgbWF0Y2hpbmcgJyArXG4gICAgICAgICAgICAgICAgJ3NlcnZlci1yZW5kZXJlZCBjb250ZW50LiBUaGlzIGlzIGxpa2VseSBjYXVzZWQgYnkgaW5jb3JyZWN0ICcgK1xuICAgICAgICAgICAgICAgICdIVE1MIG1hcmt1cCwgZm9yIGV4YW1wbGUgbmVzdGluZyBibG9jay1sZXZlbCBlbGVtZW50cyBpbnNpZGUgJyArXG4gICAgICAgICAgICAgICAgJzxwPiwgb3IgbWlzc2luZyA8dGJvZHk+LiBCYWlsaW5nIGh5ZHJhdGlvbiBhbmQgcGVyZm9ybWluZyAnICtcbiAgICAgICAgICAgICAgICAnZnVsbCBjbGllbnQtc2lkZSByZW5kZXIuJ1xuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICAvLyBlaXRoZXIgbm90IHNlcnZlci1yZW5kZXJlZCwgb3IgaHlkcmF0aW9uIGZhaWxlZC5cbiAgICAgICAgICAvLyBjcmVhdGUgYW4gZW1wdHkgbm9kZSBhbmQgcmVwbGFjZSBpdFxuICAgICAgICAgIG9sZFZub2RlID0gZW1wdHlOb2RlQXQob2xkVm5vZGUpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gcmVwbGFjaW5nIGV4aXN0aW5nIGVsZW1lbnRcbiAgICAgICAgdmFyIG9sZEVsbSA9IG9sZFZub2RlLmVsbTtcbiAgICAgICAgdmFyIHBhcmVudEVsbSA9IG5vZGVPcHMucGFyZW50Tm9kZShvbGRFbG0pO1xuXG4gICAgICAgIC8vIGNyZWF0ZSBuZXcgbm9kZVxuICAgICAgICBjcmVhdGVFbG0oXG4gICAgICAgICAgdm5vZGUsXG4gICAgICAgICAgaW5zZXJ0ZWRWbm9kZVF1ZXVlLFxuICAgICAgICAgIC8vIGV4dHJlbWVseSByYXJlIGVkZ2UgY2FzZTogZG8gbm90IGluc2VydCBpZiBvbGQgZWxlbWVudCBpcyBpbiBhXG4gICAgICAgICAgLy8gbGVhdmluZyB0cmFuc2l0aW9uLiBPbmx5IGhhcHBlbnMgd2hlbiBjb21iaW5pbmcgdHJhbnNpdGlvbiArXG4gICAgICAgICAgLy8ga2VlcC1hbGl2ZSArIEhPQ3MuICgjNDU5MClcbiAgICAgICAgICBvbGRFbG0uX2xlYXZlQ2IgPyBudWxsIDogcGFyZW50RWxtLFxuICAgICAgICAgIG5vZGVPcHMubmV4dFNpYmxpbmcob2xkRWxtKVxuICAgICAgICApO1xuXG4gICAgICAgIC8vIHVwZGF0ZSBwYXJlbnQgcGxhY2Vob2xkZXIgbm9kZSBlbGVtZW50LCByZWN1cnNpdmVseVxuICAgICAgICBpZiAoaXNEZWYodm5vZGUucGFyZW50KSkge1xuICAgICAgICAgIHZhciBhbmNlc3RvciA9IHZub2RlLnBhcmVudDtcbiAgICAgICAgICB2YXIgcGF0Y2hhYmxlID0gaXNQYXRjaGFibGUodm5vZGUpO1xuICAgICAgICAgIHdoaWxlIChhbmNlc3Rvcikge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjYnMuZGVzdHJveS5sZW5ndGg7ICsraSkge1xuICAgICAgICAgICAgICBjYnMuZGVzdHJveVtpXShhbmNlc3Rvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhbmNlc3Rvci5lbG0gPSB2bm9kZS5lbG07XG4gICAgICAgICAgICBpZiAocGF0Y2hhYmxlKSB7XG4gICAgICAgICAgICAgIGZvciAodmFyIGkkMSA9IDA7IGkkMSA8IGNicy5jcmVhdGUubGVuZ3RoOyArK2kkMSkge1xuICAgICAgICAgICAgICAgIGNicy5jcmVhdGVbaSQxXShlbXB0eU5vZGUsIGFuY2VzdG9yKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAvLyAjNjUxM1xuICAgICAgICAgICAgICAvLyBpbnZva2UgaW5zZXJ0IGhvb2tzIHRoYXQgbWF5IGhhdmUgYmVlbiBtZXJnZWQgYnkgY3JlYXRlIGhvb2tzLlxuICAgICAgICAgICAgICAvLyBlLmcuIGZvciBkaXJlY3RpdmVzIHRoYXQgdXNlcyB0aGUgXCJpbnNlcnRlZFwiIGhvb2suXG4gICAgICAgICAgICAgIHZhciBpbnNlcnQgPSBhbmNlc3Rvci5kYXRhLmhvb2suaW5zZXJ0O1xuICAgICAgICAgICAgICBpZiAoaW5zZXJ0Lm1lcmdlZCkge1xuICAgICAgICAgICAgICAgIC8vIHN0YXJ0IGF0IGluZGV4IDEgdG8gYXZvaWQgcmUtaW52b2tpbmcgY29tcG9uZW50IG1vdW50ZWQgaG9va1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkkMiA9IDE7IGkkMiA8IGluc2VydC5mbnMubGVuZ3RoOyBpJDIrKykge1xuICAgICAgICAgICAgICAgICAgaW5zZXJ0LmZuc1tpJDJdKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICByZWdpc3RlclJlZihhbmNlc3Rvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhbmNlc3RvciA9IGFuY2VzdG9yLnBhcmVudDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBkZXN0cm95IG9sZCBub2RlXG4gICAgICAgIGlmIChpc0RlZihwYXJlbnRFbG0pKSB7XG4gICAgICAgICAgcmVtb3ZlVm5vZGVzKHBhcmVudEVsbSwgW29sZFZub2RlXSwgMCwgMCk7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNEZWYob2xkVm5vZGUudGFnKSkge1xuICAgICAgICAgIGludm9rZURlc3Ryb3lIb29rKG9sZFZub2RlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGludm9rZUluc2VydEhvb2sodm5vZGUsIGluc2VydGVkVm5vZGVRdWV1ZSwgaXNJbml0aWFsUGF0Y2gpO1xuICAgIHJldHVybiB2bm9kZS5lbG1cbiAgfVxufVxuXG4vKiAgKi9cblxudmFyIGRpcmVjdGl2ZXMgPSB7XG4gIGNyZWF0ZTogdXBkYXRlRGlyZWN0aXZlcyxcbiAgdXBkYXRlOiB1cGRhdGVEaXJlY3RpdmVzLFxuICBkZXN0cm95OiBmdW5jdGlvbiB1bmJpbmREaXJlY3RpdmVzICh2bm9kZSkge1xuICAgIHVwZGF0ZURpcmVjdGl2ZXModm5vZGUsIGVtcHR5Tm9kZSk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIHVwZGF0ZURpcmVjdGl2ZXMgKG9sZFZub2RlLCB2bm9kZSkge1xuICBpZiAob2xkVm5vZGUuZGF0YS5kaXJlY3RpdmVzIHx8IHZub2RlLmRhdGEuZGlyZWN0aXZlcykge1xuICAgIF91cGRhdGUob2xkVm5vZGUsIHZub2RlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBfdXBkYXRlIChvbGRWbm9kZSwgdm5vZGUpIHtcbiAgdmFyIGlzQ3JlYXRlID0gb2xkVm5vZGUgPT09IGVtcHR5Tm9kZTtcbiAgdmFyIGlzRGVzdHJveSA9IHZub2RlID09PSBlbXB0eU5vZGU7XG4gIHZhciBvbGREaXJzID0gbm9ybWFsaXplRGlyZWN0aXZlcyQxKG9sZFZub2RlLmRhdGEuZGlyZWN0aXZlcywgb2xkVm5vZGUuY29udGV4dCk7XG4gIHZhciBuZXdEaXJzID0gbm9ybWFsaXplRGlyZWN0aXZlcyQxKHZub2RlLmRhdGEuZGlyZWN0aXZlcywgdm5vZGUuY29udGV4dCk7XG5cbiAgdmFyIGRpcnNXaXRoSW5zZXJ0ID0gW107XG4gIHZhciBkaXJzV2l0aFBvc3RwYXRjaCA9IFtdO1xuXG4gIHZhciBrZXksIG9sZERpciwgZGlyO1xuICBmb3IgKGtleSBpbiBuZXdEaXJzKSB7XG4gICAgb2xkRGlyID0gb2xkRGlyc1trZXldO1xuICAgIGRpciA9IG5ld0RpcnNba2V5XTtcbiAgICBpZiAoIW9sZERpcikge1xuICAgICAgLy8gbmV3IGRpcmVjdGl2ZSwgYmluZFxuICAgICAgY2FsbEhvb2skMShkaXIsICdiaW5kJywgdm5vZGUsIG9sZFZub2RlKTtcbiAgICAgIGlmIChkaXIuZGVmICYmIGRpci5kZWYuaW5zZXJ0ZWQpIHtcbiAgICAgICAgZGlyc1dpdGhJbnNlcnQucHVzaChkaXIpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBleGlzdGluZyBkaXJlY3RpdmUsIHVwZGF0ZVxuICAgICAgZGlyLm9sZFZhbHVlID0gb2xkRGlyLnZhbHVlO1xuICAgICAgZGlyLm9sZEFyZyA9IG9sZERpci5hcmc7XG4gICAgICBjYWxsSG9vayQxKGRpciwgJ3VwZGF0ZScsIHZub2RlLCBvbGRWbm9kZSk7XG4gICAgICBpZiAoZGlyLmRlZiAmJiBkaXIuZGVmLmNvbXBvbmVudFVwZGF0ZWQpIHtcbiAgICAgICAgZGlyc1dpdGhQb3N0cGF0Y2gucHVzaChkaXIpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGlmIChkaXJzV2l0aEluc2VydC5sZW5ndGgpIHtcbiAgICB2YXIgY2FsbEluc2VydCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZGlyc1dpdGhJbnNlcnQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY2FsbEhvb2skMShkaXJzV2l0aEluc2VydFtpXSwgJ2luc2VydGVkJywgdm5vZGUsIG9sZFZub2RlKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIGlmIChpc0NyZWF0ZSkge1xuICAgICAgbWVyZ2VWTm9kZUhvb2sodm5vZGUsICdpbnNlcnQnLCBjYWxsSW5zZXJ0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgY2FsbEluc2VydCgpO1xuICAgIH1cbiAgfVxuXG4gIGlmIChkaXJzV2l0aFBvc3RwYXRjaC5sZW5ndGgpIHtcbiAgICBtZXJnZVZOb2RlSG9vayh2bm9kZSwgJ3Bvc3RwYXRjaCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZGlyc1dpdGhQb3N0cGF0Y2gubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY2FsbEhvb2skMShkaXJzV2l0aFBvc3RwYXRjaFtpXSwgJ2NvbXBvbmVudFVwZGF0ZWQnLCB2bm9kZSwgb2xkVm5vZGUpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgaWYgKCFpc0NyZWF0ZSkge1xuICAgIGZvciAoa2V5IGluIG9sZERpcnMpIHtcbiAgICAgIGlmICghbmV3RGlyc1trZXldKSB7XG4gICAgICAgIC8vIG5vIGxvbmdlciBwcmVzZW50LCB1bmJpbmRcbiAgICAgICAgY2FsbEhvb2skMShvbGREaXJzW2tleV0sICd1bmJpbmQnLCBvbGRWbm9kZSwgb2xkVm5vZGUsIGlzRGVzdHJveSk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbnZhciBlbXB0eU1vZGlmaWVycyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZURpcmVjdGl2ZXMkMSAoXG4gIGRpcnMsXG4gIHZtXG4pIHtcbiAgdmFyIHJlcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIGlmICghZGlycykge1xuICAgIC8vICRmbG93LWRpc2FibGUtbGluZVxuICAgIHJldHVybiByZXNcbiAgfVxuICB2YXIgaSwgZGlyO1xuICBmb3IgKGkgPSAwOyBpIDwgZGlycy5sZW5ndGg7IGkrKykge1xuICAgIGRpciA9IGRpcnNbaV07XG4gICAgaWYgKCFkaXIubW9kaWZpZXJzKSB7XG4gICAgICAvLyAkZmxvdy1kaXNhYmxlLWxpbmVcbiAgICAgIGRpci5tb2RpZmllcnMgPSBlbXB0eU1vZGlmaWVycztcbiAgICB9XG4gICAgcmVzW2dldFJhd0Rpck5hbWUoZGlyKV0gPSBkaXI7XG4gICAgZGlyLmRlZiA9IHJlc29sdmVBc3NldCh2bS4kb3B0aW9ucywgJ2RpcmVjdGl2ZXMnLCBkaXIubmFtZSwgdHJ1ZSk7XG4gIH1cbiAgLy8gJGZsb3ctZGlzYWJsZS1saW5lXG4gIHJldHVybiByZXNcbn1cblxuZnVuY3Rpb24gZ2V0UmF3RGlyTmFtZSAoZGlyKSB7XG4gIHJldHVybiBkaXIucmF3TmFtZSB8fCAoKGRpci5uYW1lKSArIFwiLlwiICsgKE9iamVjdC5rZXlzKGRpci5tb2RpZmllcnMgfHwge30pLmpvaW4oJy4nKSkpXG59XG5cbmZ1bmN0aW9uIGNhbGxIb29rJDEgKGRpciwgaG9vaywgdm5vZGUsIG9sZFZub2RlLCBpc0Rlc3Ryb3kpIHtcbiAgdmFyIGZuID0gZGlyLmRlZiAmJiBkaXIuZGVmW2hvb2tdO1xuICBpZiAoZm4pIHtcbiAgICB0cnkge1xuICAgICAgZm4odm5vZGUuZWxtLCBkaXIsIHZub2RlLCBvbGRWbm9kZSwgaXNEZXN0cm95KTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBoYW5kbGVFcnJvcihlLCB2bm9kZS5jb250ZXh0LCAoXCJkaXJlY3RpdmUgXCIgKyAoZGlyLm5hbWUpICsgXCIgXCIgKyBob29rICsgXCIgaG9va1wiKSk7XG4gICAgfVxuICB9XG59XG5cbnZhciBiYXNlTW9kdWxlcyA9IFtcbiAgcmVmLFxuICBkaXJlY3RpdmVzXG5dO1xuXG4vKiAgKi9cblxuZnVuY3Rpb24gdXBkYXRlQXR0cnMgKG9sZFZub2RlLCB2bm9kZSkge1xuICB2YXIgb3B0cyA9IHZub2RlLmNvbXBvbmVudE9wdGlvbnM7XG4gIGlmIChpc0RlZihvcHRzKSAmJiBvcHRzLkN0b3Iub3B0aW9ucy5pbmhlcml0QXR0cnMgPT09IGZhbHNlKSB7XG4gICAgcmV0dXJuXG4gIH1cbiAgaWYgKGlzVW5kZWYob2xkVm5vZGUuZGF0YS5hdHRycykgJiYgaXNVbmRlZih2bm9kZS5kYXRhLmF0dHJzKSkge1xuICAgIHJldHVyblxuICB9XG4gIHZhciBrZXksIGN1ciwgb2xkO1xuICB2YXIgZWxtID0gdm5vZGUuZWxtO1xuICB2YXIgb2xkQXR0cnMgPSBvbGRWbm9kZS5kYXRhLmF0dHJzIHx8IHt9O1xuICB2YXIgYXR0cnMgPSB2bm9kZS5kYXRhLmF0dHJzIHx8IHt9O1xuICAvLyBjbG9uZSBvYnNlcnZlZCBvYmplY3RzLCBhcyB0aGUgdXNlciBwcm9iYWJseSB3YW50cyB0byBtdXRhdGUgaXRcbiAgaWYgKGlzRGVmKGF0dHJzLl9fb2JfXykpIHtcbiAgICBhdHRycyA9IHZub2RlLmRhdGEuYXR0cnMgPSBleHRlbmQoe30sIGF0dHJzKTtcbiAgfVxuXG4gIGZvciAoa2V5IGluIGF0dHJzKSB7XG4gICAgY3VyID0gYXR0cnNba2V5XTtcbiAgICBvbGQgPSBvbGRBdHRyc1trZXldO1xuICAgIGlmIChvbGQgIT09IGN1cikge1xuICAgICAgc2V0QXR0cihlbG0sIGtleSwgY3VyKTtcbiAgICB9XG4gIH1cbiAgLy8gIzQzOTE6IGluIElFOSwgc2V0dGluZyB0eXBlIGNhbiByZXNldCB2YWx1ZSBmb3IgaW5wdXRbdHlwZT1yYWRpb11cbiAgLy8gIzY2NjY6IElFL0VkZ2UgZm9yY2VzIHByb2dyZXNzIHZhbHVlIGRvd24gdG8gMSBiZWZvcmUgc2V0dGluZyBhIG1heFxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgaWYgKChpc0lFIHx8IGlzRWRnZSkgJiYgYXR0cnMudmFsdWUgIT09IG9sZEF0dHJzLnZhbHVlKSB7XG4gICAgc2V0QXR0cihlbG0sICd2YWx1ZScsIGF0dHJzLnZhbHVlKTtcbiAgfVxuICBmb3IgKGtleSBpbiBvbGRBdHRycykge1xuICAgIGlmIChpc1VuZGVmKGF0dHJzW2tleV0pKSB7XG4gICAgICBpZiAoaXNYbGluayhrZXkpKSB7XG4gICAgICAgIGVsbS5yZW1vdmVBdHRyaWJ1dGVOUyh4bGlua05TLCBnZXRYbGlua1Byb3Aoa2V5KSk7XG4gICAgICB9IGVsc2UgaWYgKCFpc0VudW1lcmF0ZWRBdHRyKGtleSkpIHtcbiAgICAgICAgZWxtLnJlbW92ZUF0dHJpYnV0ZShrZXkpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBzZXRBdHRyIChlbCwga2V5LCB2YWx1ZSkge1xuICBpZiAoZWwudGFnTmFtZS5pbmRleE9mKCctJykgPiAtMSkge1xuICAgIGJhc2VTZXRBdHRyKGVsLCBrZXksIHZhbHVlKTtcbiAgfSBlbHNlIGlmIChpc0Jvb2xlYW5BdHRyKGtleSkpIHtcbiAgICAvLyBzZXQgYXR0cmlidXRlIGZvciBibGFuayB2YWx1ZVxuICAgIC8vIGUuZy4gPG9wdGlvbiBkaXNhYmxlZD5TZWxlY3Qgb25lPC9vcHRpb24+XG4gICAgaWYgKGlzRmFsc3lBdHRyVmFsdWUodmFsdWUpKSB7XG4gICAgICBlbC5yZW1vdmVBdHRyaWJ1dGUoa2V5KTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gdGVjaG5pY2FsbHkgYWxsb3dmdWxsc2NyZWVuIGlzIGEgYm9vbGVhbiBhdHRyaWJ1dGUgZm9yIDxpZnJhbWU+LFxuICAgICAgLy8gYnV0IEZsYXNoIGV4cGVjdHMgYSB2YWx1ZSBvZiBcInRydWVcIiB3aGVuIHVzZWQgb24gPGVtYmVkPiB0YWdcbiAgICAgIHZhbHVlID0ga2V5ID09PSAnYWxsb3dmdWxsc2NyZWVuJyAmJiBlbC50YWdOYW1lID09PSAnRU1CRUQnXG4gICAgICAgID8gJ3RydWUnXG4gICAgICAgIDoga2V5O1xuICAgICAgZWwuc2V0QXR0cmlidXRlKGtleSwgdmFsdWUpO1xuICAgIH1cbiAgfSBlbHNlIGlmIChpc0VudW1lcmF0ZWRBdHRyKGtleSkpIHtcbiAgICBlbC5zZXRBdHRyaWJ1dGUoa2V5LCBjb252ZXJ0RW51bWVyYXRlZFZhbHVlKGtleSwgdmFsdWUpKTtcbiAgfSBlbHNlIGlmIChpc1hsaW5rKGtleSkpIHtcbiAgICBpZiAoaXNGYWxzeUF0dHJWYWx1ZSh2YWx1ZSkpIHtcbiAgICAgIGVsLnJlbW92ZUF0dHJpYnV0ZU5TKHhsaW5rTlMsIGdldFhsaW5rUHJvcChrZXkpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZWwuc2V0QXR0cmlidXRlTlMoeGxpbmtOUywga2V5LCB2YWx1ZSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGJhc2VTZXRBdHRyKGVsLCBrZXksIHZhbHVlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBiYXNlU2V0QXR0ciAoZWwsIGtleSwgdmFsdWUpIHtcbiAgaWYgKGlzRmFsc3lBdHRyVmFsdWUodmFsdWUpKSB7XG4gICAgZWwucmVtb3ZlQXR0cmlidXRlKGtleSk7XG4gIH0gZWxzZSB7XG4gICAgLy8gIzcxMzg6IElFMTAgJiAxMSBmaXJlcyBpbnB1dCBldmVudCB3aGVuIHNldHRpbmcgcGxhY2Vob2xkZXIgb25cbiAgICAvLyA8dGV4dGFyZWE+Li4uIGJsb2NrIHRoZSBmaXJzdCBpbnB1dCBldmVudCBhbmQgcmVtb3ZlIHRoZSBibG9ja2VyXG4gICAgLy8gaW1tZWRpYXRlbHkuXG4gICAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgaWYgKFxuICAgICAgaXNJRSAmJiAhaXNJRTkgJiZcbiAgICAgIGVsLnRhZ05hbWUgPT09ICdURVhUQVJFQScgJiZcbiAgICAgIGtleSA9PT0gJ3BsYWNlaG9sZGVyJyAmJiB2YWx1ZSAhPT0gJycgJiYgIWVsLl9faWVwaFxuICAgICkge1xuICAgICAgdmFyIGJsb2NrZXIgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuICAgICAgICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKCdpbnB1dCcsIGJsb2NrZXIpO1xuICAgICAgfTtcbiAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgYmxvY2tlcik7XG4gICAgICAvLyAkZmxvdy1kaXNhYmxlLWxpbmVcbiAgICAgIGVsLl9faWVwaCA9IHRydWU7IC8qIElFIHBsYWNlaG9sZGVyIHBhdGNoZWQgKi9cbiAgICB9XG4gICAgZWwuc2V0QXR0cmlidXRlKGtleSwgdmFsdWUpO1xuICB9XG59XG5cbnZhciBhdHRycyA9IHtcbiAgY3JlYXRlOiB1cGRhdGVBdHRycyxcbiAgdXBkYXRlOiB1cGRhdGVBdHRyc1xufTtcblxuLyogICovXG5cbmZ1bmN0aW9uIHVwZGF0ZUNsYXNzIChvbGRWbm9kZSwgdm5vZGUpIHtcbiAgdmFyIGVsID0gdm5vZGUuZWxtO1xuICB2YXIgZGF0YSA9IHZub2RlLmRhdGE7XG4gIHZhciBvbGREYXRhID0gb2xkVm5vZGUuZGF0YTtcbiAgaWYgKFxuICAgIGlzVW5kZWYoZGF0YS5zdGF0aWNDbGFzcykgJiZcbiAgICBpc1VuZGVmKGRhdGEuY2xhc3MpICYmIChcbiAgICAgIGlzVW5kZWYob2xkRGF0YSkgfHwgKFxuICAgICAgICBpc1VuZGVmKG9sZERhdGEuc3RhdGljQ2xhc3MpICYmXG4gICAgICAgIGlzVW5kZWYob2xkRGF0YS5jbGFzcylcbiAgICAgIClcbiAgICApXG4gICkge1xuICAgIHJldHVyblxuICB9XG5cbiAgdmFyIGNscyA9IGdlbkNsYXNzRm9yVm5vZGUodm5vZGUpO1xuXG4gIC8vIGhhbmRsZSB0cmFuc2l0aW9uIGNsYXNzZXNcbiAgdmFyIHRyYW5zaXRpb25DbGFzcyA9IGVsLl90cmFuc2l0aW9uQ2xhc3NlcztcbiAgaWYgKGlzRGVmKHRyYW5zaXRpb25DbGFzcykpIHtcbiAgICBjbHMgPSBjb25jYXQoY2xzLCBzdHJpbmdpZnlDbGFzcyh0cmFuc2l0aW9uQ2xhc3MpKTtcbiAgfVxuXG4gIC8vIHNldCB0aGUgY2xhc3NcbiAgaWYgKGNscyAhPT0gZWwuX3ByZXZDbGFzcykge1xuICAgIGVsLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCBjbHMpO1xuICAgIGVsLl9wcmV2Q2xhc3MgPSBjbHM7XG4gIH1cbn1cblxudmFyIGtsYXNzID0ge1xuICBjcmVhdGU6IHVwZGF0ZUNsYXNzLFxuICB1cGRhdGU6IHVwZGF0ZUNsYXNzXG59O1xuXG4vKiAgKi9cblxuLyogICovXG5cbi8qICAqL1xuXG4vKiAgKi9cblxuLy8gaW4gc29tZSBjYXNlcywgdGhlIGV2ZW50IHVzZWQgaGFzIHRvIGJlIGRldGVybWluZWQgYXQgcnVudGltZVxuLy8gc28gd2UgdXNlZCBzb21lIHJlc2VydmVkIHRva2VucyBkdXJpbmcgY29tcGlsZS5cbnZhciBSQU5HRV9UT0tFTiA9ICdfX3InO1xudmFyIENIRUNLQk9YX1JBRElPX1RPS0VOID0gJ19fYyc7XG5cbi8qICAqL1xuXG4vLyBub3JtYWxpemUgdi1tb2RlbCBldmVudCB0b2tlbnMgdGhhdCBjYW4gb25seSBiZSBkZXRlcm1pbmVkIGF0IHJ1bnRpbWUuXG4vLyBpdCdzIGltcG9ydGFudCB0byBwbGFjZSB0aGUgZXZlbnQgYXMgdGhlIGZpcnN0IGluIHRoZSBhcnJheSBiZWNhdXNlXG4vLyB0aGUgd2hvbGUgcG9pbnQgaXMgZW5zdXJpbmcgdGhlIHYtbW9kZWwgY2FsbGJhY2sgZ2V0cyBjYWxsZWQgYmVmb3JlXG4vLyB1c2VyLWF0dGFjaGVkIGhhbmRsZXJzLlxuZnVuY3Rpb24gbm9ybWFsaXplRXZlbnRzIChvbikge1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgaWYgKGlzRGVmKG9uW1JBTkdFX1RPS0VOXSkpIHtcbiAgICAvLyBJRSBpbnB1dFt0eXBlPXJhbmdlXSBvbmx5IHN1cHBvcnRzIGBjaGFuZ2VgIGV2ZW50XG4gICAgdmFyIGV2ZW50ID0gaXNJRSA/ICdjaGFuZ2UnIDogJ2lucHV0JztcbiAgICBvbltldmVudF0gPSBbXS5jb25jYXQob25bUkFOR0VfVE9LRU5dLCBvbltldmVudF0gfHwgW10pO1xuICAgIGRlbGV0ZSBvbltSQU5HRV9UT0tFTl07XG4gIH1cbiAgLy8gVGhpcyB3YXMgb3JpZ2luYWxseSBpbnRlbmRlZCB0byBmaXggIzQ1MjEgYnV0IG5vIGxvbmdlciBuZWNlc3NhcnlcbiAgLy8gYWZ0ZXIgMi41LiBLZWVwaW5nIGl0IGZvciBiYWNrd2FyZHMgY29tcGF0IHdpdGggZ2VuZXJhdGVkIGNvZGUgZnJvbSA8IDIuNFxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgaWYgKGlzRGVmKG9uW0NIRUNLQk9YX1JBRElPX1RPS0VOXSkpIHtcbiAgICBvbi5jaGFuZ2UgPSBbXS5jb25jYXQob25bQ0hFQ0tCT1hfUkFESU9fVE9LRU5dLCBvbi5jaGFuZ2UgfHwgW10pO1xuICAgIGRlbGV0ZSBvbltDSEVDS0JPWF9SQURJT19UT0tFTl07XG4gIH1cbn1cblxudmFyIHRhcmdldCQxO1xuXG5mdW5jdGlvbiBjcmVhdGVPbmNlSGFuZGxlciQxIChldmVudCwgaGFuZGxlciwgY2FwdHVyZSkge1xuICB2YXIgX3RhcmdldCA9IHRhcmdldCQxOyAvLyBzYXZlIGN1cnJlbnQgdGFyZ2V0IGVsZW1lbnQgaW4gY2xvc3VyZVxuICByZXR1cm4gZnVuY3Rpb24gb25jZUhhbmRsZXIgKCkge1xuICAgIHZhciByZXMgPSBoYW5kbGVyLmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7XG4gICAgaWYgKHJlcyAhPT0gbnVsbCkge1xuICAgICAgcmVtb3ZlJDIoZXZlbnQsIG9uY2VIYW5kbGVyLCBjYXB0dXJlLCBfdGFyZ2V0KTtcbiAgICB9XG4gIH1cbn1cblxuLy8gIzk0NDY6IEZpcmVmb3ggPD0gNTMgKGluIHBhcnRpY3VsYXIsIEVTUiA1MikgaGFzIGluY29ycmVjdCBFdmVudC50aW1lU3RhbXBcbi8vIGltcGxlbWVudGF0aW9uIGFuZCBkb2VzIG5vdCBmaXJlIG1pY3JvdGFza3MgaW4gYmV0d2VlbiBldmVudCBwcm9wYWdhdGlvbiwgc29cbi8vIHNhZmUgdG8gZXhjbHVkZS5cbnZhciB1c2VNaWNyb3Rhc2tGaXggPSBpc1VzaW5nTWljcm9UYXNrICYmICEoaXNGRiAmJiBOdW1iZXIoaXNGRlsxXSkgPD0gNTMpO1xuXG5mdW5jdGlvbiBhZGQkMSAoXG4gIG5hbWUsXG4gIGhhbmRsZXIsXG4gIGNhcHR1cmUsXG4gIHBhc3NpdmVcbikge1xuICAvLyBhc3luYyBlZGdlIGNhc2UgIzY1NjY6IGlubmVyIGNsaWNrIGV2ZW50IHRyaWdnZXJzIHBhdGNoLCBldmVudCBoYW5kbGVyXG4gIC8vIGF0dGFjaGVkIHRvIG91dGVyIGVsZW1lbnQgZHVyaW5nIHBhdGNoLCBhbmQgdHJpZ2dlcmVkIGFnYWluLiBUaGlzXG4gIC8vIGhhcHBlbnMgYmVjYXVzZSBicm93c2VycyBmaXJlIG1pY3JvdGFzayB0aWNrcyBiZXR3ZWVuIGV2ZW50IHByb3BhZ2F0aW9uLlxuICAvLyB0aGUgc29sdXRpb24gaXMgc2ltcGxlOiB3ZSBzYXZlIHRoZSB0aW1lc3RhbXAgd2hlbiBhIGhhbmRsZXIgaXMgYXR0YWNoZWQsXG4gIC8vIGFuZCB0aGUgaGFuZGxlciB3b3VsZCBvbmx5IGZpcmUgaWYgdGhlIGV2ZW50IHBhc3NlZCB0byBpdCB3YXMgZmlyZWRcbiAgLy8gQUZURVIgaXQgd2FzIGF0dGFjaGVkLlxuICBpZiAodXNlTWljcm90YXNrRml4KSB7XG4gICAgdmFyIGF0dGFjaGVkVGltZXN0YW1wID0gY3VycmVudEZsdXNoVGltZXN0YW1wO1xuICAgIHZhciBvcmlnaW5hbCA9IGhhbmRsZXI7XG4gICAgaGFuZGxlciA9IG9yaWdpbmFsLl93cmFwcGVyID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgIGlmIChcbiAgICAgICAgLy8gbm8gYnViYmxpbmcsIHNob3VsZCBhbHdheXMgZmlyZS5cbiAgICAgICAgLy8gdGhpcyBpcyBqdXN0IGEgc2FmZXR5IG5ldCBpbiBjYXNlIGV2ZW50LnRpbWVTdGFtcCBpcyB1bnJlbGlhYmxlIGluXG4gICAgICAgIC8vIGNlcnRhaW4gd2VpcmQgZW52aXJvbm1lbnRzLi4uXG4gICAgICAgIGUudGFyZ2V0ID09PSBlLmN1cnJlbnRUYXJnZXQgfHxcbiAgICAgICAgLy8gZXZlbnQgaXMgZmlyZWQgYWZ0ZXIgaGFuZGxlciBhdHRhY2htZW50XG4gICAgICAgIGUudGltZVN0YW1wID49IGF0dGFjaGVkVGltZXN0YW1wIHx8XG4gICAgICAgIC8vIGJhaWwgZm9yIGVudmlyb25tZW50cyB0aGF0IGhhdmUgYnVnZ3kgZXZlbnQudGltZVN0YW1wIGltcGxlbWVudGF0aW9uc1xuICAgICAgICAvLyAjOTQ2MiBpT1MgOSBidWc6IGV2ZW50LnRpbWVTdGFtcCBpcyAwIGFmdGVyIGhpc3RvcnkucHVzaFN0YXRlXG4gICAgICAgIC8vICM5NjgxIFF0V2ViRW5naW5lIGV2ZW50LnRpbWVTdGFtcCBpcyBuZWdhdGl2ZSB2YWx1ZVxuICAgICAgICBlLnRpbWVTdGFtcCA8PSAwIHx8XG4gICAgICAgIC8vICM5NDQ4IGJhaWwgaWYgZXZlbnQgaXMgZmlyZWQgaW4gYW5vdGhlciBkb2N1bWVudCBpbiBhIG11bHRpLXBhZ2VcbiAgICAgICAgLy8gZWxlY3Ryb24vbncuanMgYXBwLCBzaW5jZSBldmVudC50aW1lU3RhbXAgd2lsbCBiZSB1c2luZyBhIGRpZmZlcmVudFxuICAgICAgICAvLyBzdGFydGluZyByZWZlcmVuY2VcbiAgICAgICAgZS50YXJnZXQub3duZXJEb2N1bWVudCAhPT0gZG9jdW1lbnRcbiAgICAgICkge1xuICAgICAgICByZXR1cm4gb3JpZ2luYWwuYXBwbHkodGhpcywgYXJndW1lbnRzKVxuICAgICAgfVxuICAgIH07XG4gIH1cbiAgdGFyZ2V0JDEuYWRkRXZlbnRMaXN0ZW5lcihcbiAgICBuYW1lLFxuICAgIGhhbmRsZXIsXG4gICAgc3VwcG9ydHNQYXNzaXZlXG4gICAgICA/IHsgY2FwdHVyZTogY2FwdHVyZSwgcGFzc2l2ZTogcGFzc2l2ZSB9XG4gICAgICA6IGNhcHR1cmVcbiAgKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlJDIgKFxuICBuYW1lLFxuICBoYW5kbGVyLFxuICBjYXB0dXJlLFxuICBfdGFyZ2V0XG4pIHtcbiAgKF90YXJnZXQgfHwgdGFyZ2V0JDEpLnJlbW92ZUV2ZW50TGlzdGVuZXIoXG4gICAgbmFtZSxcbiAgICBoYW5kbGVyLl93cmFwcGVyIHx8IGhhbmRsZXIsXG4gICAgY2FwdHVyZVxuICApO1xufVxuXG5mdW5jdGlvbiB1cGRhdGVET01MaXN0ZW5lcnMgKG9sZFZub2RlLCB2bm9kZSkge1xuICBpZiAoaXNVbmRlZihvbGRWbm9kZS5kYXRhLm9uKSAmJiBpc1VuZGVmKHZub2RlLmRhdGEub24pKSB7XG4gICAgcmV0dXJuXG4gIH1cbiAgdmFyIG9uID0gdm5vZGUuZGF0YS5vbiB8fCB7fTtcbiAgdmFyIG9sZE9uID0gb2xkVm5vZGUuZGF0YS5vbiB8fCB7fTtcbiAgdGFyZ2V0JDEgPSB2bm9kZS5lbG07XG4gIG5vcm1hbGl6ZUV2ZW50cyhvbik7XG4gIHVwZGF0ZUxpc3RlbmVycyhvbiwgb2xkT24sIGFkZCQxLCByZW1vdmUkMiwgY3JlYXRlT25jZUhhbmRsZXIkMSwgdm5vZGUuY29udGV4dCk7XG4gIHRhcmdldCQxID0gdW5kZWZpbmVkO1xufVxuXG52YXIgZXZlbnRzID0ge1xuICBjcmVhdGU6IHVwZGF0ZURPTUxpc3RlbmVycyxcbiAgdXBkYXRlOiB1cGRhdGVET01MaXN0ZW5lcnNcbn07XG5cbi8qICAqL1xuXG52YXIgc3ZnQ29udGFpbmVyO1xuXG5mdW5jdGlvbiB1cGRhdGVET01Qcm9wcyAob2xkVm5vZGUsIHZub2RlKSB7XG4gIGlmIChpc1VuZGVmKG9sZFZub2RlLmRhdGEuZG9tUHJvcHMpICYmIGlzVW5kZWYodm5vZGUuZGF0YS5kb21Qcm9wcykpIHtcbiAgICByZXR1cm5cbiAgfVxuICB2YXIga2V5LCBjdXI7XG4gIHZhciBlbG0gPSB2bm9kZS5lbG07XG4gIHZhciBvbGRQcm9wcyA9IG9sZFZub2RlLmRhdGEuZG9tUHJvcHMgfHwge307XG4gIHZhciBwcm9wcyA9IHZub2RlLmRhdGEuZG9tUHJvcHMgfHwge307XG4gIC8vIGNsb25lIG9ic2VydmVkIG9iamVjdHMsIGFzIHRoZSB1c2VyIHByb2JhYmx5IHdhbnRzIHRvIG11dGF0ZSBpdFxuICBpZiAoaXNEZWYocHJvcHMuX19vYl9fKSkge1xuICAgIHByb3BzID0gdm5vZGUuZGF0YS5kb21Qcm9wcyA9IGV4dGVuZCh7fSwgcHJvcHMpO1xuICB9XG5cbiAgZm9yIChrZXkgaW4gb2xkUHJvcHMpIHtcbiAgICBpZiAoIShrZXkgaW4gcHJvcHMpKSB7XG4gICAgICBlbG1ba2V5XSA9ICcnO1xuICAgIH1cbiAgfVxuXG4gIGZvciAoa2V5IGluIHByb3BzKSB7XG4gICAgY3VyID0gcHJvcHNba2V5XTtcbiAgICAvLyBpZ25vcmUgY2hpbGRyZW4gaWYgdGhlIG5vZGUgaGFzIHRleHRDb250ZW50IG9yIGlubmVySFRNTCxcbiAgICAvLyBhcyB0aGVzZSB3aWxsIHRocm93IGF3YXkgZXhpc3RpbmcgRE9NIG5vZGVzIGFuZCBjYXVzZSByZW1vdmFsIGVycm9yc1xuICAgIC8vIG9uIHN1YnNlcXVlbnQgcGF0Y2hlcyAoIzMzNjApXG4gICAgaWYgKGtleSA9PT0gJ3RleHRDb250ZW50JyB8fCBrZXkgPT09ICdpbm5lckhUTUwnKSB7XG4gICAgICBpZiAodm5vZGUuY2hpbGRyZW4pIHsgdm5vZGUuY2hpbGRyZW4ubGVuZ3RoID0gMDsgfVxuICAgICAgaWYgKGN1ciA9PT0gb2xkUHJvcHNba2V5XSkgeyBjb250aW51ZSB9XG4gICAgICAvLyAjNjYwMSB3b3JrIGFyb3VuZCBDaHJvbWUgdmVyc2lvbiA8PSA1NSBidWcgd2hlcmUgc2luZ2xlIHRleHROb2RlXG4gICAgICAvLyByZXBsYWNlZCBieSBpbm5lckhUTUwvdGV4dENvbnRlbnQgcmV0YWlucyBpdHMgcGFyZW50Tm9kZSBwcm9wZXJ0eVxuICAgICAgaWYgKGVsbS5jaGlsZE5vZGVzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICBlbG0ucmVtb3ZlQ2hpbGQoZWxtLmNoaWxkTm9kZXNbMF0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChrZXkgPT09ICd2YWx1ZScgJiYgZWxtLnRhZ05hbWUgIT09ICdQUk9HUkVTUycpIHtcbiAgICAgIC8vIHN0b3JlIHZhbHVlIGFzIF92YWx1ZSBhcyB3ZWxsIHNpbmNlXG4gICAgICAvLyBub24tc3RyaW5nIHZhbHVlcyB3aWxsIGJlIHN0cmluZ2lmaWVkXG4gICAgICBlbG0uX3ZhbHVlID0gY3VyO1xuICAgICAgLy8gYXZvaWQgcmVzZXR0aW5nIGN1cnNvciBwb3NpdGlvbiB3aGVuIHZhbHVlIGlzIHRoZSBzYW1lXG4gICAgICB2YXIgc3RyQ3VyID0gaXNVbmRlZihjdXIpID8gJycgOiBTdHJpbmcoY3VyKTtcbiAgICAgIGlmIChzaG91bGRVcGRhdGVWYWx1ZShlbG0sIHN0ckN1cikpIHtcbiAgICAgICAgZWxtLnZhbHVlID0gc3RyQ3VyO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoa2V5ID09PSAnaW5uZXJIVE1MJyAmJiBpc1NWRyhlbG0udGFnTmFtZSkgJiYgaXNVbmRlZihlbG0uaW5uZXJIVE1MKSkge1xuICAgICAgLy8gSUUgZG9lc24ndCBzdXBwb3J0IGlubmVySFRNTCBmb3IgU1ZHIGVsZW1lbnRzXG4gICAgICBzdmdDb250YWluZXIgPSBzdmdDb250YWluZXIgfHwgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICBzdmdDb250YWluZXIuaW5uZXJIVE1MID0gXCI8c3ZnPlwiICsgY3VyICsgXCI8L3N2Zz5cIjtcbiAgICAgIHZhciBzdmcgPSBzdmdDb250YWluZXIuZmlyc3RDaGlsZDtcbiAgICAgIHdoaWxlIChlbG0uZmlyc3RDaGlsZCkge1xuICAgICAgICBlbG0ucmVtb3ZlQ2hpbGQoZWxtLmZpcnN0Q2hpbGQpO1xuICAgICAgfVxuICAgICAgd2hpbGUgKHN2Zy5maXJzdENoaWxkKSB7XG4gICAgICAgIGVsbS5hcHBlbmRDaGlsZChzdmcuZmlyc3RDaGlsZCk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChcbiAgICAgIC8vIHNraXAgdGhlIHVwZGF0ZSBpZiBvbGQgYW5kIG5ldyBWRE9NIHN0YXRlIGlzIHRoZSBzYW1lLlxuICAgICAgLy8gYHZhbHVlYCBpcyBoYW5kbGVkIHNlcGFyYXRlbHkgYmVjYXVzZSB0aGUgRE9NIHZhbHVlIG1heSBiZSB0ZW1wb3JhcmlseVxuICAgICAgLy8gb3V0IG9mIHN5bmMgd2l0aCBWRE9NIHN0YXRlIGR1ZSB0byBmb2N1cywgY29tcG9zaXRpb24gYW5kIG1vZGlmaWVycy5cbiAgICAgIC8vIFRoaXMgICM0NTIxIGJ5IHNraXBwaW5nIHRoZSB1bm5lY2VzYXJyeSBgY2hlY2tlZGAgdXBkYXRlLlxuICAgICAgY3VyICE9PSBvbGRQcm9wc1trZXldXG4gICAgKSB7XG4gICAgICAvLyBzb21lIHByb3BlcnR5IHVwZGF0ZXMgY2FuIHRocm93XG4gICAgICAvLyBlLmcuIGB2YWx1ZWAgb24gPHByb2dyZXNzPiB3LyBub24tZmluaXRlIHZhbHVlXG4gICAgICB0cnkge1xuICAgICAgICBlbG1ba2V5XSA9IGN1cjtcbiAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgfVxuICB9XG59XG5cbi8vIGNoZWNrIHBsYXRmb3Jtcy93ZWIvdXRpbC9hdHRycy5qcyBhY2NlcHRWYWx1ZVxuXG5cbmZ1bmN0aW9uIHNob3VsZFVwZGF0ZVZhbHVlIChlbG0sIGNoZWNrVmFsKSB7XG4gIHJldHVybiAoIWVsbS5jb21wb3NpbmcgJiYgKFxuICAgIGVsbS50YWdOYW1lID09PSAnT1BUSU9OJyB8fFxuICAgIGlzTm90SW5Gb2N1c0FuZERpcnR5KGVsbSwgY2hlY2tWYWwpIHx8XG4gICAgaXNEaXJ0eVdpdGhNb2RpZmllcnMoZWxtLCBjaGVja1ZhbClcbiAgKSlcbn1cblxuZnVuY3Rpb24gaXNOb3RJbkZvY3VzQW5kRGlydHkgKGVsbSwgY2hlY2tWYWwpIHtcbiAgLy8gcmV0dXJuIHRydWUgd2hlbiB0ZXh0Ym94ICgubnVtYmVyIGFuZCAudHJpbSkgbG9zZXMgZm9jdXMgYW5kIGl0cyB2YWx1ZSBpc1xuICAvLyBub3QgZXF1YWwgdG8gdGhlIHVwZGF0ZWQgdmFsdWVcbiAgdmFyIG5vdEluRm9jdXMgPSB0cnVlO1xuICAvLyAjNjE1N1xuICAvLyB3b3JrIGFyb3VuZCBJRSBidWcgd2hlbiBhY2Nlc3NpbmcgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCBpbiBhbiBpZnJhbWVcbiAgdHJ5IHsgbm90SW5Gb2N1cyA9IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgIT09IGVsbTsgfSBjYXRjaCAoZSkge31cbiAgcmV0dXJuIG5vdEluRm9jdXMgJiYgZWxtLnZhbHVlICE9PSBjaGVja1ZhbFxufVxuXG5mdW5jdGlvbiBpc0RpcnR5V2l0aE1vZGlmaWVycyAoZWxtLCBuZXdWYWwpIHtcbiAgdmFyIHZhbHVlID0gZWxtLnZhbHVlO1xuICB2YXIgbW9kaWZpZXJzID0gZWxtLl92TW9kaWZpZXJzOyAvLyBpbmplY3RlZCBieSB2LW1vZGVsIHJ1bnRpbWVcbiAgaWYgKGlzRGVmKG1vZGlmaWVycykpIHtcbiAgICBpZiAobW9kaWZpZXJzLm51bWJlcikge1xuICAgICAgcmV0dXJuIHRvTnVtYmVyKHZhbHVlKSAhPT0gdG9OdW1iZXIobmV3VmFsKVxuICAgIH1cbiAgICBpZiAobW9kaWZpZXJzLnRyaW0pIHtcbiAgICAgIHJldHVybiB2YWx1ZS50cmltKCkgIT09IG5ld1ZhbC50cmltKClcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHZhbHVlICE9PSBuZXdWYWxcbn1cblxudmFyIGRvbVByb3BzID0ge1xuICBjcmVhdGU6IHVwZGF0ZURPTVByb3BzLFxuICB1cGRhdGU6IHVwZGF0ZURPTVByb3BzXG59O1xuXG4vKiAgKi9cblxudmFyIHBhcnNlU3R5bGVUZXh0ID0gY2FjaGVkKGZ1bmN0aW9uIChjc3NUZXh0KSB7XG4gIHZhciByZXMgPSB7fTtcbiAgdmFyIGxpc3REZWxpbWl0ZXIgPSAvOyg/IVteKF0qXFwpKS9nO1xuICB2YXIgcHJvcGVydHlEZWxpbWl0ZXIgPSAvOiguKykvO1xuICBjc3NUZXh0LnNwbGl0KGxpc3REZWxpbWl0ZXIpLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICBpZiAoaXRlbSkge1xuICAgICAgdmFyIHRtcCA9IGl0ZW0uc3BsaXQocHJvcGVydHlEZWxpbWl0ZXIpO1xuICAgICAgdG1wLmxlbmd0aCA+IDEgJiYgKHJlc1t0bXBbMF0udHJpbSgpXSA9IHRtcFsxXS50cmltKCkpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiByZXNcbn0pO1xuXG4vLyBtZXJnZSBzdGF0aWMgYW5kIGR5bmFtaWMgc3R5bGUgZGF0YSBvbiB0aGUgc2FtZSB2bm9kZVxuZnVuY3Rpb24gbm9ybWFsaXplU3R5bGVEYXRhIChkYXRhKSB7XG4gIHZhciBzdHlsZSA9IG5vcm1hbGl6ZVN0eWxlQmluZGluZyhkYXRhLnN0eWxlKTtcbiAgLy8gc3RhdGljIHN0eWxlIGlzIHByZS1wcm9jZXNzZWQgaW50byBhbiBvYmplY3QgZHVyaW5nIGNvbXBpbGF0aW9uXG4gIC8vIGFuZCBpcyBhbHdheXMgYSBmcmVzaCBvYmplY3QsIHNvIGl0J3Mgc2FmZSB0byBtZXJnZSBpbnRvIGl0XG4gIHJldHVybiBkYXRhLnN0YXRpY1N0eWxlXG4gICAgPyBleHRlbmQoZGF0YS5zdGF0aWNTdHlsZSwgc3R5bGUpXG4gICAgOiBzdHlsZVxufVxuXG4vLyBub3JtYWxpemUgcG9zc2libGUgYXJyYXkgLyBzdHJpbmcgdmFsdWVzIGludG8gT2JqZWN0XG5mdW5jdGlvbiBub3JtYWxpemVTdHlsZUJpbmRpbmcgKGJpbmRpbmdTdHlsZSkge1xuICBpZiAoQXJyYXkuaXNBcnJheShiaW5kaW5nU3R5bGUpKSB7XG4gICAgcmV0dXJuIHRvT2JqZWN0KGJpbmRpbmdTdHlsZSlcbiAgfVxuICBpZiAodHlwZW9mIGJpbmRpbmdTdHlsZSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gcGFyc2VTdHlsZVRleHQoYmluZGluZ1N0eWxlKVxuICB9XG4gIHJldHVybiBiaW5kaW5nU3R5bGVcbn1cblxuLyoqXG4gKiBwYXJlbnQgY29tcG9uZW50IHN0eWxlIHNob3VsZCBiZSBhZnRlciBjaGlsZCdzXG4gKiBzbyB0aGF0IHBhcmVudCBjb21wb25lbnQncyBzdHlsZSBjb3VsZCBvdmVycmlkZSBpdFxuICovXG5mdW5jdGlvbiBnZXRTdHlsZSAodm5vZGUsIGNoZWNrQ2hpbGQpIHtcbiAgdmFyIHJlcyA9IHt9O1xuICB2YXIgc3R5bGVEYXRhO1xuXG4gIGlmIChjaGVja0NoaWxkKSB7XG4gICAgdmFyIGNoaWxkTm9kZSA9IHZub2RlO1xuICAgIHdoaWxlIChjaGlsZE5vZGUuY29tcG9uZW50SW5zdGFuY2UpIHtcbiAgICAgIGNoaWxkTm9kZSA9IGNoaWxkTm9kZS5jb21wb25lbnRJbnN0YW5jZS5fdm5vZGU7XG4gICAgICBpZiAoXG4gICAgICAgIGNoaWxkTm9kZSAmJiBjaGlsZE5vZGUuZGF0YSAmJlxuICAgICAgICAoc3R5bGVEYXRhID0gbm9ybWFsaXplU3R5bGVEYXRhKGNoaWxkTm9kZS5kYXRhKSlcbiAgICAgICkge1xuICAgICAgICBleHRlbmQocmVzLCBzdHlsZURhdGEpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGlmICgoc3R5bGVEYXRhID0gbm9ybWFsaXplU3R5bGVEYXRhKHZub2RlLmRhdGEpKSkge1xuICAgIGV4dGVuZChyZXMsIHN0eWxlRGF0YSk7XG4gIH1cblxuICB2YXIgcGFyZW50Tm9kZSA9IHZub2RlO1xuICB3aGlsZSAoKHBhcmVudE5vZGUgPSBwYXJlbnROb2RlLnBhcmVudCkpIHtcbiAgICBpZiAocGFyZW50Tm9kZS5kYXRhICYmIChzdHlsZURhdGEgPSBub3JtYWxpemVTdHlsZURhdGEocGFyZW50Tm9kZS5kYXRhKSkpIHtcbiAgICAgIGV4dGVuZChyZXMsIHN0eWxlRGF0YSk7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXNcbn1cblxuLyogICovXG5cbnZhciBjc3NWYXJSRSA9IC9eLS0vO1xudmFyIGltcG9ydGFudFJFID0gL1xccyohaW1wb3J0YW50JC87XG52YXIgc2V0UHJvcCA9IGZ1bmN0aW9uIChlbCwgbmFtZSwgdmFsKSB7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICBpZiAoY3NzVmFyUkUudGVzdChuYW1lKSkge1xuICAgIGVsLnN0eWxlLnNldFByb3BlcnR5KG5hbWUsIHZhbCk7XG4gIH0gZWxzZSBpZiAoaW1wb3J0YW50UkUudGVzdCh2YWwpKSB7XG4gICAgZWwuc3R5bGUuc2V0UHJvcGVydHkoaHlwaGVuYXRlKG5hbWUpLCB2YWwucmVwbGFjZShpbXBvcnRhbnRSRSwgJycpLCAnaW1wb3J0YW50Jyk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIG5vcm1hbGl6ZWROYW1lID0gbm9ybWFsaXplKG5hbWUpO1xuICAgIGlmIChBcnJheS5pc0FycmF5KHZhbCkpIHtcbiAgICAgIC8vIFN1cHBvcnQgdmFsdWVzIGFycmF5IGNyZWF0ZWQgYnkgYXV0b3ByZWZpeGVyLCBlLmcuXG4gICAgICAvLyB7ZGlzcGxheTogW1wiLXdlYmtpdC1ib3hcIiwgXCItbXMtZmxleGJveFwiLCBcImZsZXhcIl19XG4gICAgICAvLyBTZXQgdGhlbSBvbmUgYnkgb25lLCBhbmQgdGhlIGJyb3dzZXIgd2lsbCBvbmx5IHNldCB0aG9zZSBpdCBjYW4gcmVjb2duaXplXG4gICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gdmFsLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgIGVsLnN0eWxlW25vcm1hbGl6ZWROYW1lXSA9IHZhbFtpXTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgZWwuc3R5bGVbbm9ybWFsaXplZE5hbWVdID0gdmFsO1xuICAgIH1cbiAgfVxufTtcblxudmFyIHZlbmRvck5hbWVzID0gWydXZWJraXQnLCAnTW96JywgJ21zJ107XG5cbnZhciBlbXB0eVN0eWxlO1xudmFyIG5vcm1hbGl6ZSA9IGNhY2hlZChmdW5jdGlvbiAocHJvcCkge1xuICBlbXB0eVN0eWxlID0gZW1wdHlTdHlsZSB8fCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKS5zdHlsZTtcbiAgcHJvcCA9IGNhbWVsaXplKHByb3ApO1xuICBpZiAocHJvcCAhPT0gJ2ZpbHRlcicgJiYgKHByb3AgaW4gZW1wdHlTdHlsZSkpIHtcbiAgICByZXR1cm4gcHJvcFxuICB9XG4gIHZhciBjYXBOYW1lID0gcHJvcC5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHByb3Auc2xpY2UoMSk7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdmVuZG9yTmFtZXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgbmFtZSA9IHZlbmRvck5hbWVzW2ldICsgY2FwTmFtZTtcbiAgICBpZiAobmFtZSBpbiBlbXB0eVN0eWxlKSB7XG4gICAgICByZXR1cm4gbmFtZVxuICAgIH1cbiAgfVxufSk7XG5cbmZ1bmN0aW9uIHVwZGF0ZVN0eWxlIChvbGRWbm9kZSwgdm5vZGUpIHtcbiAgdmFyIGRhdGEgPSB2bm9kZS5kYXRhO1xuICB2YXIgb2xkRGF0YSA9IG9sZFZub2RlLmRhdGE7XG5cbiAgaWYgKGlzVW5kZWYoZGF0YS5zdGF0aWNTdHlsZSkgJiYgaXNVbmRlZihkYXRhLnN0eWxlKSAmJlxuICAgIGlzVW5kZWYob2xkRGF0YS5zdGF0aWNTdHlsZSkgJiYgaXNVbmRlZihvbGREYXRhLnN0eWxlKVxuICApIHtcbiAgICByZXR1cm5cbiAgfVxuXG4gIHZhciBjdXIsIG5hbWU7XG4gIHZhciBlbCA9IHZub2RlLmVsbTtcbiAgdmFyIG9sZFN0YXRpY1N0eWxlID0gb2xkRGF0YS5zdGF0aWNTdHlsZTtcbiAgdmFyIG9sZFN0eWxlQmluZGluZyA9IG9sZERhdGEubm9ybWFsaXplZFN0eWxlIHx8IG9sZERhdGEuc3R5bGUgfHwge307XG5cbiAgLy8gaWYgc3RhdGljIHN0eWxlIGV4aXN0cywgc3R5bGViaW5kaW5nIGFscmVhZHkgbWVyZ2VkIGludG8gaXQgd2hlbiBkb2luZyBub3JtYWxpemVTdHlsZURhdGFcbiAgdmFyIG9sZFN0eWxlID0gb2xkU3RhdGljU3R5bGUgfHwgb2xkU3R5bGVCaW5kaW5nO1xuXG4gIHZhciBzdHlsZSA9IG5vcm1hbGl6ZVN0eWxlQmluZGluZyh2bm9kZS5kYXRhLnN0eWxlKSB8fCB7fTtcblxuICAvLyBzdG9yZSBub3JtYWxpemVkIHN0eWxlIHVuZGVyIGEgZGlmZmVyZW50IGtleSBmb3IgbmV4dCBkaWZmXG4gIC8vIG1ha2Ugc3VyZSB0byBjbG9uZSBpdCBpZiBpdCdzIHJlYWN0aXZlLCBzaW5jZSB0aGUgdXNlciBsaWtlbHkgd2FudHNcbiAgLy8gdG8gbXV0YXRlIGl0LlxuICB2bm9kZS5kYXRhLm5vcm1hbGl6ZWRTdHlsZSA9IGlzRGVmKHN0eWxlLl9fb2JfXylcbiAgICA/IGV4dGVuZCh7fSwgc3R5bGUpXG4gICAgOiBzdHlsZTtcblxuICB2YXIgbmV3U3R5bGUgPSBnZXRTdHlsZSh2bm9kZSwgdHJ1ZSk7XG5cbiAgZm9yIChuYW1lIGluIG9sZFN0eWxlKSB7XG4gICAgaWYgKGlzVW5kZWYobmV3U3R5bGVbbmFtZV0pKSB7XG4gICAgICBzZXRQcm9wKGVsLCBuYW1lLCAnJyk7XG4gICAgfVxuICB9XG4gIGZvciAobmFtZSBpbiBuZXdTdHlsZSkge1xuICAgIGN1ciA9IG5ld1N0eWxlW25hbWVdO1xuICAgIGlmIChjdXIgIT09IG9sZFN0eWxlW25hbWVdKSB7XG4gICAgICAvLyBpZTkgc2V0dGluZyB0byBudWxsIGhhcyBubyBlZmZlY3QsIG11c3QgdXNlIGVtcHR5IHN0cmluZ1xuICAgICAgc2V0UHJvcChlbCwgbmFtZSwgY3VyID09IG51bGwgPyAnJyA6IGN1cik7XG4gICAgfVxuICB9XG59XG5cbnZhciBzdHlsZSA9IHtcbiAgY3JlYXRlOiB1cGRhdGVTdHlsZSxcbiAgdXBkYXRlOiB1cGRhdGVTdHlsZVxufTtcblxuLyogICovXG5cbnZhciB3aGl0ZXNwYWNlUkUgPSAvXFxzKy87XG5cbi8qKlxuICogQWRkIGNsYXNzIHdpdGggY29tcGF0aWJpbGl0eSBmb3IgU1ZHIHNpbmNlIGNsYXNzTGlzdCBpcyBub3Qgc3VwcG9ydGVkIG9uXG4gKiBTVkcgZWxlbWVudHMgaW4gSUVcbiAqL1xuZnVuY3Rpb24gYWRkQ2xhc3MgKGVsLCBjbHMpIHtcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gIGlmICghY2xzIHx8ICEoY2xzID0gY2xzLnRyaW0oKSkpIHtcbiAgICByZXR1cm5cbiAgfVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gIGlmIChlbC5jbGFzc0xpc3QpIHtcbiAgICBpZiAoY2xzLmluZGV4T2YoJyAnKSA+IC0xKSB7XG4gICAgICBjbHMuc3BsaXQod2hpdGVzcGFjZVJFKS5mb3JFYWNoKGZ1bmN0aW9uIChjKSB7IHJldHVybiBlbC5jbGFzc0xpc3QuYWRkKGMpOyB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgZWwuY2xhc3NMaXN0LmFkZChjbHMpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICB2YXIgY3VyID0gXCIgXCIgKyAoZWwuZ2V0QXR0cmlidXRlKCdjbGFzcycpIHx8ICcnKSArIFwiIFwiO1xuICAgIGlmIChjdXIuaW5kZXhPZignICcgKyBjbHMgKyAnICcpIDwgMCkge1xuICAgICAgZWwuc2V0QXR0cmlidXRlKCdjbGFzcycsIChjdXIgKyBjbHMpLnRyaW0oKSk7XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogUmVtb3ZlIGNsYXNzIHdpdGggY29tcGF0aWJpbGl0eSBmb3IgU1ZHIHNpbmNlIGNsYXNzTGlzdCBpcyBub3Qgc3VwcG9ydGVkIG9uXG4gKiBTVkcgZWxlbWVudHMgaW4gSUVcbiAqL1xuZnVuY3Rpb24gcmVtb3ZlQ2xhc3MgKGVsLCBjbHMpIHtcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gIGlmICghY2xzIHx8ICEoY2xzID0gY2xzLnRyaW0oKSkpIHtcbiAgICByZXR1cm5cbiAgfVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gIGlmIChlbC5jbGFzc0xpc3QpIHtcbiAgICBpZiAoY2xzLmluZGV4T2YoJyAnKSA+IC0xKSB7XG4gICAgICBjbHMuc3BsaXQod2hpdGVzcGFjZVJFKS5mb3JFYWNoKGZ1bmN0aW9uIChjKSB7IHJldHVybiBlbC5jbGFzc0xpc3QucmVtb3ZlKGMpOyB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgZWwuY2xhc3NMaXN0LnJlbW92ZShjbHMpO1xuICAgIH1cbiAgICBpZiAoIWVsLmNsYXNzTGlzdC5sZW5ndGgpIHtcbiAgICAgIGVsLnJlbW92ZUF0dHJpYnV0ZSgnY2xhc3MnKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgdmFyIGN1ciA9IFwiIFwiICsgKGVsLmdldEF0dHJpYnV0ZSgnY2xhc3MnKSB8fCAnJykgKyBcIiBcIjtcbiAgICB2YXIgdGFyID0gJyAnICsgY2xzICsgJyAnO1xuICAgIHdoaWxlIChjdXIuaW5kZXhPZih0YXIpID49IDApIHtcbiAgICAgIGN1ciA9IGN1ci5yZXBsYWNlKHRhciwgJyAnKTtcbiAgICB9XG4gICAgY3VyID0gY3VyLnRyaW0oKTtcbiAgICBpZiAoY3VyKSB7XG4gICAgICBlbC5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgY3VyKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZWwucmVtb3ZlQXR0cmlidXRlKCdjbGFzcycpO1xuICAgIH1cbiAgfVxufVxuXG4vKiAgKi9cblxuZnVuY3Rpb24gcmVzb2x2ZVRyYW5zaXRpb24gKGRlZiQkMSkge1xuICBpZiAoIWRlZiQkMSkge1xuICAgIHJldHVyblxuICB9XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gIGlmICh0eXBlb2YgZGVmJCQxID09PSAnb2JqZWN0Jykge1xuICAgIHZhciByZXMgPSB7fTtcbiAgICBpZiAoZGVmJCQxLmNzcyAhPT0gZmFsc2UpIHtcbiAgICAgIGV4dGVuZChyZXMsIGF1dG9Dc3NUcmFuc2l0aW9uKGRlZiQkMS5uYW1lIHx8ICd2JykpO1xuICAgIH1cbiAgICBleHRlbmQocmVzLCBkZWYkJDEpO1xuICAgIHJldHVybiByZXNcbiAgfSBlbHNlIGlmICh0eXBlb2YgZGVmJCQxID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBhdXRvQ3NzVHJhbnNpdGlvbihkZWYkJDEpXG4gIH1cbn1cblxudmFyIGF1dG9Dc3NUcmFuc2l0aW9uID0gY2FjaGVkKGZ1bmN0aW9uIChuYW1lKSB7XG4gIHJldHVybiB7XG4gICAgZW50ZXJDbGFzczogKG5hbWUgKyBcIi1lbnRlclwiKSxcbiAgICBlbnRlclRvQ2xhc3M6IChuYW1lICsgXCItZW50ZXItdG9cIiksXG4gICAgZW50ZXJBY3RpdmVDbGFzczogKG5hbWUgKyBcIi1lbnRlci1hY3RpdmVcIiksXG4gICAgbGVhdmVDbGFzczogKG5hbWUgKyBcIi1sZWF2ZVwiKSxcbiAgICBsZWF2ZVRvQ2xhc3M6IChuYW1lICsgXCItbGVhdmUtdG9cIiksXG4gICAgbGVhdmVBY3RpdmVDbGFzczogKG5hbWUgKyBcIi1sZWF2ZS1hY3RpdmVcIilcbiAgfVxufSk7XG5cbnZhciBoYXNUcmFuc2l0aW9uID0gaW5Ccm93c2VyICYmICFpc0lFOTtcbnZhciBUUkFOU0lUSU9OID0gJ3RyYW5zaXRpb24nO1xudmFyIEFOSU1BVElPTiA9ICdhbmltYXRpb24nO1xuXG4vLyBUcmFuc2l0aW9uIHByb3BlcnR5L2V2ZW50IHNuaWZmaW5nXG52YXIgdHJhbnNpdGlvblByb3AgPSAndHJhbnNpdGlvbic7XG52YXIgdHJhbnNpdGlvbkVuZEV2ZW50ID0gJ3RyYW5zaXRpb25lbmQnO1xudmFyIGFuaW1hdGlvblByb3AgPSAnYW5pbWF0aW9uJztcbnZhciBhbmltYXRpb25FbmRFdmVudCA9ICdhbmltYXRpb25lbmQnO1xuaWYgKGhhc1RyYW5zaXRpb24pIHtcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gIGlmICh3aW5kb3cub250cmFuc2l0aW9uZW5kID09PSB1bmRlZmluZWQgJiZcbiAgICB3aW5kb3cub253ZWJraXR0cmFuc2l0aW9uZW5kICE9PSB1bmRlZmluZWRcbiAgKSB7XG4gICAgdHJhbnNpdGlvblByb3AgPSAnV2Via2l0VHJhbnNpdGlvbic7XG4gICAgdHJhbnNpdGlvbkVuZEV2ZW50ID0gJ3dlYmtpdFRyYW5zaXRpb25FbmQnO1xuICB9XG4gIGlmICh3aW5kb3cub25hbmltYXRpb25lbmQgPT09IHVuZGVmaW5lZCAmJlxuICAgIHdpbmRvdy5vbndlYmtpdGFuaW1hdGlvbmVuZCAhPT0gdW5kZWZpbmVkXG4gICkge1xuICAgIGFuaW1hdGlvblByb3AgPSAnV2Via2l0QW5pbWF0aW9uJztcbiAgICBhbmltYXRpb25FbmRFdmVudCA9ICd3ZWJraXRBbmltYXRpb25FbmQnO1xuICB9XG59XG5cbi8vIGJpbmRpbmcgdG8gd2luZG93IGlzIG5lY2Vzc2FyeSB0byBtYWtlIGhvdCByZWxvYWQgd29yayBpbiBJRSBpbiBzdHJpY3QgbW9kZVxudmFyIHJhZiA9IGluQnJvd3NlclxuICA/IHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWVcbiAgICA/IHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUuYmluZCh3aW5kb3cpXG4gICAgOiBzZXRUaW1lb3V0XG4gIDogLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi8gZnVuY3Rpb24gKGZuKSB7IHJldHVybiBmbigpOyB9O1xuXG5mdW5jdGlvbiBuZXh0RnJhbWUgKGZuKSB7XG4gIHJhZihmdW5jdGlvbiAoKSB7XG4gICAgcmFmKGZuKTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGFkZFRyYW5zaXRpb25DbGFzcyAoZWwsIGNscykge1xuICB2YXIgdHJhbnNpdGlvbkNsYXNzZXMgPSBlbC5fdHJhbnNpdGlvbkNsYXNzZXMgfHwgKGVsLl90cmFuc2l0aW9uQ2xhc3NlcyA9IFtdKTtcbiAgaWYgKHRyYW5zaXRpb25DbGFzc2VzLmluZGV4T2YoY2xzKSA8IDApIHtcbiAgICB0cmFuc2l0aW9uQ2xhc3Nlcy5wdXNoKGNscyk7XG4gICAgYWRkQ2xhc3MoZWwsIGNscyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gcmVtb3ZlVHJhbnNpdGlvbkNsYXNzIChlbCwgY2xzKSB7XG4gIGlmIChlbC5fdHJhbnNpdGlvbkNsYXNzZXMpIHtcbiAgICByZW1vdmUoZWwuX3RyYW5zaXRpb25DbGFzc2VzLCBjbHMpO1xuICB9XG4gIHJlbW92ZUNsYXNzKGVsLCBjbHMpO1xufVxuXG5mdW5jdGlvbiB3aGVuVHJhbnNpdGlvbkVuZHMgKFxuICBlbCxcbiAgZXhwZWN0ZWRUeXBlLFxuICBjYlxuKSB7XG4gIHZhciByZWYgPSBnZXRUcmFuc2l0aW9uSW5mbyhlbCwgZXhwZWN0ZWRUeXBlKTtcbiAgdmFyIHR5cGUgPSByZWYudHlwZTtcbiAgdmFyIHRpbWVvdXQgPSByZWYudGltZW91dDtcbiAgdmFyIHByb3BDb3VudCA9IHJlZi5wcm9wQ291bnQ7XG4gIGlmICghdHlwZSkgeyByZXR1cm4gY2IoKSB9XG4gIHZhciBldmVudCA9IHR5cGUgPT09IFRSQU5TSVRJT04gPyB0cmFuc2l0aW9uRW5kRXZlbnQgOiBhbmltYXRpb25FbmRFdmVudDtcbiAgdmFyIGVuZGVkID0gMDtcbiAgdmFyIGVuZCA9IGZ1bmN0aW9uICgpIHtcbiAgICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LCBvbkVuZCk7XG4gICAgY2IoKTtcbiAgfTtcbiAgdmFyIG9uRW5kID0gZnVuY3Rpb24gKGUpIHtcbiAgICBpZiAoZS50YXJnZXQgPT09IGVsKSB7XG4gICAgICBpZiAoKytlbmRlZCA+PSBwcm9wQ291bnQpIHtcbiAgICAgICAgZW5kKCk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoZW5kZWQgPCBwcm9wQ291bnQpIHtcbiAgICAgIGVuZCgpO1xuICAgIH1cbiAgfSwgdGltZW91dCArIDEpO1xuICBlbC5hZGRFdmVudExpc3RlbmVyKGV2ZW50LCBvbkVuZCk7XG59XG5cbnZhciB0cmFuc2Zvcm1SRSA9IC9cXGIodHJhbnNmb3JtfGFsbCkoLHwkKS87XG5cbmZ1bmN0aW9uIGdldFRyYW5zaXRpb25JbmZvIChlbCwgZXhwZWN0ZWRUeXBlKSB7XG4gIHZhciBzdHlsZXMgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbCk7XG4gIC8vIEpTRE9NIG1heSByZXR1cm4gdW5kZWZpbmVkIGZvciB0cmFuc2l0aW9uIHByb3BlcnRpZXNcbiAgdmFyIHRyYW5zaXRpb25EZWxheXMgPSAoc3R5bGVzW3RyYW5zaXRpb25Qcm9wICsgJ0RlbGF5J10gfHwgJycpLnNwbGl0KCcsICcpO1xuICB2YXIgdHJhbnNpdGlvbkR1cmF0aW9ucyA9IChzdHlsZXNbdHJhbnNpdGlvblByb3AgKyAnRHVyYXRpb24nXSB8fCAnJykuc3BsaXQoJywgJyk7XG4gIHZhciB0cmFuc2l0aW9uVGltZW91dCA9IGdldFRpbWVvdXQodHJhbnNpdGlvbkRlbGF5cywgdHJhbnNpdGlvbkR1cmF0aW9ucyk7XG4gIHZhciBhbmltYXRpb25EZWxheXMgPSAoc3R5bGVzW2FuaW1hdGlvblByb3AgKyAnRGVsYXknXSB8fCAnJykuc3BsaXQoJywgJyk7XG4gIHZhciBhbmltYXRpb25EdXJhdGlvbnMgPSAoc3R5bGVzW2FuaW1hdGlvblByb3AgKyAnRHVyYXRpb24nXSB8fCAnJykuc3BsaXQoJywgJyk7XG4gIHZhciBhbmltYXRpb25UaW1lb3V0ID0gZ2V0VGltZW91dChhbmltYXRpb25EZWxheXMsIGFuaW1hdGlvbkR1cmF0aW9ucyk7XG5cbiAgdmFyIHR5cGU7XG4gIHZhciB0aW1lb3V0ID0gMDtcbiAgdmFyIHByb3BDb3VudCA9IDA7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICBpZiAoZXhwZWN0ZWRUeXBlID09PSBUUkFOU0lUSU9OKSB7XG4gICAgaWYgKHRyYW5zaXRpb25UaW1lb3V0ID4gMCkge1xuICAgICAgdHlwZSA9IFRSQU5TSVRJT047XG4gICAgICB0aW1lb3V0ID0gdHJhbnNpdGlvblRpbWVvdXQ7XG4gICAgICBwcm9wQ291bnQgPSB0cmFuc2l0aW9uRHVyYXRpb25zLmxlbmd0aDtcbiAgICB9XG4gIH0gZWxzZSBpZiAoZXhwZWN0ZWRUeXBlID09PSBBTklNQVRJT04pIHtcbiAgICBpZiAoYW5pbWF0aW9uVGltZW91dCA+IDApIHtcbiAgICAgIHR5cGUgPSBBTklNQVRJT047XG4gICAgICB0aW1lb3V0ID0gYW5pbWF0aW9uVGltZW91dDtcbiAgICAgIHByb3BDb3VudCA9IGFuaW1hdGlvbkR1cmF0aW9ucy5sZW5ndGg7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHRpbWVvdXQgPSBNYXRoLm1heCh0cmFuc2l0aW9uVGltZW91dCwgYW5pbWF0aW9uVGltZW91dCk7XG4gICAgdHlwZSA9IHRpbWVvdXQgPiAwXG4gICAgICA/IHRyYW5zaXRpb25UaW1lb3V0ID4gYW5pbWF0aW9uVGltZW91dFxuICAgICAgICA/IFRSQU5TSVRJT05cbiAgICAgICAgOiBBTklNQVRJT05cbiAgICAgIDogbnVsbDtcbiAgICBwcm9wQ291bnQgPSB0eXBlXG4gICAgICA/IHR5cGUgPT09IFRSQU5TSVRJT05cbiAgICAgICAgPyB0cmFuc2l0aW9uRHVyYXRpb25zLmxlbmd0aFxuICAgICAgICA6IGFuaW1hdGlvbkR1cmF0aW9ucy5sZW5ndGhcbiAgICAgIDogMDtcbiAgfVxuICB2YXIgaGFzVHJhbnNmb3JtID1cbiAgICB0eXBlID09PSBUUkFOU0lUSU9OICYmXG4gICAgdHJhbnNmb3JtUkUudGVzdChzdHlsZXNbdHJhbnNpdGlvblByb3AgKyAnUHJvcGVydHknXSk7XG4gIHJldHVybiB7XG4gICAgdHlwZTogdHlwZSxcbiAgICB0aW1lb3V0OiB0aW1lb3V0LFxuICAgIHByb3BDb3VudDogcHJvcENvdW50LFxuICAgIGhhc1RyYW5zZm9ybTogaGFzVHJhbnNmb3JtXG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0VGltZW91dCAoZGVsYXlzLCBkdXJhdGlvbnMpIHtcbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgd2hpbGUgKGRlbGF5cy5sZW5ndGggPCBkdXJhdGlvbnMubGVuZ3RoKSB7XG4gICAgZGVsYXlzID0gZGVsYXlzLmNvbmNhdChkZWxheXMpO1xuICB9XG5cbiAgcmV0dXJuIE1hdGgubWF4LmFwcGx5KG51bGwsIGR1cmF0aW9ucy5tYXAoZnVuY3Rpb24gKGQsIGkpIHtcbiAgICByZXR1cm4gdG9NcyhkKSArIHRvTXMoZGVsYXlzW2ldKVxuICB9KSlcbn1cblxuLy8gT2xkIHZlcnNpb25zIG9mIENocm9taXVtIChiZWxvdyA2MS4wLjMxNjMuMTAwKSBmb3JtYXRzIGZsb2F0aW5nIHBvaW50ZXIgbnVtYmVyc1xuLy8gaW4gYSBsb2NhbGUtZGVwZW5kZW50IHdheSwgdXNpbmcgYSBjb21tYSBpbnN0ZWFkIG9mIGEgZG90LlxuLy8gSWYgY29tbWEgaXMgbm90IHJlcGxhY2VkIHdpdGggYSBkb3QsIHRoZSBpbnB1dCB3aWxsIGJlIHJvdW5kZWQgZG93biAoaS5lLiBhY3Rpbmdcbi8vIGFzIGEgZmxvb3IgZnVuY3Rpb24pIGNhdXNpbmcgdW5leHBlY3RlZCBiZWhhdmlvcnNcbmZ1bmN0aW9uIHRvTXMgKHMpIHtcbiAgcmV0dXJuIE51bWJlcihzLnNsaWNlKDAsIC0xKS5yZXBsYWNlKCcsJywgJy4nKSkgKiAxMDAwXG59XG5cbi8qICAqL1xuXG5mdW5jdGlvbiBlbnRlciAodm5vZGUsIHRvZ2dsZURpc3BsYXkpIHtcbiAgdmFyIGVsID0gdm5vZGUuZWxtO1xuXG4gIC8vIGNhbGwgbGVhdmUgY2FsbGJhY2sgbm93XG4gIGlmIChpc0RlZihlbC5fbGVhdmVDYikpIHtcbiAgICBlbC5fbGVhdmVDYi5jYW5jZWxsZWQgPSB0cnVlO1xuICAgIGVsLl9sZWF2ZUNiKCk7XG4gIH1cblxuICB2YXIgZGF0YSA9IHJlc29sdmVUcmFuc2l0aW9uKHZub2RlLmRhdGEudHJhbnNpdGlvbik7XG4gIGlmIChpc1VuZGVmKGRhdGEpKSB7XG4gICAgcmV0dXJuXG4gIH1cblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgaWYgKGlzRGVmKGVsLl9lbnRlckNiKSB8fCBlbC5ub2RlVHlwZSAhPT0gMSkge1xuICAgIHJldHVyblxuICB9XG5cbiAgdmFyIGNzcyA9IGRhdGEuY3NzO1xuICB2YXIgdHlwZSA9IGRhdGEudHlwZTtcbiAgdmFyIGVudGVyQ2xhc3MgPSBkYXRhLmVudGVyQ2xhc3M7XG4gIHZhciBlbnRlclRvQ2xhc3MgPSBkYXRhLmVudGVyVG9DbGFzcztcbiAgdmFyIGVudGVyQWN0aXZlQ2xhc3MgPSBkYXRhLmVudGVyQWN0aXZlQ2xhc3M7XG4gIHZhciBhcHBlYXJDbGFzcyA9IGRhdGEuYXBwZWFyQ2xhc3M7XG4gIHZhciBhcHBlYXJUb0NsYXNzID0gZGF0YS5hcHBlYXJUb0NsYXNzO1xuICB2YXIgYXBwZWFyQWN0aXZlQ2xhc3MgPSBkYXRhLmFwcGVhckFjdGl2ZUNsYXNzO1xuICB2YXIgYmVmb3JlRW50ZXIgPSBkYXRhLmJlZm9yZUVudGVyO1xuICB2YXIgZW50ZXIgPSBkYXRhLmVudGVyO1xuICB2YXIgYWZ0ZXJFbnRlciA9IGRhdGEuYWZ0ZXJFbnRlcjtcbiAgdmFyIGVudGVyQ2FuY2VsbGVkID0gZGF0YS5lbnRlckNhbmNlbGxlZDtcbiAgdmFyIGJlZm9yZUFwcGVhciA9IGRhdGEuYmVmb3JlQXBwZWFyO1xuICB2YXIgYXBwZWFyID0gZGF0YS5hcHBlYXI7XG4gIHZhciBhZnRlckFwcGVhciA9IGRhdGEuYWZ0ZXJBcHBlYXI7XG4gIHZhciBhcHBlYXJDYW5jZWxsZWQgPSBkYXRhLmFwcGVhckNhbmNlbGxlZDtcbiAgdmFyIGR1cmF0aW9uID0gZGF0YS5kdXJhdGlvbjtcblxuICAvLyBhY3RpdmVJbnN0YW5jZSB3aWxsIGFsd2F5cyBiZSB0aGUgPHRyYW5zaXRpb24+IGNvbXBvbmVudCBtYW5hZ2luZyB0aGlzXG4gIC8vIHRyYW5zaXRpb24uIE9uZSBlZGdlIGNhc2UgdG8gY2hlY2sgaXMgd2hlbiB0aGUgPHRyYW5zaXRpb24+IGlzIHBsYWNlZFxuICAvLyBhcyB0aGUgcm9vdCBub2RlIG9mIGEgY2hpbGQgY29tcG9uZW50LiBJbiB0aGF0IGNhc2Ugd2UgbmVlZCB0byBjaGVja1xuICAvLyA8dHJhbnNpdGlvbj4ncyBwYXJlbnQgZm9yIGFwcGVhciBjaGVjay5cbiAgdmFyIGNvbnRleHQgPSBhY3RpdmVJbnN0YW5jZTtcbiAgdmFyIHRyYW5zaXRpb25Ob2RlID0gYWN0aXZlSW5zdGFuY2UuJHZub2RlO1xuICB3aGlsZSAodHJhbnNpdGlvbk5vZGUgJiYgdHJhbnNpdGlvbk5vZGUucGFyZW50KSB7XG4gICAgY29udGV4dCA9IHRyYW5zaXRpb25Ob2RlLmNvbnRleHQ7XG4gICAgdHJhbnNpdGlvbk5vZGUgPSB0cmFuc2l0aW9uTm9kZS5wYXJlbnQ7XG4gIH1cblxuICB2YXIgaXNBcHBlYXIgPSAhY29udGV4dC5faXNNb3VudGVkIHx8ICF2bm9kZS5pc1Jvb3RJbnNlcnQ7XG5cbiAgaWYgKGlzQXBwZWFyICYmICFhcHBlYXIgJiYgYXBwZWFyICE9PSAnJykge1xuICAgIHJldHVyblxuICB9XG5cbiAgdmFyIHN0YXJ0Q2xhc3MgPSBpc0FwcGVhciAmJiBhcHBlYXJDbGFzc1xuICAgID8gYXBwZWFyQ2xhc3NcbiAgICA6IGVudGVyQ2xhc3M7XG4gIHZhciBhY3RpdmVDbGFzcyA9IGlzQXBwZWFyICYmIGFwcGVhckFjdGl2ZUNsYXNzXG4gICAgPyBhcHBlYXJBY3RpdmVDbGFzc1xuICAgIDogZW50ZXJBY3RpdmVDbGFzcztcbiAgdmFyIHRvQ2xhc3MgPSBpc0FwcGVhciAmJiBhcHBlYXJUb0NsYXNzXG4gICAgPyBhcHBlYXJUb0NsYXNzXG4gICAgOiBlbnRlclRvQ2xhc3M7XG5cbiAgdmFyIGJlZm9yZUVudGVySG9vayA9IGlzQXBwZWFyXG4gICAgPyAoYmVmb3JlQXBwZWFyIHx8IGJlZm9yZUVudGVyKVxuICAgIDogYmVmb3JlRW50ZXI7XG4gIHZhciBlbnRlckhvb2sgPSBpc0FwcGVhclxuICAgID8gKHR5cGVvZiBhcHBlYXIgPT09ICdmdW5jdGlvbicgPyBhcHBlYXIgOiBlbnRlcilcbiAgICA6IGVudGVyO1xuICB2YXIgYWZ0ZXJFbnRlckhvb2sgPSBpc0FwcGVhclxuICAgID8gKGFmdGVyQXBwZWFyIHx8IGFmdGVyRW50ZXIpXG4gICAgOiBhZnRlckVudGVyO1xuICB2YXIgZW50ZXJDYW5jZWxsZWRIb29rID0gaXNBcHBlYXJcbiAgICA/IChhcHBlYXJDYW5jZWxsZWQgfHwgZW50ZXJDYW5jZWxsZWQpXG4gICAgOiBlbnRlckNhbmNlbGxlZDtcblxuICB2YXIgZXhwbGljaXRFbnRlckR1cmF0aW9uID0gdG9OdW1iZXIoXG4gICAgaXNPYmplY3QoZHVyYXRpb24pXG4gICAgICA/IGR1cmF0aW9uLmVudGVyXG4gICAgICA6IGR1cmF0aW9uXG4gICk7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgZXhwbGljaXRFbnRlckR1cmF0aW9uICE9IG51bGwpIHtcbiAgICBjaGVja0R1cmF0aW9uKGV4cGxpY2l0RW50ZXJEdXJhdGlvbiwgJ2VudGVyJywgdm5vZGUpO1xuICB9XG5cbiAgdmFyIGV4cGVjdHNDU1MgPSBjc3MgIT09IGZhbHNlICYmICFpc0lFOTtcbiAgdmFyIHVzZXJXYW50c0NvbnRyb2wgPSBnZXRIb29rQXJndW1lbnRzTGVuZ3RoKGVudGVySG9vayk7XG5cbiAgdmFyIGNiID0gZWwuX2VudGVyQ2IgPSBvbmNlKGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoZXhwZWN0c0NTUykge1xuICAgICAgcmVtb3ZlVHJhbnNpdGlvbkNsYXNzKGVsLCB0b0NsYXNzKTtcbiAgICAgIHJlbW92ZVRyYW5zaXRpb25DbGFzcyhlbCwgYWN0aXZlQ2xhc3MpO1xuICAgIH1cbiAgICBpZiAoY2IuY2FuY2VsbGVkKSB7XG4gICAgICBpZiAoZXhwZWN0c0NTUykge1xuICAgICAgICByZW1vdmVUcmFuc2l0aW9uQ2xhc3MoZWwsIHN0YXJ0Q2xhc3MpO1xuICAgICAgfVxuICAgICAgZW50ZXJDYW5jZWxsZWRIb29rICYmIGVudGVyQ2FuY2VsbGVkSG9vayhlbCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFmdGVyRW50ZXJIb29rICYmIGFmdGVyRW50ZXJIb29rKGVsKTtcbiAgICB9XG4gICAgZWwuX2VudGVyQ2IgPSBudWxsO1xuICB9KTtcblxuICBpZiAoIXZub2RlLmRhdGEuc2hvdykge1xuICAgIC8vIHJlbW92ZSBwZW5kaW5nIGxlYXZlIGVsZW1lbnQgb24gZW50ZXIgYnkgaW5qZWN0aW5nIGFuIGluc2VydCBob29rXG4gICAgbWVyZ2VWTm9kZUhvb2sodm5vZGUsICdpbnNlcnQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgcGFyZW50ID0gZWwucGFyZW50Tm9kZTtcbiAgICAgIHZhciBwZW5kaW5nTm9kZSA9IHBhcmVudCAmJiBwYXJlbnQuX3BlbmRpbmcgJiYgcGFyZW50Ll9wZW5kaW5nW3Zub2RlLmtleV07XG4gICAgICBpZiAocGVuZGluZ05vZGUgJiZcbiAgICAgICAgcGVuZGluZ05vZGUudGFnID09PSB2bm9kZS50YWcgJiZcbiAgICAgICAgcGVuZGluZ05vZGUuZWxtLl9sZWF2ZUNiXG4gICAgICApIHtcbiAgICAgICAgcGVuZGluZ05vZGUuZWxtLl9sZWF2ZUNiKCk7XG4gICAgICB9XG4gICAgICBlbnRlckhvb2sgJiYgZW50ZXJIb29rKGVsLCBjYik7XG4gICAgfSk7XG4gIH1cblxuICAvLyBzdGFydCBlbnRlciB0cmFuc2l0aW9uXG4gIGJlZm9yZUVudGVySG9vayAmJiBiZWZvcmVFbnRlckhvb2soZWwpO1xuICBpZiAoZXhwZWN0c0NTUykge1xuICAgIGFkZFRyYW5zaXRpb25DbGFzcyhlbCwgc3RhcnRDbGFzcyk7XG4gICAgYWRkVHJhbnNpdGlvbkNsYXNzKGVsLCBhY3RpdmVDbGFzcyk7XG4gICAgbmV4dEZyYW1lKGZ1bmN0aW9uICgpIHtcbiAgICAgIHJlbW92ZVRyYW5zaXRpb25DbGFzcyhlbCwgc3RhcnRDbGFzcyk7XG4gICAgICBpZiAoIWNiLmNhbmNlbGxlZCkge1xuICAgICAgICBhZGRUcmFuc2l0aW9uQ2xhc3MoZWwsIHRvQ2xhc3MpO1xuICAgICAgICBpZiAoIXVzZXJXYW50c0NvbnRyb2wpIHtcbiAgICAgICAgICBpZiAoaXNWYWxpZER1cmF0aW9uKGV4cGxpY2l0RW50ZXJEdXJhdGlvbikpIHtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoY2IsIGV4cGxpY2l0RW50ZXJEdXJhdGlvbik7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHdoZW5UcmFuc2l0aW9uRW5kcyhlbCwgdHlwZSwgY2IpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgaWYgKHZub2RlLmRhdGEuc2hvdykge1xuICAgIHRvZ2dsZURpc3BsYXkgJiYgdG9nZ2xlRGlzcGxheSgpO1xuICAgIGVudGVySG9vayAmJiBlbnRlckhvb2soZWwsIGNiKTtcbiAgfVxuXG4gIGlmICghZXhwZWN0c0NTUyAmJiAhdXNlcldhbnRzQ29udHJvbCkge1xuICAgIGNiKCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gbGVhdmUgKHZub2RlLCBybSkge1xuICB2YXIgZWwgPSB2bm9kZS5lbG07XG5cbiAgLy8gY2FsbCBlbnRlciBjYWxsYmFjayBub3dcbiAgaWYgKGlzRGVmKGVsLl9lbnRlckNiKSkge1xuICAgIGVsLl9lbnRlckNiLmNhbmNlbGxlZCA9IHRydWU7XG4gICAgZWwuX2VudGVyQ2IoKTtcbiAgfVxuXG4gIHZhciBkYXRhID0gcmVzb2x2ZVRyYW5zaXRpb24odm5vZGUuZGF0YS50cmFuc2l0aW9uKTtcbiAgaWYgKGlzVW5kZWYoZGF0YSkgfHwgZWwubm9kZVR5cGUgIT09IDEpIHtcbiAgICByZXR1cm4gcm0oKVxuICB9XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gIGlmIChpc0RlZihlbC5fbGVhdmVDYikpIHtcbiAgICByZXR1cm5cbiAgfVxuXG4gIHZhciBjc3MgPSBkYXRhLmNzcztcbiAgdmFyIHR5cGUgPSBkYXRhLnR5cGU7XG4gIHZhciBsZWF2ZUNsYXNzID0gZGF0YS5sZWF2ZUNsYXNzO1xuICB2YXIgbGVhdmVUb0NsYXNzID0gZGF0YS5sZWF2ZVRvQ2xhc3M7XG4gIHZhciBsZWF2ZUFjdGl2ZUNsYXNzID0gZGF0YS5sZWF2ZUFjdGl2ZUNsYXNzO1xuICB2YXIgYmVmb3JlTGVhdmUgPSBkYXRhLmJlZm9yZUxlYXZlO1xuICB2YXIgbGVhdmUgPSBkYXRhLmxlYXZlO1xuICB2YXIgYWZ0ZXJMZWF2ZSA9IGRhdGEuYWZ0ZXJMZWF2ZTtcbiAgdmFyIGxlYXZlQ2FuY2VsbGVkID0gZGF0YS5sZWF2ZUNhbmNlbGxlZDtcbiAgdmFyIGRlbGF5TGVhdmUgPSBkYXRhLmRlbGF5TGVhdmU7XG4gIHZhciBkdXJhdGlvbiA9IGRhdGEuZHVyYXRpb247XG5cbiAgdmFyIGV4cGVjdHNDU1MgPSBjc3MgIT09IGZhbHNlICYmICFpc0lFOTtcbiAgdmFyIHVzZXJXYW50c0NvbnRyb2wgPSBnZXRIb29rQXJndW1lbnRzTGVuZ3RoKGxlYXZlKTtcblxuICB2YXIgZXhwbGljaXRMZWF2ZUR1cmF0aW9uID0gdG9OdW1iZXIoXG4gICAgaXNPYmplY3QoZHVyYXRpb24pXG4gICAgICA/IGR1cmF0aW9uLmxlYXZlXG4gICAgICA6IGR1cmF0aW9uXG4gICk7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgaXNEZWYoZXhwbGljaXRMZWF2ZUR1cmF0aW9uKSkge1xuICAgIGNoZWNrRHVyYXRpb24oZXhwbGljaXRMZWF2ZUR1cmF0aW9uLCAnbGVhdmUnLCB2bm9kZSk7XG4gIH1cblxuICB2YXIgY2IgPSBlbC5fbGVhdmVDYiA9IG9uY2UoZnVuY3Rpb24gKCkge1xuICAgIGlmIChlbC5wYXJlbnROb2RlICYmIGVsLnBhcmVudE5vZGUuX3BlbmRpbmcpIHtcbiAgICAgIGVsLnBhcmVudE5vZGUuX3BlbmRpbmdbdm5vZGUua2V5XSA9IG51bGw7XG4gICAgfVxuICAgIGlmIChleHBlY3RzQ1NTKSB7XG4gICAgICByZW1vdmVUcmFuc2l0aW9uQ2xhc3MoZWwsIGxlYXZlVG9DbGFzcyk7XG4gICAgICByZW1vdmVUcmFuc2l0aW9uQ2xhc3MoZWwsIGxlYXZlQWN0aXZlQ2xhc3MpO1xuICAgIH1cbiAgICBpZiAoY2IuY2FuY2VsbGVkKSB7XG4gICAgICBpZiAoZXhwZWN0c0NTUykge1xuICAgICAgICByZW1vdmVUcmFuc2l0aW9uQ2xhc3MoZWwsIGxlYXZlQ2xhc3MpO1xuICAgICAgfVxuICAgICAgbGVhdmVDYW5jZWxsZWQgJiYgbGVhdmVDYW5jZWxsZWQoZWwpO1xuICAgIH0gZWxzZSB7XG4gICAgICBybSgpO1xuICAgICAgYWZ0ZXJMZWF2ZSAmJiBhZnRlckxlYXZlKGVsKTtcbiAgICB9XG4gICAgZWwuX2xlYXZlQ2IgPSBudWxsO1xuICB9KTtcblxuICBpZiAoZGVsYXlMZWF2ZSkge1xuICAgIGRlbGF5TGVhdmUocGVyZm9ybUxlYXZlKTtcbiAgfSBlbHNlIHtcbiAgICBwZXJmb3JtTGVhdmUoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBlcmZvcm1MZWF2ZSAoKSB7XG4gICAgLy8gdGhlIGRlbGF5ZWQgbGVhdmUgbWF5IGhhdmUgYWxyZWFkeSBiZWVuIGNhbmNlbGxlZFxuICAgIGlmIChjYi5jYW5jZWxsZWQpIHtcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICAvLyByZWNvcmQgbGVhdmluZyBlbGVtZW50XG4gICAgaWYgKCF2bm9kZS5kYXRhLnNob3cgJiYgZWwucGFyZW50Tm9kZSkge1xuICAgICAgKGVsLnBhcmVudE5vZGUuX3BlbmRpbmcgfHwgKGVsLnBhcmVudE5vZGUuX3BlbmRpbmcgPSB7fSkpWyh2bm9kZS5rZXkpXSA9IHZub2RlO1xuICAgIH1cbiAgICBiZWZvcmVMZWF2ZSAmJiBiZWZvcmVMZWF2ZShlbCk7XG4gICAgaWYgKGV4cGVjdHNDU1MpIHtcbiAgICAgIGFkZFRyYW5zaXRpb25DbGFzcyhlbCwgbGVhdmVDbGFzcyk7XG4gICAgICBhZGRUcmFuc2l0aW9uQ2xhc3MoZWwsIGxlYXZlQWN0aXZlQ2xhc3MpO1xuICAgICAgbmV4dEZyYW1lKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmVtb3ZlVHJhbnNpdGlvbkNsYXNzKGVsLCBsZWF2ZUNsYXNzKTtcbiAgICAgICAgaWYgKCFjYi5jYW5jZWxsZWQpIHtcbiAgICAgICAgICBhZGRUcmFuc2l0aW9uQ2xhc3MoZWwsIGxlYXZlVG9DbGFzcyk7XG4gICAgICAgICAgaWYgKCF1c2VyV2FudHNDb250cm9sKSB7XG4gICAgICAgICAgICBpZiAoaXNWYWxpZER1cmF0aW9uKGV4cGxpY2l0TGVhdmVEdXJhdGlvbikpIHtcbiAgICAgICAgICAgICAgc2V0VGltZW91dChjYiwgZXhwbGljaXRMZWF2ZUR1cmF0aW9uKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHdoZW5UcmFuc2l0aW9uRW5kcyhlbCwgdHlwZSwgY2IpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICAgIGxlYXZlICYmIGxlYXZlKGVsLCBjYik7XG4gICAgaWYgKCFleHBlY3RzQ1NTICYmICF1c2VyV2FudHNDb250cm9sKSB7XG4gICAgICBjYigpO1xuICAgIH1cbiAgfVxufVxuXG4vLyBvbmx5IHVzZWQgaW4gZGV2IG1vZGVcbmZ1bmN0aW9uIGNoZWNrRHVyYXRpb24gKHZhbCwgbmFtZSwgdm5vZGUpIHtcbiAgaWYgKHR5cGVvZiB2YWwgIT09ICdudW1iZXInKSB7XG4gICAgd2FybihcbiAgICAgIFwiPHRyYW5zaXRpb24+IGV4cGxpY2l0IFwiICsgbmFtZSArIFwiIGR1cmF0aW9uIGlzIG5vdCBhIHZhbGlkIG51bWJlciAtIFwiICtcbiAgICAgIFwiZ290IFwiICsgKEpTT04uc3RyaW5naWZ5KHZhbCkpICsgXCIuXCIsXG4gICAgICB2bm9kZS5jb250ZXh0XG4gICAgKTtcbiAgfSBlbHNlIGlmIChpc05hTih2YWwpKSB7XG4gICAgd2FybihcbiAgICAgIFwiPHRyYW5zaXRpb24+IGV4cGxpY2l0IFwiICsgbmFtZSArIFwiIGR1cmF0aW9uIGlzIE5hTiAtIFwiICtcbiAgICAgICd0aGUgZHVyYXRpb24gZXhwcmVzc2lvbiBtaWdodCBiZSBpbmNvcnJlY3QuJyxcbiAgICAgIHZub2RlLmNvbnRleHRcbiAgICApO1xuICB9XG59XG5cbmZ1bmN0aW9uIGlzVmFsaWREdXJhdGlvbiAodmFsKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsID09PSAnbnVtYmVyJyAmJiAhaXNOYU4odmFsKVxufVxuXG4vKipcbiAqIE5vcm1hbGl6ZSBhIHRyYW5zaXRpb24gaG9vaydzIGFyZ3VtZW50IGxlbmd0aC4gVGhlIGhvb2sgbWF5IGJlOlxuICogLSBhIG1lcmdlZCBob29rIChpbnZva2VyKSB3aXRoIHRoZSBvcmlnaW5hbCBpbiAuZm5zXG4gKiAtIGEgd3JhcHBlZCBjb21wb25lbnQgbWV0aG9kIChjaGVjayAuX2xlbmd0aClcbiAqIC0gYSBwbGFpbiBmdW5jdGlvbiAoLmxlbmd0aClcbiAqL1xuZnVuY3Rpb24gZ2V0SG9va0FyZ3VtZW50c0xlbmd0aCAoZm4pIHtcbiAgaWYgKGlzVW5kZWYoZm4pKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cbiAgdmFyIGludm9rZXJGbnMgPSBmbi5mbnM7XG4gIGlmIChpc0RlZihpbnZva2VyRm5zKSkge1xuICAgIC8vIGludm9rZXJcbiAgICByZXR1cm4gZ2V0SG9va0FyZ3VtZW50c0xlbmd0aChcbiAgICAgIEFycmF5LmlzQXJyYXkoaW52b2tlckZucylcbiAgICAgICAgPyBpbnZva2VyRm5zWzBdXG4gICAgICAgIDogaW52b2tlckZuc1xuICAgIClcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gKGZuLl9sZW5ndGggfHwgZm4ubGVuZ3RoKSA+IDFcbiAgfVxufVxuXG5mdW5jdGlvbiBfZW50ZXIgKF8sIHZub2RlKSB7XG4gIGlmICh2bm9kZS5kYXRhLnNob3cgIT09IHRydWUpIHtcbiAgICBlbnRlcih2bm9kZSk7XG4gIH1cbn1cblxudmFyIHRyYW5zaXRpb24gPSBpbkJyb3dzZXIgPyB7XG4gIGNyZWF0ZTogX2VudGVyLFxuICBhY3RpdmF0ZTogX2VudGVyLFxuICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSQkMSAodm5vZGUsIHJtKSB7XG4gICAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgICBpZiAodm5vZGUuZGF0YS5zaG93ICE9PSB0cnVlKSB7XG4gICAgICBsZWF2ZSh2bm9kZSwgcm0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBybSgpO1xuICAgIH1cbiAgfVxufSA6IHt9O1xuXG52YXIgcGxhdGZvcm1Nb2R1bGVzID0gW1xuICBhdHRycyxcbiAga2xhc3MsXG4gIGV2ZW50cyxcbiAgZG9tUHJvcHMsXG4gIHN0eWxlLFxuICB0cmFuc2l0aW9uXG5dO1xuXG4vKiAgKi9cblxuLy8gdGhlIGRpcmVjdGl2ZSBtb2R1bGUgc2hvdWxkIGJlIGFwcGxpZWQgbGFzdCwgYWZ0ZXIgYWxsXG4vLyBidWlsdC1pbiBtb2R1bGVzIGhhdmUgYmVlbiBhcHBsaWVkLlxudmFyIG1vZHVsZXMgPSBwbGF0Zm9ybU1vZHVsZXMuY29uY2F0KGJhc2VNb2R1bGVzKTtcblxudmFyIHBhdGNoID0gY3JlYXRlUGF0Y2hGdW5jdGlvbih7IG5vZGVPcHM6IG5vZGVPcHMsIG1vZHVsZXM6IG1vZHVsZXMgfSk7XG5cbi8qKlxuICogTm90IHR5cGUgY2hlY2tpbmcgdGhpcyBmaWxlIGJlY2F1c2UgZmxvdyBkb2Vzbid0IGxpa2UgYXR0YWNoaW5nXG4gKiBwcm9wZXJ0aWVzIHRvIEVsZW1lbnRzLlxuICovXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuaWYgKGlzSUU5KSB7XG4gIC8vIGh0dHA6Ly93d3cubWF0dHM0MTEuY29tL3Bvc3QvaW50ZXJuZXQtZXhwbG9yZXItOS1vbmlucHV0L1xuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdzZWxlY3Rpb25jaGFuZ2UnLCBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGVsID0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudDtcbiAgICBpZiAoZWwgJiYgZWwudm1vZGVsKSB7XG4gICAgICB0cmlnZ2VyKGVsLCAnaW5wdXQnKTtcbiAgICB9XG4gIH0pO1xufVxuXG52YXIgZGlyZWN0aXZlID0ge1xuICBpbnNlcnRlZDogZnVuY3Rpb24gaW5zZXJ0ZWQgKGVsLCBiaW5kaW5nLCB2bm9kZSwgb2xkVm5vZGUpIHtcbiAgICBpZiAodm5vZGUudGFnID09PSAnc2VsZWN0Jykge1xuICAgICAgLy8gIzY5MDNcbiAgICAgIGlmIChvbGRWbm9kZS5lbG0gJiYgIW9sZFZub2RlLmVsbS5fdk9wdGlvbnMpIHtcbiAgICAgICAgbWVyZ2VWTm9kZUhvb2sodm5vZGUsICdwb3N0cGF0Y2gnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgZGlyZWN0aXZlLmNvbXBvbmVudFVwZGF0ZWQoZWwsIGJpbmRpbmcsIHZub2RlKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRTZWxlY3RlZChlbCwgYmluZGluZywgdm5vZGUuY29udGV4dCk7XG4gICAgICB9XG4gICAgICBlbC5fdk9wdGlvbnMgPSBbXS5tYXAuY2FsbChlbC5vcHRpb25zLCBnZXRWYWx1ZSk7XG4gICAgfSBlbHNlIGlmICh2bm9kZS50YWcgPT09ICd0ZXh0YXJlYScgfHwgaXNUZXh0SW5wdXRUeXBlKGVsLnR5cGUpKSB7XG4gICAgICBlbC5fdk1vZGlmaWVycyA9IGJpbmRpbmcubW9kaWZpZXJzO1xuICAgICAgaWYgKCFiaW5kaW5nLm1vZGlmaWVycy5sYXp5KSB7XG4gICAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoJ2NvbXBvc2l0aW9uc3RhcnQnLCBvbkNvbXBvc2l0aW9uU3RhcnQpO1xuICAgICAgICBlbC5hZGRFdmVudExpc3RlbmVyKCdjb21wb3NpdGlvbmVuZCcsIG9uQ29tcG9zaXRpb25FbmQpO1xuICAgICAgICAvLyBTYWZhcmkgPCAxMC4yICYgVUlXZWJWaWV3IGRvZXNuJ3QgZmlyZSBjb21wb3NpdGlvbmVuZCB3aGVuXG4gICAgICAgIC8vIHN3aXRjaGluZyBmb2N1cyBiZWZvcmUgY29uZmlybWluZyBjb21wb3NpdGlvbiBjaG9pY2VcbiAgICAgICAgLy8gdGhpcyBhbHNvIGZpeGVzIHRoZSBpc3N1ZSB3aGVyZSBzb21lIGJyb3dzZXJzIGUuZy4gaU9TIENocm9tZVxuICAgICAgICAvLyBmaXJlcyBcImNoYW5nZVwiIGluc3RlYWQgb2YgXCJpbnB1dFwiIG9uIGF1dG9jb21wbGV0ZS5cbiAgICAgICAgZWwuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgb25Db21wb3NpdGlvbkVuZCk7XG4gICAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgICAgICBpZiAoaXNJRTkpIHtcbiAgICAgICAgICBlbC52bW9kZWwgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9LFxuXG4gIGNvbXBvbmVudFVwZGF0ZWQ6IGZ1bmN0aW9uIGNvbXBvbmVudFVwZGF0ZWQgKGVsLCBiaW5kaW5nLCB2bm9kZSkge1xuICAgIGlmICh2bm9kZS50YWcgPT09ICdzZWxlY3QnKSB7XG4gICAgICBzZXRTZWxlY3RlZChlbCwgYmluZGluZywgdm5vZGUuY29udGV4dCk7XG4gICAgICAvLyBpbiBjYXNlIHRoZSBvcHRpb25zIHJlbmRlcmVkIGJ5IHYtZm9yIGhhdmUgY2hhbmdlZCxcbiAgICAgIC8vIGl0J3MgcG9zc2libGUgdGhhdCB0aGUgdmFsdWUgaXMgb3V0LW9mLXN5bmMgd2l0aCB0aGUgcmVuZGVyZWQgb3B0aW9ucy5cbiAgICAgIC8vIGRldGVjdCBzdWNoIGNhc2VzIGFuZCBmaWx0ZXIgb3V0IHZhbHVlcyB0aGF0IG5vIGxvbmdlciBoYXMgYSBtYXRjaGluZ1xuICAgICAgLy8gb3B0aW9uIGluIHRoZSBET00uXG4gICAgICB2YXIgcHJldk9wdGlvbnMgPSBlbC5fdk9wdGlvbnM7XG4gICAgICB2YXIgY3VyT3B0aW9ucyA9IGVsLl92T3B0aW9ucyA9IFtdLm1hcC5jYWxsKGVsLm9wdGlvbnMsIGdldFZhbHVlKTtcbiAgICAgIGlmIChjdXJPcHRpb25zLnNvbWUoZnVuY3Rpb24gKG8sIGkpIHsgcmV0dXJuICFsb29zZUVxdWFsKG8sIHByZXZPcHRpb25zW2ldKTsgfSkpIHtcbiAgICAgICAgLy8gdHJpZ2dlciBjaGFuZ2UgZXZlbnQgaWZcbiAgICAgICAgLy8gbm8gbWF0Y2hpbmcgb3B0aW9uIGZvdW5kIGZvciBhdCBsZWFzdCBvbmUgdmFsdWVcbiAgICAgICAgdmFyIG5lZWRSZXNldCA9IGVsLm11bHRpcGxlXG4gICAgICAgICAgPyBiaW5kaW5nLnZhbHVlLnNvbWUoZnVuY3Rpb24gKHYpIHsgcmV0dXJuIGhhc05vTWF0Y2hpbmdPcHRpb24odiwgY3VyT3B0aW9ucyk7IH0pXG4gICAgICAgICAgOiBiaW5kaW5nLnZhbHVlICE9PSBiaW5kaW5nLm9sZFZhbHVlICYmIGhhc05vTWF0Y2hpbmdPcHRpb24oYmluZGluZy52YWx1ZSwgY3VyT3B0aW9ucyk7XG4gICAgICAgIGlmIChuZWVkUmVzZXQpIHtcbiAgICAgICAgICB0cmlnZ2VyKGVsLCAnY2hhbmdlJyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn07XG5cbmZ1bmN0aW9uIHNldFNlbGVjdGVkIChlbCwgYmluZGluZywgdm0pIHtcbiAgYWN0dWFsbHlTZXRTZWxlY3RlZChlbCwgYmluZGluZywgdm0pO1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgaWYgKGlzSUUgfHwgaXNFZGdlKSB7XG4gICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICBhY3R1YWxseVNldFNlbGVjdGVkKGVsLCBiaW5kaW5nLCB2bSk7XG4gICAgfSwgMCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gYWN0dWFsbHlTZXRTZWxlY3RlZCAoZWwsIGJpbmRpbmcsIHZtKSB7XG4gIHZhciB2YWx1ZSA9IGJpbmRpbmcudmFsdWU7XG4gIHZhciBpc011bHRpcGxlID0gZWwubXVsdGlwbGU7XG4gIGlmIChpc011bHRpcGxlICYmICFBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgd2FybihcbiAgICAgIFwiPHNlbGVjdCBtdWx0aXBsZSB2LW1vZGVsPVxcXCJcIiArIChiaW5kaW5nLmV4cHJlc3Npb24pICsgXCJcXFwiPiBcIiArXG4gICAgICBcImV4cGVjdHMgYW4gQXJyYXkgdmFsdWUgZm9yIGl0cyBiaW5kaW5nLCBidXQgZ290IFwiICsgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSkuc2xpY2UoOCwgLTEpKSxcbiAgICAgIHZtXG4gICAgKTtcbiAgICByZXR1cm5cbiAgfVxuICB2YXIgc2VsZWN0ZWQsIG9wdGlvbjtcbiAgZm9yICh2YXIgaSA9IDAsIGwgPSBlbC5vcHRpb25zLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIG9wdGlvbiA9IGVsLm9wdGlvbnNbaV07XG4gICAgaWYgKGlzTXVsdGlwbGUpIHtcbiAgICAgIHNlbGVjdGVkID0gbG9vc2VJbmRleE9mKHZhbHVlLCBnZXRWYWx1ZShvcHRpb24pKSA+IC0xO1xuICAgICAgaWYgKG9wdGlvbi5zZWxlY3RlZCAhPT0gc2VsZWN0ZWQpIHtcbiAgICAgICAgb3B0aW9uLnNlbGVjdGVkID0gc2VsZWN0ZWQ7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChsb29zZUVxdWFsKGdldFZhbHVlKG9wdGlvbiksIHZhbHVlKSkge1xuICAgICAgICBpZiAoZWwuc2VsZWN0ZWRJbmRleCAhPT0gaSkge1xuICAgICAgICAgIGVsLnNlbGVjdGVkSW5kZXggPSBpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVyblxuICAgICAgfVxuICAgIH1cbiAgfVxuICBpZiAoIWlzTXVsdGlwbGUpIHtcbiAgICBlbC5zZWxlY3RlZEluZGV4ID0gLTE7XG4gIH1cbn1cblxuZnVuY3Rpb24gaGFzTm9NYXRjaGluZ09wdGlvbiAodmFsdWUsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIG9wdGlvbnMuZXZlcnkoZnVuY3Rpb24gKG8pIHsgcmV0dXJuICFsb29zZUVxdWFsKG8sIHZhbHVlKTsgfSlcbn1cblxuZnVuY3Rpb24gZ2V0VmFsdWUgKG9wdGlvbikge1xuICByZXR1cm4gJ192YWx1ZScgaW4gb3B0aW9uXG4gICAgPyBvcHRpb24uX3ZhbHVlXG4gICAgOiBvcHRpb24udmFsdWVcbn1cblxuZnVuY3Rpb24gb25Db21wb3NpdGlvblN0YXJ0IChlKSB7XG4gIGUudGFyZ2V0LmNvbXBvc2luZyA9IHRydWU7XG59XG5cbmZ1bmN0aW9uIG9uQ29tcG9zaXRpb25FbmQgKGUpIHtcbiAgLy8gcHJldmVudCB0cmlnZ2VyaW5nIGFuIGlucHV0IGV2ZW50IGZvciBubyByZWFzb25cbiAgaWYgKCFlLnRhcmdldC5jb21wb3NpbmcpIHsgcmV0dXJuIH1cbiAgZS50YXJnZXQuY29tcG9zaW5nID0gZmFsc2U7XG4gIHRyaWdnZXIoZS50YXJnZXQsICdpbnB1dCcpO1xufVxuXG5mdW5jdGlvbiB0cmlnZ2VyIChlbCwgdHlwZSkge1xuICB2YXIgZSA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KCdIVE1MRXZlbnRzJyk7XG4gIGUuaW5pdEV2ZW50KHR5cGUsIHRydWUsIHRydWUpO1xuICBlbC5kaXNwYXRjaEV2ZW50KGUpO1xufVxuXG4vKiAgKi9cblxuLy8gcmVjdXJzaXZlbHkgc2VhcmNoIGZvciBwb3NzaWJsZSB0cmFuc2l0aW9uIGRlZmluZWQgaW5zaWRlIHRoZSBjb21wb25lbnQgcm9vdFxuZnVuY3Rpb24gbG9jYXRlTm9kZSAodm5vZGUpIHtcbiAgcmV0dXJuIHZub2RlLmNvbXBvbmVudEluc3RhbmNlICYmICghdm5vZGUuZGF0YSB8fCAhdm5vZGUuZGF0YS50cmFuc2l0aW9uKVxuICAgID8gbG9jYXRlTm9kZSh2bm9kZS5jb21wb25lbnRJbnN0YW5jZS5fdm5vZGUpXG4gICAgOiB2bm9kZVxufVxuXG52YXIgc2hvdyA9IHtcbiAgYmluZDogZnVuY3Rpb24gYmluZCAoZWwsIHJlZiwgdm5vZGUpIHtcbiAgICB2YXIgdmFsdWUgPSByZWYudmFsdWU7XG5cbiAgICB2bm9kZSA9IGxvY2F0ZU5vZGUodm5vZGUpO1xuICAgIHZhciB0cmFuc2l0aW9uJCQxID0gdm5vZGUuZGF0YSAmJiB2bm9kZS5kYXRhLnRyYW5zaXRpb247XG4gICAgdmFyIG9yaWdpbmFsRGlzcGxheSA9IGVsLl9fdk9yaWdpbmFsRGlzcGxheSA9XG4gICAgICBlbC5zdHlsZS5kaXNwbGF5ID09PSAnbm9uZScgPyAnJyA6IGVsLnN0eWxlLmRpc3BsYXk7XG4gICAgaWYgKHZhbHVlICYmIHRyYW5zaXRpb24kJDEpIHtcbiAgICAgIHZub2RlLmRhdGEuc2hvdyA9IHRydWU7XG4gICAgICBlbnRlcih2bm9kZSwgZnVuY3Rpb24gKCkge1xuICAgICAgICBlbC5zdHlsZS5kaXNwbGF5ID0gb3JpZ2luYWxEaXNwbGF5O1xuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVsLnN0eWxlLmRpc3BsYXkgPSB2YWx1ZSA/IG9yaWdpbmFsRGlzcGxheSA6ICdub25lJztcbiAgICB9XG4gIH0sXG5cbiAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUgKGVsLCByZWYsIHZub2RlKSB7XG4gICAgdmFyIHZhbHVlID0gcmVmLnZhbHVlO1xuICAgIHZhciBvbGRWYWx1ZSA9IHJlZi5vbGRWYWx1ZTtcblxuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgIGlmICghdmFsdWUgPT09ICFvbGRWYWx1ZSkgeyByZXR1cm4gfVxuICAgIHZub2RlID0gbG9jYXRlTm9kZSh2bm9kZSk7XG4gICAgdmFyIHRyYW5zaXRpb24kJDEgPSB2bm9kZS5kYXRhICYmIHZub2RlLmRhdGEudHJhbnNpdGlvbjtcbiAgICBpZiAodHJhbnNpdGlvbiQkMSkge1xuICAgICAgdm5vZGUuZGF0YS5zaG93ID0gdHJ1ZTtcbiAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICBlbnRlcih2bm9kZSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIGVsLnN0eWxlLmRpc3BsYXkgPSBlbC5fX3ZPcmlnaW5hbERpc3BsYXk7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbGVhdmUodm5vZGUsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBlbC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgZWwuc3R5bGUuZGlzcGxheSA9IHZhbHVlID8gZWwuX192T3JpZ2luYWxEaXNwbGF5IDogJ25vbmUnO1xuICAgIH1cbiAgfSxcblxuICB1bmJpbmQ6IGZ1bmN0aW9uIHVuYmluZCAoXG4gICAgZWwsXG4gICAgYmluZGluZyxcbiAgICB2bm9kZSxcbiAgICBvbGRWbm9kZSxcbiAgICBpc0Rlc3Ryb3lcbiAgKSB7XG4gICAgaWYgKCFpc0Rlc3Ryb3kpIHtcbiAgICAgIGVsLnN0eWxlLmRpc3BsYXkgPSBlbC5fX3ZPcmlnaW5hbERpc3BsYXk7XG4gICAgfVxuICB9XG59O1xuXG52YXIgcGxhdGZvcm1EaXJlY3RpdmVzID0ge1xuICBtb2RlbDogZGlyZWN0aXZlLFxuICBzaG93OiBzaG93XG59O1xuXG4vKiAgKi9cblxudmFyIHRyYW5zaXRpb25Qcm9wcyA9IHtcbiAgbmFtZTogU3RyaW5nLFxuICBhcHBlYXI6IEJvb2xlYW4sXG4gIGNzczogQm9vbGVhbixcbiAgbW9kZTogU3RyaW5nLFxuICB0eXBlOiBTdHJpbmcsXG4gIGVudGVyQ2xhc3M6IFN0cmluZyxcbiAgbGVhdmVDbGFzczogU3RyaW5nLFxuICBlbnRlclRvQ2xhc3M6IFN0cmluZyxcbiAgbGVhdmVUb0NsYXNzOiBTdHJpbmcsXG4gIGVudGVyQWN0aXZlQ2xhc3M6IFN0cmluZyxcbiAgbGVhdmVBY3RpdmVDbGFzczogU3RyaW5nLFxuICBhcHBlYXJDbGFzczogU3RyaW5nLFxuICBhcHBlYXJBY3RpdmVDbGFzczogU3RyaW5nLFxuICBhcHBlYXJUb0NsYXNzOiBTdHJpbmcsXG4gIGR1cmF0aW9uOiBbTnVtYmVyLCBTdHJpbmcsIE9iamVjdF1cbn07XG5cbi8vIGluIGNhc2UgdGhlIGNoaWxkIGlzIGFsc28gYW4gYWJzdHJhY3QgY29tcG9uZW50LCBlLmcuIDxrZWVwLWFsaXZlPlxuLy8gd2Ugd2FudCB0byByZWN1cnNpdmVseSByZXRyaWV2ZSB0aGUgcmVhbCBjb21wb25lbnQgdG8gYmUgcmVuZGVyZWRcbmZ1bmN0aW9uIGdldFJlYWxDaGlsZCAodm5vZGUpIHtcbiAgdmFyIGNvbXBPcHRpb25zID0gdm5vZGUgJiYgdm5vZGUuY29tcG9uZW50T3B0aW9ucztcbiAgaWYgKGNvbXBPcHRpb25zICYmIGNvbXBPcHRpb25zLkN0b3Iub3B0aW9ucy5hYnN0cmFjdCkge1xuICAgIHJldHVybiBnZXRSZWFsQ2hpbGQoZ2V0Rmlyc3RDb21wb25lbnRDaGlsZChjb21wT3B0aW9ucy5jaGlsZHJlbikpXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHZub2RlXG4gIH1cbn1cblxuZnVuY3Rpb24gZXh0cmFjdFRyYW5zaXRpb25EYXRhIChjb21wKSB7XG4gIHZhciBkYXRhID0ge307XG4gIHZhciBvcHRpb25zID0gY29tcC4kb3B0aW9ucztcbiAgLy8gcHJvcHNcbiAgZm9yICh2YXIga2V5IGluIG9wdGlvbnMucHJvcHNEYXRhKSB7XG4gICAgZGF0YVtrZXldID0gY29tcFtrZXldO1xuICB9XG4gIC8vIGV2ZW50cy5cbiAgLy8gZXh0cmFjdCBsaXN0ZW5lcnMgYW5kIHBhc3MgdGhlbSBkaXJlY3RseSB0byB0aGUgdHJhbnNpdGlvbiBtZXRob2RzXG4gIHZhciBsaXN0ZW5lcnMgPSBvcHRpb25zLl9wYXJlbnRMaXN0ZW5lcnM7XG4gIGZvciAodmFyIGtleSQxIGluIGxpc3RlbmVycykge1xuICAgIGRhdGFbY2FtZWxpemUoa2V5JDEpXSA9IGxpc3RlbmVyc1trZXkkMV07XG4gIH1cbiAgcmV0dXJuIGRhdGFcbn1cblxuZnVuY3Rpb24gcGxhY2Vob2xkZXIgKGgsIHJhd0NoaWxkKSB7XG4gIGlmICgvXFxkLWtlZXAtYWxpdmUkLy50ZXN0KHJhd0NoaWxkLnRhZykpIHtcbiAgICByZXR1cm4gaCgna2VlcC1hbGl2ZScsIHtcbiAgICAgIHByb3BzOiByYXdDaGlsZC5jb21wb25lbnRPcHRpb25zLnByb3BzRGF0YVxuICAgIH0pXG4gIH1cbn1cblxuZnVuY3Rpb24gaGFzUGFyZW50VHJhbnNpdGlvbiAodm5vZGUpIHtcbiAgd2hpbGUgKCh2bm9kZSA9IHZub2RlLnBhcmVudCkpIHtcbiAgICBpZiAodm5vZGUuZGF0YS50cmFuc2l0aW9uKSB7XG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBpc1NhbWVDaGlsZCAoY2hpbGQsIG9sZENoaWxkKSB7XG4gIHJldHVybiBvbGRDaGlsZC5rZXkgPT09IGNoaWxkLmtleSAmJiBvbGRDaGlsZC50YWcgPT09IGNoaWxkLnRhZ1xufVxuXG52YXIgaXNOb3RUZXh0Tm9kZSA9IGZ1bmN0aW9uIChjKSB7IHJldHVybiBjLnRhZyB8fCBpc0FzeW5jUGxhY2Vob2xkZXIoYyk7IH07XG5cbnZhciBpc1ZTaG93RGlyZWN0aXZlID0gZnVuY3Rpb24gKGQpIHsgcmV0dXJuIGQubmFtZSA9PT0gJ3Nob3cnOyB9O1xuXG52YXIgVHJhbnNpdGlvbiA9IHtcbiAgbmFtZTogJ3RyYW5zaXRpb24nLFxuICBwcm9wczogdHJhbnNpdGlvblByb3BzLFxuICBhYnN0cmFjdDogdHJ1ZSxcblxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlciAoaCkge1xuICAgIHZhciB0aGlzJDEgPSB0aGlzO1xuXG4gICAgdmFyIGNoaWxkcmVuID0gdGhpcy4kc2xvdHMuZGVmYXVsdDtcbiAgICBpZiAoIWNoaWxkcmVuKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICAvLyBmaWx0ZXIgb3V0IHRleHQgbm9kZXMgKHBvc3NpYmxlIHdoaXRlc3BhY2VzKVxuICAgIGNoaWxkcmVuID0gY2hpbGRyZW4uZmlsdGVyKGlzTm90VGV4dE5vZGUpO1xuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgIGlmICghY2hpbGRyZW4ubGVuZ3RoKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICAvLyB3YXJuIG11bHRpcGxlIGVsZW1lbnRzXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgY2hpbGRyZW4ubGVuZ3RoID4gMSkge1xuICAgICAgd2FybihcbiAgICAgICAgJzx0cmFuc2l0aW9uPiBjYW4gb25seSBiZSB1c2VkIG9uIGEgc2luZ2xlIGVsZW1lbnQuIFVzZSAnICtcbiAgICAgICAgJzx0cmFuc2l0aW9uLWdyb3VwPiBmb3IgbGlzdHMuJyxcbiAgICAgICAgdGhpcy4kcGFyZW50XG4gICAgICApO1xuICAgIH1cblxuICAgIHZhciBtb2RlID0gdGhpcy5tb2RlO1xuXG4gICAgLy8gd2FybiBpbnZhbGlkIG1vZGVcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJlxuICAgICAgbW9kZSAmJiBtb2RlICE9PSAnaW4tb3V0JyAmJiBtb2RlICE9PSAnb3V0LWluJ1xuICAgICkge1xuICAgICAgd2FybihcbiAgICAgICAgJ2ludmFsaWQgPHRyYW5zaXRpb24+IG1vZGU6ICcgKyBtb2RlLFxuICAgICAgICB0aGlzLiRwYXJlbnRcbiAgICAgICk7XG4gICAgfVxuXG4gICAgdmFyIHJhd0NoaWxkID0gY2hpbGRyZW5bMF07XG5cbiAgICAvLyBpZiB0aGlzIGlzIGEgY29tcG9uZW50IHJvb3Qgbm9kZSBhbmQgdGhlIGNvbXBvbmVudCdzXG4gICAgLy8gcGFyZW50IGNvbnRhaW5lciBub2RlIGFsc28gaGFzIHRyYW5zaXRpb24sIHNraXAuXG4gICAgaWYgKGhhc1BhcmVudFRyYW5zaXRpb24odGhpcy4kdm5vZGUpKSB7XG4gICAgICByZXR1cm4gcmF3Q2hpbGRcbiAgICB9XG5cbiAgICAvLyBhcHBseSB0cmFuc2l0aW9uIGRhdGEgdG8gY2hpbGRcbiAgICAvLyB1c2UgZ2V0UmVhbENoaWxkKCkgdG8gaWdub3JlIGFic3RyYWN0IGNvbXBvbmVudHMgZS5nLiBrZWVwLWFsaXZlXG4gICAgdmFyIGNoaWxkID0gZ2V0UmVhbENoaWxkKHJhd0NoaWxkKTtcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICBpZiAoIWNoaWxkKSB7XG4gICAgICByZXR1cm4gcmF3Q2hpbGRcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fbGVhdmluZykge1xuICAgICAgcmV0dXJuIHBsYWNlaG9sZGVyKGgsIHJhd0NoaWxkKVxuICAgIH1cblxuICAgIC8vIGVuc3VyZSBhIGtleSB0aGF0IGlzIHVuaXF1ZSB0byB0aGUgdm5vZGUgdHlwZSBhbmQgdG8gdGhpcyB0cmFuc2l0aW9uXG4gICAgLy8gY29tcG9uZW50IGluc3RhbmNlLiBUaGlzIGtleSB3aWxsIGJlIHVzZWQgdG8gcmVtb3ZlIHBlbmRpbmcgbGVhdmluZyBub2Rlc1xuICAgIC8vIGR1cmluZyBlbnRlcmluZy5cbiAgICB2YXIgaWQgPSBcIl9fdHJhbnNpdGlvbi1cIiArICh0aGlzLl91aWQpICsgXCItXCI7XG4gICAgY2hpbGQua2V5ID0gY2hpbGQua2V5ID09IG51bGxcbiAgICAgID8gY2hpbGQuaXNDb21tZW50XG4gICAgICAgID8gaWQgKyAnY29tbWVudCdcbiAgICAgICAgOiBpZCArIGNoaWxkLnRhZ1xuICAgICAgOiBpc1ByaW1pdGl2ZShjaGlsZC5rZXkpXG4gICAgICAgID8gKFN0cmluZyhjaGlsZC5rZXkpLmluZGV4T2YoaWQpID09PSAwID8gY2hpbGQua2V5IDogaWQgKyBjaGlsZC5rZXkpXG4gICAgICAgIDogY2hpbGQua2V5O1xuXG4gICAgdmFyIGRhdGEgPSAoY2hpbGQuZGF0YSB8fCAoY2hpbGQuZGF0YSA9IHt9KSkudHJhbnNpdGlvbiA9IGV4dHJhY3RUcmFuc2l0aW9uRGF0YSh0aGlzKTtcbiAgICB2YXIgb2xkUmF3Q2hpbGQgPSB0aGlzLl92bm9kZTtcbiAgICB2YXIgb2xkQ2hpbGQgPSBnZXRSZWFsQ2hpbGQob2xkUmF3Q2hpbGQpO1xuXG4gICAgLy8gbWFyayB2LXNob3dcbiAgICAvLyBzbyB0aGF0IHRoZSB0cmFuc2l0aW9uIG1vZHVsZSBjYW4gaGFuZCBvdmVyIHRoZSBjb250cm9sIHRvIHRoZSBkaXJlY3RpdmVcbiAgICBpZiAoY2hpbGQuZGF0YS5kaXJlY3RpdmVzICYmIGNoaWxkLmRhdGEuZGlyZWN0aXZlcy5zb21lKGlzVlNob3dEaXJlY3RpdmUpKSB7XG4gICAgICBjaGlsZC5kYXRhLnNob3cgPSB0cnVlO1xuICAgIH1cblxuICAgIGlmIChcbiAgICAgIG9sZENoaWxkICYmXG4gICAgICBvbGRDaGlsZC5kYXRhICYmXG4gICAgICAhaXNTYW1lQ2hpbGQoY2hpbGQsIG9sZENoaWxkKSAmJlxuICAgICAgIWlzQXN5bmNQbGFjZWhvbGRlcihvbGRDaGlsZCkgJiZcbiAgICAgIC8vICM2Njg3IGNvbXBvbmVudCByb290IGlzIGEgY29tbWVudCBub2RlXG4gICAgICAhKG9sZENoaWxkLmNvbXBvbmVudEluc3RhbmNlICYmIG9sZENoaWxkLmNvbXBvbmVudEluc3RhbmNlLl92bm9kZS5pc0NvbW1lbnQpXG4gICAgKSB7XG4gICAgICAvLyByZXBsYWNlIG9sZCBjaGlsZCB0cmFuc2l0aW9uIGRhdGEgd2l0aCBmcmVzaCBvbmVcbiAgICAgIC8vIGltcG9ydGFudCBmb3IgZHluYW1pYyB0cmFuc2l0aW9ucyFcbiAgICAgIHZhciBvbGREYXRhID0gb2xkQ2hpbGQuZGF0YS50cmFuc2l0aW9uID0gZXh0ZW5kKHt9LCBkYXRhKTtcbiAgICAgIC8vIGhhbmRsZSB0cmFuc2l0aW9uIG1vZGVcbiAgICAgIGlmIChtb2RlID09PSAnb3V0LWluJykge1xuICAgICAgICAvLyByZXR1cm4gcGxhY2Vob2xkZXIgbm9kZSBhbmQgcXVldWUgdXBkYXRlIHdoZW4gbGVhdmUgZmluaXNoZXNcbiAgICAgICAgdGhpcy5fbGVhdmluZyA9IHRydWU7XG4gICAgICAgIG1lcmdlVk5vZGVIb29rKG9sZERhdGEsICdhZnRlckxlYXZlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHRoaXMkMS5fbGVhdmluZyA9IGZhbHNlO1xuICAgICAgICAgIHRoaXMkMS4kZm9yY2VVcGRhdGUoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBwbGFjZWhvbGRlcihoLCByYXdDaGlsZClcbiAgICAgIH0gZWxzZSBpZiAobW9kZSA9PT0gJ2luLW91dCcpIHtcbiAgICAgICAgaWYgKGlzQXN5bmNQbGFjZWhvbGRlcihjaGlsZCkpIHtcbiAgICAgICAgICByZXR1cm4gb2xkUmF3Q2hpbGRcbiAgICAgICAgfVxuICAgICAgICB2YXIgZGVsYXllZExlYXZlO1xuICAgICAgICB2YXIgcGVyZm9ybUxlYXZlID0gZnVuY3Rpb24gKCkgeyBkZWxheWVkTGVhdmUoKTsgfTtcbiAgICAgICAgbWVyZ2VWTm9kZUhvb2soZGF0YSwgJ2FmdGVyRW50ZXInLCBwZXJmb3JtTGVhdmUpO1xuICAgICAgICBtZXJnZVZOb2RlSG9vayhkYXRhLCAnZW50ZXJDYW5jZWxsZWQnLCBwZXJmb3JtTGVhdmUpO1xuICAgICAgICBtZXJnZVZOb2RlSG9vayhvbGREYXRhLCAnZGVsYXlMZWF2ZScsIGZ1bmN0aW9uIChsZWF2ZSkgeyBkZWxheWVkTGVhdmUgPSBsZWF2ZTsgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHJhd0NoaWxkXG4gIH1cbn07XG5cbi8qICAqL1xuXG52YXIgcHJvcHMgPSBleHRlbmQoe1xuICB0YWc6IFN0cmluZyxcbiAgbW92ZUNsYXNzOiBTdHJpbmdcbn0sIHRyYW5zaXRpb25Qcm9wcyk7XG5cbmRlbGV0ZSBwcm9wcy5tb2RlO1xuXG52YXIgVHJhbnNpdGlvbkdyb3VwID0ge1xuICBwcm9wczogcHJvcHMsXG5cbiAgYmVmb3JlTW91bnQ6IGZ1bmN0aW9uIGJlZm9yZU1vdW50ICgpIHtcbiAgICB2YXIgdGhpcyQxID0gdGhpcztcblxuICAgIHZhciB1cGRhdGUgPSB0aGlzLl91cGRhdGU7XG4gICAgdGhpcy5fdXBkYXRlID0gZnVuY3Rpb24gKHZub2RlLCBoeWRyYXRpbmcpIHtcbiAgICAgIHZhciByZXN0b3JlQWN0aXZlSW5zdGFuY2UgPSBzZXRBY3RpdmVJbnN0YW5jZSh0aGlzJDEpO1xuICAgICAgLy8gZm9yY2UgcmVtb3ZpbmcgcGFzc1xuICAgICAgdGhpcyQxLl9fcGF0Y2hfXyhcbiAgICAgICAgdGhpcyQxLl92bm9kZSxcbiAgICAgICAgdGhpcyQxLmtlcHQsXG4gICAgICAgIGZhbHNlLCAvLyBoeWRyYXRpbmdcbiAgICAgICAgdHJ1ZSAvLyByZW1vdmVPbmx5ICghaW1wb3J0YW50LCBhdm9pZHMgdW5uZWNlc3NhcnkgbW92ZXMpXG4gICAgICApO1xuICAgICAgdGhpcyQxLl92bm9kZSA9IHRoaXMkMS5rZXB0O1xuICAgICAgcmVzdG9yZUFjdGl2ZUluc3RhbmNlKCk7XG4gICAgICB1cGRhdGUuY2FsbCh0aGlzJDEsIHZub2RlLCBoeWRyYXRpbmcpO1xuICAgIH07XG4gIH0sXG5cbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIgKGgpIHtcbiAgICB2YXIgdGFnID0gdGhpcy50YWcgfHwgdGhpcy4kdm5vZGUuZGF0YS50YWcgfHwgJ3NwYW4nO1xuICAgIHZhciBtYXAgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgIHZhciBwcmV2Q2hpbGRyZW4gPSB0aGlzLnByZXZDaGlsZHJlbiA9IHRoaXMuY2hpbGRyZW47XG4gICAgdmFyIHJhd0NoaWxkcmVuID0gdGhpcy4kc2xvdHMuZGVmYXVsdCB8fCBbXTtcbiAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLmNoaWxkcmVuID0gW107XG4gICAgdmFyIHRyYW5zaXRpb25EYXRhID0gZXh0cmFjdFRyYW5zaXRpb25EYXRhKHRoaXMpO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCByYXdDaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGMgPSByYXdDaGlsZHJlbltpXTtcbiAgICAgIGlmIChjLnRhZykge1xuICAgICAgICBpZiAoYy5rZXkgIT0gbnVsbCAmJiBTdHJpbmcoYy5rZXkpLmluZGV4T2YoJ19fdmxpc3QnKSAhPT0gMCkge1xuICAgICAgICAgIGNoaWxkcmVuLnB1c2goYyk7XG4gICAgICAgICAgbWFwW2Mua2V5XSA9IGNcbiAgICAgICAgICA7KGMuZGF0YSB8fCAoYy5kYXRhID0ge30pKS50cmFuc2l0aW9uID0gdHJhbnNpdGlvbkRhdGE7XG4gICAgICAgIH0gZWxzZSBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgIHZhciBvcHRzID0gYy5jb21wb25lbnRPcHRpb25zO1xuICAgICAgICAgIHZhciBuYW1lID0gb3B0cyA/IChvcHRzLkN0b3Iub3B0aW9ucy5uYW1lIHx8IG9wdHMudGFnIHx8ICcnKSA6IGMudGFnO1xuICAgICAgICAgIHdhcm4oKFwiPHRyYW5zaXRpb24tZ3JvdXA+IGNoaWxkcmVuIG11c3QgYmUga2V5ZWQ6IDxcIiArIG5hbWUgKyBcIj5cIikpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHByZXZDaGlsZHJlbikge1xuICAgICAgdmFyIGtlcHQgPSBbXTtcbiAgICAgIHZhciByZW1vdmVkID0gW107XG4gICAgICBmb3IgKHZhciBpJDEgPSAwOyBpJDEgPCBwcmV2Q2hpbGRyZW4ubGVuZ3RoOyBpJDErKykge1xuICAgICAgICB2YXIgYyQxID0gcHJldkNoaWxkcmVuW2kkMV07XG4gICAgICAgIGMkMS5kYXRhLnRyYW5zaXRpb24gPSB0cmFuc2l0aW9uRGF0YTtcbiAgICAgICAgYyQxLmRhdGEucG9zID0gYyQxLmVsbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgaWYgKG1hcFtjJDEua2V5XSkge1xuICAgICAgICAgIGtlcHQucHVzaChjJDEpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlbW92ZWQucHVzaChjJDEpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB0aGlzLmtlcHQgPSBoKHRhZywgbnVsbCwga2VwdCk7XG4gICAgICB0aGlzLnJlbW92ZWQgPSByZW1vdmVkO1xuICAgIH1cblxuICAgIHJldHVybiBoKHRhZywgbnVsbCwgY2hpbGRyZW4pXG4gIH0sXG5cbiAgdXBkYXRlZDogZnVuY3Rpb24gdXBkYXRlZCAoKSB7XG4gICAgdmFyIGNoaWxkcmVuID0gdGhpcy5wcmV2Q2hpbGRyZW47XG4gICAgdmFyIG1vdmVDbGFzcyA9IHRoaXMubW92ZUNsYXNzIHx8ICgodGhpcy5uYW1lIHx8ICd2JykgKyAnLW1vdmUnKTtcbiAgICBpZiAoIWNoaWxkcmVuLmxlbmd0aCB8fCAhdGhpcy5oYXNNb3ZlKGNoaWxkcmVuWzBdLmVsbSwgbW92ZUNsYXNzKSkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgLy8gd2UgZGl2aWRlIHRoZSB3b3JrIGludG8gdGhyZWUgbG9vcHMgdG8gYXZvaWQgbWl4aW5nIERPTSByZWFkcyBhbmQgd3JpdGVzXG4gICAgLy8gaW4gZWFjaCBpdGVyYXRpb24gLSB3aGljaCBoZWxwcyBwcmV2ZW50IGxheW91dCB0aHJhc2hpbmcuXG4gICAgY2hpbGRyZW4uZm9yRWFjaChjYWxsUGVuZGluZ0Nicyk7XG4gICAgY2hpbGRyZW4uZm9yRWFjaChyZWNvcmRQb3NpdGlvbik7XG4gICAgY2hpbGRyZW4uZm9yRWFjaChhcHBseVRyYW5zbGF0aW9uKTtcblxuICAgIC8vIGZvcmNlIHJlZmxvdyB0byBwdXQgZXZlcnl0aGluZyBpbiBwb3NpdGlvblxuICAgIC8vIGFzc2lnbiB0byB0aGlzIHRvIGF2b2lkIGJlaW5nIHJlbW92ZWQgaW4gdHJlZS1zaGFraW5nXG4gICAgLy8gJGZsb3ctZGlzYWJsZS1saW5lXG4gICAgdGhpcy5fcmVmbG93ID0gZG9jdW1lbnQuYm9keS5vZmZzZXRIZWlnaHQ7XG5cbiAgICBjaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uIChjKSB7XG4gICAgICBpZiAoYy5kYXRhLm1vdmVkKSB7XG4gICAgICAgIHZhciBlbCA9IGMuZWxtO1xuICAgICAgICB2YXIgcyA9IGVsLnN0eWxlO1xuICAgICAgICBhZGRUcmFuc2l0aW9uQ2xhc3MoZWwsIG1vdmVDbGFzcyk7XG4gICAgICAgIHMudHJhbnNmb3JtID0gcy5XZWJraXRUcmFuc2Zvcm0gPSBzLnRyYW5zaXRpb25EdXJhdGlvbiA9ICcnO1xuICAgICAgICBlbC5hZGRFdmVudExpc3RlbmVyKHRyYW5zaXRpb25FbmRFdmVudCwgZWwuX21vdmVDYiA9IGZ1bmN0aW9uIGNiIChlKSB7XG4gICAgICAgICAgaWYgKGUgJiYgZS50YXJnZXQgIT09IGVsKSB7XG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKCFlIHx8IC90cmFuc2Zvcm0kLy50ZXN0KGUucHJvcGVydHlOYW1lKSkge1xuICAgICAgICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcih0cmFuc2l0aW9uRW5kRXZlbnQsIGNiKTtcbiAgICAgICAgICAgIGVsLl9tb3ZlQ2IgPSBudWxsO1xuICAgICAgICAgICAgcmVtb3ZlVHJhbnNpdGlvbkNsYXNzKGVsLCBtb3ZlQ2xhc3MpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0sXG5cbiAgbWV0aG9kczoge1xuICAgIGhhc01vdmU6IGZ1bmN0aW9uIGhhc01vdmUgKGVsLCBtb3ZlQ2xhc3MpIHtcbiAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgICAgaWYgKCFoYXNUcmFuc2l0aW9uKSB7XG4gICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgfVxuICAgICAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgICBpZiAodGhpcy5faGFzTW92ZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5faGFzTW92ZVxuICAgICAgfVxuICAgICAgLy8gRGV0ZWN0IHdoZXRoZXIgYW4gZWxlbWVudCB3aXRoIHRoZSBtb3ZlIGNsYXNzIGFwcGxpZWQgaGFzXG4gICAgICAvLyBDU1MgdHJhbnNpdGlvbnMuIFNpbmNlIHRoZSBlbGVtZW50IG1heSBiZSBpbnNpZGUgYW4gZW50ZXJpbmdcbiAgICAgIC8vIHRyYW5zaXRpb24gYXQgdGhpcyB2ZXJ5IG1vbWVudCwgd2UgbWFrZSBhIGNsb25lIG9mIGl0IGFuZCByZW1vdmVcbiAgICAgIC8vIGFsbCBvdGhlciB0cmFuc2l0aW9uIGNsYXNzZXMgYXBwbGllZCB0byBlbnN1cmUgb25seSB0aGUgbW92ZSBjbGFzc1xuICAgICAgLy8gaXMgYXBwbGllZC5cbiAgICAgIHZhciBjbG9uZSA9IGVsLmNsb25lTm9kZSgpO1xuICAgICAgaWYgKGVsLl90cmFuc2l0aW9uQ2xhc3Nlcykge1xuICAgICAgICBlbC5fdHJhbnNpdGlvbkNsYXNzZXMuZm9yRWFjaChmdW5jdGlvbiAoY2xzKSB7IHJlbW92ZUNsYXNzKGNsb25lLCBjbHMpOyB9KTtcbiAgICAgIH1cbiAgICAgIGFkZENsYXNzKGNsb25lLCBtb3ZlQ2xhc3MpO1xuICAgICAgY2xvbmUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgIHRoaXMuJGVsLmFwcGVuZENoaWxkKGNsb25lKTtcbiAgICAgIHZhciBpbmZvID0gZ2V0VHJhbnNpdGlvbkluZm8oY2xvbmUpO1xuICAgICAgdGhpcy4kZWwucmVtb3ZlQ2hpbGQoY2xvbmUpO1xuICAgICAgcmV0dXJuICh0aGlzLl9oYXNNb3ZlID0gaW5mby5oYXNUcmFuc2Zvcm0pXG4gICAgfVxuICB9XG59O1xuXG5mdW5jdGlvbiBjYWxsUGVuZGluZ0NicyAoYykge1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgaWYgKGMuZWxtLl9tb3ZlQ2IpIHtcbiAgICBjLmVsbS5fbW92ZUNiKCk7XG4gIH1cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gIGlmIChjLmVsbS5fZW50ZXJDYikge1xuICAgIGMuZWxtLl9lbnRlckNiKCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gcmVjb3JkUG9zaXRpb24gKGMpIHtcbiAgYy5kYXRhLm5ld1BvcyA9IGMuZWxtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xufVxuXG5mdW5jdGlvbiBhcHBseVRyYW5zbGF0aW9uIChjKSB7XG4gIHZhciBvbGRQb3MgPSBjLmRhdGEucG9zO1xuICB2YXIgbmV3UG9zID0gYy5kYXRhLm5ld1BvcztcbiAgdmFyIGR4ID0gb2xkUG9zLmxlZnQgLSBuZXdQb3MubGVmdDtcbiAgdmFyIGR5ID0gb2xkUG9zLnRvcCAtIG5ld1Bvcy50b3A7XG4gIGlmIChkeCB8fCBkeSkge1xuICAgIGMuZGF0YS5tb3ZlZCA9IHRydWU7XG4gICAgdmFyIHMgPSBjLmVsbS5zdHlsZTtcbiAgICBzLnRyYW5zZm9ybSA9IHMuV2Via2l0VHJhbnNmb3JtID0gXCJ0cmFuc2xhdGUoXCIgKyBkeCArIFwicHgsXCIgKyBkeSArIFwicHgpXCI7XG4gICAgcy50cmFuc2l0aW9uRHVyYXRpb24gPSAnMHMnO1xuICB9XG59XG5cbnZhciBwbGF0Zm9ybUNvbXBvbmVudHMgPSB7XG4gIFRyYW5zaXRpb246IFRyYW5zaXRpb24sXG4gIFRyYW5zaXRpb25Hcm91cDogVHJhbnNpdGlvbkdyb3VwXG59O1xuXG4vKiAgKi9cblxuLy8gaW5zdGFsbCBwbGF0Zm9ybSBzcGVjaWZpYyB1dGlsc1xuVnVlLmNvbmZpZy5tdXN0VXNlUHJvcCA9IG11c3RVc2VQcm9wO1xuVnVlLmNvbmZpZy5pc1Jlc2VydmVkVGFnID0gaXNSZXNlcnZlZFRhZztcblZ1ZS5jb25maWcuaXNSZXNlcnZlZEF0dHIgPSBpc1Jlc2VydmVkQXR0cjtcblZ1ZS5jb25maWcuZ2V0VGFnTmFtZXNwYWNlID0gZ2V0VGFnTmFtZXNwYWNlO1xuVnVlLmNvbmZpZy5pc1Vua25vd25FbGVtZW50ID0gaXNVbmtub3duRWxlbWVudDtcblxuLy8gaW5zdGFsbCBwbGF0Zm9ybSBydW50aW1lIGRpcmVjdGl2ZXMgJiBjb21wb25lbnRzXG5leHRlbmQoVnVlLm9wdGlvbnMuZGlyZWN0aXZlcywgcGxhdGZvcm1EaXJlY3RpdmVzKTtcbmV4dGVuZChWdWUub3B0aW9ucy5jb21wb25lbnRzLCBwbGF0Zm9ybUNvbXBvbmVudHMpO1xuXG4vLyBpbnN0YWxsIHBsYXRmb3JtIHBhdGNoIGZ1bmN0aW9uXG5WdWUucHJvdG90eXBlLl9fcGF0Y2hfXyA9IGluQnJvd3NlciA/IHBhdGNoIDogbm9vcDtcblxuLy8gcHVibGljIG1vdW50IG1ldGhvZFxuVnVlLnByb3RvdHlwZS4kbW91bnQgPSBmdW5jdGlvbiAoXG4gIGVsLFxuICBoeWRyYXRpbmdcbikge1xuICBlbCA9IGVsICYmIGluQnJvd3NlciA/IHF1ZXJ5KGVsKSA6IHVuZGVmaW5lZDtcbiAgcmV0dXJuIG1vdW50Q29tcG9uZW50KHRoaXMsIGVsLCBoeWRyYXRpbmcpXG59O1xuXG4vLyBkZXZ0b29scyBnbG9iYWwgaG9va1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbmlmIChpbkJyb3dzZXIpIHtcbiAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgaWYgKGNvbmZpZy5kZXZ0b29scykge1xuICAgICAgaWYgKGRldnRvb2xzKSB7XG4gICAgICAgIGRldnRvb2xzLmVtaXQoJ2luaXQnLCBWdWUpO1xuICAgICAgfSBlbHNlIGlmIChcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJlxuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Rlc3QnXG4gICAgICApIHtcbiAgICAgICAgY29uc29sZVtjb25zb2xlLmluZm8gPyAnaW5mbycgOiAnbG9nJ10oXG4gICAgICAgICAgJ0Rvd25sb2FkIHRoZSBWdWUgRGV2dG9vbHMgZXh0ZW5zaW9uIGZvciBhIGJldHRlciBkZXZlbG9wbWVudCBleHBlcmllbmNlOlxcbicgK1xuICAgICAgICAgICdodHRwczovL2dpdGh1Yi5jb20vdnVlanMvdnVlLWRldnRvb2xzJ1xuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJlxuICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICd0ZXN0JyAmJlxuICAgICAgY29uZmlnLnByb2R1Y3Rpb25UaXAgIT09IGZhbHNlICYmXG4gICAgICB0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCdcbiAgICApIHtcbiAgICAgIGNvbnNvbGVbY29uc29sZS5pbmZvID8gJ2luZm8nIDogJ2xvZyddKFxuICAgICAgICBcIllvdSBhcmUgcnVubmluZyBWdWUgaW4gZGV2ZWxvcG1lbnQgbW9kZS5cXG5cIiArXG4gICAgICAgIFwiTWFrZSBzdXJlIHRvIHR1cm4gb24gcHJvZHVjdGlvbiBtb2RlIHdoZW4gZGVwbG95aW5nIGZvciBwcm9kdWN0aW9uLlxcblwiICtcbiAgICAgICAgXCJTZWUgbW9yZSB0aXBzIGF0IGh0dHBzOi8vdnVlanMub3JnL2d1aWRlL2RlcGxveW1lbnQuaHRtbFwiXG4gICAgICApO1xuICAgIH1cbiAgfSwgMCk7XG59XG5cbi8qICAqL1xuXG5leHBvcnQgZGVmYXVsdCBWdWU7XG4iLCIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz9pbmRlbnRlZFN5bnRheCEuLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0FwcC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZsYW5nPXNhc3MmXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCB7fSk7XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcblx0Ly8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0aWYoIWNvbnRlbnQubG9jYWxzKSB7XG5cdFx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanM/aW5kZW50ZWRTeW50YXghLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9BcHAudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1zYXNzJlwiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz9pbmRlbnRlZFN5bnRheCEuLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0FwcC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZsYW5nPXNhc3MmXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iLCJjb25zdCBlbnYgPSAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykgPyByZXF1aXJlKCcuLi8uZW52LnByb2R1Y3Rpb24nKSA6IHJlcXVpcmUoJy4uLy5lbnYubG9jYWwnKVxuY29uc3QgYmFzZVVyaSA9ICdodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS95b3V0dWJlL3YzJ1xuY29uc3QgYXBpS2V5ID0gZW52LllPVVRVQkVfQVBJX0tFWVxuY29uc3QgdGl0bGUgPSAnV2ViIExlYXJuOiBpdFxcJ3MgbGlrZSBZb3VUdWJlIEdhbWluZywgYnV0IGZvciBXZWIgRGV2ZWxvcGVycydcbmNvbnN0IHR3ZWV0ID0gZW5jb2RlVVJJQ29tcG9uZW50KHRpdGxlKVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGFwcDoge1xuICAgIG5hbWU6ICdXZWIgTGVhcm4nLFxuICAgIHVybDogJ2h0dHBzOi8vZnJlZWFyaGV5LmdpdGh1Yi5pby93ZWItbGVhcm4vJyxcbiAgICB0aXRsZTogdGl0bGUsXG4gICAgZGVzY3JpcHRpb246ICdXZWIgTGVhcm4gaXMgYW4gb3BlbiBzb3VyY2Ugc2VydmljZSB3aGljaCBwcm92aWRlcyBzaW1wbGUgYWNjZXNzIHRvIHRob3VzYW5kcyBvZiB2aWRlbyBsZXNzb25zIG9uIHdlYiBkZXZlbG9waW5nIGFuZCBwcm9ncmFtbWluZy4nLFxuICAgIGF1dGhvcjogJ0FyaGV5JyxcbiAgICBsb2dvOiB7XG4gICAgICBub3JtYWw6ICdidWlsZC9pbWFnZXMvbG9nby5zdmcnLFxuICAgICAgbWluaTogJ2J1aWxkL2ltYWdlcy9sb2dvLW1pbmkuc3ZnJyxcbiAgICAgIHNoYXJlOiAnYnVpbGQvaW1hZ2VzL3dlYmxlYXJuLWJhbm5lci5wbmcnXG4gICAgfSxcbiAgICBnaXRodWI6IHtcbiAgICAgIHVzZXJuYW1lOiAnZnJlZWFyaGV5JyxcbiAgICAgIHJlcG86ICdmcmVlYXJoZXkvd2ViLWxlYXJuJ1xuICAgIH0sXG4gICAgdHdpdHRlcjoge1xuICAgICAgdXNlcm5hbWU6ICdhcmhleScsXG4gICAgICB0d2VldDogdHdlZXRcbiAgICB9LFxuICAgIGxpbmtzOiBbXG4gICAgICAnPGEgY2xhc3M9XCJnaXRodWItYnV0dG9uXCIgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS9mcmVlYXJoZXkvd2ViLWxlYXJuXCIgZGF0YS1jb3VudC1ocmVmPVwiL2ZyZWVhcmhleS93ZWItbGVhcm4vc3RhcmdhemVyc1wiIGRhdGEtY291bnQtYXBpPVwiL3JlcG9zL2ZyZWVhcmhleS93ZWItbGVhcm4jc3RhcmdhemVyc19jb3VudFwiIGRhdGEtY291bnQtYXJpYS1sYWJlbD1cIiMgc3RhcmdhemVycyBvbiBHaXRIdWJcIiBhcmlhLWxhYmVsPVwiU3RhciBmcmVlYXJoZXkvd2ViLWxlYXJuIG9uIEdpdEh1YlwiPlN0YXI8L2E+JyxcbiAgICAgICc8YSBjbGFzcz1cInR3aXR0ZXItZm9sbG93LWJ1dHRvblwiIGhyZWY9XCJodHRwczovL3R3aXR0ZXIuY29tL2FyaGV5XCI+Rm9sbG93IEBhcmhleTwvYT4nLFxuICAgICAgJzxhIGNsYXNzPVwidHdpdHRlci1zaGFyZS1idXR0b25cIiBkYXRhLXZpYT1cImFyaGV5XCIgaHJlZj1cImh0dHBzOi8vdHdpdHRlci5jb20vaW50ZW50L3R3ZWV0P3RleHQ9JyArIHR3ZWV0ICsgJ1wiPlR3ZWV0PC9hPidcbiAgICBdXG4gIH0sXG4gIGFwaToge1xuICAgIGtleTogYXBpS2V5LFxuICAgIHNlYXJjaDoge1xuICAgICAgZW5kcG9pbnQ6IGJhc2VVcmkgKyAnL3NlYXJjaCcsXG4gICAgICBwYXJhbXM6IHtcbiAgICAgICAga2V5OiBhcGlLZXksXG4gICAgICAgIHBhcnQ6ICdzbmlwcGV0JyxcbiAgICAgICAgdmlkZW9FbWJlZGRhYmxlOiB0cnVlLFxuICAgICAgICBzYWZlU2VhcmNoOiAnc3RyaWN0JyxcbiAgICAgICAgZmllbGRzOiAncHJldlBhZ2VUb2tlbixuZXh0UGFnZVRva2VuLGl0ZW1zL2lkL3ZpZGVvSWQnXG4gICAgICB9XG4gICAgfSxcbiAgICB2aWRlb3M6IHtcbiAgICAgIGVuZHBvaW50OiBiYXNlVXJpICsgJy92aWRlb3MnLFxuICAgICAgcGFyYW1zOiB7XG4gICAgICAgIGtleTogYXBpS2V5LFxuICAgICAgICBwYXJ0OiAnY29udGVudERldGFpbHMsc25pcHBldCxzdGF0aXN0aWNzJyxcbiAgICAgICAgZmllbGRzOiAnaXRlbXMoY29udGVudERldGFpbHMvZHVyYXRpb24saWQsc25pcHBldChjaGFubmVsSWQsY2hhbm5lbFRpdGxlLGRlc2NyaXB0aW9uLHB1Ymxpc2hlZEF0LHRhZ3MsdGh1bWJuYWlscyx0aXRsZSksc3RhdGlzdGljcyhkaXNsaWtlQ291bnQsbGlrZUNvdW50LHZpZXdDb3VudCkpLG5leHRQYWdlVG9rZW4scHJldlBhZ2VUb2tlbidcbiAgICAgIH1cbiAgICB9LFxuICAgIGNoYW5uZWxzOiB7XG4gICAgICBlbmRwb2ludDogYmFzZVVyaSArICcvY2hhbm5lbHMnLFxuICAgICAgcGFyYW1zOiB7XG4gICAgICAgIGtleTogYXBpS2V5LFxuICAgICAgICBwYXJ0OiAnc25pcHBldCxzdGF0aXN0aWNzLGJyYW5kaW5nU2V0dGluZ3MnXG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIvKiBnbG9iYWxzIF9fVlVFX1NTUl9DT05URVhUX18gKi9cblxuLy8gSU1QT1JUQU5UOiBEbyBOT1QgdXNlIEVTMjAxNSBmZWF0dXJlcyBpbiB0aGlzIGZpbGUgKGV4Y2VwdCBmb3IgbW9kdWxlcykuXG4vLyBUaGlzIG1vZHVsZSBpcyBhIHJ1bnRpbWUgdXRpbGl0eSBmb3IgY2xlYW5lciBjb21wb25lbnQgbW9kdWxlIG91dHB1dCBhbmQgd2lsbFxuLy8gYmUgaW5jbHVkZWQgaW4gdGhlIGZpbmFsIHdlYnBhY2sgdXNlciBidW5kbGUuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5vcm1hbGl6ZUNvbXBvbmVudCAoXG4gIHNjcmlwdEV4cG9ydHMsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmdW5jdGlvbmFsVGVtcGxhdGUsXG4gIGluamVjdFN0eWxlcyxcbiAgc2NvcGVJZCxcbiAgbW9kdWxlSWRlbnRpZmllciwgLyogc2VydmVyIG9ubHkgKi9cbiAgc2hhZG93TW9kZSAvKiB2dWUtY2xpIG9ubHkgKi9cbikge1xuICAvLyBWdWUuZXh0ZW5kIGNvbnN0cnVjdG9yIGV4cG9ydCBpbnRlcm9wXG4gIHZhciBvcHRpb25zID0gdHlwZW9mIHNjcmlwdEV4cG9ydHMgPT09ICdmdW5jdGlvbidcbiAgICA/IHNjcmlwdEV4cG9ydHMub3B0aW9uc1xuICAgIDogc2NyaXB0RXhwb3J0c1xuXG4gIC8vIHJlbmRlciBmdW5jdGlvbnNcbiAgaWYgKHJlbmRlcikge1xuICAgIG9wdGlvbnMucmVuZGVyID0gcmVuZGVyXG4gICAgb3B0aW9ucy5zdGF0aWNSZW5kZXJGbnMgPSBzdGF0aWNSZW5kZXJGbnNcbiAgICBvcHRpb25zLl9jb21waWxlZCA9IHRydWVcbiAgfVxuXG4gIC8vIGZ1bmN0aW9uYWwgdGVtcGxhdGVcbiAgaWYgKGZ1bmN0aW9uYWxUZW1wbGF0ZSkge1xuICAgIG9wdGlvbnMuZnVuY3Rpb25hbCA9IHRydWVcbiAgfVxuXG4gIC8vIHNjb3BlZElkXG4gIGlmIChzY29wZUlkKSB7XG4gICAgb3B0aW9ucy5fc2NvcGVJZCA9ICdkYXRhLXYtJyArIHNjb3BlSWRcbiAgfVxuXG4gIHZhciBob29rXG4gIGlmIChtb2R1bGVJZGVudGlmaWVyKSB7IC8vIHNlcnZlciBidWlsZFxuICAgIGhvb2sgPSBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgLy8gMi4zIGluamVjdGlvblxuICAgICAgY29udGV4dCA9XG4gICAgICAgIGNvbnRleHQgfHwgLy8gY2FjaGVkIGNhbGxcbiAgICAgICAgKHRoaXMuJHZub2RlICYmIHRoaXMuJHZub2RlLnNzckNvbnRleHQpIHx8IC8vIHN0YXRlZnVsXG4gICAgICAgICh0aGlzLnBhcmVudCAmJiB0aGlzLnBhcmVudC4kdm5vZGUgJiYgdGhpcy5wYXJlbnQuJHZub2RlLnNzckNvbnRleHQpIC8vIGZ1bmN0aW9uYWxcbiAgICAgIC8vIDIuMiB3aXRoIHJ1bkluTmV3Q29udGV4dDogdHJ1ZVxuICAgICAgaWYgKCFjb250ZXh0ICYmIHR5cGVvZiBfX1ZVRV9TU1JfQ09OVEVYVF9fICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBjb250ZXh0ID0gX19WVUVfU1NSX0NPTlRFWFRfX1xuICAgICAgfVxuICAgICAgLy8gaW5qZWN0IGNvbXBvbmVudCBzdHlsZXNcbiAgICAgIGlmIChpbmplY3RTdHlsZXMpIHtcbiAgICAgICAgaW5qZWN0U3R5bGVzLmNhbGwodGhpcywgY29udGV4dClcbiAgICAgIH1cbiAgICAgIC8vIHJlZ2lzdGVyIGNvbXBvbmVudCBtb2R1bGUgaWRlbnRpZmllciBmb3IgYXN5bmMgY2h1bmsgaW5mZXJyZW5jZVxuICAgICAgaWYgKGNvbnRleHQgJiYgY29udGV4dC5fcmVnaXN0ZXJlZENvbXBvbmVudHMpIHtcbiAgICAgICAgY29udGV4dC5fcmVnaXN0ZXJlZENvbXBvbmVudHMuYWRkKG1vZHVsZUlkZW50aWZpZXIpXG4gICAgICB9XG4gICAgfVxuICAgIC8vIHVzZWQgYnkgc3NyIGluIGNhc2UgY29tcG9uZW50IGlzIGNhY2hlZCBhbmQgYmVmb3JlQ3JlYXRlXG4gICAgLy8gbmV2ZXIgZ2V0cyBjYWxsZWRcbiAgICBvcHRpb25zLl9zc3JSZWdpc3RlciA9IGhvb2tcbiAgfSBlbHNlIGlmIChpbmplY3RTdHlsZXMpIHtcbiAgICBob29rID0gc2hhZG93TW9kZVxuICAgICAgPyBmdW5jdGlvbiAoKSB7IGluamVjdFN0eWxlcy5jYWxsKHRoaXMsIHRoaXMuJHJvb3QuJG9wdGlvbnMuc2hhZG93Um9vdCkgfVxuICAgICAgOiBpbmplY3RTdHlsZXNcbiAgfVxuXG4gIGlmIChob29rKSB7XG4gICAgaWYgKG9wdGlvbnMuZnVuY3Rpb25hbCkge1xuICAgICAgLy8gZm9yIHRlbXBsYXRlLW9ubHkgaG90LXJlbG9hZCBiZWNhdXNlIGluIHRoYXQgY2FzZSB0aGUgcmVuZGVyIGZuIGRvZXNuJ3RcbiAgICAgIC8vIGdvIHRocm91Z2ggdGhlIG5vcm1hbGl6ZXJcbiAgICAgIG9wdGlvbnMuX2luamVjdFN0eWxlcyA9IGhvb2tcbiAgICAgIC8vIHJlZ2lzdGVyIGZvciBmdW5jdGlvYWwgY29tcG9uZW50IGluIHZ1ZSBmaWxlXG4gICAgICB2YXIgb3JpZ2luYWxSZW5kZXIgPSBvcHRpb25zLnJlbmRlclxuICAgICAgb3B0aW9ucy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXJXaXRoU3R5bGVJbmplY3Rpb24gKGgsIGNvbnRleHQpIHtcbiAgICAgICAgaG9vay5jYWxsKGNvbnRleHQpXG4gICAgICAgIHJldHVybiBvcmlnaW5hbFJlbmRlcihoLCBjb250ZXh0KVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBpbmplY3QgY29tcG9uZW50IHJlZ2lzdHJhdGlvbiBhcyBiZWZvcmVDcmVhdGUgaG9va1xuICAgICAgdmFyIGV4aXN0aW5nID0gb3B0aW9ucy5iZWZvcmVDcmVhdGVcbiAgICAgIG9wdGlvbnMuYmVmb3JlQ3JlYXRlID0gZXhpc3RpbmdcbiAgICAgICAgPyBbXS5jb25jYXQoZXhpc3RpbmcsIGhvb2spXG4gICAgICAgIDogW2hvb2tdXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBleHBvcnRzOiBzY3JpcHRFeHBvcnRzLFxuICAgIG9wdGlvbnM6IG9wdGlvbnNcbiAgfVxufVxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVzZVNvdXJjZU1hcCkge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCJ7XCIpLmNvbmNhdChjb250ZW50LCBcIn1cIik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oJycpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gKG1vZHVsZXMsIG1lZGlhUXVlcnkpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsICcnXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXG4gICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgaXRlbSA9IG1vZHVsZXNbX2ldOyAvLyBza2lwIGFscmVhZHkgaW1wb3J0ZWQgbW9kdWxlXG4gICAgICAvLyB0aGlzIGltcGxlbWVudGF0aW9uIGlzIG5vdCAxMDAlIHBlcmZlY3QgZm9yIHdlaXJkIG1lZGlhIHF1ZXJ5IGNvbWJpbmF0aW9uc1xuICAgICAgLy8gd2hlbiBhIG1vZHVsZSBpcyBpbXBvcnRlZCBtdWx0aXBsZSB0aW1lcyB3aXRoIGRpZmZlcmVudCBtZWRpYSBxdWVyaWVzLlxuICAgICAgLy8gSSBob3BlIHRoaXMgd2lsbCBuZXZlciBvY2N1ciAoSGV5IHRoaXMgd2F5IHdlIGhhdmUgc21hbGxlciBidW5kbGVzKVxuXG4gICAgICBpZiAoaXRlbVswXSA9PSBudWxsIHx8ICFhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGlmIChtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgIH0gZWxzZSBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBcIihcIi5jb25jYXQoaXRlbVsyXSwgXCIpIGFuZCAoXCIpLmNvbmNhdChtZWRpYVF1ZXJ5LCBcIilcIik7XG4gICAgICAgIH1cblxuICAgICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcblxuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCkuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufSAvLyBBZGFwdGVkIGZyb20gY29udmVydC1zb3VyY2UtbWFwIChNSVQpXG5cblxuZnVuY3Rpb24gdG9Db21tZW50KHNvdXJjZU1hcCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSk7XG4gIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgcmV0dXJuIFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbn0iLCIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xudmFyIHN0eWxlc0luRG9tID0ge30sXG5cdG1lbW9pemUgPSBmdW5jdGlvbihmbikge1xuXHRcdHZhciBtZW1vO1xuXHRcdHJldHVybiBmdW5jdGlvbiAoKSB7XG5cdFx0XHRpZiAodHlwZW9mIG1lbW8gPT09IFwidW5kZWZpbmVkXCIpIG1lbW8gPSBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXHRcdFx0cmV0dXJuIG1lbW87XG5cdFx0fTtcblx0fSxcblx0aXNPbGRJRSA9IG1lbW9pemUoZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIC9tc2llIFs2LTldXFxiLy50ZXN0KHNlbGYubmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpKTtcblx0fSksXG5cdGdldEhlYWRFbGVtZW50ID0gbWVtb2l6ZShmdW5jdGlvbiAoKSB7XG5cdFx0cmV0dXJuIGRvY3VtZW50LmhlYWQgfHwgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJoZWFkXCIpWzBdO1xuXHR9KSxcblx0c2luZ2xldG9uRWxlbWVudCA9IG51bGwsXG5cdHNpbmdsZXRvbkNvdW50ZXIgPSAwLFxuXHRzdHlsZUVsZW1lbnRzSW5zZXJ0ZWRBdFRvcCA9IFtdO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGxpc3QsIG9wdGlvbnMpIHtcblx0aWYodHlwZW9mIERFQlVHICE9PSBcInVuZGVmaW5lZFwiICYmIERFQlVHKSB7XG5cdFx0aWYodHlwZW9mIGRvY3VtZW50ICE9PSBcIm9iamVjdFwiKSB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgc3R5bGUtbG9hZGVyIGNhbm5vdCBiZSB1c2VkIGluIGEgbm9uLWJyb3dzZXIgZW52aXJvbm1lbnRcIik7XG5cdH1cblxuXHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblx0Ly8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG5cdC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2Vcblx0aWYgKHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiA9PT0gXCJ1bmRlZmluZWRcIikgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG5cblx0Ly8gQnkgZGVmYXVsdCwgYWRkIDxzdHlsZT4gdGFncyB0byB0aGUgYm90dG9tIG9mIDxoZWFkPi5cblx0aWYgKHR5cGVvZiBvcHRpb25zLmluc2VydEF0ID09PSBcInVuZGVmaW5lZFwiKSBvcHRpb25zLmluc2VydEF0ID0gXCJib3R0b21cIjtcblxuXHR2YXIgc3R5bGVzID0gbGlzdFRvU3R5bGVzKGxpc3QpO1xuXHRhZGRTdHlsZXNUb0RvbShzdHlsZXMsIG9wdGlvbnMpO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuXHRcdHZhciBtYXlSZW1vdmUgPSBbXTtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IHN0eWxlc1tpXTtcblx0XHRcdHZhciBkb21TdHlsZSA9IHN0eWxlc0luRG9tW2l0ZW0uaWRdO1xuXHRcdFx0ZG9tU3R5bGUucmVmcy0tO1xuXHRcdFx0bWF5UmVtb3ZlLnB1c2goZG9tU3R5bGUpO1xuXHRcdH1cblx0XHRpZihuZXdMaXN0KSB7XG5cdFx0XHR2YXIgbmV3U3R5bGVzID0gbGlzdFRvU3R5bGVzKG5ld0xpc3QpO1xuXHRcdFx0YWRkU3R5bGVzVG9Eb20obmV3U3R5bGVzLCBvcHRpb25zKTtcblx0XHR9XG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IG1heVJlbW92ZS5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGRvbVN0eWxlID0gbWF5UmVtb3ZlW2ldO1xuXHRcdFx0aWYoZG9tU3R5bGUucmVmcyA9PT0gMCkge1xuXHRcdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspXG5cdFx0XHRcdFx0ZG9tU3R5bGUucGFydHNbal0oKTtcblx0XHRcdFx0ZGVsZXRlIHN0eWxlc0luRG9tW2RvbVN0eWxlLmlkXTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG59XG5cbmZ1bmN0aW9uIGFkZFN0eWxlc1RvRG9tKHN0eWxlcywgb3B0aW9ucykge1xuXHRmb3IodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XG5cdFx0aWYoZG9tU3R5bGUpIHtcblx0XHRcdGRvbVN0eWxlLnJlZnMrKztcblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRkb21TdHlsZS5wYXJ0c1tqXShpdGVtLnBhcnRzW2pdKTtcblx0XHRcdH1cblx0XHRcdGZvcig7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGRvbVN0eWxlLnBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSwgb3B0aW9ucykpO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHR2YXIgcGFydHMgPSBbXTtcblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdHBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSwgb3B0aW9ucykpO1xuXHRcdFx0fVxuXHRcdFx0c3R5bGVzSW5Eb21baXRlbS5pZF0gPSB7aWQ6IGl0ZW0uaWQsIHJlZnM6IDEsIHBhcnRzOiBwYXJ0c307XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGxpc3RUb1N0eWxlcyhsaXN0KSB7XG5cdHZhciBzdHlsZXMgPSBbXTtcblx0dmFyIG5ld1N0eWxlcyA9IHt9O1xuXHRmb3IodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBpdGVtID0gbGlzdFtpXTtcblx0XHR2YXIgaWQgPSBpdGVtWzBdO1xuXHRcdHZhciBjc3MgPSBpdGVtWzFdO1xuXHRcdHZhciBtZWRpYSA9IGl0ZW1bMl07XG5cdFx0dmFyIHNvdXJjZU1hcCA9IGl0ZW1bM107XG5cdFx0dmFyIHBhcnQgPSB7Y3NzOiBjc3MsIG1lZGlhOiBtZWRpYSwgc291cmNlTWFwOiBzb3VyY2VNYXB9O1xuXHRcdGlmKCFuZXdTdHlsZXNbaWRdKVxuXHRcdFx0c3R5bGVzLnB1c2gobmV3U3R5bGVzW2lkXSA9IHtpZDogaWQsIHBhcnRzOiBbcGFydF19KTtcblx0XHRlbHNlXG5cdFx0XHRuZXdTdHlsZXNbaWRdLnBhcnRzLnB1c2gocGFydCk7XG5cdH1cblx0cmV0dXJuIHN0eWxlcztcbn1cblxuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIHN0eWxlRWxlbWVudCkge1xuXHR2YXIgaGVhZCA9IGdldEhlYWRFbGVtZW50KCk7XG5cdHZhciBsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCA9IHN0eWxlRWxlbWVudHNJbnNlcnRlZEF0VG9wW3N0eWxlRWxlbWVudHNJbnNlcnRlZEF0VG9wLmxlbmd0aCAtIDFdO1xuXHRpZiAob3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJ0b3BcIikge1xuXHRcdGlmKCFsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCkge1xuXHRcdFx0aGVhZC5pbnNlcnRCZWZvcmUoc3R5bGVFbGVtZW50LCBoZWFkLmZpcnN0Q2hpbGQpO1xuXHRcdH0gZWxzZSBpZihsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZykge1xuXHRcdFx0aGVhZC5pbnNlcnRCZWZvcmUoc3R5bGVFbGVtZW50LCBsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZyk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGhlYWQuYXBwZW5kQ2hpbGQoc3R5bGVFbGVtZW50KTtcblx0XHR9XG5cdFx0c3R5bGVFbGVtZW50c0luc2VydGVkQXRUb3AucHVzaChzdHlsZUVsZW1lbnQpO1xuXHR9IGVsc2UgaWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwiYm90dG9tXCIpIHtcblx0XHRoZWFkLmFwcGVuZENoaWxkKHN0eWxlRWxlbWVudCk7XG5cdH0gZWxzZSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCB2YWx1ZSBmb3IgcGFyYW1ldGVyICdpbnNlcnRBdCcuIE11c3QgYmUgJ3RvcCcgb3IgJ2JvdHRvbScuXCIpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcblx0c3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcblx0dmFyIGlkeCA9IHN0eWxlRWxlbWVudHNJbnNlcnRlZEF0VG9wLmluZGV4T2Yoc3R5bGVFbGVtZW50KTtcblx0aWYoaWR4ID49IDApIHtcblx0XHRzdHlsZUVsZW1lbnRzSW5zZXJ0ZWRBdFRvcC5zcGxpY2UoaWR4LCAxKTtcblx0fVxufVxuXG5mdW5jdGlvbiBjcmVhdGVTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuXHR2YXIgc3R5bGVFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuXHRzdHlsZUVsZW1lbnQudHlwZSA9IFwidGV4dC9jc3NcIjtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIHN0eWxlRWxlbWVudCk7XG5cdHJldHVybiBzdHlsZUVsZW1lbnQ7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxpbmtFbGVtZW50KG9wdGlvbnMpIHtcblx0dmFyIGxpbmtFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpbmtcIik7XG5cdGxpbmtFbGVtZW50LnJlbCA9IFwic3R5bGVzaGVldFwiO1xuXHRpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucywgbGlua0VsZW1lbnQpO1xuXHRyZXR1cm4gbGlua0VsZW1lbnQ7XG59XG5cbmZ1bmN0aW9uIGFkZFN0eWxlKG9iaiwgb3B0aW9ucykge1xuXHR2YXIgc3R5bGVFbGVtZW50LCB1cGRhdGUsIHJlbW92ZTtcblxuXHRpZiAob3B0aW9ucy5zaW5nbGV0b24pIHtcblx0XHR2YXIgc3R5bGVJbmRleCA9IHNpbmdsZXRvbkNvdW50ZXIrKztcblx0XHRzdHlsZUVsZW1lbnQgPSBzaW5nbGV0b25FbGVtZW50IHx8IChzaW5nbGV0b25FbGVtZW50ID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpKTtcblx0XHR1cGRhdGUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGVFbGVtZW50LCBzdHlsZUluZGV4LCBmYWxzZSk7XG5cdFx0cmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlRWxlbWVudCwgc3R5bGVJbmRleCwgdHJ1ZSk7XG5cdH0gZWxzZSBpZihvYmouc291cmNlTWFwICYmXG5cdFx0dHlwZW9mIFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIFVSTC5jcmVhdGVPYmplY3RVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwucmV2b2tlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgQmxvYiA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuXHRcdHN0eWxlRWxlbWVudCA9IGNyZWF0ZUxpbmtFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IHVwZGF0ZUxpbmsuYmluZChudWxsLCBzdHlsZUVsZW1lbnQpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG5cdFx0XHRpZihzdHlsZUVsZW1lbnQuaHJlZilcblx0XHRcdFx0VVJMLnJldm9rZU9iamVjdFVSTChzdHlsZUVsZW1lbnQuaHJlZik7XG5cdFx0fTtcblx0fSBlbHNlIHtcblx0XHRzdHlsZUVsZW1lbnQgPSBjcmVhdGVTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG5cdFx0dXBkYXRlID0gYXBwbHlUb1RhZy5iaW5kKG51bGwsIHN0eWxlRWxlbWVudCk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRyZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcblx0XHR9O1xuXHR9XG5cblx0dXBkYXRlKG9iaik7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlKG5ld09iaikge1xuXHRcdGlmKG5ld09iaikge1xuXHRcdFx0aWYobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwKVxuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR1cGRhdGUob2JqID0gbmV3T2JqKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cmVtb3ZlKCk7XG5cdFx0fVxuXHR9O1xufVxuXG52YXIgcmVwbGFjZVRleHQgPSAoZnVuY3Rpb24gKCkge1xuXHR2YXIgdGV4dFN0b3JlID0gW107XG5cblx0cmV0dXJuIGZ1bmN0aW9uIChpbmRleCwgcmVwbGFjZW1lbnQpIHtcblx0XHR0ZXh0U3RvcmVbaW5kZXhdID0gcmVwbGFjZW1lbnQ7XG5cdFx0cmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG5cdH07XG59KSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnKHN0eWxlRWxlbWVudCwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XG5cdHZhciBjc3MgPSByZW1vdmUgPyBcIlwiIDogb2JqLmNzcztcblxuXHRpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gcmVwbGFjZVRleHQoaW5kZXgsIGNzcyk7XG5cdH0gZWxzZSB7XG5cdFx0dmFyIGNzc05vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpO1xuXHRcdHZhciBjaGlsZE5vZGVzID0gc3R5bGVFbGVtZW50LmNoaWxkTm9kZXM7XG5cdFx0aWYgKGNoaWxkTm9kZXNbaW5kZXhdKSBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoY2hpbGROb2Rlc1tpbmRleF0pO1xuXHRcdGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuXHRcdFx0c3R5bGVFbGVtZW50Lmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChjc3NOb2RlKTtcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gYXBwbHlUb1RhZyhzdHlsZUVsZW1lbnQsIG9iaikge1xuXHR2YXIgY3NzID0gb2JqLmNzcztcblx0dmFyIG1lZGlhID0gb2JqLm1lZGlhO1xuXG5cdGlmKG1lZGlhKSB7XG5cdFx0c3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm1lZGlhXCIsIG1lZGlhKVxuXHR9XG5cblx0aWYoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuXHR9IGVsc2Uge1xuXHRcdHdoaWxlKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG5cdFx0XHRzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuXHRcdH1cblx0XHRzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gdXBkYXRlTGluayhsaW5rRWxlbWVudCwgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuXHRpZihzb3VyY2VNYXApIHtcblx0XHQvLyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8yNjYwMzg3NVxuXHRcdGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIgKyBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpICsgXCIgKi9cIjtcblx0fVxuXG5cdHZhciBibG9iID0gbmV3IEJsb2IoW2Nzc10sIHsgdHlwZTogXCJ0ZXh0L2Nzc1wiIH0pO1xuXG5cdHZhciBvbGRTcmMgPSBsaW5rRWxlbWVudC5ocmVmO1xuXG5cdGxpbmtFbGVtZW50LmhyZWYgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuXG5cdGlmKG9sZFNyYylcblx0XHRVUkwucmV2b2tlT2JqZWN0VVJMKG9sZFNyYyk7XG59XG4iLCJpbXBvcnQgVnVlIGZyb20gJ3Z1ZSdcblxuZXhwb3J0IGRlZmF1bHQgbmV3IFZ1ZSgpXG4iLCIoZnVuY3Rpb24gd2VicGFja1VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24ocm9vdCwgZmFjdG9yeSkge1xuXHRpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcpXG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG5cdGVsc2UgaWYodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKVxuXHRcdGRlZmluZShbXSwgZmFjdG9yeSk7XG5cdGVsc2Uge1xuXHRcdHZhciBhID0gZmFjdG9yeSgpO1xuXHRcdGZvcih2YXIgaSBpbiBhKSAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnID8gZXhwb3J0cyA6IHJvb3QpW2ldID0gYVtpXTtcblx0fVxufSkodGhpcywgZnVuY3Rpb24oKSB7XG5yZXR1cm4gLyoqKioqKi8gKGZ1bmN0aW9uKG1vZHVsZXMpIHsgLy8gd2VicGFja0Jvb3RzdHJhcFxuLyoqKioqKi8gXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4vKioqKioqLyBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbi8qKioqKiovIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbi8qKioqKiovIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4vKioqKioqLyBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4vKioqKioqLyBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pXG4vKioqKioqLyBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcblxuLyoqKioqKi8gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4vKioqKioqLyBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuLyoqKioqKi8gXHRcdFx0aTogbW9kdWxlSWQsXG4vKioqKioqLyBcdFx0XHRsOiBmYWxzZSxcbi8qKioqKiovIFx0XHRcdGV4cG9ydHM6IHt9XG4vKioqKioqLyBcdFx0fTtcblxuLyoqKioqKi8gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuLyoqKioqKi8gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4vKioqKioqLyBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuLyoqKioqKi8gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuLyoqKioqKi8gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4vKioqKioqLyBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuLyoqKioqKi8gXHR9XG5cblxuLyoqKioqKi8gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4vKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbi8qKioqKiovIFx0Ly8gaWRlbnRpdHkgZnVuY3Rpb24gZm9yIGNhbGxpbmcgaGFybW9yeSBpbXBvcnRzIHdpdGggdGhlIGNvcnJlY3QgY29udGV4dFxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmkgPSBmdW5jdGlvbih2YWx1ZSkgeyByZXR1cm4gdmFsdWU7IH07XG5cbi8qKioqKiovIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9yeSBleHBvcnRzXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuLyoqKioqKi8gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7XG4vKioqKioqLyBcdFx0XHRjb25maWd1cmFibGU6IGZhbHNlLFxuLyoqKioqKi8gXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcbi8qKioqKiovIFx0XHRcdGdldDogZ2V0dGVyXG4vKioqKioqLyBcdFx0fSk7XG4vKioqKioqLyBcdH07XG5cbi8qKioqKiovIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4vKioqKioqLyBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4vKioqKioqLyBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuLyoqKioqKi8gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbi8qKioqKiovIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4vKioqKioqLyBcdFx0cmV0dXJuIGdldHRlcjtcbi8qKioqKiovIFx0fTtcblxuLyoqKioqKi8gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4vKioqKioqLyBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cbi8qKioqKiovIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4vKioqKioqLyBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDE0KTtcbi8qKioqKiovIH0pXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKi8gKFtcbi8qIDAgKi9cbi8qKiovIGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbnZhclxuICAgIEFycmF5UHJvdG8gPSBBcnJheS5wcm90b3R5cGUsXG4gICAgT2JqUHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG52YXJcbiAgICBzbGljZSA9IEFycmF5UHJvdG8uc2xpY2UsXG4gICAgdG9TdHJpbmcgPSBPYmpQcm90by50b1N0cmluZztcblxudmFyIHV0aWwgPSB7fTtcblxudXRpbC5pc0FycmF5ID0gZnVuY3Rpb24ob2JqKSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkob2JqKTtcbn07XG5cbnZhciBNQVhfQVJSQVlfSU5ERVggPSBNYXRoLnBvdygyLCA1MykgLSAxO1xudXRpbC5pc0FycmF5TGlrZSA9IGZ1bmN0aW9uKG9iaikge1xuICAgIGlmKHR5cGVvZiBvYmogIT09ICdvYmplY3QnIHx8ICFvYmope1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHZhciBsZW5ndGggPSBvYmoubGVuZ3RoO1xuICAgIHJldHVybiB0eXBlb2YgbGVuZ3RoID09PSAnbnVtYmVyJ1xuICAgICAgICAmJiBsZW5ndGggJSAxID09PSAwICYmIGxlbmd0aCA+PSAwICYmIGxlbmd0aCA8PSBNQVhfQVJSQVlfSU5ERVg7XG59O1xuXG51dGlsLmlzT2JqZWN0ID0gZnVuY3Rpb24ob2JqKSB7XG4gICAgdmFyIHR5cGUgPSB0eXBlb2Ygb2JqO1xuICAgIHJldHVybiB0eXBlID09PSAnZnVuY3Rpb24nIHx8IHR5cGUgPT09ICdvYmplY3QnICYmICEhb2JqO1xufTtcblxuXG51dGlsLmVhY2ggPSBmdW5jdGlvbihvYmosIGNhbGxiYWNrKSB7XG4gICAgdmFyIGksXG4gICAgICAgIGxlbjtcbiAgICBpZiAodXRpbC5pc0FycmF5KG9iaikpIHtcbiAgICAgICAgZm9yIChpID0gMCwgbGVuID0gb2JqLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoY2FsbGJhY2sob2JqW2ldLCBpLCBvYmopID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZm9yIChpIGluIG9iaikge1xuICAgICAgICAgICAgaWYgKGNhbGxiYWNrKG9ialtpXSwgaSwgb2JqKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gb2JqO1xufTtcblxudXRpbC5lYWNoKFsnQXJndW1lbnRzJywgJ0Z1bmN0aW9uJywgJ1N0cmluZycsICdOdW1iZXInLCAnRGF0ZScsICdSZWdFeHAnLCAnRXJyb3InXSwgZnVuY3Rpb24obmFtZSkge1xuICAgIHV0aWxbJ2lzJyArIG5hbWVdID0gZnVuY3Rpb24ob2JqKSB7XG4gICAgICAgIHJldHVybiB0b1N0cmluZy5jYWxsKG9iaikgPT09ICdbb2JqZWN0ICcgKyBuYW1lICsgJ10nO1xuICAgIH07XG59KTtcblxudXRpbC50b0FycmF5ID0gZnVuY3Rpb24obGlzdCwgc3RhcnQpIHtcbiAgc3RhcnQgPSBzdGFydCB8fCAwXG4gIHZhciBpID0gbGlzdC5sZW5ndGggLSBzdGFydFxuICB2YXIgcmV0ID0gbmV3IEFycmF5KGkpXG4gIHdoaWxlIChpLS0pIHtcbiAgICByZXRbaV0gPSBsaXN0W2kgKyBzdGFydF1cbiAgfVxuICByZXR1cm4gcmV0XG59XG5cbnV0aWwudG9OdW1iZXIgPSBmdW5jdGlvbih2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiB2YWx1ZVxuICB9IGVsc2Uge1xuICAgIHZhciBwYXJzZWQgPSBOdW1iZXIodmFsdWUpXG4gICAgcmV0dXJuIGlzTmFOKHBhcnNlZClcbiAgICAgID8gdmFsdWVcbiAgICAgIDogcGFyc2VkXG4gIH1cbn07XG5cbnV0aWwuY29udmVydEFycmF5ID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgaWYgKHV0aWwuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgIHJldHVybiB2YWx1ZVxuICAgIH0gZWxzZSBpZiAodXRpbC5pc1BsYWluT2JqZWN0KHZhbHVlKSkge1xuICAgICAgLy8gY29udmVydCBwbGFpbiBvYmplY3QgdG8gYXJyYXkuXG4gICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHZhbHVlKVxuICAgICAgdmFyIGkgPSBrZXlzLmxlbmd0aFxuICAgICAgdmFyIHJlcyA9IG5ldyBBcnJheShpKVxuICAgICAgdmFyIGtleVxuICAgICAgd2hpbGUgKGktLSkge1xuICAgICAgICBrZXkgPSBrZXlzW2ldXG4gICAgICAgIHJlc1tpXSA9IHtcbiAgICAgICAgICAka2V5OiBrZXksXG4gICAgICAgICAgJHZhbHVlOiB2YWx1ZVtrZXldXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiByZXNcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHZhbHVlIHx8IFtdXG4gICAgfVxufVxuXG5mdW5jdGlvbiBtdWx0aUluZGV4KG9iaixpcykgeyAgLy8gb2JqLFsnMScsJzInLCczJ10gLT4gKChvYmpbJzEnXSlbJzInXSlbJzMnXVxuICAgIHJldHVybiBpcy5sZW5ndGggPyBtdWx0aUluZGV4KG9ialtpc1swXV0saXMuc2xpY2UoMSkpIDogb2JqXG59XG5cbnV0aWwuZ2V0UGF0aCA9IGZ1bmN0aW9uKG9iaixpcykgeyAgIC8vIG9iaiwnMS4yLjMnIC0+IG11bHRpSW5kZXgob2JqLFsnMScsJzInLCczJ10pXG4gICAgcmV0dXJuIG11bHRpSW5kZXgob2JqLGlzLnNwbGl0KCcuJykpXG59XG5cbi8qKlxuICogU3RyaWN0IG9iamVjdCB0eXBlIGNoZWNrLiBPbmx5IHJldHVybnMgdHJ1ZVxuICogZm9yIHBsYWluIEphdmFTY3JpcHQgb2JqZWN0cy5cbiAqXG4gKiBAcGFyYW0geyp9IG9ialxuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqL1xuXG52YXIgdG9TdHJpbmcgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nXG52YXIgT0JKRUNUX1NUUklORyA9ICdbb2JqZWN0IE9iamVjdF0nXG51dGlsLmlzUGxhaW5PYmplY3QgPSBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKG9iaikgPT09IE9CSkVDVF9TVFJJTkdcbn1cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBleHBvcnRzW1wiYVwiXSA9IHV0aWw7XG5cbi8qKiovIH0sXG4vKiAxICovXG4vKioqLyBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19saW1pdEJ5X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDUpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fZmlsdGVyQnlfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19vcmRlckJ5X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDYpO1xuXG5cblxuXG4vKiBoYXJtb255IHJlZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZXhwb3J0cywgXCJhXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19saW1pdEJ5X19bXCJhXCJdOyB9KTtcbi8qIGhhcm1vbnkgcmVleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChleHBvcnRzLCBcImJcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX2ZpbHRlckJ5X19bXCJhXCJdOyB9KTtcbi8qIGhhcm1vbnkgcmVleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChleHBvcnRzLCBcImNcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX29yZGVyQnlfX1tcImFcIl07IH0pO1xuXG5cbi8qKiovIH0sXG4vKiAyICovXG4vKioqLyBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19jdXJyZW5jeV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg3KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX3BsdXJhbGl6ZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg4KTtcblxuXG5cbi8qIGhhcm1vbnkgcmVleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChleHBvcnRzLCBcImN1cnJlbmN5XCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19jdXJyZW5jeV9fW1wiYVwiXTsgfSk7XG4vKiBoYXJtb255IHJlZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZXhwb3J0cywgXCJwbHVyYWxpemVcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX3BsdXJhbGl6ZV9fW1wiYVwiXTsgfSk7XG5cblxuLyoqKi8gfSxcbi8qIDMgKi9cbi8qKiovIGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX2NhcGl0YWxpemVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oOSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX191cHBlcmNhc2VfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTMpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fbG93ZXJjYXNlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEwKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX3BsYWNlaG9sZGVyX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDExKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX3RydW5jYXRlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEyKTtcblxuXG5cblxuXG5cbi8qIGhhcm1vbnkgcmVleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChleHBvcnRzLCBcInRydW5jYXRlXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X190cnVuY2F0ZV9fW1wiYVwiXTsgfSk7XG4vKiBoYXJtb255IHJlZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZXhwb3J0cywgXCJjYXBpdGFsaXplXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19jYXBpdGFsaXplX19bXCJhXCJdOyB9KTtcbi8qIGhhcm1vbnkgcmVleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChleHBvcnRzLCBcInVwcGVyY2FzZVwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fdXBwZXJjYXNlX19bXCJhXCJdOyB9KTtcbi8qIGhhcm1vbnkgcmVleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChleHBvcnRzLCBcImxvd2VyY2FzZVwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fbG93ZXJjYXNlX19bXCJhXCJdOyB9KTtcbi8qIGhhcm1vbnkgcmVleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChleHBvcnRzLCBcInBsYWNlaG9sZGVyXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19wbGFjZWhvbGRlcl9fW1wiYVwiXTsgfSk7XG5cblxuLyoqKi8gfSxcbi8qIDQgKi9cbi8qKiovIGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaW5kZXhfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cblxuLyoqXG4gKiBGaWx0ZXIgZmlsdGVyIGZvciBhcnJheXNcbiAqXG4gKiBAcGFyYW0ge0FycmF5fSBhcnJcbiAqIEBwYXJhbSB7U3RyaW5nfSBwcm9wXG4gKiBAcGFyYW0ge1N0cmluZ3xOdW1iZXJ9IHNlYXJjaFxuICovXG5cbmZ1bmN0aW9uIGZpbHRlckJ5IChhcnIsIHNlYXJjaCkge1xuICB2YXIgYXJyID0gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2luZGV4X19bXCJhXCIgLyogZGVmYXVsdCAqL10uY29udmVydEFycmF5KGFycilcbiAgaWYgKHNlYXJjaCA9PSBudWxsKSB7XG4gICAgcmV0dXJuIGFyclxuICB9XG4gIGlmICh0eXBlb2Ygc2VhcmNoID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIGFyci5maWx0ZXIoc2VhcmNoKVxuICB9XG4gIC8vIGNhc3QgdG8gbG93ZXJjYXNlIHN0cmluZ1xuICBzZWFyY2ggPSAoJycgKyBzZWFyY2gpLnRvTG93ZXJDYXNlKClcbiAgdmFyIG4gPSAyXG4gIC8vIGV4dHJhY3QgYW5kIGZsYXR0ZW4ga2V5c1xuICB2YXIga2V5cyA9IEFycmF5LnByb3RvdHlwZS5jb25jYXQuYXBwbHkoW10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9pbmRleF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLnRvQXJyYXkoYXJndW1lbnRzLCBuKSlcbiAgdmFyIHJlcyA9IFtdXG4gIHZhciBpdGVtLCBrZXksIHZhbCwgalxuICBmb3IgKHZhciBpID0gMCwgbCA9IGFyci5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICBpdGVtID0gYXJyW2ldXG4gICAgdmFsID0gKGl0ZW0gJiYgaXRlbS4kdmFsdWUpIHx8IGl0ZW1cbiAgICBqID0ga2V5cy5sZW5ndGhcbiAgICBpZiAoaikge1xuICAgICAgd2hpbGUgKGotLSkge1xuICAgICAgICBrZXkgPSBrZXlzW2pdXG4gICAgICAgIGlmICgoa2V5ID09PSAnJGtleScgJiYgY29udGFpbnMoaXRlbS4ka2V5LCBzZWFyY2gpKSB8fFxuICAgICAgICAgICAgY29udGFpbnMoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2luZGV4X19bXCJhXCIgLyogZGVmYXVsdCAqL10uZ2V0UGF0aCh2YWwsIGtleSksIHNlYXJjaCkpIHtcbiAgICAgICAgICByZXMucHVzaChpdGVtKVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGNvbnRhaW5zKGl0ZW0sIHNlYXJjaCkpIHtcbiAgICAgIHJlcy5wdXNoKGl0ZW0pXG4gICAgfVxuICB9XG4gIHJldHVybiByZXNcbn1cblxuZnVuY3Rpb24gY29udGFpbnMgKHZhbCwgc2VhcmNoKSB7XG4gIHZhciBpXG4gIGlmIChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaW5kZXhfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5pc1BsYWluT2JqZWN0KHZhbCkpIHtcbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHZhbClcbiAgICBpID0ga2V5cy5sZW5ndGhcbiAgICB3aGlsZSAoaS0tKSB7XG4gICAgICBpZiAoY29udGFpbnModmFsW2tleXNbaV1dLCBzZWFyY2gpKSB7XG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgICB9XG4gICAgfVxuICB9IGVsc2UgaWYgKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9pbmRleF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLmlzQXJyYXkodmFsKSkge1xuICAgIGkgPSB2YWwubGVuZ3RoXG4gICAgd2hpbGUgKGktLSkge1xuICAgICAgaWYgKGNvbnRhaW5zKHZhbFtpXSwgc2VhcmNoKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIGlmICh2YWwgIT0gbnVsbCkge1xuICAgIHJldHVybiB2YWwudG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpLmluZGV4T2Yoc2VhcmNoKSA+IC0xXG4gIH1cbn1cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBleHBvcnRzW1wiYVwiXSA9IGZpbHRlckJ5O1xuXG4vKioqLyB9LFxuLyogNSAqL1xuLyoqKi8gZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9pbmRleF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcblxuXG4vKipcbiAqIExpbWl0IGZpbHRlciBmb3IgYXJyYXlzXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IG5cbiAqIEBwYXJhbSB7TnVtYmVyfSBvZmZzZXQgKERlY2ltYWwgZXhwZWN0ZWQpXG4gKi9cblxuZnVuY3Rpb24gbGltaXRCeSAoYXJyLCBuLCBvZmZzZXQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0ID8gcGFyc2VJbnQob2Zmc2V0LCAxMCkgOiAwXG4gIG4gPSBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaW5kZXhfX1tcImFcIiAvKiBkZWZhdWx0ICovXS50b051bWJlcihuKVxuICByZXR1cm4gdHlwZW9mIG4gPT09ICdudW1iZXInXG4gICAgPyBhcnIuc2xpY2Uob2Zmc2V0LCBvZmZzZXQgKyBuKVxuICAgIDogYXJyXG59XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gZXhwb3J0c1tcImFcIl0gPSBsaW1pdEJ5O1xuXG4vKioqLyB9LFxuLyogNiAqL1xuLyoqKi8gZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9pbmRleF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcblxuXG4vKipcbiAqIEZpbHRlciBmaWx0ZXIgZm9yIGFycmF5c1xuICpcbiAqIEBwYXJhbSB7U3RyaW5nfEFycmF5PFN0cmluZz58RnVuY3Rpb259IC4uLnNvcnRLZXlzXG4gKiBAcGFyYW0ge051bWJlcn0gW29yZGVyXVxuICovXG5cbmZ1bmN0aW9uIG9yZGVyQnkgKGFycikge1xuICB2YXIgY29tcGFyYXRvciA9IG51bGxcbiAgdmFyIHNvcnRLZXlzXG4gIGFyciA9IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9pbmRleF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLmNvbnZlcnRBcnJheShhcnIpXG5cbiAgLy8gZGV0ZXJtaW5lIG9yZGVyIChsYXN0IGFyZ3VtZW50KVxuICB2YXIgYXJncyA9IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9pbmRleF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLnRvQXJyYXkoYXJndW1lbnRzLCAxKVxuICB2YXIgb3JkZXIgPSBhcmdzW2FyZ3MubGVuZ3RoIC0gMV1cbiAgaWYgKHR5cGVvZiBvcmRlciA9PT0gJ251bWJlcicpIHtcbiAgICBvcmRlciA9IG9yZGVyIDwgMCA/IC0xIDogMVxuICAgIGFyZ3MgPSBhcmdzLmxlbmd0aCA+IDEgPyBhcmdzLnNsaWNlKDAsIC0xKSA6IGFyZ3NcbiAgfSBlbHNlIHtcbiAgICBvcmRlciA9IDFcbiAgfVxuXG4gIC8vIGRldGVybWluZSBzb3J0S2V5cyAmIGNvbXBhcmF0b3JcbiAgdmFyIGZpcnN0QXJnID0gYXJnc1swXVxuICBpZiAoIWZpcnN0QXJnKSB7XG4gICAgcmV0dXJuIGFyclxuICB9IGVsc2UgaWYgKHR5cGVvZiBmaXJzdEFyZyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIC8vIGN1c3RvbSBjb21wYXJhdG9yXG4gICAgY29tcGFyYXRvciA9IGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICByZXR1cm4gZmlyc3RBcmcoYSwgYikgKiBvcmRlclxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBzdHJpbmcga2V5cy4gZmxhdHRlbiBmaXJzdFxuICAgIHNvcnRLZXlzID0gQXJyYXkucHJvdG90eXBlLmNvbmNhdC5hcHBseShbXSwgYXJncylcbiAgICBjb21wYXJhdG9yID0gZnVuY3Rpb24gKGEsIGIsIGkpIHtcbiAgICAgIGkgPSBpIHx8IDBcbiAgICAgIHJldHVybiBpID49IHNvcnRLZXlzLmxlbmd0aCAtIDFcbiAgICAgICAgPyBiYXNlQ29tcGFyZShhLCBiLCBpKVxuICAgICAgICA6IGJhc2VDb21wYXJlKGEsIGIsIGkpIHx8IGNvbXBhcmF0b3IoYSwgYiwgaSArIDEpXG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gYmFzZUNvbXBhcmUgKGEsIGIsIHNvcnRLZXlJbmRleCkge1xuICAgIHZhciBzb3J0S2V5ID0gc29ydEtleXNbc29ydEtleUluZGV4XVxuICAgIGlmIChzb3J0S2V5KSB7XG4gICAgICBpZiAoc29ydEtleSAhPT0gJyRrZXknKSB7XG4gICAgICAgIGlmIChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaW5kZXhfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5pc09iamVjdChhKSAmJiAnJHZhbHVlJyBpbiBhKSBhID0gYS4kdmFsdWVcbiAgICAgICAgaWYgKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9pbmRleF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLmlzT2JqZWN0KGIpICYmICckdmFsdWUnIGluIGIpIGIgPSBiLiR2YWx1ZVxuICAgICAgfVxuICAgICAgYSA9IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9pbmRleF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLmlzT2JqZWN0KGEpID8gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2luZGV4X19bXCJhXCIgLyogZGVmYXVsdCAqL10uZ2V0UGF0aChhLCBzb3J0S2V5KSA6IGFcbiAgICAgIGIgPSBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaW5kZXhfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5pc09iamVjdChiKSA/IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9pbmRleF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLmdldFBhdGgoYiwgc29ydEtleSkgOiBiXG4gICAgfVxuICAgIHJldHVybiBhID09PSBiID8gMCA6IGEgPiBiID8gb3JkZXIgOiAtb3JkZXJcbiAgfVxuXG4gIC8vIHNvcnQgb24gYSBjb3B5IHRvIGF2b2lkIG11dGF0aW5nIG9yaWdpbmFsIGFycmF5XG4gIHJldHVybiBhcnIuc2xpY2UoKS5zb3J0KGNvbXBhcmF0b3IpXG59XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gZXhwb3J0c1tcImFcIl0gPSBvcmRlckJ5O1xuXG4vKioqLyB9LFxuLyogNyAqL1xuLyoqKi8gZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBcbiAqIDEyMzQ1ID0+ICQxMiwzNDUuMDBcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc2lnblxuICogQHBhcmFtIHtOdW1iZXJ9IGRlY2ltYWxzIERlY2ltYWwgcGxhY2VzXG4gKi9cblxuZnVuY3Rpb24gY3VycmVuY3kgKHZhbHVlLCBjdXJyZW5jeSwgZGVjaW1hbHMpIHtcbiAgdmFyIGRpZ2l0c1JFID0gLyhcXGR7M30pKD89XFxkKS9nXG4gIHZhbHVlID0gcGFyc2VGbG9hdCh2YWx1ZSlcbiAgaWYgKCFpc0Zpbml0ZSh2YWx1ZSkgfHwgKCF2YWx1ZSAmJiB2YWx1ZSAhPT0gMCkpIHJldHVybiAnJ1xuICBjdXJyZW5jeSA9IGN1cnJlbmN5ICE9IG51bGwgPyBjdXJyZW5jeSA6ICckJ1xuICBkZWNpbWFscyA9IGRlY2ltYWxzICE9IG51bGwgPyBkZWNpbWFscyA6IDJcbiAgdmFyIHN0cmluZ2lmaWVkID0gTWF0aC5hYnModmFsdWUpLnRvRml4ZWQoZGVjaW1hbHMpXG4gIHZhciBfaW50ID0gZGVjaW1hbHNcbiAgICA/IHN0cmluZ2lmaWVkLnNsaWNlKDAsIC0xIC0gZGVjaW1hbHMpXG4gICAgOiBzdHJpbmdpZmllZFxuICB2YXIgaSA9IF9pbnQubGVuZ3RoICUgM1xuICB2YXIgaGVhZCA9IGkgPiAwXG4gICAgPyAoX2ludC5zbGljZSgwLCBpKSArIChfaW50Lmxlbmd0aCA+IDMgPyAnLCcgOiAnJykpXG4gICAgOiAnJ1xuICB2YXIgX2Zsb2F0ID0gZGVjaW1hbHNcbiAgICA/IHN0cmluZ2lmaWVkLnNsaWNlKC0xIC0gZGVjaW1hbHMpXG4gICAgOiAnJ1xuICB2YXIgc2lnbiA9IHZhbHVlIDwgMCA/ICctJyA6ICcnXG4gIHJldHVybiBzaWduICsgY3VycmVuY3kgKyBoZWFkICtcbiAgICBfaW50LnNsaWNlKGkpLnJlcGxhY2UoZGlnaXRzUkUsICckMSwnKSArXG4gICAgX2Zsb2F0XG59XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gZXhwb3J0c1tcImFcIl0gPSBjdXJyZW5jeTtcblxuLyoqKi8gfSxcbi8qIDggKi9cbi8qKiovIGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaW5kZXhfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cblxuLyoqXG4gKiAnaXRlbScgPT4gJ2l0ZW1zJ1xuICpcbiAqIEBwYXJhbXNcbiAqICBhbiBhcnJheSBvZiBzdHJpbmdzIGNvcnJlc3BvbmRpbmcgdG9cbiAqICB0aGUgc2luZ2xlLCBkb3VibGUsIHRyaXBsZSAuLi4gZm9ybXMgb2YgdGhlIHdvcmQgdG9cbiAqICBiZSBwbHVyYWxpemVkLiBXaGVuIHRoZSBudW1iZXIgdG8gYmUgcGx1cmFsaXplZFxuICogIGV4Y2VlZHMgdGhlIGxlbmd0aCBvZiB0aGUgYXJncywgaXQgd2lsbCB1c2UgdGhlIGxhc3RcbiAqICBlbnRyeSBpbiB0aGUgYXJyYXkuXG4gKlxuICogIGUuZy4gWydzaW5nbGUnLCAnZG91YmxlJywgJ3RyaXBsZScsICdtdWx0aXBsZSddXG4gKi9cblxuZnVuY3Rpb24gcGx1cmFsaXplICh2YWx1ZSkge1xuICB2YXIgYXJncyA9IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9pbmRleF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLnRvQXJyYXkoYXJndW1lbnRzLCAxKVxuICByZXR1cm4gYXJncy5sZW5ndGggPiAxXG4gICAgPyAoYXJnc1t2YWx1ZSAlIDEwIC0gMV0gfHwgYXJnc1thcmdzLmxlbmd0aCAtIDFdKVxuICAgIDogKGFyZ3NbMF0gKyAodmFsdWUgPT09IDEgPyAnJyA6ICdzJykpXG59XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gZXhwb3J0c1tcImFcIl0gPSBwbHVyYWxpemU7XG5cbi8qKiovIH0sXG4vKiA5ICovXG4vKioqLyBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqICBDb252ZXJ0cyBhIHN0cmluZyBpbnRvIENhcGl0YWxpemVcbiAqIFxuICogJ2FiYycgPT4gJ0FiYydcbiAqL1xuXG5mdW5jdGlvbiBjYXBpdGFsaXplICh2YWx1ZSkge1xuICBpZiAoIXZhbHVlICYmIHZhbHVlICE9PSAwKSByZXR1cm4gJydcbiAgdmFsdWUgPSB2YWx1ZS50b1N0cmluZygpXG4gIHJldHVybiB2YWx1ZS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHZhbHVlLnNsaWNlKDEpXG59XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gZXhwb3J0c1tcImFcIl0gPSBjYXBpdGFsaXplO1xuXG5cbi8qKiovIH0sXG4vKiAxMCAqL1xuLyoqKi8gZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb252ZXJ0cyBhIHN0cmluZyB0byBsb3dlcmNhc2VcbiAqIFxuICogJ0FiQycgPT4gJ2FiYydcbiAqL1xuXG5mdW5jdGlvbiBsb3dlcmNhc2UgKHZhbHVlKSB7XG4gIHJldHVybiAodmFsdWUgfHwgdmFsdWUgPT09IDApXG4gICAgPyB2YWx1ZS50b1N0cmluZygpLnRvTG93ZXJDYXNlKClcbiAgICA6ICcnXG59XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gZXhwb3J0c1tcImFcIl0gPSBsb3dlcmNhc2U7XG5cbi8qKiovIH0sXG4vKiAxMSAqL1xuLyoqKi8gZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiAgSWYgdGhlIHZhbHVlIGlzIG1pc3Npbmcgb3V0cHV0cyB0aGUgcGxhY2Vob2xkZXIgdGV4dFxuICogXG4gKiAnJyA9PiB7cGxhY2Vob2xkZXJ9XG4gKiAnZm9vJyA9PiAnZm9vJ1xuICovXG5cbmZ1bmN0aW9uIHBsYWNlaG9sZGVyIChpbnB1dCwgcHJvcGVydHkpIHtcbiAgcmV0dXJuICggaW5wdXQgPT09IHVuZGVmaW5lZCB8fCBpbnB1dCA9PT0gJycgfHwgaW5wdXQgPT09IG51bGwgKSA/IHByb3BlcnR5IDogaW5wdXQ7XG59XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gZXhwb3J0c1tcImFcIl0gPSBwbGFjZWhvbGRlcjtcblxuXG4vKioqLyB9LFxuLyogMTIgKi9cbi8qKiovIGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qKlxuICogIFRydW5jYXRlIGF0IHRoZSBnaXZlbiB8fCBkZWZhdWx0IGxlbmd0aFxuICpcbiAqICdsb3JlbSBpcHN1bSBkb2xvcicgPT4gJ2xvcmVtIGlwc3VtIGRvbC4uLidcbiAqL1xuXG5mdW5jdGlvbiB0cnVuY2F0ZSAodmFsdWUsIGxlbmd0aCkge1xuICBsZW5ndGggPSBsZW5ndGggfHwgMTVcbiAgaWYoICF2YWx1ZSB8fCB0eXBlb2YgdmFsdWUgIT09ICdzdHJpbmcnICkgcmV0dXJuICcnXG4gIGlmKCB2YWx1ZS5sZW5ndGggPD0gbGVuZ3RoKSByZXR1cm4gdmFsdWVcbiAgcmV0dXJuIHZhbHVlLnN1YnN0cmluZygwLCBsZW5ndGgpICsgJy4uLidcbn1cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBleHBvcnRzW1wiYVwiXSA9IHRydW5jYXRlO1xuXG5cbi8qKiovIH0sXG4vKiAxMyAqL1xuLyoqKi8gZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb252ZXJ0cyBhIHN0cmluZyB0byBVUFBFUkNBU0VcbiAqIFxuICogJ2FiYycgPT4gJ0FCQydcbiAqL1xuXG5mdW5jdGlvbiB1cHBlcmNhc2UgKHZhbHVlKSB7XG4gIHJldHVybiAodmFsdWUgfHwgdmFsdWUgPT09IDApXG4gICAgPyB2YWx1ZS50b1N0cmluZygpLnRvVXBwZXJDYXNlKClcbiAgICA6ICcnXG59XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gZXhwb3J0c1tcImFcIl0gPSB1cHBlcmNhc2U7XG5cbi8qKiovIH0sXG4vKiAxNCAqL1xuLyoqKi8gZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9pbmRleF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX3N0cmluZ19pbmRleF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygzKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX2FycmF5X2luZGV4X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fb3RoZXJfaW5kZXhfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMik7XG5cblxuXG5cblxuZnVuY3Rpb24gaW5zdGFsbChWdWUpIHtcbiAgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2luZGV4X19bXCJhXCIgLyogZGVmYXVsdCAqL10uZWFjaChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX3N0cmluZ19pbmRleF9fLCBmdW5jdGlvbih2YWx1ZSwga2V5KSB7XG4gICAgICBWdWUuZmlsdGVyKGtleSwgdmFsdWUpXG4gIH0pXG5cbiAgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2luZGV4X19bXCJhXCIgLyogZGVmYXVsdCAqL10uZWFjaChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX290aGVyX2luZGV4X18sIGZ1bmN0aW9uKHZhbHVlLCBrZXkpIHtcbiAgICAgIFZ1ZS5maWx0ZXIoa2V5LCB2YWx1ZSlcbiAgfSlcblxuICBWdWUubWl4aW4oe1xuICAgIG1ldGhvZHM6IHtcbiAgICAgIGxpbWl0Qnk6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fYXJyYXlfaW5kZXhfX1tcImFcIiAvKiBsaW1pdEJ5ICovXSxcbiAgICAgIGZpbHRlckJ5OiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX2FycmF5X2luZGV4X19bXCJiXCIgLyogZmlsdGVyQnkgKi9dLFxuICAgICAgb3JkZXJCeTogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19hcnJheV9pbmRleF9fW1wiY1wiIC8qIG9yZGVyQnkgKi9dXG4gICAgfVxuICB9KVxufVxuXG5pZiAod2luZG93LlZ1ZSkge1xuICBWdWUudXNlKGluc3RhbGwpXG59IGVsc2UgaWYgKHRydWUpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBpbnN0YWxsXG59IGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kKSB7XG4gIGRlZmluZShbXSwgZnVuY3Rpb24oKXsgcmV0dXJuIGluc3RhbGwgfSlcbn0gXG5cbi8qKiovIH1cbi8qKioqKiovIF0pO1xufSk7IiwiIWZ1bmN0aW9uKHQsbyl7XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBtb2R1bGU/bW9kdWxlLmV4cG9ydHM9bygpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUobyk6dC5WdWVQcm9ncmVzc0Jhcj1vKCl9KHRoaXMsZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjshZnVuY3Rpb24oKXtpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgZG9jdW1lbnQpe3ZhciB0PWRvY3VtZW50LmhlYWR8fGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaGVhZFwiKVswXSxvPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKSxpPVwiIC5fX2Nvdi1wcm9ncmVzcyB7IG9wYWNpdHk6IDE7IHotaW5kZXg6IDk5OTk5OTsgfSBcIjtvLnR5cGU9XCJ0ZXh0L2Nzc1wiLG8uc3R5bGVTaGVldD9vLnN0eWxlU2hlZXQuY3NzVGV4dD1pOm8uYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoaSkpLHQuYXBwZW5kQ2hpbGQobyl9fSgpO3ZhciB0PVwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cscj17cmVuZGVyOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxvPXQuJGNyZWF0ZUVsZW1lbnQ7cmV0dXJuKHQuX3NlbGYuX2N8fG8pKFwiZGl2XCIse3N0YXRpY0NsYXNzOlwiX19jb3YtcHJvZ3Jlc3NcIixzdHlsZTp0LnN0eWxlfSl9LHN0YXRpY1JlbmRlckZuczpbXSxuYW1lOlwiVnVlUHJvZ3Jlc3NcIixzZXJ2ZXJDYWNoZUtleTpmdW5jdGlvbigpe3JldHVyblwiUHJvZ3Jlc3NcIn0sY29tcHV0ZWQ6e3N0eWxlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5wcm9ncmVzcyxvPXQub3B0aW9ucyxpPSEhby5zaG93LGU9by5sb2NhdGlvbixzPXtcImJhY2tncm91bmQtY29sb3JcIjpvLmNhblN1Y2Nlc3M/by5jb2xvcjpvLmZhaWxlZENvbG9yLG9wYWNpdHk6by5zaG93PzE6MCxwb3NpdGlvbjpvLnBvc2l0aW9ufTtyZXR1cm5cInRvcFwiPT09ZXx8XCJib3R0b21cIj09PWU/KFwidG9wXCI9PT1lP3MudG9wPVwiMHB4XCI6cy5ib3R0b209XCIwcHhcIixvLmludmVyc2U/cy5yaWdodD1cIjBweFwiOnMubGVmdD1cIjBweFwiLHMud2lkdGg9dC5wZXJjZW50K1wiJVwiLHMuaGVpZ2h0PW8udGhpY2tuZXNzLHMudHJhbnNpdGlvbj0oaT9cIndpZHRoIFwiK28udHJhbnNpdGlvbi5zcGVlZCtcIiwgXCI6XCJcIikrXCJvcGFjaXR5IFwiK28udHJhbnNpdGlvbi5vcGFjaXR5KTpcImxlZnRcIiE9PWUmJlwicmlnaHRcIiE9PWV8fChcImxlZnRcIj09PWU/cy5sZWZ0PVwiMHB4XCI6cy5yaWdodD1cIjBweFwiLG8uaW52ZXJzZT9zLnRvcD1cIjBweFwiOnMuYm90dG9tPVwiMHB4XCIscy5oZWlnaHQ9dC5wZXJjZW50K1wiJVwiLHMud2lkdGg9by50aGlja25lc3Mscy50cmFuc2l0aW9uPShpP1wiaGVpZ2h0IFwiK28udHJhbnNpdGlvbi5zcGVlZCtcIiwgXCI6XCJcIikrXCJvcGFjaXR5IFwiK28udHJhbnNpdGlvbi5vcGFjaXR5KSxzfSxwcm9ncmVzczpmdW5jdGlvbigpe3JldHVybiB0P3dpbmRvdy5WdWVQcm9ncmVzc0JhckV2ZW50QnVzLlJBRE9OX0xPQURJTkdfQkFSOntwZXJjZW50OjAsb3B0aW9uczp7Y2FuU3VjY2VzczohMCxzaG93OiExLGNvbG9yOlwicmdiKDE5LCA5MSwgNTUpXCIsZmFpbGVkQ29sb3I6XCJyZWRcIix0aGlja25lc3M6XCIycHhcIix0cmFuc2l0aW9uOntzcGVlZDpcIjAuMnNcIixvcGFjaXR5OlwiMC42c1wiLHRlcm1pbmF0aW9uOjMwMH0sbG9jYXRpb246XCJ0b3BcIixhdXRvUmV2ZXJ0OiEwLGludmVyc2U6ITF9fX19fTtyZXR1cm57aW5zdGFsbDpmdW5jdGlvbihvKXt2YXIgdD0xPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e30saT0oby52ZXJzaW9uLnNwbGl0KFwiLlwiKVswXSxcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93KSxlPXskdm06bnVsbCxzdGF0ZTp7dEZhaWxDb2xvcjpcIlwiLHRDb2xvcjpcIlwiLHRpbWVyOm51bGwsY3V0OjB9LGluaXQ6ZnVuY3Rpb24odCl7dGhpcy4kdm09dH0sc3RhcnQ6ZnVuY3Rpb24odCl7dmFyIG89dGhpczt0aGlzLiR2bSYmKHR8fCh0PTNlMyksdGhpcy4kdm0uUkFET05fTE9BRElOR19CQVIucGVyY2VudD0wLHRoaXMuJHZtLlJBRE9OX0xPQURJTkdfQkFSLm9wdGlvbnMuc2hvdz0hMCx0aGlzLiR2bS5SQURPTl9MT0FESU5HX0JBUi5vcHRpb25zLmNhblN1Y2Nlc3M9ITAsdGhpcy5zdGF0ZS5jdXQ9MWU0L01hdGguZmxvb3IodCksY2xlYXJJbnRlcnZhbCh0aGlzLnN0YXRlLnRpbWVyKSx0aGlzLnN0YXRlLnRpbWVyPXNldEludGVydmFsKGZ1bmN0aW9uKCl7by5pbmNyZWFzZShvLnN0YXRlLmN1dCpNYXRoLnJhbmRvbSgpKSw5NTxvLiR2bS5SQURPTl9MT0FESU5HX0JBUi5wZXJjZW50JiZvLiR2bS5SQURPTl9MT0FESU5HX0JBUi5vcHRpb25zLmF1dG9GaW5pc2gmJm8uZmluaXNoKCl9LDEwMCkpfSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy4kdm0uUkFET05fTE9BRElOR19CQVIub3B0aW9ucy5zaG93PSEwLHRoaXMuJHZtLlJBRE9OX0xPQURJTkdfQkFSLm9wdGlvbnMuY2FuU3VjY2Vzcz0hMCx0aGlzLiR2bS5SQURPTl9MT0FESU5HX0JBUi5wZXJjZW50PU1hdGguZmxvb3IodCl9LGdldDpmdW5jdGlvbigpe3JldHVybiBNYXRoLmZsb29yKHRoaXMuJHZtLlJBRE9OX0xPQURJTkdfQkFSLnBlcmNlbnQpfSxpbmNyZWFzZTpmdW5jdGlvbih0KXt0aGlzLiR2bS5SQURPTl9MT0FESU5HX0JBUi5wZXJjZW50PU1hdGgubWluKDk5LHRoaXMuJHZtLlJBRE9OX0xPQURJTkdfQkFSLnBlcmNlbnQrTWF0aC5mbG9vcih0KSl9LGRlY3JlYXNlOmZ1bmN0aW9uKHQpe3RoaXMuJHZtLlJBRE9OX0xPQURJTkdfQkFSLnBlcmNlbnQ9dGhpcy4kdm0uUkFET05fTE9BRElOR19CQVIucGVyY2VudC1NYXRoLmZsb29yKHQpfSxoaWRlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztjbGVhckludGVydmFsKHRoaXMuc3RhdGUudGltZXIpLHRoaXMuc3RhdGUudGltZXI9bnVsbCxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dC4kdm0uUkFET05fTE9BRElOR19CQVIub3B0aW9ucy5zaG93PSExLG8ubmV4dFRpY2soZnVuY3Rpb24oKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dC4kdm0uUkFET05fTE9BRElOR19CQVIucGVyY2VudD0wfSwxMDApLHQuJHZtLlJBRE9OX0xPQURJTkdfQkFSLm9wdGlvbnMuYXV0b1JldmVydCYmc2V0VGltZW91dChmdW5jdGlvbigpe3QucmV2ZXJ0KCl9LDMwMCl9KX0sdGhpcy4kdm0uUkFET05fTE9BRElOR19CQVIub3B0aW9ucy50cmFuc2l0aW9uLnRlcm1pbmF0aW9uKX0scGF1c2U6ZnVuY3Rpb24oKXtjbGVhckludGVydmFsKHRoaXMuc3RhdGUudGltZXIpfSxmaW5pc2g6ZnVuY3Rpb24oKXt0aGlzLiR2bSYmKHRoaXMuJHZtLlJBRE9OX0xPQURJTkdfQkFSLnBlcmNlbnQ9MTAwLHRoaXMuaGlkZSgpKX0sZmFpbDpmdW5jdGlvbigpe3RoaXMuJHZtLlJBRE9OX0xPQURJTkdfQkFSLm9wdGlvbnMuY2FuU3VjY2Vzcz0hMSx0aGlzLiR2bS5SQURPTl9MT0FESU5HX0JBUi5wZXJjZW50PTEwMCx0aGlzLmhpZGUoKX0sc2V0RmFpbENvbG9yOmZ1bmN0aW9uKHQpe3RoaXMuJHZtLlJBRE9OX0xPQURJTkdfQkFSLm9wdGlvbnMuZmFpbGVkQ29sb3I9dH0sc2V0Q29sb3I6ZnVuY3Rpb24odCl7dGhpcy4kdm0uUkFET05fTE9BRElOR19CQVIub3B0aW9ucy5jb2xvcj10fSxzZXRMb2NhdGlvbjpmdW5jdGlvbih0KXt0aGlzLiR2bS5SQURPTl9MT0FESU5HX0JBUi5vcHRpb25zLmxvY2F0aW9uPXR9LHNldFRyYW5zaXRpb246ZnVuY3Rpb24odCl7dGhpcy4kdm0uUkFET05fTE9BRElOR19CQVIub3B0aW9ucy50cmFuc2l0aW9uPXR9LHRlbXBGYWlsQ29sb3I6ZnVuY3Rpb24odCl7dGhpcy5zdGF0ZS50RmFpbENvbG9yPXRoaXMuJHZtLlJBRE9OX0xPQURJTkdfQkFSLm9wdGlvbnMuZmFpbGVkQ29sb3IsdGhpcy4kdm0uUkFET05fTE9BRElOR19CQVIub3B0aW9ucy5mYWlsZWRDb2xvcj10fSx0ZW1wQ29sb3I6ZnVuY3Rpb24odCl7dGhpcy5zdGF0ZS50Q29sb3I9dGhpcy4kdm0uUkFET05fTE9BRElOR19CQVIub3B0aW9ucy5jb2xvcix0aGlzLiR2bS5SQURPTl9MT0FESU5HX0JBUi5vcHRpb25zLmNvbG9yPXR9LHRlbXBMb2NhdGlvbjpmdW5jdGlvbih0KXt0aGlzLnN0YXRlLnRMb2NhdGlvbj10aGlzLiR2bS5SQURPTl9MT0FESU5HX0JBUi5vcHRpb25zLmxvY2F0aW9uLHRoaXMuJHZtLlJBRE9OX0xPQURJTkdfQkFSLm9wdGlvbnMubG9jYXRpb249dH0sdGVtcFRyYW5zaXRpb246ZnVuY3Rpb24odCl7dGhpcy5zdGF0ZS50VHJhbnNpdGlvbj10aGlzLiR2bS5SQURPTl9MT0FESU5HX0JBUi5vcHRpb25zLnRyYW5zaXRpb24sdGhpcy4kdm0uUkFET05fTE9BRElOR19CQVIub3B0aW9ucy50cmFuc2l0aW9uPXR9LHJldmVydENvbG9yOmZ1bmN0aW9uKCl7dGhpcy4kdm0uUkFET05fTE9BRElOR19CQVIub3B0aW9ucy5jb2xvcj10aGlzLnN0YXRlLnRDb2xvcix0aGlzLnN0YXRlLnRDb2xvcj1cIlwifSxyZXZlcnRGYWlsQ29sb3I6ZnVuY3Rpb24oKXt0aGlzLiR2bS5SQURPTl9MT0FESU5HX0JBUi5vcHRpb25zLmZhaWxlZENvbG9yPXRoaXMuc3RhdGUudEZhaWxDb2xvcix0aGlzLnN0YXRlLnRGYWlsQ29sb3I9XCJcIn0scmV2ZXJ0TG9jYXRpb246ZnVuY3Rpb24oKXt0aGlzLiR2bS5SQURPTl9MT0FESU5HX0JBUi5vcHRpb25zLmxvY2F0aW9uPXRoaXMuc3RhdGUudExvY2F0aW9uLHRoaXMuc3RhdGUudExvY2F0aW9uPVwiXCJ9LHJldmVydFRyYW5zaXRpb246ZnVuY3Rpb24oKXt0aGlzLiR2bS5SQURPTl9MT0FESU5HX0JBUi5vcHRpb25zLnRyYW5zaXRpb249dGhpcy5zdGF0ZS50VHJhbnNpdGlvbix0aGlzLnN0YXRlLnRUcmFuc2l0aW9uPXt9fSxyZXZlcnQ6ZnVuY3Rpb24oKXt0aGlzLiR2bS5SQURPTl9MT0FESU5HX0JBUi5vcHRpb25zLmF1dG9SZXZlcnQmJih0aGlzLnN0YXRlLnRDb2xvciYmdGhpcy5yZXZlcnRDb2xvcigpLHRoaXMuc3RhdGUudEZhaWxDb2xvciYmdGhpcy5yZXZlcnRGYWlsQ29sb3IoKSx0aGlzLnN0YXRlLnRMb2NhdGlvbiYmdGhpcy5yZXZlcnRMb2NhdGlvbigpLCF0aGlzLnN0YXRlLnRUcmFuc2l0aW9ufHx2b2lkIDA9PT10aGlzLnN0YXRlLnRUcmFuc2l0aW9uLnNwZWVkJiZ2b2lkIDA9PT10aGlzLnN0YXRlLnRUcmFuc2l0aW9uLm9wYWNpdHl8fHRoaXMucmV2ZXJ0VHJhbnNpdGlvbigpKX0scGFyc2VNZXRhOmZ1bmN0aW9uKHQpe2Zvcih2YXIgbyBpbiB0LmZ1bmMpe3ZhciBpPXQuZnVuY1tvXTtzd2l0Y2goaS5jYWxsKXtjYXNlXCJjb2xvclwiOnN3aXRjaChpLm1vZGlmaWVyKXtjYXNlXCJzZXRcIjp0aGlzLnNldENvbG9yKGkuYXJndW1lbnQpO2JyZWFrO2Nhc2VcInRlbXBcIjp0aGlzLnRlbXBDb2xvcihpLmFyZ3VtZW50KX1icmVhaztjYXNlXCJmYWlsXCI6c3dpdGNoKGkubW9kaWZpZXIpe2Nhc2VcInNldFwiOnRoaXMuc2V0RmFpbENvbG9yKGkuYXJndW1lbnQpO2JyZWFrO2Nhc2VcInRlbXBcIjp0aGlzLnRlbXBGYWlsQ29sb3IoaS5hcmd1bWVudCl9YnJlYWs7Y2FzZVwibG9jYXRpb25cIjpzd2l0Y2goaS5tb2RpZmllcil7Y2FzZVwic2V0XCI6dGhpcy5zZXRMb2NhdGlvbihpLmFyZ3VtZW50KTticmVhaztjYXNlXCJ0ZW1wXCI6dGhpcy50ZW1wTG9jYXRpb24oaS5hcmd1bWVudCl9YnJlYWs7Y2FzZVwidHJhbnNpdGlvblwiOnN3aXRjaChpLm1vZGlmaWVyKXtjYXNlXCJzZXRcIjp0aGlzLnNldFRyYW5zaXRpb24oaS5hcmd1bWVudCk7YnJlYWs7Y2FzZVwidGVtcFwiOnRoaXMudGVtcFRyYW5zaXRpb24oaS5hcmd1bWVudCl9fX19fSxzPWZ1bmN0aW9uKHQsbyl7Zm9yKHZhciBpLGUscz0xO3M8YXJndW1lbnRzLmxlbmd0aDsrK3MpZm9yKGkgaW4gZT1hcmd1bWVudHNbc10pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsaSkmJih0W2ldPWVbaV0pO3JldHVybiB0fSh7Y2FuU3VjY2VzczohMCxzaG93OiExLGNvbG9yOlwiIzczY2NlY1wiLHBvc2l0aW9uOlwiZml4ZWRcIixmYWlsZWRDb2xvcjpcInJlZFwiLHRoaWNrbmVzczpcIjJweFwiLHRyYW5zaXRpb246e3NwZWVkOlwiMC4yc1wiLG9wYWNpdHk6XCIwLjZzXCIsdGVybWluYXRpb246MzAwfSxhdXRvUmV2ZXJ0OiEwLGxvY2F0aW9uOlwidG9wXCIsaW52ZXJzZTohMSxhdXRvRmluaXNoOiEwfSx0KSxuPW5ldyBvKHtkYXRhOntSQURPTl9MT0FESU5HX0JBUjp7cGVyY2VudDowLG9wdGlvbnM6c319fSk7aSYmKHdpbmRvdy5WdWVQcm9ncmVzc0JhckV2ZW50QnVzPW4sZS5pbml0KG4pKSxvLmNvbXBvbmVudChcInZ1ZS1wcm9ncmVzcy1iYXJcIixyKSxvLnByb3RvdHlwZS4kUHJvZ3Jlc3M9ZX19fSk7XG4iLCIoZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkge1xuICB0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgPyBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKSA6XG4gIHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCA/IGRlZmluZShmYWN0b3J5KSA6XG4gIChnbG9iYWwuaW5maW5pdGVTY3JvbGwgPSBmYWN0b3J5KCkpO1xufSh0aGlzLCBmdW5jdGlvbiAoKSB7ICd1c2Ugc3RyaWN0JztcblxuICB2YXIgY3R4ID0gJ0BASW5maW5pdGVTY3JvbGwnO1xuXG4gIHZhciB0aHJvdHRsZSA9IGZ1bmN0aW9uIHRocm90dGxlKGZuLCBkZWxheSkge1xuICAgIHZhciBub3csIGxhc3RFeGVjLCB0aW1lciwgY29udGV4dCwgYXJnczsgLy9lc2xpbnQtZGlzYWJsZS1saW5lXG5cbiAgICB2YXIgZXhlY3V0ZSA9IGZ1bmN0aW9uIGV4ZWN1dGUoKSB7XG4gICAgICBmbi5hcHBseShjb250ZXh0LCBhcmdzKTtcbiAgICAgIGxhc3RFeGVjID0gbm93O1xuICAgIH07XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY29udGV4dCA9IHRoaXM7XG4gICAgICBhcmdzID0gYXJndW1lbnRzO1xuXG4gICAgICBub3cgPSBEYXRlLm5vdygpO1xuXG4gICAgICBpZiAodGltZXIpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgICAgdGltZXIgPSBudWxsO1xuICAgICAgfVxuXG4gICAgICBpZiAobGFzdEV4ZWMpIHtcbiAgICAgICAgdmFyIGRpZmYgPSBkZWxheSAtIChub3cgLSBsYXN0RXhlYyk7XG4gICAgICAgIGlmIChkaWZmIDwgMCkge1xuICAgICAgICAgIGV4ZWN1dGUoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgZXhlY3V0ZSgpO1xuICAgICAgICAgIH0sIGRpZmYpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBleGVjdXRlKCk7XG4gICAgICB9XG4gICAgfTtcbiAgfTtcblxuICB2YXIgZ2V0U2Nyb2xsVG9wID0gZnVuY3Rpb24gZ2V0U2Nyb2xsVG9wKGVsZW1lbnQpIHtcbiAgICBpZiAoZWxlbWVudCA9PT0gd2luZG93KSB7XG4gICAgICByZXR1cm4gTWF0aC5tYXgod2luZG93LnBhZ2VZT2Zmc2V0IHx8IDAsIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3ApO1xuICAgIH1cblxuICAgIHJldHVybiBlbGVtZW50LnNjcm9sbFRvcDtcbiAgfTtcblxuICB2YXIgZ2V0Q29tcHV0ZWRTdHlsZSA9IGRvY3VtZW50LmRlZmF1bHRWaWV3LmdldENvbXB1dGVkU3R5bGU7XG5cbiAgdmFyIGdldFNjcm9sbEV2ZW50VGFyZ2V0ID0gZnVuY3Rpb24gZ2V0U2Nyb2xsRXZlbnRUYXJnZXQoZWxlbWVudCkge1xuICAgIHZhciBjdXJyZW50Tm9kZSA9IGVsZW1lbnQ7XG4gICAgLy8gYnVnZml4LCBzZWUgaHR0cDovL3czaGVscC5vcmcvemgtY24vY2F1c2VzL1NEOTAxMyBhbmQgaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xNzAxNjc0MC9vbnNjcm9sbC1mdW5jdGlvbi1pcy1ub3Qtd29ya2luZy1mb3ItY2hyb21lXG4gICAgd2hpbGUgKGN1cnJlbnROb2RlICYmIGN1cnJlbnROb2RlLnRhZ05hbWUgIT09ICdIVE1MJyAmJiBjdXJyZW50Tm9kZS50YWdOYW1lICE9PSAnQk9EWScgJiYgY3VycmVudE5vZGUubm9kZVR5cGUgPT09IDEpIHtcbiAgICAgIHZhciBvdmVyZmxvd1kgPSBnZXRDb21wdXRlZFN0eWxlKGN1cnJlbnROb2RlKS5vdmVyZmxvd1k7XG4gICAgICBpZiAob3ZlcmZsb3dZID09PSAnc2Nyb2xsJyB8fCBvdmVyZmxvd1kgPT09ICdhdXRvJykge1xuICAgICAgICByZXR1cm4gY3VycmVudE5vZGU7XG4gICAgICB9XG4gICAgICBjdXJyZW50Tm9kZSA9IGN1cnJlbnROb2RlLnBhcmVudE5vZGU7XG4gICAgfVxuICAgIHJldHVybiB3aW5kb3c7XG4gIH07XG5cbiAgdmFyIGdldFZpc2libGVIZWlnaHQgPSBmdW5jdGlvbiBnZXRWaXNpYmxlSGVpZ2h0KGVsZW1lbnQpIHtcbiAgICBpZiAoZWxlbWVudCA9PT0gd2luZG93KSB7XG4gICAgICByZXR1cm4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodDtcbiAgICB9XG5cbiAgICByZXR1cm4gZWxlbWVudC5jbGllbnRIZWlnaHQ7XG4gIH07XG5cbiAgdmFyIGdldEVsZW1lbnRUb3AgPSBmdW5jdGlvbiBnZXRFbGVtZW50VG9wKGVsZW1lbnQpIHtcbiAgICBpZiAoZWxlbWVudCA9PT0gd2luZG93KSB7XG4gICAgICByZXR1cm4gZ2V0U2Nyb2xsVG9wKHdpbmRvdyk7XG4gICAgfVxuICAgIHJldHVybiBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCArIGdldFNjcm9sbFRvcCh3aW5kb3cpO1xuICB9O1xuXG4gIHZhciBpc0F0dGFjaGVkID0gZnVuY3Rpb24gaXNBdHRhY2hlZChlbGVtZW50KSB7XG4gICAgdmFyIGN1cnJlbnROb2RlID0gZWxlbWVudC5wYXJlbnROb2RlO1xuICAgIHdoaWxlIChjdXJyZW50Tm9kZSkge1xuICAgICAgaWYgKGN1cnJlbnROb2RlLnRhZ05hbWUgPT09ICdIVE1MJykge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIGlmIChjdXJyZW50Tm9kZS5ub2RlVHlwZSA9PT0gMTEpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgY3VycmVudE5vZGUgPSBjdXJyZW50Tm9kZS5wYXJlbnROb2RlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH07XG5cbiAgdmFyIGRvQmluZCA9IGZ1bmN0aW9uIGRvQmluZCgpIHtcbiAgICBpZiAodGhpcy5iaW5kZWQpIHJldHVybjsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAgIHRoaXMuYmluZGVkID0gdHJ1ZTtcblxuICAgIHZhciBkaXJlY3RpdmUgPSB0aGlzO1xuICAgIHZhciBlbGVtZW50ID0gZGlyZWN0aXZlLmVsO1xuXG4gICAgdmFyIHRocm90dGxlRGVsYXlFeHByID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2luZmluaXRlLXNjcm9sbC10aHJvdHRsZS1kZWxheScpO1xuICAgIHZhciB0aHJvdHRsZURlbGF5ID0gMjAwO1xuICAgIGlmICh0aHJvdHRsZURlbGF5RXhwcikge1xuICAgICAgdGhyb3R0bGVEZWxheSA9IE51bWJlcihkaXJlY3RpdmUudm1bdGhyb3R0bGVEZWxheUV4cHJdIHx8IHRocm90dGxlRGVsYXlFeHByKTtcbiAgICAgIGlmIChpc05hTih0aHJvdHRsZURlbGF5KSB8fCB0aHJvdHRsZURlbGF5IDwgMCkge1xuICAgICAgICB0aHJvdHRsZURlbGF5ID0gMjAwO1xuICAgICAgfVxuICAgIH1cbiAgICBkaXJlY3RpdmUudGhyb3R0bGVEZWxheSA9IHRocm90dGxlRGVsYXk7XG5cbiAgICBkaXJlY3RpdmUuc2Nyb2xsRXZlbnRUYXJnZXQgPSBnZXRTY3JvbGxFdmVudFRhcmdldChlbGVtZW50KTtcbiAgICBkaXJlY3RpdmUuc2Nyb2xsTGlzdGVuZXIgPSB0aHJvdHRsZShkb0NoZWNrLmJpbmQoZGlyZWN0aXZlKSwgZGlyZWN0aXZlLnRocm90dGxlRGVsYXkpO1xuICAgIGRpcmVjdGl2ZS5zY3JvbGxFdmVudFRhcmdldC5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBkaXJlY3RpdmUuc2Nyb2xsTGlzdGVuZXIpO1xuXG4gICAgdGhpcy52bS4kb24oJ2hvb2s6YmVmb3JlRGVzdHJveScsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGRpcmVjdGl2ZS5zY3JvbGxFdmVudFRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBkaXJlY3RpdmUuc2Nyb2xsTGlzdGVuZXIpO1xuICAgIH0pO1xuXG4gICAgdmFyIGRpc2FibGVkRXhwciA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdpbmZpbml0ZS1zY3JvbGwtZGlzYWJsZWQnKTtcbiAgICB2YXIgZGlzYWJsZWQgPSBmYWxzZTtcblxuICAgIGlmIChkaXNhYmxlZEV4cHIpIHtcbiAgICAgIHRoaXMudm0uJHdhdGNoKGRpc2FibGVkRXhwciwgZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgIGRpcmVjdGl2ZS5kaXNhYmxlZCA9IHZhbHVlO1xuICAgICAgICBpZiAoIXZhbHVlICYmIGRpcmVjdGl2ZS5pbW1lZGlhdGVDaGVjaykge1xuICAgICAgICAgIGRvQ2hlY2suY2FsbChkaXJlY3RpdmUpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIGRpc2FibGVkID0gQm9vbGVhbihkaXJlY3RpdmUudm1bZGlzYWJsZWRFeHByXSk7XG4gICAgfVxuICAgIGRpcmVjdGl2ZS5kaXNhYmxlZCA9IGRpc2FibGVkO1xuXG4gICAgdmFyIGRpc3RhbmNlRXhwciA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdpbmZpbml0ZS1zY3JvbGwtZGlzdGFuY2UnKTtcbiAgICB2YXIgZGlzdGFuY2UgPSAwO1xuICAgIGlmIChkaXN0YW5jZUV4cHIpIHtcbiAgICAgIGRpc3RhbmNlID0gTnVtYmVyKGRpcmVjdGl2ZS52bVtkaXN0YW5jZUV4cHJdIHx8IGRpc3RhbmNlRXhwcik7XG4gICAgICBpZiAoaXNOYU4oZGlzdGFuY2UpKSB7XG4gICAgICAgIGRpc3RhbmNlID0gMDtcbiAgICAgIH1cbiAgICB9XG4gICAgZGlyZWN0aXZlLmRpc3RhbmNlID0gZGlzdGFuY2U7XG5cbiAgICB2YXIgaW1tZWRpYXRlQ2hlY2tFeHByID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2luZmluaXRlLXNjcm9sbC1pbW1lZGlhdGUtY2hlY2snKTtcbiAgICB2YXIgaW1tZWRpYXRlQ2hlY2sgPSB0cnVlO1xuICAgIGlmIChpbW1lZGlhdGVDaGVja0V4cHIpIHtcbiAgICAgIGltbWVkaWF0ZUNoZWNrID0gQm9vbGVhbihkaXJlY3RpdmUudm1baW1tZWRpYXRlQ2hlY2tFeHByXSk7XG4gICAgfVxuICAgIGRpcmVjdGl2ZS5pbW1lZGlhdGVDaGVjayA9IGltbWVkaWF0ZUNoZWNrO1xuXG4gICAgaWYgKGltbWVkaWF0ZUNoZWNrKSB7XG4gICAgICBkb0NoZWNrLmNhbGwoZGlyZWN0aXZlKTtcbiAgICB9XG5cbiAgICB2YXIgZXZlbnROYW1lID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2luZmluaXRlLXNjcm9sbC1saXN0ZW4tZm9yLWV2ZW50Jyk7XG4gICAgaWYgKGV2ZW50TmFtZSkge1xuICAgICAgZGlyZWN0aXZlLnZtLiRvbihldmVudE5hbWUsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZG9DaGVjay5jYWxsKGRpcmVjdGl2ZSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGRvQ2hlY2sgPSBmdW5jdGlvbiBkb0NoZWNrKGZvcmNlKSB7XG4gICAgdmFyIHNjcm9sbEV2ZW50VGFyZ2V0ID0gdGhpcy5zY3JvbGxFdmVudFRhcmdldDtcbiAgICB2YXIgZWxlbWVudCA9IHRoaXMuZWw7XG4gICAgdmFyIGRpc3RhbmNlID0gdGhpcy5kaXN0YW5jZTtcblxuICAgIGlmIChmb3JjZSAhPT0gdHJ1ZSAmJiB0aGlzLmRpc2FibGVkKSByZXR1cm47IC8vZXNsaW50LWRpc2FibGUtbGluZVxuICAgIHZhciB2aWV3cG9ydFNjcm9sbFRvcCA9IGdldFNjcm9sbFRvcChzY3JvbGxFdmVudFRhcmdldCk7XG4gICAgdmFyIHZpZXdwb3J0Qm90dG9tID0gdmlld3BvcnRTY3JvbGxUb3AgKyBnZXRWaXNpYmxlSGVpZ2h0KHNjcm9sbEV2ZW50VGFyZ2V0KTtcblxuICAgIHZhciBzaG91bGRUcmlnZ2VyID0gZmFsc2U7XG5cbiAgICBpZiAoc2Nyb2xsRXZlbnRUYXJnZXQgPT09IGVsZW1lbnQpIHtcbiAgICAgIHNob3VsZFRyaWdnZXIgPSBzY3JvbGxFdmVudFRhcmdldC5zY3JvbGxIZWlnaHQgLSB2aWV3cG9ydEJvdHRvbSA8PSBkaXN0YW5jZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGVsZW1lbnRCb3R0b20gPSBnZXRFbGVtZW50VG9wKGVsZW1lbnQpIC0gZ2V0RWxlbWVudFRvcChzY3JvbGxFdmVudFRhcmdldCkgKyBlbGVtZW50Lm9mZnNldEhlaWdodCArIHZpZXdwb3J0U2Nyb2xsVG9wO1xuXG4gICAgICBzaG91bGRUcmlnZ2VyID0gdmlld3BvcnRCb3R0b20gKyBkaXN0YW5jZSA+PSBlbGVtZW50Qm90dG9tO1xuICAgIH1cblxuICAgIGlmIChzaG91bGRUcmlnZ2VyICYmIHRoaXMuZXhwcmVzc2lvbikge1xuICAgICAgdGhpcy5leHByZXNzaW9uKCk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBJbmZpbml0ZVNjcm9sbCA9IHtcbiAgICBiaW5kOiBmdW5jdGlvbiBiaW5kKGVsLCBiaW5kaW5nLCB2bm9kZSkge1xuICAgICAgZWxbY3R4XSA9IHtcbiAgICAgICAgZWw6IGVsLFxuICAgICAgICB2bTogdm5vZGUuY29udGV4dCxcbiAgICAgICAgZXhwcmVzc2lvbjogYmluZGluZy52YWx1ZVxuICAgICAgfTtcbiAgICAgIHZhciBhcmdzID0gYXJndW1lbnRzO1xuICAgICAgZWxbY3R4XS52bS4kb24oJ2hvb2s6bW91bnRlZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZWxbY3R4XS52bS4kbmV4dFRpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAgIGlmIChpc0F0dGFjaGVkKGVsKSkge1xuICAgICAgICAgICAgZG9CaW5kLmNhbGwoZWxbY3R4XSwgYXJncyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgZWxbY3R4XS5iaW5kVHJ5Q291bnQgPSAwO1xuXG4gICAgICAgICAgdmFyIHRyeUJpbmQgPSBmdW5jdGlvbiB0cnlCaW5kKCkge1xuICAgICAgICAgICAgaWYgKGVsW2N0eF0uYmluZFRyeUNvdW50ID4gMTApIHJldHVybjsgLy9lc2xpbnQtZGlzYWJsZS1saW5lXG4gICAgICAgICAgICBlbFtjdHhdLmJpbmRUcnlDb3VudCsrO1xuICAgICAgICAgICAgaWYgKGlzQXR0YWNoZWQoZWwpKSB7XG4gICAgICAgICAgICAgIGRvQmluZC5jYWxsKGVsW2N0eF0sIGFyZ3MpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgc2V0VGltZW91dCh0cnlCaW5kLCA1MCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfTtcblxuICAgICAgICAgIHRyeUJpbmQoKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIHVuYmluZDogZnVuY3Rpb24gdW5iaW5kKGVsKSB7XG4gICAgICBpZiAoZWwgJiYgZWxbY3R4XSAmJiBlbFtjdHhdLnNjcm9sbEV2ZW50VGFyZ2V0KSBlbFtjdHhdLnNjcm9sbEV2ZW50VGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGVsW2N0eF0uc2Nyb2xsTGlzdGVuZXIpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgaW5zdGFsbCA9IGZ1bmN0aW9uIGluc3RhbGwoVnVlKSB7XG4gICAgVnVlLmRpcmVjdGl2ZSgnSW5maW5pdGVTY3JvbGwnLCBJbmZpbml0ZVNjcm9sbCk7XG4gIH07XG5cbiAgaWYgKHdpbmRvdy5WdWUpIHtcbiAgICB3aW5kb3cuaW5maW5pdGVTY3JvbGwgPSBJbmZpbml0ZVNjcm9sbDtcbiAgICBWdWUudXNlKGluc3RhbGwpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gIH1cblxuICBJbmZpbml0ZVNjcm9sbC5pbnN0YWxsID0gaW5zdGFsbDtcblxuICByZXR1cm4gSW5maW5pdGVTY3JvbGw7XG5cbn0pKTsiLCIvKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG47KGZ1bmN0aW9uKCkge1xyXG5cclxuICAndXNlIHN0cmljdCdcclxuXHJcbiAgdmFyIG9wdCA9IHtcclxuICAgIGNvbXBsZW1lbnQ6IHdpbmRvdy5kb2N1bWVudC50aXRsZSxcclxuICAgIHNlcGFyYXRvcjogJ3wnXHJcbiAgfVxyXG5cclxuICB2YXIgZGlmZlRpdGxlID0ge31cclxuICB2YXIgZWxzID0gW11cclxuICB2YXIgZGlmZkVscyA9IFtdXHJcbiAgdmFyIGluc3RhbGxlZCA9IGZhbHNlXHJcblxyXG4gIHZhciB1dGlsID0ge1xyXG4gICAgLyoqXHJcbiAgICAgKiBTaG9ydGhhbmRcclxuICAgICAqIEB0eXBlIHtPYmplY3R9XHJcbiAgICAgKi9cclxuICAgIHNob3J0aGFuZDoge1xyXG4gICAgICBjaDogJ2NoYXJzZXQnLFxyXG4gICAgICB0ZzogJ3RhcmdldCcsXHJcbiAgICAgIG46ICduYW1lJyxcclxuICAgICAgaGU6ICdodHRwLWVxdWl2JyxcclxuICAgICAgaXA6ICdpdGVtcHJvcCcsXHJcbiAgICAgIGM6ICdjb250ZW50JyxcclxuICAgICAgcDogJ3Byb3BlcnR5JyxcclxuICAgICAgc2M6ICdzY2hlbWUnLFxyXG4gICAgICByOiAncmVsJyxcclxuICAgICAgaDogJ2hyZWYnLFxyXG4gICAgICBzejogJ3NpemVzJyxcclxuICAgICAgdDogJ3R5cGUnLFxyXG4gICAgICBzOiAnc3JjJyxcclxuICAgICAgYTogJ2FzeW5jJyxcclxuICAgICAgZDogJ2RlZmVyJyxcclxuICAgICAgaTogJ2lubmVyJ1xyXG4gICAgfSxcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoaXMgZnVuY3Rpb24gcmV0dXJuIHRoZSBlbGVtZW50IDxoZWFkPlxyXG4gICAgICogQHR5cGUge0Z1bmN0aW9ufVxyXG4gICAgICogQHJldHVybiB7T2JqZWN0fVxyXG4gICAgICovXHJcbiAgICBnZXRQbGFjZTogZnVuY3Rpb24gKHBsYWNlKSB7XHJcbiAgICAgIHJldHVybiB3aW5kb3cuZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUocGxhY2UpWzBdXHJcbiAgICB9LFxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVW5kbyB0aGUgd2luZG93LmRvY3VtZW50IHRpdGxlIGZvciBwcmV2aW91cyBzdGF0ZVxyXG4gICAgICogQHR5cGUge0Z1bmN0aW9ufVxyXG4gICAgICogQHBhcmFtICB7T2JqZWN0fSBzdGF0ZVxyXG4gICAgICovXHJcbiAgICB1bmRvVGl0bGU6IGZ1bmN0aW9uIChzdGF0ZSkge1xyXG4gICAgICBpZiAoIXN0YXRlLmJlZm9yZSkgcmV0dXJuXHJcbiAgICAgIHdpbmRvdy5kb2N1bWVudC50aXRsZSA9IHN0YXRlLmJlZm9yZVxyXG4gICAgfSxcclxuXHJcbiAgICAvKipcclxuICAgICAqIFVuZG8gZWxlbWVudHMgdG8gaXRzIHByZXZpb3VzIHN0YXRlXHJcbiAgICAgKiBAdHlwZSB7RnVuY3Rpb259XHJcbiAgICAgKi9cclxuICAgIHVuZG86IGZ1bmN0aW9uICgpIHtcclxuICAgICAgaWYgKCFlbHMubGVuZ3RoKSByZXR1cm5cclxuICAgICAgZWxzLm1hcChmdW5jdGlvbiAoZWwpIHtcclxuICAgICAgICBlbC5wYXJlbnRFbGVtZW50LnJlbW92ZUNoaWxkKGVsKVxyXG4gICAgICB9KVxyXG4gICAgICBlbHMgPSBbXVxyXG4gICAgfSxcclxuXHJcbiAgICAvKipcclxuICAgICAqIFNldCBhdHRyaWJ1dGVzIGluIGVsZW1lbnRcclxuICAgICAqIEB0eXBlIHtGdW5jdGlvbn1cclxuICAgICAqIEBwYXJhbSAge09iamVjdH0gb2JqXHJcbiAgICAgKiBAcGFyYW0gIHtIVE1MRWxlbWVudH0gZWxcclxuICAgICAqIEByZXR1cm4ge0hUTUxFbGVtZW50fSB3aXRoIGRlZmluZWQgYXR0cmlidXRlc1xyXG4gICAgICovXHJcbiAgICBwcmVwYXJlRWxlbWVudDogZnVuY3Rpb24gKG9iaiwgZWwpIHtcclxuICAgICAgdmFyIHNlbGYgPSB0aGlzXHJcbiAgICAgIE9iamVjdC5rZXlzKG9iaikubWFwKGZ1bmN0aW9uIChwcm9wKSB7XHJcbiAgICAgICAgdmFyIHNoID0gc2VsZi5zaG9ydGhhbmRbcHJvcF0gfHwgcHJvcFxyXG4gICAgICAgIGlmIChzaC5tYXRjaCgvKGJvZHl8dW5kb3xyZXBsYWNlKS9nKSkgcmV0dXJuXHJcbiAgICAgICAgaWYgKHNoID09PSAnaW5uZXInKSB7XHJcbiAgICAgICAgICBlbC50ZXh0Q29udGVudCA9IG9ialtwcm9wXVxyXG4gICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsLnNldEF0dHJpYnV0ZShzaCwgb2JqW3Byb3BdKVxyXG4gICAgICB9KVxyXG4gICAgICByZXR1cm4gZWxcclxuICAgIH0sXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGFuZ2Ugd2luZG93LmRvY3VtZW50IHRpdGxlXHJcbiAgICAgKiBAdHlwZSB7RnVuY3Rpb259XHJcbiAgICAgKiBAcGFyYW0gIHtPYmplY3R9IG9ialxyXG4gICAgICovXHJcbiAgICB0aXRsZTogZnVuY3Rpb24gKG9iaikge1xyXG4gICAgICBpZiAoIW9iaikgcmV0dXJuXHJcbiAgICAgIGRpZmZUaXRsZS5iZWZvcmUgPSBvcHQuY29tcGxlbWVudFxyXG4gICAgICB2YXIgdGl0bGUgPSBvYmouaW5uZXIgKyAnICcgKyAob2JqLnNlcGFyYXRvciB8fCBvcHQuc2VwYXJhdG9yKSArXHJcbiAgICAgICAgJyAnICsgIChvYmouY29tcGxlbWVudCB8fCBvcHQuY29tcGxlbWVudClcclxuICAgICAgd2luZG93LmRvY3VtZW50LnRpdGxlID0gdGl0bGUudHJpbSgpXHJcbiAgICB9LFxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVXBkYXRlIEVsZW1lbnRcclxuICAgICAqL1xyXG4gICAgdXBkYXRlOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGlmICghZWxzLmxlbmd0aCkgcmV0dXJuXHJcbiAgICAgIGVscy5mb3JFYWNoKGZ1bmN0aW9uKGVsLCBrZXkpIHtcclxuICAgICAgICBpZiAoZGlmZkVsc1trZXldICYmICFkaWZmRWxzW2tleV0uaXNFcXVhbE5vZGUoZWwpKSB7XHJcbiAgICAgICAgICBlbC5wYXJlbnRFbGVtZW50LnJlcGxhY2VDaGlsZChkaWZmRWxzW2tleV0sIGVsc1trZXldKVxyXG4gICAgICAgICAgZWxzLnNwbGljZShrZXksIDEsIGRpZmZFbHNba2V5XSlcclxuICAgICAgICAgIHJldHVyblxyXG4gICAgICAgIH1cclxuICAgICAgfSlcclxuICAgICAgZGlmZkVscyA9IFtdXHJcbiAgICB9LFxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQWRkIEVsZW1lbnRzXHJcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gb2JqXHJcbiAgICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbFxyXG4gICAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gcGFyZW50XHJcbiAgICAgKi9cclxuICAgIGFkZDogZnVuY3Rpb24gKG9iaiwgZWwsIHBhcmVudCkge1xyXG4gICAgICBwYXJlbnQuYXBwZW5kQ2hpbGQoZWwpXHJcbiAgICAgIC8vIEZpeGVkIGVsZW1lbnRzIHRoYXQgZG8gbm90IHN1ZmZlciByZW1vdmFsXHJcbiAgICAgIGlmIChvYmoudW5kbyAhPT0gdW5kZWZpbmVkICYmICFvYmoudW5kbykgcmV0dXJuXHJcbiAgICAgIC8vIEVsZW1lbnRzIHdoaWNoIGFyZSByZW1vdmVkXHJcbiAgICAgIGVscy5wdXNoKGVsKVxyXG4gICAgfSxcclxuXHJcbiAgICAvKipcclxuICAgICAqIEhhbmRsZSBvZiBjcmVhdGUgZWxlbWVudHNcclxuICAgICAqIEB0eXBlIHtGdW5jdGlvbn1cclxuICAgICAqIEBwYXJhbSAge0FycmF5fSBhcnJcclxuICAgICAqIEBwYXJhbSAge1N0cmluZ30gdGFnICAgLSBzdHlsZSwgbGluaywgbWV0YSwgc2NyaXB0LCBiYXNlXHJcbiAgICAgKiBAcGFyYW0gIHtTdHJpbmd9IHBsYWNlIC0gRGVmYXVsdCAnaGVhZCdcclxuICAgICAqIEBwYXJhbSAge0Jvb2xlYW59IHVwZGF0ZVxyXG4gICAgICovXHJcbiAgICBoYW5kbGU6IGZ1bmN0aW9uIChhcnIsIHRhZywgcGxhY2UsIHVwZGF0ZSkge1xyXG4gICAgICB2YXIgc2VsZiA9IHRoaXNcclxuICAgICAgaWYgKCFhcnIpIHJldHVyblxyXG4gICAgICBhcnIubWFwKGZ1bmN0aW9uIChvYmopIHtcclxuICAgICAgICB2YXIgcGFyZW50ID0gKG9iai5ib2R5KSA/IHNlbGYuZ2V0UGxhY2UoJ2JvZHknKSA6IHNlbGYuZ2V0UGxhY2UocGxhY2UpXHJcbiAgICAgICAgdmFyIGVsID0gd2luZG93LmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG9iai5pZClcclxuICAgICAgICBpZiAoIWVsKSB7XHJcbiAgICAgICAgICBlbCA9IHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KHRhZylcclxuICAgICAgICAgIHVwZGF0ZSA9IGZhbHNlXHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIEVsZW1lbnRzIHRoYXQgd2lsbCBzdWJzdGl0dXRlIGRhdGFcclxuICAgICAgICBpZiAoZWwuaGFzQXR0cmlidXRlKCdpZCcpKSB7XHJcbiAgICAgICAgICBzZWxmLnByZXBhcmVFbGVtZW50KG9iaiwgZWwpXHJcbiAgICAgICAgICByZXR1cm5cclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gT3RoZXIgZWxlbWVudHNcclxuICAgICAgICBlbCA9IHNlbGYucHJlcGFyZUVsZW1lbnQob2JqLCBlbClcclxuICAgICAgICAvLyBVcGRhdGVkIGVsZW1lbnRzXHJcbiAgICAgICAgaWYgKHVwZGF0ZSkge1xyXG4gICAgICAgICAgZGlmZkVscy5wdXNoKGVsKVxyXG4gICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIEFwcGVuZCBFbGVtZW50c1xyXG4gICAgICAgIHNlbGYuYWRkKG9iaiwgZWwsIHBhcmVudClcclxuICAgICAgfSlcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFBsdWdpbiB8IHZ1ZS1oZWFkXHJcbiAgICogQHBhcmFtICB7RnVuY3Rpb259IFZ1ZVxyXG4gICAqIEBwYXJhbSAge09iamVjdH0gb3B0aW9uc1xyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIFZ1ZUhlYWQgKFZ1ZSwgb3B0aW9ucykge1xyXG4gICAgaWYgKGluc3RhbGxlZCkgcmV0dXJuXHJcblxyXG4gICAgaW5zdGFsbGVkID0gdHJ1ZVxyXG5cclxuICAgIGlmIChvcHRpb25zKSB7XHJcbiAgICAgIFZ1ZS51dGlsLmV4dGVuZChvcHQsIG9wdGlvbnMpXHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBJbml0aWFsaXplcyBhbmQgdXBkYXRlcyB0aGUgZWxlbWVudHMgaW4gdGhlIGhlYWRcclxuICAgICAqIEBwYXJhbSAge0Jvb2xlYW59IHVwZGF0ZVxyXG4gICAgICovXHJcbiAgICBmdW5jdGlvbiBpbml0ICh1cGRhdGUpIHtcclxuICAgICAgdmFyIHNlbGYgPSB0aGlzXHJcbiAgICAgIHZhciBoZWFkID0gKHR5cGVvZiBzZWxmLiRvcHRpb25zLmhlYWQgPT09ICdmdW5jdGlvbicpID8gc2VsZi4kb3B0aW9ucy5oZWFkLmJpbmQoc2VsZikoKSA6IHNlbGYuJG9wdGlvbnMuaGVhZFxyXG4gICAgICBpZiAoIWhlYWQpIHJldHVyblxyXG4gICAgICBPYmplY3Qua2V5cyhoZWFkKS5tYXAoZnVuY3Rpb24gKGtleSkge1xyXG4gICAgICAgIHZhciBwcm9wID0gaGVhZFtrZXldXHJcbiAgICAgICAgaWYgKCFwcm9wKSByZXR1cm5cclxuICAgICAgICB2YXIgb2JqID0gKHR5cGVvZiBwcm9wID09PSAnZnVuY3Rpb24nKSA/IGhlYWRba2V5XS5iaW5kKHNlbGYpKCkgOiBoZWFkW2tleV1cclxuICAgICAgICBpZiAoa2V5ID09PSAndGl0bGUnKSB7XHJcbiAgICAgICAgICB1dGlsW2tleV0ob2JqKVxyXG4gICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHV0aWwuaGFuZGxlKG9iaiwga2V5LCAnaGVhZCcsIHVwZGF0ZSlcclxuICAgICAgfSlcclxuICAgICAgc2VsZi4kZW1pdCgnb2tIZWFkJylcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJlbW92ZSB0aGUgbWV0YSB0YWdzIGVsZW1lbnRzIGluIHRoZSBoZWFkXHJcbiAgICAgKi9cclxuICAgIGZ1bmN0aW9uIGRlc3Ryb3kgKCkge1xyXG4gICAgICBpZiAoIXRoaXMuJG9wdGlvbnMuaGVhZCkgcmV0dXJuXHJcbiAgICAgIHV0aWwudW5kb1RpdGxlKGRpZmZUaXRsZSlcclxuICAgICAgdXRpbC51bmRvKClcclxuICAgIH1cclxuXHJcbiAgICAvLyB2MVxyXG4gICAgaWYgKFZ1ZS52ZXJzaW9uLm1hdGNoKC9bMV0uKC4pKy9nKSkge1xyXG4gICAgICBWdWUubWl4aW4oe1xyXG4gICAgICAgIHJlYWR5OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICBpbml0LmJpbmQodGhpcykoKVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZGVzdHJveWVkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICBkZXN0cm95LmJpbmQodGhpcykoKVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZXZlbnRzOiB7XHJcbiAgICAgICAgICB1cGRhdGVIZWFkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGluaXQuYmluZCh0aGlzKSh0cnVlKVxyXG4gICAgICAgICAgICB1dGlsLnVwZGF0ZSgpXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9KVxyXG4gICAgfVxyXG4gICAgLy8gdjJcclxuICAgIGlmIChWdWUudmVyc2lvbi5tYXRjaCgvWzJdLiguKSsvZykpIHtcclxuICAgICAgVnVlLm1peGluKHtcclxuICAgICAgICBjcmVhdGVkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICB2YXIgc2VsZiA9IHRoaXNcclxuICAgICAgICAgIHNlbGYuJG9uKCd1cGRhdGVIZWFkJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpbml0LmJpbmQoc2VsZikodHJ1ZSlcclxuICAgICAgICAgICAgdXRpbC51cGRhdGUoKVxyXG4gICAgICAgICAgfSlcclxuICAgICAgICB9LFxyXG4gICAgICAgIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgIGluaXQuYmluZCh0aGlzKSgpXHJcbiAgICAgICAgfSxcclxuICAgICAgICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICBkZXN0cm95LmJpbmQodGhpcykoKVxyXG4gICAgICAgIH1cclxuICAgICAgfSlcclxuICAgIH1cclxuICB9XHJcblxyXG4gIFZ1ZUhlYWQudmVyc2lvbiA9ICcyLjAuMTEnXHJcblxyXG4gIC8vIGF1dG8gaW5zdGFsbFxyXG4gIGlmICh0eXBlb2YgVnVlICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgVnVlLnVzZShWdWVIZWFkKVxyXG4gIH1cclxuXHJcbiAgaWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKSB7XHJcbiAgICBtb2R1bGUuZXhwb3J0cyA9IFZ1ZUhlYWRcclxuICB9IGVsc2UgaWYodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7XHJcbiAgICBkZWZpbmUoZnVuY3Rpb24gKCkgeyByZXR1cm4gVnVlSGVhZCB9KVxyXG4gIH0gZWxzZSBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgIHdpbmRvdy5WdWVIZWFkID0gVnVlSGVhZFxyXG4gIH1cclxuXHJcbn0pKClcclxuIiwiLy8gc2hpbSBmb3IgdXNpbmcgcHJvY2VzcyBpbiBicm93c2VyXG52YXIgcHJvY2VzcyA9IG1vZHVsZS5leHBvcnRzID0ge307XG5cbi8vIGNhY2hlZCBmcm9tIHdoYXRldmVyIGdsb2JhbCBpcyBwcmVzZW50IHNvIHRoYXQgdGVzdCBydW5uZXJzIHRoYXQgc3R1YiBpdFxuLy8gZG9uJ3QgYnJlYWsgdGhpbmdzLiAgQnV0IHdlIG5lZWQgdG8gd3JhcCBpdCBpbiBhIHRyeSBjYXRjaCBpbiBjYXNlIGl0IGlzXG4vLyB3cmFwcGVkIGluIHN0cmljdCBtb2RlIGNvZGUgd2hpY2ggZG9lc24ndCBkZWZpbmUgYW55IGdsb2JhbHMuICBJdCdzIGluc2lkZSBhXG4vLyBmdW5jdGlvbiBiZWNhdXNlIHRyeS9jYXRjaGVzIGRlb3B0aW1pemUgaW4gY2VydGFpbiBlbmdpbmVzLlxuXG52YXIgY2FjaGVkU2V0VGltZW91dDtcbnZhciBjYWNoZWRDbGVhclRpbWVvdXQ7XG5cbmZ1bmN0aW9uIGRlZmF1bHRTZXRUaW1vdXQoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7XG59XG5mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0ICgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2NsZWFyVGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuKGZ1bmN0aW9uICgpIHtcbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIHNldFRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGRlZmF1bHRTZXRUaW1vdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIGNsZWFyVGltZW91dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gZGVmYXVsdENsZWFyVGltZW91dDtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gZGVmYXVsdENsZWFyVGltZW91dDtcbiAgICB9XG59ICgpKVxuZnVuY3Rpb24gcnVuVGltZW91dChmdW4pIHtcbiAgICBpZiAoY2FjaGVkU2V0VGltZW91dCA9PT0gc2V0VGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgLy8gaWYgc2V0VGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZFNldFRpbWVvdXQgPT09IGRlZmF1bHRTZXRUaW1vdXQgfHwgIWNhY2hlZFNldFRpbWVvdXQpICYmIHNldFRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9IGNhdGNoKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0IHRydXN0IHRoZSBnbG9iYWwgb2JqZWN0IHdoZW4gY2FsbGVkIG5vcm1hbGx5XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKG51bGwsIGZ1biwgMCk7XG4gICAgICAgIH0gY2F0Y2goZSl7XG4gICAgICAgICAgICAvLyBzYW1lIGFzIGFib3ZlIGJ1dCB3aGVuIGl0J3MgYSB2ZXJzaW9uIG9mIEkuRS4gdGhhdCBtdXN0IGhhdmUgdGhlIGdsb2JhbCBvYmplY3QgZm9yICd0aGlzJywgaG9wZnVsbHkgb3VyIGNvbnRleHQgY29ycmVjdCBvdGhlcndpc2UgaXQgd2lsbCB0aHJvdyBhIGdsb2JhbCBlcnJvclxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbCh0aGlzLCBmdW4sIDApO1xuICAgICAgICB9XG4gICAgfVxuXG5cbn1cbmZ1bmN0aW9uIHJ1bkNsZWFyVGltZW91dChtYXJrZXIpIHtcbiAgICBpZiAoY2FjaGVkQ2xlYXJUaW1lb3V0ID09PSBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBjbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9XG4gICAgLy8gaWYgY2xlYXJUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZFxuICAgIGlmICgoY2FjaGVkQ2xlYXJUaW1lb3V0ID09PSBkZWZhdWx0Q2xlYXJUaW1lb3V0IHx8ICFjYWNoZWRDbGVhclRpbWVvdXQpICYmIGNsZWFyVGltZW91dCkge1xuICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7XG4gICAgICAgIHJldHVybiBjbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfSBjYXRjaCAoZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgIHRydXN0IHRoZSBnbG9iYWwgb2JqZWN0IHdoZW4gY2FsbGVkIG5vcm1hbGx5XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwobnVsbCwgbWFya2VyKTtcbiAgICAgICAgfSBjYXRjaCAoZSl7XG4gICAgICAgICAgICAvLyBzYW1lIGFzIGFib3ZlIGJ1dCB3aGVuIGl0J3MgYSB2ZXJzaW9uIG9mIEkuRS4gdGhhdCBtdXN0IGhhdmUgdGhlIGdsb2JhbCBvYmplY3QgZm9yICd0aGlzJywgaG9wZnVsbHkgb3VyIGNvbnRleHQgY29ycmVjdCBvdGhlcndpc2UgaXQgd2lsbCB0aHJvdyBhIGdsb2JhbCBlcnJvci5cbiAgICAgICAgICAgIC8vIFNvbWUgdmVyc2lvbnMgb2YgSS5FLiBoYXZlIGRpZmZlcmVudCBydWxlcyBmb3IgY2xlYXJUaW1lb3V0IHZzIHNldFRpbWVvdXRcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbCh0aGlzLCBtYXJrZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG5cblxufVxudmFyIHF1ZXVlID0gW107XG52YXIgZHJhaW5pbmcgPSBmYWxzZTtcbnZhciBjdXJyZW50UXVldWU7XG52YXIgcXVldWVJbmRleCA9IC0xO1xuXG5mdW5jdGlvbiBjbGVhblVwTmV4dFRpY2soKSB7XG4gICAgaWYgKCFkcmFpbmluZyB8fCAhY3VycmVudFF1ZXVlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBpZiAoY3VycmVudFF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBxdWV1ZSA9IGN1cnJlbnRRdWV1ZS5jb25jYXQocXVldWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICB9XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBkcmFpblF1ZXVlKCk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBkcmFpblF1ZXVlKCkge1xuICAgIGlmIChkcmFpbmluZykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciB0aW1lb3V0ID0gcnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO1xuICAgIGRyYWluaW5nID0gdHJ1ZTtcblxuICAgIHZhciBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgd2hpbGUobGVuKSB7XG4gICAgICAgIGN1cnJlbnRRdWV1ZSA9IHF1ZXVlO1xuICAgICAgICBxdWV1ZSA9IFtdO1xuICAgICAgICB3aGlsZSAoKytxdWV1ZUluZGV4IDwgbGVuKSB7XG4gICAgICAgICAgICBpZiAoY3VycmVudFF1ZXVlKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudFF1ZXVlW3F1ZXVlSW5kZXhdLnJ1bigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICAgICAgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIH1cbiAgICBjdXJyZW50UXVldWUgPSBudWxsO1xuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgcnVuQ2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xufVxuXG5wcm9jZXNzLm5leHRUaWNrID0gZnVuY3Rpb24gKGZ1bikge1xuICAgIHZhciBhcmdzID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGggLSAxKTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGFyZ3NbaSAtIDFdID0gYXJndW1lbnRzW2ldO1xuICAgICAgICB9XG4gICAgfVxuICAgIHF1ZXVlLnB1c2gobmV3IEl0ZW0oZnVuLCBhcmdzKSk7XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCA9PT0gMSAmJiAhZHJhaW5pbmcpIHtcbiAgICAgICAgcnVuVGltZW91dChkcmFpblF1ZXVlKTtcbiAgICB9XG59O1xuXG4vLyB2OCBsaWtlcyBwcmVkaWN0aWJsZSBvYmplY3RzXG5mdW5jdGlvbiBJdGVtKGZ1biwgYXJyYXkpIHtcbiAgICB0aGlzLmZ1biA9IGZ1bjtcbiAgICB0aGlzLmFycmF5ID0gYXJyYXk7XG59XG5JdGVtLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5mdW4uYXBwbHkobnVsbCwgdGhpcy5hcnJheSk7XG59O1xucHJvY2Vzcy50aXRsZSA9ICdicm93c2VyJztcbnByb2Nlc3MuYnJvd3NlciA9IHRydWU7XG5wcm9jZXNzLmVudiA9IHt9O1xucHJvY2Vzcy5hcmd2ID0gW107XG5wcm9jZXNzLnZlcnNpb24gPSAnJzsgLy8gZW1wdHkgc3RyaW5nIHRvIGF2b2lkIHJlZ2V4cCBpc3N1ZXNcbnByb2Nlc3MudmVyc2lvbnMgPSB7fTtcblxuZnVuY3Rpb24gbm9vcCgpIHt9XG5cbnByb2Nlc3Mub24gPSBub29wO1xucHJvY2Vzcy5hZGRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLm9uY2UgPSBub29wO1xucHJvY2Vzcy5vZmYgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUFsbExpc3RlbmVycyA9IG5vb3A7XG5wcm9jZXNzLmVtaXQgPSBub29wO1xucHJvY2Vzcy5wcmVwZW5kTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5wcmVwZW5kT25jZUxpc3RlbmVyID0gbm9vcDtcblxucHJvY2Vzcy5saXN0ZW5lcnMgPSBmdW5jdGlvbiAobmFtZSkgeyByZXR1cm4gW10gfVxuXG5wcm9jZXNzLmJpbmRpbmcgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5cbnByb2Nlc3MuY3dkID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gJy8nIH07XG5wcm9jZXNzLmNoZGlyID0gZnVuY3Rpb24gKGRpcikge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xucHJvY2Vzcy51bWFzayA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gMDsgfTtcbiIsIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanM/aW5kZW50ZWRTeW50YXghLi9zdHlsZS5zYXNzXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCB7fSk7XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcblx0Ly8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0aWYoIWNvbnRlbnQubG9jYWxzKSB7XG5cdFx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz9pbmRlbnRlZFN5bnRheCEuL3N0eWxlLnNhc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz9pbmRlbnRlZFN5bnRheCEuL3N0eWxlLnNhc3NcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmJ1dHRvbi5pcy13aGl0ZTpob3ZlciwuYnV0dG9uLmlzLXdoaXRlOmZvY3VzLC5idXR0b24uaXMtd2hpdGUuaXMtYWN0aXZle2JhY2tncm91bmQtY29sb3I6IzUxOTJmZiAhaW1wb3J0YW50O2NvbG9yOndoaXRlICFpbXBvcnRhbnR9LmlzLWNpcmNsZXtib3JkZXItcmFkaXVzOjUwJX0uaXMtcm91bmRlZHtib3JkZXItcmFkaXVzOjJweH0uaXMtZnVsbHdpZHRoe3dpZHRoOjEwMCV9LmlzLWZ1bGxoZWlnaHR7bWluLWhlaWdodDoxMDB2aH0uaXMtMjEweDIxMHt3aWR0aDoyMTBweDtoZWlnaHQ6MjEwcHh9Lmhhcy1tYXJnaW50b3B7bWFyZ2luLXRvcDoxNXB4fS5oYXMtc2hhZG93e2JveC1zaGFkb3c6MCAxcHggMnB4IHJnYmEoMCwwLDAsMC4xKX0uaGFzLXVuZGVybGluZXtib3gtc2hhZG93OjAgMXB4IDAgI2ViZWJlYn0uX19jb3YtcHJvZ3Jlc3N7dG9wOjExMXB4ICFpbXBvcnRhbnR9LyohIGJ1bG1hLmlvIHYwLjIuMyB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9qZ3RobXMvYnVsbWEgKi9Aa2V5ZnJhbWVzIHNwaW5Bcm91bmR7ZnJvbXt0cmFuc2Zvcm06cm90YXRlKDBkZWcpfXRve3RyYW5zZm9ybTpyb3RhdGUoMzU5ZGVnKX19LyohIG1pbmlyZXNldC5jc3MgdjAuMC4yIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL2pndGhtcy9taW5pcmVzZXQuY3NzICovaHRtbCxib2R5LHAsb2wsdWwsbGksZGwsZHQsZGQsYmxvY2txdW90ZSxmaWd1cmUsZmllbGRzZXQsbGVnZW5kLHRleHRhcmVhLHByZSxpZnJhbWUsaHIsaDEsaDIsaDMsaDQsaDUsaDZ7bWFyZ2luOjA7cGFkZGluZzowfWgxLGgyLGgzLGg0LGg1LGg2e2ZvbnQtc2l6ZToxMDAlO2ZvbnQtd2VpZ2h0Om5vcm1hbH11bHtsaXN0LXN0eWxlOm5vbmV9YnV0dG9uLGlucHV0LHNlbGVjdCx0ZXh0YXJlYXttYXJnaW46MH1odG1se2JveC1zaXppbmc6Ym9yZGVyLWJveH0qe2JveC1zaXppbmc6aW5oZXJpdH0qOmJlZm9yZSwqOmFmdGVye2JveC1zaXppbmc6aW5oZXJpdH1pbWcsZW1iZWQsb2JqZWN0LGF1ZGlvLHZpZGVve2hlaWdodDphdXRvO21heC13aWR0aDoxMDAlfWlmcmFtZXtib3JkZXI6MH10YWJsZXtib3JkZXItY29sbGFwc2U6Y29sbGFwc2U7Ym9yZGVyLXNwYWNpbmc6MH10ZCx0aHtwYWRkaW5nOjA7dGV4dC1hbGlnbjpsZWZ0fWh0bWx7YmFja2dyb3VuZC1jb2xvcjpcXFwiI2ZmZlxcXCI7Zm9udC1zaXplOjE0cHg7LW1vei1vc3gtZm9udC1zbW9vdGhpbmc6Z3JheXNjYWxlOy13ZWJraXQtZm9udC1zbW9vdGhpbmc6YW50aWFsaWFzZWQ7bWluLXdpZHRoOjMwMHB4O292ZXJmbG93LXg6aGlkZGVuO292ZXJmbG93LXk6c2Nyb2xsO3RleHQtcmVuZGVyaW5nOm9wdGltaXplTGVnaWJpbGl0eX1hcnRpY2xlLGFzaWRlLGZpZ3VyZSxmb290ZXIsaGVhZGVyLGhncm91cCxzZWN0aW9ue2Rpc3BsYXk6YmxvY2t9Ym9keSxidXR0b24saW5wdXQsc2VsZWN0LHRleHRhcmVhe2ZvbnQtZmFtaWx5Oi1hcHBsZS1zeXN0ZW0sQmxpbmtNYWNTeXN0ZW1Gb250LFxcXCJTZWdvZSBVSVxcXCIsXFxcIlJvYm90b1xcXCIsXFxcIk94eWdlblxcXCIsXFxcIlVidW50dVxcXCIsXFxcIkNhbnRhcmVsbFxcXCIsXFxcIkZpcmEgU2Fuc1xcXCIsXFxcIkRyb2lkIFNhbnNcXFwiLFxcXCJIZWx2ZXRpY2EgTmV1ZVxcXCIsXFxcIkhlbHZldGljYVxcXCIsXFxcIkFyaWFsXFxcIixzYW5zLXNlcmlmfWNvZGUscHJley1tb3otb3N4LWZvbnQtc21vb3RoaW5nOmF1dG87LXdlYmtpdC1mb250LXNtb290aGluZzphdXRvO2ZvbnQtZmFtaWx5OlxcXCJJbmNvbnNvbGF0YVxcXCIsXFxcIkNvbnNvbGFzXFxcIixcXFwiTW9uYWNvXFxcIixtb25vc3BhY2U7bGluZS1oZWlnaHQ6MS4yNX1ib2R5e2NvbG9yOiM0YTRhNGE7Zm9udC1zaXplOjFyZW07Zm9udC13ZWlnaHQ6NDAwO2xpbmUtaGVpZ2h0OjEuNDI4NTcxNDI4NTcxNDI5fWF7Y29sb3I6IzRhOGJmYTtjdXJzb3I6cG9pbnRlcjt0ZXh0LWRlY29yYXRpb246bm9uZTt0cmFuc2l0aW9uOm5vbmUgODZtcyBlYXNlLW91dH1hOmhvdmVye2NvbG9yOiMzNjM2MzZ9Y29kZXtiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjU7Y29sb3I6I2ZmMzg2MDtmb250LXNpemU6MTJweDtmb250LXdlaWdodDpub3JtYWw7cGFkZGluZzoxcHggMnB4IDJweH1ocntiYWNrZ3JvdW5kLWNvbG9yOiNkYmRiZGI7Ym9yZGVyOm5vbmU7ZGlzcGxheTpibG9jaztoZWlnaHQ6MXB4O21hcmdpbjoyMHB4IDB9aW1ne21heC13aWR0aDoxMDAlfWlucHV0W3R5cGU9XFxcImNoZWNrYm94XFxcIl0saW5wdXRbdHlwZT1cXFwicmFkaW9cXFwiXXt2ZXJ0aWNhbC1hbGlnbjpiYXNlbGluZX1zbWFsbHtmb250LXNpemU6MTFweH1zcGFue2ZvbnQtc3R5bGU6aW5oZXJpdDtmb250LXdlaWdodDppbmhlcml0fXN0cm9uZ3tjb2xvcjojMzYzNjM2O2ZvbnQtd2VpZ2h0OjcwMH1wcmV7YmFja2dyb3VuZC1jb2xvcjojZjVmNWY1O2NvbG9yOiM0YTRhNGE7d2hpdGUtc3BhY2U6cHJlO3dvcmQtd3JhcDpub3JtYWx9cHJlIGNvZGV7YmFja2dyb3VuZC1jb2xvcjojZjVmNWY1O2NvbG9yOiM0YTRhNGE7ZGlzcGxheTpibG9jaztvdmVyZmxvdy14OmF1dG87cGFkZGluZzoxNnB4IDIwcHh9dGFibGV7d2lkdGg6MTAwJX10YWJsZSB0ZCx0YWJsZSB0aHt0ZXh0LWFsaWduOmxlZnQ7dmVydGljYWwtYWxpZ246dG9wfXRhYmxlIHRoe2NvbG9yOiMzNjM2MzZ9LmlzLWJsb2Nre2Rpc3BsYXk6YmxvY2t9QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpey5pcy1ibG9jay1tb2JpbGV7ZGlzcGxheTpibG9jayAhaW1wb3J0YW50fX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCl7LmlzLWJsb2NrLXRhYmxldHtkaXNwbGF5OmJsb2NrICFpbXBvcnRhbnR9fUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSBhbmQgKG1heC13aWR0aDogOTc5cHgpey5pcy1ibG9jay10YWJsZXQtb25seXtkaXNwbGF5OmJsb2NrICFpbXBvcnRhbnR9fUBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk3OXB4KXsuaXMtYmxvY2stdG91Y2h7ZGlzcGxheTpibG9jayAhaW1wb3J0YW50fX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5ODBweCl7LmlzLWJsb2NrLWRlc2t0b3B7ZGlzcGxheTpibG9jayAhaW1wb3J0YW50fX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5ODBweCkgYW5kIChtYXgtd2lkdGg6IDExNzlweCl7LmlzLWJsb2NrLWRlc2t0b3Atb25seXtkaXNwbGF5OmJsb2NrICFpbXBvcnRhbnR9fUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDExODBweCl7LmlzLWJsb2NrLXdpZGVzY3JlZW57ZGlzcGxheTpibG9jayAhaW1wb3J0YW50fX0uaXMtZmxleHtkaXNwbGF5OmZsZXh9QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpey5pcy1mbGV4LW1vYmlsZXtkaXNwbGF5OmZsZXggIWltcG9ydGFudH19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpey5pcy1mbGV4LXRhYmxldHtkaXNwbGF5OmZsZXggIWltcG9ydGFudH19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpIGFuZCAobWF4LXdpZHRoOiA5NzlweCl7LmlzLWZsZXgtdGFibGV0LW9ubHl7ZGlzcGxheTpmbGV4ICFpbXBvcnRhbnR9fUBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk3OXB4KXsuaXMtZmxleC10b3VjaHtkaXNwbGF5OmZsZXggIWltcG9ydGFudH19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTgwcHgpey5pcy1mbGV4LWRlc2t0b3B7ZGlzcGxheTpmbGV4ICFpbXBvcnRhbnR9fUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk4MHB4KSBhbmQgKG1heC13aWR0aDogMTE3OXB4KXsuaXMtZmxleC1kZXNrdG9wLW9ubHl7ZGlzcGxheTpmbGV4ICFpbXBvcnRhbnR9fUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDExODBweCl7LmlzLWZsZXgtd2lkZXNjcmVlbntkaXNwbGF5OmZsZXggIWltcG9ydGFudH19LmlzLWlubGluZXtkaXNwbGF5OmlubGluZX1AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCl7LmlzLWlubGluZS1tb2JpbGV7ZGlzcGxheTppbmxpbmUgIWltcG9ydGFudH19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpey5pcy1pbmxpbmUtdGFibGV0e2Rpc3BsYXk6aW5saW5lICFpbXBvcnRhbnR9fUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSBhbmQgKG1heC13aWR0aDogOTc5cHgpey5pcy1pbmxpbmUtdGFibGV0LW9ubHl7ZGlzcGxheTppbmxpbmUgIWltcG9ydGFudH19QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTc5cHgpey5pcy1pbmxpbmUtdG91Y2h7ZGlzcGxheTppbmxpbmUgIWltcG9ydGFudH19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTgwcHgpey5pcy1pbmxpbmUtZGVza3RvcHtkaXNwbGF5OmlubGluZSAhaW1wb3J0YW50fX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5ODBweCkgYW5kIChtYXgtd2lkdGg6IDExNzlweCl7LmlzLWlubGluZS1kZXNrdG9wLW9ubHl7ZGlzcGxheTppbmxpbmUgIWltcG9ydGFudH19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTE4MHB4KXsuaXMtaW5saW5lLXdpZGVzY3JlZW57ZGlzcGxheTppbmxpbmUgIWltcG9ydGFudH19LmlzLWlubGluZS1ibG9ja3tkaXNwbGF5OmlubGluZS1ibG9ja31AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCl7LmlzLWlubGluZS1ibG9jay1tb2JpbGV7ZGlzcGxheTppbmxpbmUtYmxvY2sgIWltcG9ydGFudH19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpey5pcy1pbmxpbmUtYmxvY2stdGFibGV0e2Rpc3BsYXk6aW5saW5lLWJsb2NrICFpbXBvcnRhbnR9fUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSBhbmQgKG1heC13aWR0aDogOTc5cHgpey5pcy1pbmxpbmUtYmxvY2stdGFibGV0LW9ubHl7ZGlzcGxheTppbmxpbmUtYmxvY2sgIWltcG9ydGFudH19QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTc5cHgpey5pcy1pbmxpbmUtYmxvY2stdG91Y2h7ZGlzcGxheTppbmxpbmUtYmxvY2sgIWltcG9ydGFudH19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTgwcHgpey5pcy1pbmxpbmUtYmxvY2stZGVza3RvcHtkaXNwbGF5OmlubGluZS1ibG9jayAhaW1wb3J0YW50fX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5ODBweCkgYW5kIChtYXgtd2lkdGg6IDExNzlweCl7LmlzLWlubGluZS1ibG9jay1kZXNrdG9wLW9ubHl7ZGlzcGxheTppbmxpbmUtYmxvY2sgIWltcG9ydGFudH19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTE4MHB4KXsuaXMtaW5saW5lLWJsb2NrLXdpZGVzY3JlZW57ZGlzcGxheTppbmxpbmUtYmxvY2sgIWltcG9ydGFudH19LmlzLWlubGluZS1mbGV4e2Rpc3BsYXk6aW5saW5lLWZsZXh9QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpey5pcy1pbmxpbmUtZmxleC1tb2JpbGV7ZGlzcGxheTppbmxpbmUtZmxleCAhaW1wb3J0YW50fX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCl7LmlzLWlubGluZS1mbGV4LXRhYmxldHtkaXNwbGF5OmlubGluZS1mbGV4ICFpbXBvcnRhbnR9fUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSBhbmQgKG1heC13aWR0aDogOTc5cHgpey5pcy1pbmxpbmUtZmxleC10YWJsZXQtb25seXtkaXNwbGF5OmlubGluZS1mbGV4ICFpbXBvcnRhbnR9fUBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk3OXB4KXsuaXMtaW5saW5lLWZsZXgtdG91Y2h7ZGlzcGxheTppbmxpbmUtZmxleCAhaW1wb3J0YW50fX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5ODBweCl7LmlzLWlubGluZS1mbGV4LWRlc2t0b3B7ZGlzcGxheTppbmxpbmUtZmxleCAhaW1wb3J0YW50fX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5ODBweCkgYW5kIChtYXgtd2lkdGg6IDExNzlweCl7LmlzLWlubGluZS1mbGV4LWRlc2t0b3Atb25seXtkaXNwbGF5OmlubGluZS1mbGV4ICFpbXBvcnRhbnR9fUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDExODBweCl7LmlzLWlubGluZS1mbGV4LXdpZGVzY3JlZW57ZGlzcGxheTppbmxpbmUtZmxleCAhaW1wb3J0YW50fX0uaXMtY2xlYXJmaXg6YWZ0ZXJ7Y2xlYXI6Ym90aDtjb250ZW50OlxcXCIgXFxcIjtkaXNwbGF5OnRhYmxlfS5pcy1wdWxsZWQtbGVmdHtmbG9hdDpsZWZ0fS5pcy1wdWxsZWQtcmlnaHR7ZmxvYXQ6cmlnaHR9LmlzLWNsaXBwZWR7b3ZlcmZsb3c6aGlkZGVuICFpbXBvcnRhbnR9LmlzLW92ZXJsYXl7Ym90dG9tOjA7bGVmdDowO3Bvc2l0aW9uOmFic29sdXRlO3JpZ2h0OjA7dG9wOjB9Lmhhcy10ZXh0LWNlbnRlcmVke3RleHQtYWxpZ246Y2VudGVyfS5oYXMtdGV4dC1sZWZ0e3RleHQtYWxpZ246bGVmdH0uaGFzLXRleHQtcmlnaHR7dGV4dC1hbGlnbjpyaWdodH0uaXMtaGlkZGVue2Rpc3BsYXk6bm9uZSAhaW1wb3J0YW50fUBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KXsuaXMtaGlkZGVuLW1vYmlsZXtkaXNwbGF5Om5vbmUgIWltcG9ydGFudH19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpey5pcy1oaWRkZW4tdGFibGV0e2Rpc3BsYXk6bm9uZSAhaW1wb3J0YW50fX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCkgYW5kIChtYXgtd2lkdGg6IDk3OXB4KXsuaXMtaGlkZGVuLXRhYmxldC1vbmx5e2Rpc3BsYXk6bm9uZSAhaW1wb3J0YW50fX1AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5NzlweCl7LmlzLWhpZGRlbi10b3VjaHtkaXNwbGF5Om5vbmUgIWltcG9ydGFudH19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTgwcHgpey5pcy1oaWRkZW4tZGVza3RvcHtkaXNwbGF5Om5vbmUgIWltcG9ydGFudH19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTgwcHgpIGFuZCAobWF4LXdpZHRoOiAxMTc5cHgpey5pcy1oaWRkZW4tZGVza3RvcC1vbmx5e2Rpc3BsYXk6bm9uZSAhaW1wb3J0YW50fX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMTgwcHgpey5pcy1oaWRkZW4td2lkZXNjcmVlbntkaXNwbGF5Om5vbmUgIWltcG9ydGFudH19LmlzLWRpc2FibGVke3BvaW50ZXItZXZlbnRzOm5vbmV9LmlzLW1hcmdpbmxlc3N7bWFyZ2luOjAgIWltcG9ydGFudH0uaXMtcGFkZGluZ2xlc3N7cGFkZGluZzowICFpbXBvcnRhbnR9LmlzLXVuc2VsZWN0YWJsZXstd2Via2l0LXRvdWNoLWNhbGxvdXQ6bm9uZTstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmV9LmJveHtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym9yZGVyLXJhZGl1czo1cHg7Ym94LXNoYWRvdzowIDJweCAzcHggcmdiYSgxMCwxMCwxMCwwLjEpLDAgMCAwIDFweCByZ2JhKDEwLDEwLDEwLDAuMSk7ZGlzcGxheTpibG9jaztwYWRkaW5nOjIwcHh9LmJveDpub3QoOmxhc3QtY2hpbGQpe21hcmdpbi1ib3R0b206MjBweH1hLmJveDpob3ZlcixhLmJveDpmb2N1c3tib3gtc2hhZG93OjAgMnB4IDNweCByZ2JhKDEwLDEwLDEwLDAuMSksMCAwIDAgMXB4ICM0YThiZmF9YS5ib3g6YWN0aXZle2JveC1zaGFkb3c6aW5zZXQgMCAxcHggMnB4IHJnYmEoMTAsMTAsMTAsMC4yKSwwIDAgMCAxcHggIzRhOGJmYX0uYnV0dG9uey1tb3otYXBwZWFyYW5jZTpub25lOy13ZWJraXQtYXBwZWFyYW5jZTpub25lO2FsaWduLWl0ZW1zOmNlbnRlcjtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym9yZGVyOjFweCBzb2xpZCAjZGJkYmRiO2JvcmRlci1yYWRpdXM6M3B4O2NvbG9yOiMzNjM2MzY7ZGlzcGxheTppbmxpbmUtZmxleDtmb250LXNpemU6MTRweDtoZWlnaHQ6MzJweDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDtsaW5lLWhlaWdodDoyNHB4O3BhZGRpbmctbGVmdDo4cHg7cGFkZGluZy1yaWdodDo4cHg7cG9zaXRpb246cmVsYXRpdmU7dmVydGljYWwtYWxpZ246dG9wOy13ZWJraXQtdG91Y2gtY2FsbG91dDpub25lOy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTtjdXJzb3I6cG9pbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO3BhZGRpbmctbGVmdDoxMHB4O3BhZGRpbmctcmlnaHQ6MTBweDt0ZXh0LWFsaWduOmNlbnRlcjt3aGl0ZS1zcGFjZTpub3dyYXB9LmJ1dHRvbjpob3Zlcntib3JkZXItY29sb3I6I2I1YjViNX0uYnV0dG9uOmFjdGl2ZSwuYnV0dG9uOmZvY3VzLC5idXR0b24uaXMtYWN0aXZle2JvcmRlci1jb2xvcjojNGE4YmZhO291dGxpbmU6bm9uZX0uYnV0dG9uW2Rpc2FibGVkXSwuYnV0dG9uLmlzLWRpc2FibGVke2JhY2tncm91bmQtY29sb3I6I2Y1ZjVmNTtib3JkZXItY29sb3I6I2RiZGJkYjtjdXJzb3I6bm90LWFsbG93ZWQ7cG9pbnRlci1ldmVudHM6bm9uZX0uYnV0dG9uW2Rpc2FibGVkXTo6LW1vei1wbGFjZWhvbGRlciwuYnV0dG9uLmlzLWRpc2FibGVkOjotbW96LXBsYWNlaG9sZGVye2NvbG9yOnJnYmEoNTQsNTQsNTQsMC4zKX0uYnV0dG9uW2Rpc2FibGVkXTo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciwuYnV0dG9uLmlzLWRpc2FibGVkOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVye2NvbG9yOnJnYmEoNTQsNTQsNTQsMC4zKX0uYnV0dG9uW2Rpc2FibGVkXTotbW96LXBsYWNlaG9sZGVyLC5idXR0b24uaXMtZGlzYWJsZWQ6LW1vei1wbGFjZWhvbGRlcntjb2xvcjpyZ2JhKDU0LDU0LDU0LDAuMyl9LmJ1dHRvbltkaXNhYmxlZF06LW1zLWlucHV0LXBsYWNlaG9sZGVyLC5idXR0b24uaXMtZGlzYWJsZWQ6LW1zLWlucHV0LXBsYWNlaG9sZGVye2NvbG9yOnJnYmEoNTQsNTQsNTQsMC4zKX0uYnV0dG9uIHN0cm9uZ3tjb2xvcjppbmhlcml0fS5idXR0b24gc21hbGx7ZGlzcGxheTpibG9jaztmb250LXNpemU6MTFweDtsaW5lLWhlaWdodDoxO21hcmdpbi10b3A6NXB4fS5idXR0b24gLmljb246Zmlyc3QtY2hpbGQsLmJ1dHRvbiAudGFnOmZpcnN0LWNoaWxke21hcmdpbi1sZWZ0Oi0ycHg7bWFyZ2luLXJpZ2h0OjRweH0uYnV0dG9uIC5pY29uOmxhc3QtY2hpbGQsLmJ1dHRvbiAudGFnOmxhc3QtY2hpbGR7bWFyZ2luLWxlZnQ6NHB4O21hcmdpbi1yaWdodDotMnB4fS5idXR0b246aG92ZXIsLmJ1dHRvbjpmb2N1cywuYnV0dG9uLmlzLWFjdGl2ZXtjb2xvcjojMzYzNjM2fS5idXR0b246YWN0aXZle2JveC1zaGFkb3c6aW5zZXQgMCAxcHggMnB4IHJnYmEoMTAsMTAsMTAsMC4yKX0uYnV0dG9uLmlzLXdoaXRle2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXItd2lkdGg6MDtjb2xvcjojMGEwYTBhfS5idXR0b24uaXMtd2hpdGU6aG92ZXIsLmJ1dHRvbi5pcy13aGl0ZTpmb2N1cywuYnV0dG9uLmlzLXdoaXRlLmlzLWFjdGl2ZXtiYWNrZ3JvdW5kLWNvbG9yOiNmMmYyZjI7Ym9yZGVyLWNvbG9yOnRyYW5zcGFyZW50O2NvbG9yOiMwYTBhMGF9LmJ1dHRvbi5pcy13aGl0ZS5pcy1pbnZlcnRlZHtiYWNrZ3JvdW5kLWNvbG9yOiMwYTBhMGE7Y29sb3I6I2ZmZn0uYnV0dG9uLmlzLXdoaXRlLmlzLWludmVydGVkOmhvdmVye2JhY2tncm91bmQtY29sb3I6IzAwMH0uYnV0dG9uLmlzLXdoaXRlLmlzLWxvYWRpbmc6YWZ0ZXJ7Ym9yZGVyLWNvbG9yOnRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICMwYTBhMGEgIzBhMGEwYSAhaW1wb3J0YW50fS5idXR0b24uaXMtd2hpdGUuaXMtb3V0bGluZWR7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXItY29sb3I6I2ZmZjtib3JkZXItd2lkdGg6MXB4O2NvbG9yOiNmZmZ9LmJ1dHRvbi5pcy13aGl0ZS5pcy1vdXRsaW5lZDpob3ZlciwuYnV0dG9uLmlzLXdoaXRlLmlzLW91dGxpbmVkOmZvY3Vze2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXItY29sb3I6I2ZmZjtjb2xvcjojMGEwYTBhfS5idXR0b24uaXMtYmxhY2t7YmFja2dyb3VuZC1jb2xvcjojMGEwYTBhO2JvcmRlci13aWR0aDowO2NvbG9yOiNmZmZ9LmJ1dHRvbi5pcy1ibGFjazpob3ZlciwuYnV0dG9uLmlzLWJsYWNrOmZvY3VzLC5idXR0b24uaXMtYmxhY2suaXMtYWN0aXZle2JhY2tncm91bmQtY29sb3I6IzAwMDtib3JkZXItY29sb3I6dHJhbnNwYXJlbnQ7Y29sb3I6I2ZmZn0uYnV0dG9uLmlzLWJsYWNrLmlzLWludmVydGVke2JhY2tncm91bmQtY29sb3I6I2ZmZjtjb2xvcjojMGEwYTBhfS5idXR0b24uaXMtYmxhY2suaXMtaW52ZXJ0ZWQ6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZjJmMmYyfS5idXR0b24uaXMtYmxhY2suaXMtbG9hZGluZzphZnRlcntib3JkZXItY29sb3I6dHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgI2ZmZiAjZmZmICFpbXBvcnRhbnR9LmJ1dHRvbi5pcy1ibGFjay5pcy1vdXRsaW5lZHtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlci1jb2xvcjojMGEwYTBhO2JvcmRlci13aWR0aDoxcHg7Y29sb3I6IzBhMGEwYX0uYnV0dG9uLmlzLWJsYWNrLmlzLW91dGxpbmVkOmhvdmVyLC5idXR0b24uaXMtYmxhY2suaXMtb3V0bGluZWQ6Zm9jdXN7YmFja2dyb3VuZC1jb2xvcjojMGEwYTBhO2JvcmRlci1jb2xvcjojMGEwYTBhO2NvbG9yOiNmZmZ9LmJ1dHRvbi5pcy1saWdodHtiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjU7Ym9yZGVyLXdpZHRoOjA7Y29sb3I6IzM2MzYzNn0uYnV0dG9uLmlzLWxpZ2h0OmhvdmVyLC5idXR0b24uaXMtbGlnaHQ6Zm9jdXMsLmJ1dHRvbi5pcy1saWdodC5pcy1hY3RpdmV7YmFja2dyb3VuZC1jb2xvcjojZThlOGU4O2JvcmRlci1jb2xvcjp0cmFuc3BhcmVudDtjb2xvcjojMzYzNjM2fS5idXR0b24uaXMtbGlnaHQuaXMtaW52ZXJ0ZWR7YmFja2dyb3VuZC1jb2xvcjojMzYzNjM2O2NvbG9yOiNmNWY1ZjV9LmJ1dHRvbi5pcy1saWdodC5pcy1pbnZlcnRlZDpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiMyOTI5Mjl9LmJ1dHRvbi5pcy1saWdodC5pcy1sb2FkaW5nOmFmdGVye2JvcmRlci1jb2xvcjp0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjMzYzNjM2ICMzNjM2MzYgIWltcG9ydGFudH0uYnV0dG9uLmlzLWxpZ2h0LmlzLW91dGxpbmVke2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyLWNvbG9yOiNmNWY1ZjU7Ym9yZGVyLXdpZHRoOjFweDtjb2xvcjojZjVmNWY1fS5idXR0b24uaXMtbGlnaHQuaXMtb3V0bGluZWQ6aG92ZXIsLmJ1dHRvbi5pcy1saWdodC5pcy1vdXRsaW5lZDpmb2N1c3tiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjU7Ym9yZGVyLWNvbG9yOiNmNWY1ZjU7Y29sb3I6IzM2MzYzNn0uYnV0dG9uLmlzLWRhcmt7YmFja2dyb3VuZC1jb2xvcjojMzYzNjM2O2JvcmRlci13aWR0aDowO2NvbG9yOiNmNWY1ZjV9LmJ1dHRvbi5pcy1kYXJrOmhvdmVyLC5idXR0b24uaXMtZGFyazpmb2N1cywuYnV0dG9uLmlzLWRhcmsuaXMtYWN0aXZle2JhY2tncm91bmQtY29sb3I6IzI5MjkyOTtib3JkZXItY29sb3I6dHJhbnNwYXJlbnQ7Y29sb3I6I2Y1ZjVmNX0uYnV0dG9uLmlzLWRhcmsuaXMtaW52ZXJ0ZWR7YmFja2dyb3VuZC1jb2xvcjojZjVmNWY1O2NvbG9yOiMzNjM2MzZ9LmJ1dHRvbi5pcy1kYXJrLmlzLWludmVydGVkOmhvdmVye2JhY2tncm91bmQtY29sb3I6I2U4ZThlOH0uYnV0dG9uLmlzLWRhcmsuaXMtbG9hZGluZzphZnRlcntib3JkZXItY29sb3I6dHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgI2Y1ZjVmNSAjZjVmNWY1ICFpbXBvcnRhbnR9LmJ1dHRvbi5pcy1kYXJrLmlzLW91dGxpbmVke2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyLWNvbG9yOiMzNjM2MzY7Ym9yZGVyLXdpZHRoOjFweDtjb2xvcjojMzYzNjM2fS5idXR0b24uaXMtZGFyay5pcy1vdXRsaW5lZDpob3ZlciwuYnV0dG9uLmlzLWRhcmsuaXMtb3V0bGluZWQ6Zm9jdXN7YmFja2dyb3VuZC1jb2xvcjojMzYzNjM2O2JvcmRlci1jb2xvcjojMzYzNjM2O2NvbG9yOiNmNWY1ZjV9LmJ1dHRvbi5pcy1wcmltYXJ5e2JhY2tncm91bmQtY29sb3I6IzAwZDFiMjtib3JkZXItd2lkdGg6MDtjb2xvcjojZmZmfS5idXR0b24uaXMtcHJpbWFyeTpob3ZlciwuYnV0dG9uLmlzLXByaW1hcnk6Zm9jdXMsLmJ1dHRvbi5pcy1wcmltYXJ5LmlzLWFjdGl2ZXtiYWNrZ3JvdW5kLWNvbG9yOiMwMGI4OWM7Ym9yZGVyLWNvbG9yOnRyYW5zcGFyZW50O2NvbG9yOiNmZmZ9LmJ1dHRvbi5pcy1wcmltYXJ5LmlzLWludmVydGVke2JhY2tncm91bmQtY29sb3I6I2ZmZjtjb2xvcjojMDBkMWIyfS5idXR0b24uaXMtcHJpbWFyeS5pcy1pbnZlcnRlZDpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNmMmYyZjJ9LmJ1dHRvbi5pcy1wcmltYXJ5LmlzLWxvYWRpbmc6YWZ0ZXJ7Ym9yZGVyLWNvbG9yOnRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICNmZmYgI2ZmZiAhaW1wb3J0YW50fS5idXR0b24uaXMtcHJpbWFyeS5pcy1vdXRsaW5lZHtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlci1jb2xvcjojMDBkMWIyO2JvcmRlci13aWR0aDoxcHg7Y29sb3I6IzAwZDFiMn0uYnV0dG9uLmlzLXByaW1hcnkuaXMtb3V0bGluZWQ6aG92ZXIsLmJ1dHRvbi5pcy1wcmltYXJ5LmlzLW91dGxpbmVkOmZvY3Vze2JhY2tncm91bmQtY29sb3I6IzAwZDFiMjtib3JkZXItY29sb3I6IzAwZDFiMjtjb2xvcjojZmZmfS5idXR0b24uaXMtaW5mb3tiYWNrZ3JvdW5kLWNvbG9yOiMzMjczZGM7Ym9yZGVyLXdpZHRoOjA7Y29sb3I6I2ZmZn0uYnV0dG9uLmlzLWluZm86aG92ZXIsLmJ1dHRvbi5pcy1pbmZvOmZvY3VzLC5idXR0b24uaXMtaW5mby5pcy1hY3RpdmV7YmFja2dyb3VuZC1jb2xvcjojMjM2NmQxO2JvcmRlci1jb2xvcjp0cmFuc3BhcmVudDtjb2xvcjojZmZmfS5idXR0b24uaXMtaW5mby5pcy1pbnZlcnRlZHtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Y29sb3I6IzMyNzNkY30uYnV0dG9uLmlzLWluZm8uaXMtaW52ZXJ0ZWQ6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZjJmMmYyfS5idXR0b24uaXMtaW5mby5pcy1sb2FkaW5nOmFmdGVye2JvcmRlci1jb2xvcjp0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjZmZmICNmZmYgIWltcG9ydGFudH0uYnV0dG9uLmlzLWluZm8uaXMtb3V0bGluZWR7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXItY29sb3I6IzMyNzNkYztib3JkZXItd2lkdGg6MXB4O2NvbG9yOiMzMjczZGN9LmJ1dHRvbi5pcy1pbmZvLmlzLW91dGxpbmVkOmhvdmVyLC5idXR0b24uaXMtaW5mby5pcy1vdXRsaW5lZDpmb2N1c3tiYWNrZ3JvdW5kLWNvbG9yOiMzMjczZGM7Ym9yZGVyLWNvbG9yOiMzMjczZGM7Y29sb3I6I2ZmZn0uYnV0dG9uLmlzLXN1Y2Nlc3N7YmFja2dyb3VuZC1jb2xvcjojMjNkMTYwO2JvcmRlci13aWR0aDowO2NvbG9yOiNmZmZ9LmJ1dHRvbi5pcy1zdWNjZXNzOmhvdmVyLC5idXR0b24uaXMtc3VjY2Vzczpmb2N1cywuYnV0dG9uLmlzLXN1Y2Nlc3MuaXMtYWN0aXZle2JhY2tncm91bmQtY29sb3I6IzIwYmM1Njtib3JkZXItY29sb3I6dHJhbnNwYXJlbnQ7Y29sb3I6I2ZmZn0uYnV0dG9uLmlzLXN1Y2Nlc3MuaXMtaW52ZXJ0ZWR7YmFja2dyb3VuZC1jb2xvcjojZmZmO2NvbG9yOiMyM2QxNjB9LmJ1dHRvbi5pcy1zdWNjZXNzLmlzLWludmVydGVkOmhvdmVye2JhY2tncm91bmQtY29sb3I6I2YyZjJmMn0uYnV0dG9uLmlzLXN1Y2Nlc3MuaXMtbG9hZGluZzphZnRlcntib3JkZXItY29sb3I6dHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgI2ZmZiAjZmZmICFpbXBvcnRhbnR9LmJ1dHRvbi5pcy1zdWNjZXNzLmlzLW91dGxpbmVke2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyLWNvbG9yOiMyM2QxNjA7Ym9yZGVyLXdpZHRoOjFweDtjb2xvcjojMjNkMTYwfS5idXR0b24uaXMtc3VjY2Vzcy5pcy1vdXRsaW5lZDpob3ZlciwuYnV0dG9uLmlzLXN1Y2Nlc3MuaXMtb3V0bGluZWQ6Zm9jdXN7YmFja2dyb3VuZC1jb2xvcjojMjNkMTYwO2JvcmRlci1jb2xvcjojMjNkMTYwO2NvbG9yOiNmZmZ9LmJ1dHRvbi5pcy13YXJuaW5ne2JhY2tncm91bmQtY29sb3I6I2ZmZGQ1Nztib3JkZXItd2lkdGg6MDtjb2xvcjpyZ2JhKDAsMCwwLDAuNyl9LmJ1dHRvbi5pcy13YXJuaW5nOmhvdmVyLC5idXR0b24uaXMtd2FybmluZzpmb2N1cywuYnV0dG9uLmlzLXdhcm5pbmcuaXMtYWN0aXZle2JhY2tncm91bmQtY29sb3I6I2ZmZDgzZDtib3JkZXItY29sb3I6dHJhbnNwYXJlbnQ7Y29sb3I6cmdiYSgwLDAsMCwwLjcpfS5idXR0b24uaXMtd2FybmluZy5pcy1pbnZlcnRlZHtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsMC43KTtjb2xvcjojZmZkZDU3fS5idXR0b24uaXMtd2FybmluZy5pcy1pbnZlcnRlZDpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsMC43KX0uYnV0dG9uLmlzLXdhcm5pbmcuaXMtbG9hZGluZzphZnRlcntib3JkZXItY29sb3I6dHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgcmdiYSgwLDAsMCwwLjcpIHJnYmEoMCwwLDAsMC43KSAhaW1wb3J0YW50fS5idXR0b24uaXMtd2FybmluZy5pcy1vdXRsaW5lZHtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlci1jb2xvcjojZmZkZDU3O2JvcmRlci13aWR0aDoxcHg7Y29sb3I6I2ZmZGQ1N30uYnV0dG9uLmlzLXdhcm5pbmcuaXMtb3V0bGluZWQ6aG92ZXIsLmJ1dHRvbi5pcy13YXJuaW5nLmlzLW91dGxpbmVkOmZvY3Vze2JhY2tncm91bmQtY29sb3I6I2ZmZGQ1Nztib3JkZXItY29sb3I6I2ZmZGQ1Nztjb2xvcjpyZ2JhKDAsMCwwLDAuNyl9LmJ1dHRvbi5pcy1kYW5nZXJ7YmFja2dyb3VuZC1jb2xvcjojZmYzODYwO2JvcmRlci13aWR0aDowO2NvbG9yOiNmZmZ9LmJ1dHRvbi5pcy1kYW5nZXI6aG92ZXIsLmJ1dHRvbi5pcy1kYW5nZXI6Zm9jdXMsLmJ1dHRvbi5pcy1kYW5nZXIuaXMtYWN0aXZle2JhY2tncm91bmQtY29sb3I6I2ZmMWY0Yjtib3JkZXItY29sb3I6dHJhbnNwYXJlbnQ7Y29sb3I6I2ZmZn0uYnV0dG9uLmlzLWRhbmdlci5pcy1pbnZlcnRlZHtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Y29sb3I6I2ZmMzg2MH0uYnV0dG9uLmlzLWRhbmdlci5pcy1pbnZlcnRlZDpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNmMmYyZjJ9LmJ1dHRvbi5pcy1kYW5nZXIuaXMtbG9hZGluZzphZnRlcntib3JkZXItY29sb3I6dHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgI2ZmZiAjZmZmICFpbXBvcnRhbnR9LmJ1dHRvbi5pcy1kYW5nZXIuaXMtb3V0bGluZWR7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXItY29sb3I6I2ZmMzg2MDtib3JkZXItd2lkdGg6MXB4O2NvbG9yOiNmZjM4NjB9LmJ1dHRvbi5pcy1kYW5nZXIuaXMtb3V0bGluZWQ6aG92ZXIsLmJ1dHRvbi5pcy1kYW5nZXIuaXMtb3V0bGluZWQ6Zm9jdXN7YmFja2dyb3VuZC1jb2xvcjojZmYzODYwO2JvcmRlci1jb2xvcjojZmYzODYwO2NvbG9yOiNmZmZ9LmJ1dHRvbi5pcy1saW5re2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyLXdpZHRoOjA7Y29sb3I6IzRhNGE0YTt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lfS5idXR0b24uaXMtbGluazpob3ZlciwuYnV0dG9uLmlzLWxpbms6Zm9jdXN7YmFja2dyb3VuZC1jb2xvcjojZjVmNWY1O2NvbG9yOiMzNjM2MzZ9LmJ1dHRvbi5pcy1zbWFsbHtib3JkZXItcmFkaXVzOjJweDtmb250LXNpemU6MTFweDtoZWlnaHQ6MjRweDtsaW5lLWhlaWdodDoxNnB4O3BhZGRpbmctbGVmdDo2cHg7cGFkZGluZy1yaWdodDo2cHh9LmJ1dHRvbi5pcy1tZWRpdW17Zm9udC1zaXplOjE4cHg7aGVpZ2h0OjQwcHg7cGFkZGluZy1sZWZ0OjE0cHg7cGFkZGluZy1yaWdodDoxNHB4fS5idXR0b24uaXMtbGFyZ2V7Zm9udC1zaXplOjIycHg7aGVpZ2h0OjQ4cHg7cGFkZGluZy1sZWZ0OjIwcHg7cGFkZGluZy1yaWdodDoyMHB4fS5idXR0b25bZGlzYWJsZWRdLC5idXR0b24uaXMtZGlzYWJsZWR7b3BhY2l0eTowLjV9LmJ1dHRvbi5pcy1mdWxsd2lkdGh7ZGlzcGxheTpmbGV4O3dpZHRoOjEwMCV9LmJ1dHRvbi5pcy1sb2FkaW5ne2NvbG9yOnRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7cG9pbnRlci1ldmVudHM6bm9uZX0uYnV0dG9uLmlzLWxvYWRpbmc6YWZ0ZXJ7YW5pbWF0aW9uOnNwaW5Bcm91bmQgNTAwbXMgaW5maW5pdGUgbGluZWFyO2JvcmRlcjoycHggc29saWQgI2RiZGJkYjtib3JkZXItcmFkaXVzOjI5MDQ4NnB4O2JvcmRlci1yaWdodC1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXItdG9wLWNvbG9yOnRyYW5zcGFyZW50O2NvbnRlbnQ6XFxcIlxcXCI7ZGlzcGxheTpibG9jaztoZWlnaHQ6MTZweDtwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxNnB4O2xlZnQ6NTAlO21hcmdpbi1sZWZ0Oi04cHg7bWFyZ2luLXRvcDotOHB4O3Bvc2l0aW9uOmFic29sdXRlO3RvcDo1MCU7cG9zaXRpb246YWJzb2x1dGUgIWltcG9ydGFudH0uY29udGVudHtjb2xvcjojNGE0YTRhfS5jb250ZW50Om5vdCg6bGFzdC1jaGlsZCl7bWFyZ2luLWJvdHRvbToyMHB4fS5jb250ZW50IGE6bm90KC5idXR0b24pe2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNkYmRiZGJ9LmNvbnRlbnQgYTpub3QoLmJ1dHRvbik6dmlzaXRlZHtjb2xvcjojYjg2YmZmfS5jb250ZW50IGE6bm90KC5idXR0b24pOmhvdmVye2JvcmRlci1ib3R0b20tY29sb3I6IzRhOGJmYX0uY29udGVudCBsaStsaXttYXJnaW4tdG9wOjAuMjVlbX0uY29udGVudCBibG9ja3F1b3RlOm5vdCg6bGFzdC1jaGlsZCksLmNvbnRlbnQgcDpub3QoOmxhc3QtY2hpbGQpLC5jb250ZW50IG9sOm5vdCg6bGFzdC1jaGlsZCksLmNvbnRlbnQgdWw6bm90KDpsYXN0LWNoaWxkKXttYXJnaW4tYm90dG9tOjFlbX0uY29udGVudCBoMSwuY29udGVudCBoMiwuY29udGVudCBoMywuY29udGVudCBoNCwuY29udGVudCBoNSwuY29udGVudCBoNntjb2xvcjojMzYzNjM2O2ZvbnQtd2VpZ2h0OjMwMDtsaW5lLWhlaWdodDoxLjEyNTttYXJnaW4tYm90dG9tOjIwcHh9LmNvbnRlbnQgaDE6bm90KDpmaXJzdC1jaGlsZCksLmNvbnRlbnQgaDI6bm90KDpmaXJzdC1jaGlsZCksLmNvbnRlbnQgaDM6bm90KDpmaXJzdC1jaGlsZCl7bWFyZ2luLXRvcDo0MHB4fS5jb250ZW50IGJsb2NrcXVvdGV7YmFja2dyb3VuZC1jb2xvcjojZjVmNWY1O2JvcmRlci1sZWZ0OjVweCBzb2xpZCAjZGJkYmRiO3BhZGRpbmc6MS41ZW19LmNvbnRlbnQgaDF7Zm9udC1zaXplOjJlbX0uY29udGVudCBoMntmb250LXNpemU6MS43NWVtfS5jb250ZW50IGgze2ZvbnQtc2l6ZToxLjVlbX0uY29udGVudCBoNHtmb250LXNpemU6MS4yNWVtfS5jb250ZW50IGg1e2ZvbnQtc2l6ZToxLjEyNWVtfS5jb250ZW50IGg2e2ZvbnQtc2l6ZToxZW19LmNvbnRlbnQgb2x7bGlzdC1zdHlsZTpkZWNpbWFsIG91dHNpZGU7bWFyZ2luLWxlZnQ6MmVtO21hcmdpbi1yaWdodDoyZW07bWFyZ2luLXRvcDoxZW19LmNvbnRlbnQgdWx7bGlzdC1zdHlsZTpkaXNjIG91dHNpZGU7bWFyZ2luLWxlZnQ6MmVtO21hcmdpbi1yaWdodDoyZW07bWFyZ2luLXRvcDoxZW19LmNvbnRlbnQgdWwgdWx7bGlzdC1zdHlsZS10eXBlOmNpcmNsZTttYXJnaW4tdG9wOjAuNWVtfS5jb250ZW50IHVsIHVsIHVse2xpc3Qtc3R5bGUtdHlwZTpzcXVhcmV9LmNvbnRlbnQuaXMtbWVkaXVte2ZvbnQtc2l6ZToxOHB4fS5jb250ZW50LmlzLW1lZGl1bSBjb2Rle2ZvbnQtc2l6ZToxNHB4fS5jb250ZW50LmlzLWxhcmdle2ZvbnQtc2l6ZToyNHB4fS5jb250ZW50LmlzLWxhcmdlIGNvZGV7Zm9udC1zaXplOjE4cHh9LmlucHV0LC50ZXh0YXJlYXstbW96LWFwcGVhcmFuY2U6bm9uZTstd2Via2l0LWFwcGVhcmFuY2U6bm9uZTthbGlnbi1pdGVtczpjZW50ZXI7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlcjoxcHggc29saWQgI2RiZGJkYjtib3JkZXItcmFkaXVzOjNweDtjb2xvcjojMzYzNjM2O2Rpc3BsYXk6aW5saW5lLWZsZXg7Zm9udC1zaXplOjE0cHg7aGVpZ2h0OjMycHg7anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7bGluZS1oZWlnaHQ6MjRweDtwYWRkaW5nLWxlZnQ6OHB4O3BhZGRpbmctcmlnaHQ6OHB4O3Bvc2l0aW9uOnJlbGF0aXZlO3ZlcnRpY2FsLWFsaWduOnRvcDtib3gtc2hhZG93Omluc2V0IDAgMXB4IDJweCByZ2JhKDEwLDEwLDEwLDAuMSk7bWF4LXdpZHRoOjEwMCU7d2lkdGg6MTAwJX0uaW5wdXQ6aG92ZXIsLnRleHRhcmVhOmhvdmVye2JvcmRlci1jb2xvcjojYjViNWI1fS5pbnB1dDphY3RpdmUsLmlucHV0OmZvY3VzLC5pbnB1dC5pcy1hY3RpdmUsLnRleHRhcmVhOmFjdGl2ZSwudGV4dGFyZWE6Zm9jdXMsLnRleHRhcmVhLmlzLWFjdGl2ZXtib3JkZXItY29sb3I6IzRhOGJmYTtvdXRsaW5lOm5vbmV9LmlucHV0W2Rpc2FibGVkXSwuaW5wdXQuaXMtZGlzYWJsZWQsLnRleHRhcmVhW2Rpc2FibGVkXSwudGV4dGFyZWEuaXMtZGlzYWJsZWR7YmFja2dyb3VuZC1jb2xvcjojZjVmNWY1O2JvcmRlci1jb2xvcjojZGJkYmRiO2N1cnNvcjpub3QtYWxsb3dlZDtwb2ludGVyLWV2ZW50czpub25lfS5pbnB1dFtkaXNhYmxlZF06Oi1tb3otcGxhY2Vob2xkZXIsLmlucHV0LmlzLWRpc2FibGVkOjotbW96LXBsYWNlaG9sZGVyLC50ZXh0YXJlYVtkaXNhYmxlZF06Oi1tb3otcGxhY2Vob2xkZXIsLnRleHRhcmVhLmlzLWRpc2FibGVkOjotbW96LXBsYWNlaG9sZGVye2NvbG9yOnJnYmEoNTQsNTQsNTQsMC4zKX0uaW5wdXRbZGlzYWJsZWRdOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyLC5pbnB1dC5pcy1kaXNhYmxlZDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciwudGV4dGFyZWFbZGlzYWJsZWRdOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyLC50ZXh0YXJlYS5pcy1kaXNhYmxlZDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlcntjb2xvcjpyZ2JhKDU0LDU0LDU0LDAuMyl9LmlucHV0W2Rpc2FibGVkXTotbW96LXBsYWNlaG9sZGVyLC5pbnB1dC5pcy1kaXNhYmxlZDotbW96LXBsYWNlaG9sZGVyLC50ZXh0YXJlYVtkaXNhYmxlZF06LW1vei1wbGFjZWhvbGRlciwudGV4dGFyZWEuaXMtZGlzYWJsZWQ6LW1vei1wbGFjZWhvbGRlcntjb2xvcjpyZ2JhKDU0LDU0LDU0LDAuMyl9LmlucHV0W2Rpc2FibGVkXTotbXMtaW5wdXQtcGxhY2Vob2xkZXIsLmlucHV0LmlzLWRpc2FibGVkOi1tcy1pbnB1dC1wbGFjZWhvbGRlciwudGV4dGFyZWFbZGlzYWJsZWRdOi1tcy1pbnB1dC1wbGFjZWhvbGRlciwudGV4dGFyZWEuaXMtZGlzYWJsZWQ6LW1zLWlucHV0LXBsYWNlaG9sZGVye2NvbG9yOnJnYmEoNTQsNTQsNTQsMC4zKX0uaW5wdXQuaXMtd2hpdGUsLnRleHRhcmVhLmlzLXdoaXRle2JvcmRlci1jb2xvcjojZmZmfS5pbnB1dC5pcy1ibGFjaywudGV4dGFyZWEuaXMtYmxhY2t7Ym9yZGVyLWNvbG9yOiMwYTBhMGF9LmlucHV0LmlzLWxpZ2h0LC50ZXh0YXJlYS5pcy1saWdodHtib3JkZXItY29sb3I6I2Y1ZjVmNX0uaW5wdXQuaXMtZGFyaywudGV4dGFyZWEuaXMtZGFya3tib3JkZXItY29sb3I6IzM2MzYzNn0uaW5wdXQuaXMtcHJpbWFyeSwudGV4dGFyZWEuaXMtcHJpbWFyeXtib3JkZXItY29sb3I6IzAwZDFiMn0uaW5wdXQuaXMtaW5mbywudGV4dGFyZWEuaXMtaW5mb3tib3JkZXItY29sb3I6IzMyNzNkY30uaW5wdXQuaXMtc3VjY2VzcywudGV4dGFyZWEuaXMtc3VjY2Vzc3tib3JkZXItY29sb3I6IzIzZDE2MH0uaW5wdXQuaXMtd2FybmluZywudGV4dGFyZWEuaXMtd2FybmluZ3tib3JkZXItY29sb3I6I2ZmZGQ1N30uaW5wdXQuaXMtZGFuZ2VyLC50ZXh0YXJlYS5pcy1kYW5nZXJ7Ym9yZGVyLWNvbG9yOiNmZjM4NjB9LmlucHV0W3R5cGU9XFxcInNlYXJjaFxcXCJdLC50ZXh0YXJlYVt0eXBlPVxcXCJzZWFyY2hcXFwiXXtib3JkZXItcmFkaXVzOjI5MDQ4NnB4fS5pbnB1dC5pcy1zbWFsbCwudGV4dGFyZWEuaXMtc21hbGx7Ym9yZGVyLXJhZGl1czoycHg7Zm9udC1zaXplOjExcHg7aGVpZ2h0OjI0cHg7bGluZS1oZWlnaHQ6MTZweDtwYWRkaW5nLWxlZnQ6NnB4O3BhZGRpbmctcmlnaHQ6NnB4fS5pbnB1dC5pcy1tZWRpdW0sLnRleHRhcmVhLmlzLW1lZGl1bXtmb250LXNpemU6MThweDtoZWlnaHQ6NDBweDtsaW5lLWhlaWdodDozMnB4O3BhZGRpbmctbGVmdDoxMHB4O3BhZGRpbmctcmlnaHQ6MTBweH0uaW5wdXQuaXMtbGFyZ2UsLnRleHRhcmVhLmlzLWxhcmdle2ZvbnQtc2l6ZToyNHB4O2hlaWdodDo0OHB4O2xpbmUtaGVpZ2h0OjQwcHg7cGFkZGluZy1sZWZ0OjEycHg7cGFkZGluZy1yaWdodDoxMnB4fS5pbnB1dC5pcy1mdWxsd2lkdGgsLnRleHRhcmVhLmlzLWZ1bGx3aWR0aHtkaXNwbGF5OmJsb2NrO3dpZHRoOjEwMCV9LmlucHV0LmlzLWlubGluZSwudGV4dGFyZWEuaXMtaW5saW5le2Rpc3BsYXk6aW5saW5lO3dpZHRoOmF1dG99LnRleHRhcmVhe2Rpc3BsYXk6YmxvY2s7bGluZS1oZWlnaHQ6MS4yO21heC1oZWlnaHQ6NjAwcHg7bWF4LXdpZHRoOjEwMCU7bWluLWhlaWdodDoxMjBweDttaW4td2lkdGg6MTAwJTtwYWRkaW5nOjEwcHg7cmVzaXplOnZlcnRpY2FsfS5jaGVja2JveCwucmFkaW97Y3Vyc29yOnBvaW50ZXI7ZGlzcGxheTppbmxpbmUtYmxvY2s7bGluZS1oZWlnaHQ6MTZweDtwb3NpdGlvbjpyZWxhdGl2ZTt2ZXJ0aWNhbC1hbGlnbjp0b3B9LmNoZWNrYm94IGlucHV0LC5yYWRpbyBpbnB1dHtjdXJzb3I6cG9pbnRlcn0uY2hlY2tib3g6aG92ZXIsLnJhZGlvOmhvdmVye2NvbG9yOiMzNjM2MzZ9LmNoZWNrYm94LmlzLWRpc2FibGVkLC5yYWRpby5pcy1kaXNhYmxlZHtjb2xvcjojZGJkYmRiO3BvaW50ZXItZXZlbnRzOm5vbmV9LmNoZWNrYm94LmlzLWRpc2FibGVkIGlucHV0LC5yYWRpby5pcy1kaXNhYmxlZCBpbnB1dHtwb2ludGVyLWV2ZW50czpub25lfS5yYWRpbysucmFkaW97bWFyZ2luLWxlZnQ6MTBweH0uc2VsZWN0e2Rpc3BsYXk6aW5saW5lLWJsb2NrO2hlaWdodDozMnB4O3Bvc2l0aW9uOnJlbGF0aXZlO3ZlcnRpY2FsLWFsaWduOnRvcH0uc2VsZWN0IHNlbGVjdHstbW96LWFwcGVhcmFuY2U6bm9uZTstd2Via2l0LWFwcGVhcmFuY2U6bm9uZTthbGlnbi1pdGVtczpjZW50ZXI7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlcjoxcHggc29saWQgI2RiZGJkYjtib3JkZXItcmFkaXVzOjNweDtjb2xvcjojMzYzNjM2O2Rpc3BsYXk6aW5saW5lLWZsZXg7Zm9udC1zaXplOjE0cHg7aGVpZ2h0OjMycHg7anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7bGluZS1oZWlnaHQ6MjRweDtwYWRkaW5nLWxlZnQ6OHB4O3BhZGRpbmctcmlnaHQ6OHB4O3Bvc2l0aW9uOnJlbGF0aXZlO3ZlcnRpY2FsLWFsaWduOnRvcDtjdXJzb3I6cG9pbnRlcjtkaXNwbGF5OmJsb2NrO291dGxpbmU6bm9uZTtwYWRkaW5nLXJpZ2h0OjM2cHh9LnNlbGVjdCBzZWxlY3Q6aG92ZXJ7Ym9yZGVyLWNvbG9yOiNiNWI1YjV9LnNlbGVjdCBzZWxlY3Q6YWN0aXZlLC5zZWxlY3Qgc2VsZWN0OmZvY3VzLC5zZWxlY3Qgc2VsZWN0LmlzLWFjdGl2ZXtib3JkZXItY29sb3I6IzRhOGJmYTtvdXRsaW5lOm5vbmV9LnNlbGVjdCBzZWxlY3RbZGlzYWJsZWRdLC5zZWxlY3Qgc2VsZWN0LmlzLWRpc2FibGVke2JhY2tncm91bmQtY29sb3I6I2Y1ZjVmNTtib3JkZXItY29sb3I6I2RiZGJkYjtjdXJzb3I6bm90LWFsbG93ZWQ7cG9pbnRlci1ldmVudHM6bm9uZX0uc2VsZWN0IHNlbGVjdFtkaXNhYmxlZF06Oi1tb3otcGxhY2Vob2xkZXIsLnNlbGVjdCBzZWxlY3QuaXMtZGlzYWJsZWQ6Oi1tb3otcGxhY2Vob2xkZXJ7Y29sb3I6cmdiYSg1NCw1NCw1NCwwLjMpfS5zZWxlY3Qgc2VsZWN0W2Rpc2FibGVkXTo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciwuc2VsZWN0IHNlbGVjdC5pcy1kaXNhYmxlZDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlcntjb2xvcjpyZ2JhKDU0LDU0LDU0LDAuMyl9LnNlbGVjdCBzZWxlY3RbZGlzYWJsZWRdOi1tb3otcGxhY2Vob2xkZXIsLnNlbGVjdCBzZWxlY3QuaXMtZGlzYWJsZWQ6LW1vei1wbGFjZWhvbGRlcntjb2xvcjpyZ2JhKDU0LDU0LDU0LDAuMyl9LnNlbGVjdCBzZWxlY3RbZGlzYWJsZWRdOi1tcy1pbnB1dC1wbGFjZWhvbGRlciwuc2VsZWN0IHNlbGVjdC5pcy1kaXNhYmxlZDotbXMtaW5wdXQtcGxhY2Vob2xkZXJ7Y29sb3I6cmdiYSg1NCw1NCw1NCwwLjMpfS5zZWxlY3Qgc2VsZWN0LmlzLXdoaXRle2JvcmRlci1jb2xvcjojZmZmfS5zZWxlY3Qgc2VsZWN0LmlzLWJsYWNre2JvcmRlci1jb2xvcjojMGEwYTBhfS5zZWxlY3Qgc2VsZWN0LmlzLWxpZ2h0e2JvcmRlci1jb2xvcjojZjVmNWY1fS5zZWxlY3Qgc2VsZWN0LmlzLWRhcmt7Ym9yZGVyLWNvbG9yOiMzNjM2MzZ9LnNlbGVjdCBzZWxlY3QuaXMtcHJpbWFyeXtib3JkZXItY29sb3I6IzAwZDFiMn0uc2VsZWN0IHNlbGVjdC5pcy1pbmZve2JvcmRlci1jb2xvcjojMzI3M2RjfS5zZWxlY3Qgc2VsZWN0LmlzLXN1Y2Nlc3N7Ym9yZGVyLWNvbG9yOiMyM2QxNjB9LnNlbGVjdCBzZWxlY3QuaXMtd2FybmluZ3tib3JkZXItY29sb3I6I2ZmZGQ1N30uc2VsZWN0IHNlbGVjdC5pcy1kYW5nZXJ7Ym9yZGVyLWNvbG9yOiNmZjM4NjB9LnNlbGVjdCBzZWxlY3Q6aG92ZXJ7Ym9yZGVyLWNvbG9yOiNiNWI1YjV9LnNlbGVjdCBzZWxlY3Q6Om1zLWV4cGFuZHtkaXNwbGF5Om5vbmV9LnNlbGVjdC5pcy1mdWxsd2lkdGh7d2lkdGg6MTAwJX0uc2VsZWN0LmlzLWZ1bGx3aWR0aCBzZWxlY3R7d2lkdGg6MTAwJX0uc2VsZWN0OmFmdGVye2JvcmRlcjoxcHggc29saWQgIzRhOGJmYTtib3JkZXItcmlnaHQ6MDtib3JkZXItdG9wOjA7Y29udGVudDpcXFwiIFxcXCI7ZGlzcGxheTpibG9jaztoZWlnaHQ6N3B4O3BvaW50ZXItZXZlbnRzOm5vbmU7cG9zaXRpb246YWJzb2x1dGU7dHJhbnNmb3JtOnJvdGF0ZSgtNDVkZWcpO3dpZHRoOjdweDttYXJnaW4tdG9wOi02cHg7cmlnaHQ6MTZweDt0b3A6NTAlfS5zZWxlY3Q6aG92ZXI6YWZ0ZXJ7Ym9yZGVyLWNvbG9yOiMzNjM2MzZ9LnNlbGVjdC5pcy1zbWFsbHtoZWlnaHQ6MjRweH0uc2VsZWN0LmlzLXNtYWxsIHNlbGVjdHtib3JkZXItcmFkaXVzOjJweDtmb250LXNpemU6MTFweDtoZWlnaHQ6MjRweDtsaW5lLWhlaWdodDoxNnB4O3BhZGRpbmctbGVmdDo2cHg7cGFkZGluZy1yaWdodDo2cHg7cGFkZGluZy1yaWdodDoyOHB4fS5zZWxlY3QuaXMtbWVkaXVte2hlaWdodDo0MHB4fS5zZWxlY3QuaXMtbWVkaXVtIHNlbGVjdHtmb250LXNpemU6MThweDtoZWlnaHQ6NDBweDtsaW5lLWhlaWdodDozMnB4O3BhZGRpbmctbGVmdDoxMHB4O3BhZGRpbmctcmlnaHQ6MTBweDtwYWRkaW5nLXJpZ2h0OjQ0cHh9LnNlbGVjdC5pcy1sYXJnZXtoZWlnaHQ6NDhweH0uc2VsZWN0LmlzLWxhcmdlIHNlbGVjdHtmb250LXNpemU6MjRweDtoZWlnaHQ6NDhweDtsaW5lLWhlaWdodDo0MHB4O3BhZGRpbmctbGVmdDoxMnB4O3BhZGRpbmctcmlnaHQ6MTJweDtwYWRkaW5nLXJpZ2h0OjUycHh9LmxhYmVse2NvbG9yOiMzNjM2MzY7ZGlzcGxheTpibG9jaztmb250LXdlaWdodDpib2xkfS5sYWJlbDpub3QoOmxhc3QtY2hpbGQpe21hcmdpbi1ib3R0b206NXB4fS5oZWxwe2Rpc3BsYXk6YmxvY2s7Zm9udC1zaXplOjExcHg7bWFyZ2luLXRvcDo1cHh9LmhlbHAuaXMtd2hpdGV7Y29sb3I6I2ZmZn0uaGVscC5pcy1ibGFja3tjb2xvcjojMGEwYTBhfS5oZWxwLmlzLWxpZ2h0e2NvbG9yOiNmNWY1ZjV9LmhlbHAuaXMtZGFya3tjb2xvcjojMzYzNjM2fS5oZWxwLmlzLXByaW1hcnl7Y29sb3I6IzAwZDFiMn0uaGVscC5pcy1pbmZve2NvbG9yOiMzMjczZGN9LmhlbHAuaXMtc3VjY2Vzc3tjb2xvcjojMjNkMTYwfS5oZWxwLmlzLXdhcm5pbmd7Y29sb3I6I2ZmZGQ1N30uaGVscC5pcy1kYW5nZXJ7Y29sb3I6I2ZmMzg2MH1AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCl7LmNvbnRyb2wtbGFiZWx7bWFyZ2luLWJvdHRvbTo1cHh9fUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KXsuY29udHJvbC1sYWJlbHtmbGV4LWJhc2lzOjA7ZmxleC1ncm93OjE7ZmxleC1zaHJpbms6MDttYXJnaW4tcmlnaHQ6MjBweDtwYWRkaW5nLXRvcDo3cHg7dGV4dC1hbGlnbjpyaWdodH19LmNvbnRyb2x7cG9zaXRpb246cmVsYXRpdmU7dGV4dC1hbGlnbjpsZWZ0fS5jb250cm9sOm5vdCg6bGFzdC1jaGlsZCl7bWFyZ2luLWJvdHRvbToxMHB4fS5jb250cm9sLmhhcy1hZGRvbnN7ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0fS5jb250cm9sLmhhcy1hZGRvbnMgLmJ1dHRvbiwuY29udHJvbC5oYXMtYWRkb25zIC5pbnB1dCwuY29udHJvbC5oYXMtYWRkb25zIC5zZWxlY3R7Ym9yZGVyLXJhZGl1czowO21hcmdpbi1yaWdodDotMXB4O3dpZHRoOmF1dG99LmNvbnRyb2wuaGFzLWFkZG9ucyAuYnV0dG9uOmhvdmVyLC5jb250cm9sLmhhcy1hZGRvbnMgLmlucHV0OmhvdmVyLC5jb250cm9sLmhhcy1hZGRvbnMgLnNlbGVjdDpob3Zlcnt6LWluZGV4OjJ9LmNvbnRyb2wuaGFzLWFkZG9ucyAuYnV0dG9uOmFjdGl2ZSwuY29udHJvbC5oYXMtYWRkb25zIC5idXR0b246Zm9jdXMsLmNvbnRyb2wuaGFzLWFkZG9ucyAuaW5wdXQ6YWN0aXZlLC5jb250cm9sLmhhcy1hZGRvbnMgLmlucHV0OmZvY3VzLC5jb250cm9sLmhhcy1hZGRvbnMgLnNlbGVjdDphY3RpdmUsLmNvbnRyb2wuaGFzLWFkZG9ucyAuc2VsZWN0OmZvY3Vze3otaW5kZXg6M30uY29udHJvbC5oYXMtYWRkb25zIC5idXR0b246Zmlyc3QtY2hpbGQsLmNvbnRyb2wuaGFzLWFkZG9ucyAuaW5wdXQ6Zmlyc3QtY2hpbGQsLmNvbnRyb2wuaGFzLWFkZG9ucyAuc2VsZWN0OmZpcnN0LWNoaWxke2JvcmRlci1yYWRpdXM6M3B4IDAgMCAzcHh9LmNvbnRyb2wuaGFzLWFkZG9ucyAuYnV0dG9uOmZpcnN0LWNoaWxkIHNlbGVjdCwuY29udHJvbC5oYXMtYWRkb25zIC5pbnB1dDpmaXJzdC1jaGlsZCBzZWxlY3QsLmNvbnRyb2wuaGFzLWFkZG9ucyAuc2VsZWN0OmZpcnN0LWNoaWxkIHNlbGVjdHtib3JkZXItcmFkaXVzOjNweCAwIDAgM3B4fS5jb250cm9sLmhhcy1hZGRvbnMgLmJ1dHRvbjpsYXN0LWNoaWxkLC5jb250cm9sLmhhcy1hZGRvbnMgLmlucHV0Omxhc3QtY2hpbGQsLmNvbnRyb2wuaGFzLWFkZG9ucyAuc2VsZWN0Omxhc3QtY2hpbGR7Ym9yZGVyLXJhZGl1czowIDNweCAzcHggMH0uY29udHJvbC5oYXMtYWRkb25zIC5idXR0b246bGFzdC1jaGlsZCBzZWxlY3QsLmNvbnRyb2wuaGFzLWFkZG9ucyAuaW5wdXQ6bGFzdC1jaGlsZCBzZWxlY3QsLmNvbnRyb2wuaGFzLWFkZG9ucyAuc2VsZWN0Omxhc3QtY2hpbGQgc2VsZWN0e2JvcmRlci1yYWRpdXM6MCAzcHggM3B4IDB9LmNvbnRyb2wuaGFzLWFkZG9ucyAuYnV0dG9uLmlzLWV4cGFuZGVkLC5jb250cm9sLmhhcy1hZGRvbnMgLmlucHV0LmlzLWV4cGFuZGVkLC5jb250cm9sLmhhcy1hZGRvbnMgLnNlbGVjdC5pcy1leHBhbmRlZHtmbGV4LWdyb3c6MTtmbGV4LXNocmluazowfS5jb250cm9sLmhhcy1hZGRvbnMuaGFzLWFkZG9ucy1jZW50ZXJlZHtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyfS5jb250cm9sLmhhcy1hZGRvbnMuaGFzLWFkZG9ucy1yaWdodHtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1lbmR9LmNvbnRyb2wuaGFzLWFkZG9ucy5oYXMtYWRkb25zLWZ1bGx3aWR0aCAuYnV0dG9uLC5jb250cm9sLmhhcy1hZGRvbnMuaGFzLWFkZG9ucy1mdWxsd2lkdGggLmlucHV0LC5jb250cm9sLmhhcy1hZGRvbnMuaGFzLWFkZG9ucy1mdWxsd2lkdGggLnNlbGVjdHtmbGV4LWdyb3c6MTtmbGV4LXNocmluazowfS5jb250cm9sLmhhcy1pY29uPi5mYXtkaXNwbGF5OmlubGluZS1ibG9jaztmb250LXNpemU6MTRweDtoZWlnaHQ6MjRweDtsaW5lLWhlaWdodDoyNHB4O3RleHQtYWxpZ246Y2VudGVyO3ZlcnRpY2FsLWFsaWduOnRvcDt3aWR0aDoyNHB4O2NvbG9yOiNkYmRiZGI7cG9pbnRlci1ldmVudHM6bm9uZTtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6NHB4O3otaW5kZXg6NH0uY29udHJvbC5oYXMtaWNvbiAuaW5wdXQ6Zm9jdXMrLmZhe2NvbG9yOiNiNWI1YjV9LmNvbnRyb2wuaGFzLWljb24gLmlucHV0LmlzLXNtYWxsKy5mYXtmb250LXNpemU6MTAuNXB4O3RvcDowfS5jb250cm9sLmhhcy1pY29uIC5pbnB1dC5pcy1tZWRpdW0rLmZhe2ZvbnQtc2l6ZToyMXB4O3RvcDo4cHh9LmNvbnRyb2wuaGFzLWljb24gLmlucHV0LmlzLWxhcmdlKy5mYXtmb250LXNpemU6MjFweDt0b3A6MTJweH0uY29udHJvbC5oYXMtaWNvbjpub3QoLmhhcy1pY29uLXJpZ2h0KT4uZmF7bGVmdDo0cHh9LmNvbnRyb2wuaGFzLWljb246bm90KC5oYXMtaWNvbi1yaWdodCkgLmlucHV0e3BhZGRpbmctbGVmdDozMnB4fS5jb250cm9sLmhhcy1pY29uOm5vdCguaGFzLWljb24tcmlnaHQpIC5pbnB1dC5pcy1zbWFsbHtwYWRkaW5nLWxlZnQ6MjRweH0uY29udHJvbC5oYXMtaWNvbjpub3QoLmhhcy1pY29uLXJpZ2h0KSAuaW5wdXQuaXMtc21hbGwrLmZhe2xlZnQ6MH0uY29udHJvbC5oYXMtaWNvbjpub3QoLmhhcy1pY29uLXJpZ2h0KSAuaW5wdXQuaXMtbWVkaXVte3BhZGRpbmctbGVmdDo0MHB4fS5jb250cm9sLmhhcy1pY29uOm5vdCguaGFzLWljb24tcmlnaHQpIC5pbnB1dC5pcy1tZWRpdW0rLmZhe2xlZnQ6OHB4fS5jb250cm9sLmhhcy1pY29uOm5vdCguaGFzLWljb24tcmlnaHQpIC5pbnB1dC5pcy1sYXJnZXtwYWRkaW5nLWxlZnQ6NDhweH0uY29udHJvbC5oYXMtaWNvbjpub3QoLmhhcy1pY29uLXJpZ2h0KSAuaW5wdXQuaXMtbGFyZ2UrLmZhe2xlZnQ6MTJweH0uY29udHJvbC5oYXMtaWNvbi5oYXMtaWNvbi1yaWdodD4uZmF7cmlnaHQ6NHB4fS5jb250cm9sLmhhcy1pY29uLmhhcy1pY29uLXJpZ2h0IC5pbnB1dHtwYWRkaW5nLXJpZ2h0OjMycHh9LmNvbnRyb2wuaGFzLWljb24uaGFzLWljb24tcmlnaHQgLmlucHV0LmlzLXNtYWxse3BhZGRpbmctcmlnaHQ6MjRweH0uY29udHJvbC5oYXMtaWNvbi5oYXMtaWNvbi1yaWdodCAuaW5wdXQuaXMtc21hbGwrLmZhe3JpZ2h0OjB9LmNvbnRyb2wuaGFzLWljb24uaGFzLWljb24tcmlnaHQgLmlucHV0LmlzLW1lZGl1bXtwYWRkaW5nLXJpZ2h0OjQwcHh9LmNvbnRyb2wuaGFzLWljb24uaGFzLWljb24tcmlnaHQgLmlucHV0LmlzLW1lZGl1bSsuZmF7cmlnaHQ6OHB4fS5jb250cm9sLmhhcy1pY29uLmhhcy1pY29uLXJpZ2h0IC5pbnB1dC5pcy1sYXJnZXtwYWRkaW5nLXJpZ2h0OjQ4cHh9LmNvbnRyb2wuaGFzLWljb24uaGFzLWljb24tcmlnaHQgLmlucHV0LmlzLWxhcmdlKy5mYXtyaWdodDoxMnB4fS5jb250cm9sLmlzLWdyb3VwZWR7ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0fS5jb250cm9sLmlzLWdyb3VwZWQ+LmNvbnRyb2w6bm90KDpsYXN0LWNoaWxkKXttYXJnaW4tYm90dG9tOjA7bWFyZ2luLXJpZ2h0OjEwcHh9LmNvbnRyb2wuaXMtZ3JvdXBlZD4uY29udHJvbC5pcy1leHBhbmRlZHtmbGV4LWdyb3c6MTtmbGV4LXNocmluazoxfS5jb250cm9sLmlzLWdyb3VwZWQuaXMtZ3JvdXBlZC1jZW50ZXJlZHtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyfS5jb250cm9sLmlzLWdyb3VwZWQuaXMtZ3JvdXBlZC1yaWdodHtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1lbmR9QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpey5jb250cm9sLmlzLWhvcml6b250YWx7ZGlzcGxheTpmbGV4fS5jb250cm9sLmlzLWhvcml6b250YWw+LmNvbnRyb2x7ZGlzcGxheTpmbGV4O2ZsZXgtYmFzaXM6MDtmbGV4LWdyb3c6NTtmbGV4LXNocmluazoxfX0uY29udHJvbC5pcy1sb2FkaW5nOmFmdGVye2FuaW1hdGlvbjpzcGluQXJvdW5kIDUwMG1zIGluZmluaXRlIGxpbmVhcjtib3JkZXI6MnB4IHNvbGlkICNkYmRiZGI7Ym9yZGVyLXJhZGl1czoyOTA0ODZweDtib3JkZXItcmlnaHQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyLXRvcC1jb2xvcjp0cmFuc3BhcmVudDtjb250ZW50OlxcXCJcXFwiO2Rpc3BsYXk6YmxvY2s7aGVpZ2h0OjE2cHg7cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTZweDtwb3NpdGlvbjphYnNvbHV0ZSAhaW1wb3J0YW50O3JpZ2h0OjhweDt0b3A6OHB4fS5pbWFnZXtkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOnJlbGF0aXZlfS5pbWFnZSBpbWd7ZGlzcGxheTpibG9jaztoZWlnaHQ6YXV0bzt3aWR0aDoxMDAlfS5pbWFnZS5pcy1zcXVhcmUgaW1nLC5pbWFnZS5pcy0xYnkxIGltZywuaW1hZ2UuaXMtNGJ5MyBpbWcsLmltYWdlLmlzLTNieTIgaW1nLC5pbWFnZS5pcy0xNmJ5OSBpbWcsLmltYWdlLmlzLTJieTEgaW1ne2JvdHRvbTowO2xlZnQ6MDtwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDowO3RvcDowO2hlaWdodDoxMDAlO3dpZHRoOjEwMCV9LmltYWdlLmlzLXNxdWFyZSwuaW1hZ2UuaXMtMWJ5MXtwYWRkaW5nLXRvcDoxMDAlfS5pbWFnZS5pcy00Ynkze3BhZGRpbmctdG9wOjc1JX0uaW1hZ2UuaXMtM2J5MntwYWRkaW5nLXRvcDo2Ni42NjY2JX0uaW1hZ2UuaXMtMTZieTl7cGFkZGluZy10b3A6NTYuMjUlfS5pbWFnZS5pcy0yYnkxe3BhZGRpbmctdG9wOjUwJX0uaW1hZ2UuaXMtMTZ4MTZ7aGVpZ2h0OjE2cHg7d2lkdGg6MTZweH0uaW1hZ2UuaXMtMjR4MjR7aGVpZ2h0OjI0cHg7d2lkdGg6MjRweH0uaW1hZ2UuaXMtMzJ4MzJ7aGVpZ2h0OjMycHg7d2lkdGg6MzJweH0uaW1hZ2UuaXMtNDh4NDh7aGVpZ2h0OjQ4cHg7d2lkdGg6NDhweH0uaW1hZ2UuaXMtNjR4NjR7aGVpZ2h0OjY0cHg7d2lkdGg6NjRweH0uaW1hZ2UuaXMtOTZ4OTZ7aGVpZ2h0Ojk2cHg7d2lkdGg6OTZweH0uaW1hZ2UuaXMtMTI4eDEyOHtoZWlnaHQ6MTI4cHg7d2lkdGg6MTI4cHh9Lm5vdGlmaWNhdGlvbntiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjU7Ym9yZGVyLXJhZGl1czozcHg7cGFkZGluZzoxNnB4IDIwcHg7cG9zaXRpb246cmVsYXRpdmV9Lm5vdGlmaWNhdGlvbjpub3QoOmxhc3QtY2hpbGQpe21hcmdpbi1ib3R0b206MjBweH0ubm90aWZpY2F0aW9uOmFmdGVye2NsZWFyOmJvdGg7Y29udGVudDpcXFwiIFxcXCI7ZGlzcGxheTp0YWJsZX0ubm90aWZpY2F0aW9uIC5kZWxldGV7Ym9yZGVyLXJhZGl1czowIDNweDtmbG9hdDpyaWdodDttYXJnaW46LTE2cHggLTIwcHggMCAyMHB4fS5ub3RpZmljYXRpb24gLnRpdGxlLC5ub3RpZmljYXRpb24gLnN1YnRpdGxlLC5ub3RpZmljYXRpb24gLmNvbnRlbnR7Y29sb3I6aW5oZXJpdH0ubm90aWZpY2F0aW9uLmlzLXdoaXRle2JhY2tncm91bmQtY29sb3I6I2ZmZjtjb2xvcjojMGEwYTBhfS5ub3RpZmljYXRpb24uaXMtYmxhY2t7YmFja2dyb3VuZC1jb2xvcjojMGEwYTBhO2NvbG9yOiNmZmZ9Lm5vdGlmaWNhdGlvbi5pcy1saWdodHtiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjU7Y29sb3I6IzM2MzYzNn0ubm90aWZpY2F0aW9uLmlzLWRhcmt7YmFja2dyb3VuZC1jb2xvcjojMzYzNjM2O2NvbG9yOiNmNWY1ZjV9Lm5vdGlmaWNhdGlvbi5pcy1wcmltYXJ5e2JhY2tncm91bmQtY29sb3I6IzAwZDFiMjtjb2xvcjojZmZmfS5ub3RpZmljYXRpb24uaXMtaW5mb3tiYWNrZ3JvdW5kLWNvbG9yOiMzMjczZGM7Y29sb3I6I2ZmZn0ubm90aWZpY2F0aW9uLmlzLXN1Y2Nlc3N7YmFja2dyb3VuZC1jb2xvcjojMjNkMTYwO2NvbG9yOiNmZmZ9Lm5vdGlmaWNhdGlvbi5pcy13YXJuaW5ne2JhY2tncm91bmQtY29sb3I6I2ZmZGQ1Nztjb2xvcjpyZ2JhKDAsMCwwLDAuNyl9Lm5vdGlmaWNhdGlvbi5pcy1kYW5nZXJ7YmFja2dyb3VuZC1jb2xvcjojZmYzODYwO2NvbG9yOiNmZmZ9LnByb2dyZXNzey1tb3otYXBwZWFyYW5jZTpub25lOy13ZWJraXQtYXBwZWFyYW5jZTpub25lO2JvcmRlcjpub25lO2JvcmRlci1yYWRpdXM6MjkwNDg2cHg7ZGlzcGxheTpibG9jaztoZWlnaHQ6MTJweDtvdmVyZmxvdzpoaWRkZW47cGFkZGluZzowO3dpZHRoOjEwMCV9LnByb2dyZXNzOm5vdCg6bGFzdC1jaGlsZCl7bWFyZ2luLWJvdHRvbToyMHB4fS5wcm9ncmVzczo6LXdlYmtpdC1wcm9ncmVzcy1iYXJ7YmFja2dyb3VuZC1jb2xvcjojZGJkYmRifS5wcm9ncmVzczo6LXdlYmtpdC1wcm9ncmVzcy12YWx1ZXtiYWNrZ3JvdW5kLWNvbG9yOiM0YTRhNGF9LnByb2dyZXNzOjotbW96LXByb2dyZXNzLWJhcntiYWNrZ3JvdW5kLWNvbG9yOiM0YTRhNGF9LnByb2dyZXNzLmlzLXdoaXRlOjotd2Via2l0LXByb2dyZXNzLXZhbHVle2JhY2tncm91bmQtY29sb3I6I2ZmZn0ucHJvZ3Jlc3MuaXMtd2hpdGU6Oi1tb3otcHJvZ3Jlc3MtYmFye2JhY2tncm91bmQtY29sb3I6I2ZmZn0ucHJvZ3Jlc3MuaXMtYmxhY2s6Oi13ZWJraXQtcHJvZ3Jlc3MtdmFsdWV7YmFja2dyb3VuZC1jb2xvcjojMGEwYTBhfS5wcm9ncmVzcy5pcy1ibGFjazo6LW1vei1wcm9ncmVzcy1iYXJ7YmFja2dyb3VuZC1jb2xvcjojMGEwYTBhfS5wcm9ncmVzcy5pcy1saWdodDo6LXdlYmtpdC1wcm9ncmVzcy12YWx1ZXtiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjV9LnByb2dyZXNzLmlzLWxpZ2h0OjotbW96LXByb2dyZXNzLWJhcntiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjV9LnByb2dyZXNzLmlzLWRhcms6Oi13ZWJraXQtcHJvZ3Jlc3MtdmFsdWV7YmFja2dyb3VuZC1jb2xvcjojMzYzNjM2fS5wcm9ncmVzcy5pcy1kYXJrOjotbW96LXByb2dyZXNzLWJhcntiYWNrZ3JvdW5kLWNvbG9yOiMzNjM2MzZ9LnByb2dyZXNzLmlzLXByaW1hcnk6Oi13ZWJraXQtcHJvZ3Jlc3MtdmFsdWV7YmFja2dyb3VuZC1jb2xvcjojMDBkMWIyfS5wcm9ncmVzcy5pcy1wcmltYXJ5OjotbW96LXByb2dyZXNzLWJhcntiYWNrZ3JvdW5kLWNvbG9yOiMwMGQxYjJ9LnByb2dyZXNzLmlzLWluZm86Oi13ZWJraXQtcHJvZ3Jlc3MtdmFsdWV7YmFja2dyb3VuZC1jb2xvcjojMzI3M2RjfS5wcm9ncmVzcy5pcy1pbmZvOjotbW96LXByb2dyZXNzLWJhcntiYWNrZ3JvdW5kLWNvbG9yOiMzMjczZGN9LnByb2dyZXNzLmlzLXN1Y2Nlc3M6Oi13ZWJraXQtcHJvZ3Jlc3MtdmFsdWV7YmFja2dyb3VuZC1jb2xvcjojMjNkMTYwfS5wcm9ncmVzcy5pcy1zdWNjZXNzOjotbW96LXByb2dyZXNzLWJhcntiYWNrZ3JvdW5kLWNvbG9yOiMyM2QxNjB9LnByb2dyZXNzLmlzLXdhcm5pbmc6Oi13ZWJraXQtcHJvZ3Jlc3MtdmFsdWV7YmFja2dyb3VuZC1jb2xvcjojZmZkZDU3fS5wcm9ncmVzcy5pcy13YXJuaW5nOjotbW96LXByb2dyZXNzLWJhcntiYWNrZ3JvdW5kLWNvbG9yOiNmZmRkNTd9LnByb2dyZXNzLmlzLWRhbmdlcjo6LXdlYmtpdC1wcm9ncmVzcy12YWx1ZXtiYWNrZ3JvdW5kLWNvbG9yOiNmZjM4NjB9LnByb2dyZXNzLmlzLWRhbmdlcjo6LW1vei1wcm9ncmVzcy1iYXJ7YmFja2dyb3VuZC1jb2xvcjojZmYzODYwfS5wcm9ncmVzcy5pcy1zbWFsbHtoZWlnaHQ6OHB4fS5wcm9ncmVzcy5pcy1tZWRpdW17aGVpZ2h0OjE2cHh9LnByb2dyZXNzLmlzLWxhcmdle2hlaWdodDoyMHB4fS50YWJsZXtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Y29sb3I6IzM2MzYzNjttYXJnaW4tYm90dG9tOjIwcHg7d2lkdGg6MTAwJX0udGFibGUgdGQsLnRhYmxlIHRoe2JvcmRlcjoxcHggc29saWQgI2RiZGJkYjtib3JkZXItd2lkdGg6MCAwIDFweDtwYWRkaW5nOjhweCAxMHB4O3ZlcnRpY2FsLWFsaWduOnRvcH0udGFibGUgdGQuaXMtaWNvbiwudGFibGUgdGguaXMtaWNvbntwYWRkaW5nOjVweDt0ZXh0LWFsaWduOmNlbnRlcjt3aGl0ZS1zcGFjZTpub3dyYXA7d2lkdGg6MSV9LnRhYmxlIHRkLmlzLWljb24gLmZhLC50YWJsZSB0aC5pcy1pY29uIC5mYXtkaXNwbGF5OmlubGluZS1ibG9jaztmb250LXNpemU6MjFweDtoZWlnaHQ6MjRweDtsaW5lLWhlaWdodDoyNHB4O3RleHQtYWxpZ246Y2VudGVyO3ZlcnRpY2FsLWFsaWduOnRvcDt3aWR0aDoyNHB4fS50YWJsZSB0ZC5pcy1pY29uLmlzLWxpbmssLnRhYmxlIHRoLmlzLWljb24uaXMtbGlua3twYWRkaW5nOjB9LnRhYmxlIHRkLmlzLWljb24uaXMtbGluaz5hLC50YWJsZSB0aC5pcy1pY29uLmlzLWxpbms+YXtwYWRkaW5nOjVweH0udGFibGUgdGQuaXMtbGluaywudGFibGUgdGguaXMtbGlua3twYWRkaW5nOjB9LnRhYmxlIHRkLmlzLWxpbms+YSwudGFibGUgdGguaXMtbGluaz5he2Rpc3BsYXk6YmxvY2s7cGFkZGluZzo4cHggMTBweH0udGFibGUgdGQuaXMtbGluaz5hOmhvdmVyLC50YWJsZSB0aC5pcy1saW5rPmE6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojNGE4YmZhO2NvbG9yOiNmZmZ9LnRhYmxlIHRkLmlzLW5hcnJvdywudGFibGUgdGguaXMtbmFycm93e3doaXRlLXNwYWNlOm5vd3JhcDt3aWR0aDoxJX0udGFibGUgdGh7Y29sb3I6IzM2MzYzNjt0ZXh0LWFsaWduOmxlZnR9LnRhYmxlIHRyOmhvdmVye2JhY2tncm91bmQtY29sb3I6I2Y1ZjVmNX0udGFibGUgdGhlYWQgdGQsLnRhYmxlIHRoZWFkIHRoe2JvcmRlci13aWR0aDowIDAgMnB4O2NvbG9yOiM3YTdhN2F9LnRhYmxlIHRib2R5IHRyOmxhc3QtY2hpbGQgdGQsLnRhYmxlIHRib2R5IHRyOmxhc3QtY2hpbGQgdGh7Ym9yZGVyLWJvdHRvbS13aWR0aDowfS50YWJsZSB0Zm9vdCB0ZCwudGFibGUgdGZvb3QgdGh7Ym9yZGVyLXdpZHRoOjJweCAwIDA7Y29sb3I6IzdhN2E3YX0udGFibGUuaXMtYm9yZGVyZWQgdGQsLnRhYmxlLmlzLWJvcmRlcmVkIHRoe2JvcmRlci13aWR0aDoxcHh9LnRhYmxlLmlzLWJvcmRlcmVkIHRyOmxhc3QtY2hpbGQgdGQsLnRhYmxlLmlzLWJvcmRlcmVkIHRyOmxhc3QtY2hpbGQgdGh7Ym9yZGVyLWJvdHRvbS13aWR0aDoxcHh9LnRhYmxlLmlzLW5hcnJvdyB0ZCwudGFibGUuaXMtbmFycm93IHRoe3BhZGRpbmc6NXB4IDEwcHh9LnRhYmxlLmlzLW5hcnJvdyB0ZC5pcy1pY29uLC50YWJsZS5pcy1uYXJyb3cgdGguaXMtaWNvbntwYWRkaW5nOjJweH0udGFibGUuaXMtbmFycm93IHRkLmlzLWljb24uaXMtbGluaywudGFibGUuaXMtbmFycm93IHRoLmlzLWljb24uaXMtbGlua3twYWRkaW5nOjB9LnRhYmxlLmlzLW5hcnJvdyB0ZC5pcy1pY29uLmlzLWxpbms+YSwudGFibGUuaXMtbmFycm93IHRoLmlzLWljb24uaXMtbGluaz5he3BhZGRpbmc6MnB4fS50YWJsZS5pcy1uYXJyb3cgdGQuaXMtbGluaywudGFibGUuaXMtbmFycm93IHRoLmlzLWxpbmt7cGFkZGluZzowfS50YWJsZS5pcy1uYXJyb3cgdGQuaXMtbGluaz5hLC50YWJsZS5pcy1uYXJyb3cgdGguaXMtbGluaz5he3BhZGRpbmc6NXB4IDEwcHh9LnRhYmxlLmlzLXN0cmlwZWQgdGJvZHkgdHI6bnRoLWNoaWxkKGV2ZW4pe2JhY2tncm91bmQtY29sb3I6I2ZhZmFmYX0udGFibGUuaXMtc3RyaXBlZCB0Ym9keSB0cjpudGgtY2hpbGQoZXZlbik6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZjVmNWY1fS50aXRsZSwuc3VidGl0bGV7Zm9udC13ZWlnaHQ6MzAwO3dvcmQtYnJlYWs6YnJlYWstd29yZH0udGl0bGU6bm90KDpsYXN0LWNoaWxkKSwuc3VidGl0bGU6bm90KDpsYXN0LWNoaWxkKXttYXJnaW4tYm90dG9tOjIwcHh9LnRpdGxlIGVtLC50aXRsZSBzcGFuLC5zdWJ0aXRsZSBlbSwuc3VidGl0bGUgc3Bhbntmb250LXdlaWdodDozMDB9LnRpdGxlIGE6aG92ZXIsLnN1YnRpdGxlIGE6aG92ZXJ7Ym9yZGVyLWJvdHRvbToxcHggc29saWR9LnRpdGxlIHN0cm9uZywuc3VidGl0bGUgc3Ryb25ne2ZvbnQtd2VpZ2h0OjUwMH0udGl0bGUgLnRhZywuc3VidGl0bGUgLnRhZ3t2ZXJ0aWNhbC1hbGlnbjpib3R0b219LnRpdGxle2NvbG9yOiMzNjM2MzY7Zm9udC1zaXplOjI4cHg7bGluZS1oZWlnaHQ6MX0udGl0bGUgY29kZXtkaXNwbGF5OmlubGluZS1ibG9jaztmb250LXNpemU6MjhweH0udGl0bGUgc3Ryb25ne2NvbG9yOmluaGVyaXR9LnRpdGxlKy5oaWdobGlnaHR7bWFyZ2luLXRvcDotMTBweH0udGl0bGUrLnN1YnRpdGxle21hcmdpbi10b3A6LTEwcHh9LnRpdGxlLmlzLTF7Zm9udC1zaXplOjQ4cHh9LnRpdGxlLmlzLTEgY29kZXtmb250LXNpemU6NDBweH0udGl0bGUuaXMtMntmb250LXNpemU6NDBweH0udGl0bGUuaXMtMiBjb2Rle2ZvbnQtc2l6ZToyOHB4fS50aXRsZS5pcy0ze2ZvbnQtc2l6ZToyOHB4fS50aXRsZS5pcy0zIGNvZGV7Zm9udC1zaXplOjI0cHh9LnRpdGxlLmlzLTR7Zm9udC1zaXplOjI0cHh9LnRpdGxlLmlzLTQgY29kZXtmb250LXNpemU6MThweH0udGl0bGUuaXMtNXtmb250LXNpemU6MThweH0udGl0bGUuaXMtNSBjb2Rle2ZvbnQtc2l6ZToxNHB4fS50aXRsZS5pcy02e2ZvbnQtc2l6ZToxNHB4fS50aXRsZS5pcy02IGNvZGV7Zm9udC1zaXplOjE0cHh9LnRpdGxlLmlzLW5vcm1hbHtmb250LXdlaWdodDo0MDB9LnRpdGxlLmlzLW5vcm1hbCBzdHJvbmd7Zm9udC13ZWlnaHQ6NzAwfUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KXsudGl0bGUrLnN1YnRpdGxle21hcmdpbi10b3A6LTE1cHh9fS5zdWJ0aXRsZXtjb2xvcjojNGE0YTRhO2ZvbnQtc2l6ZToxOHB4O2xpbmUtaGVpZ2h0OjEuMTI1fS5zdWJ0aXRsZSBjb2Rle2JvcmRlci1yYWRpdXM6M3B4O2Rpc3BsYXk6aW5saW5lLWJsb2NrO2ZvbnQtc2l6ZToxNHB4O3BhZGRpbmc6MnB4IDNweDt2ZXJ0aWNhbC1hbGlnbjp0b3B9LnN1YnRpdGxlIHN0cm9uZ3tjb2xvcjojMzYzNjM2fS5zdWJ0aXRsZSsudGl0bGV7bWFyZ2luLXRvcDotMjBweH0uc3VidGl0bGUuaXMtMXtmb250LXNpemU6NDhweH0uc3VidGl0bGUuaXMtMSBjb2Rle2ZvbnQtc2l6ZTo0MHB4fS5zdWJ0aXRsZS5pcy0ye2ZvbnQtc2l6ZTo0MHB4fS5zdWJ0aXRsZS5pcy0yIGNvZGV7Zm9udC1zaXplOjI4cHh9LnN1YnRpdGxlLmlzLTN7Zm9udC1zaXplOjI4cHh9LnN1YnRpdGxlLmlzLTMgY29kZXtmb250LXNpemU6MjRweH0uc3VidGl0bGUuaXMtNHtmb250LXNpemU6MjRweH0uc3VidGl0bGUuaXMtNCBjb2Rle2ZvbnQtc2l6ZToxOHB4fS5zdWJ0aXRsZS5pcy01e2ZvbnQtc2l6ZToxOHB4fS5zdWJ0aXRsZS5pcy01IGNvZGV7Zm9udC1zaXplOjE0cHh9LnN1YnRpdGxlLmlzLTZ7Zm9udC1zaXplOjE0cHh9LnN1YnRpdGxlLmlzLTYgY29kZXtmb250LXNpemU6MTRweH0uc3VidGl0bGUuaXMtbm9ybWFse2ZvbnQtd2VpZ2h0OjQwMH0uc3VidGl0bGUuaXMtbm9ybWFsIHN0cm9uZ3tmb250LXdlaWdodDo3MDB9LmJsb2NrOm5vdCg6bGFzdC1jaGlsZCl7bWFyZ2luLWJvdHRvbToyMHB4fS5jb250YWluZXJ7cG9zaXRpb246cmVsYXRpdmV9QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTgwcHgpey5jb250YWluZXJ7bWFyZ2luOjAgYXV0bzttYXgtd2lkdGg6OTYwcHh9LmNvbnRhaW5lci5pcy1mbHVpZHttYXJnaW46MCAyMHB4O21heC13aWR0aDpub25lfX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMTgwcHgpey5jb250YWluZXJ7bWF4LXdpZHRoOjEyMDBweH19LmRlbGV0ZXstd2Via2l0LXRvdWNoLWNhbGxvdXQ6bm9uZTstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmU7LW1vei1hcHBlYXJhbmNlOm5vbmU7LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmU7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEwLDEwLDEwLDAuMSk7Ym9yZGVyOm5vbmU7Ym9yZGVyLXJhZGl1czoyOTA0ODZweDtjdXJzb3I6cG9pbnRlcjtkaXNwbGF5OmlubGluZS1ibG9jaztoZWlnaHQ6MjRweDtvdXRsaW5lOm5vbmU7cG9zaXRpb246cmVsYXRpdmU7dmVydGljYWwtYWxpZ246dG9wO3dpZHRoOjI0cHh9LmRlbGV0ZTpiZWZvcmUsLmRlbGV0ZTphZnRlcntiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Y29udGVudDpcXFwiXFxcIjtkaXNwbGF5OmJsb2NrO2hlaWdodDoycHg7bGVmdDo1MCU7bWFyZ2luLWxlZnQ6LTI1JTttYXJnaW4tdG9wOi0xcHg7cG9zaXRpb246YWJzb2x1dGU7dG9wOjUwJTt3aWR0aDo1MCV9LmRlbGV0ZTpiZWZvcmV7dHJhbnNmb3JtOnJvdGF0ZSg0NWRlZyl9LmRlbGV0ZTphZnRlcnt0cmFuc2Zvcm06cm90YXRlKC00NWRlZyl9LmRlbGV0ZTpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTAsMTAsMTAsMC4yKX0uZGVsZXRlLmlzLXNtYWxse2hlaWdodDoxNnB4O3dpZHRoOjE2cHh9LmRlbGV0ZS5pcy1tZWRpdW17aGVpZ2h0OjMycHg7d2lkdGg6MzJweH0uZGVsZXRlLmlzLWxhcmdle2hlaWdodDo0MHB4O3dpZHRoOjQwcHh9LmZhe2ZvbnQtc2l6ZToyMXB4O3RleHQtYWxpZ246Y2VudGVyO3ZlcnRpY2FsLWFsaWduOnRvcH0uaWNvbntkaXNwbGF5OmlubGluZS1ibG9jaztmb250LXNpemU6MjFweDtoZWlnaHQ6MjRweDtsaW5lLWhlaWdodDoyNHB4O3RleHQtYWxpZ246Y2VudGVyO3ZlcnRpY2FsLWFsaWduOnRvcDt3aWR0aDoyNHB4fS5pY29uIC5mYXtmb250LXNpemU6aW5oZXJpdDtsaW5lLWhlaWdodDppbmhlcml0fS5pY29uLmlzLXNtYWxse2Rpc3BsYXk6aW5saW5lLWJsb2NrO2ZvbnQtc2l6ZToxNHB4O2hlaWdodDoxNnB4O2xpbmUtaGVpZ2h0OjE2cHg7dGV4dC1hbGlnbjpjZW50ZXI7dmVydGljYWwtYWxpZ246dG9wO3dpZHRoOjE2cHh9Lmljb24uaXMtbWVkaXVte2Rpc3BsYXk6aW5saW5lLWJsb2NrO2ZvbnQtc2l6ZToyOHB4O2hlaWdodDozMnB4O2xpbmUtaGVpZ2h0OjMycHg7dGV4dC1hbGlnbjpjZW50ZXI7dmVydGljYWwtYWxpZ246dG9wO3dpZHRoOjMycHh9Lmljb24uaXMtbGFyZ2V7ZGlzcGxheTppbmxpbmUtYmxvY2s7Zm9udC1zaXplOjQycHg7aGVpZ2h0OjQ4cHg7bGluZS1oZWlnaHQ6NDhweDt0ZXh0LWFsaWduOmNlbnRlcjt2ZXJ0aWNhbC1hbGlnbjp0b3A7d2lkdGg6NDhweH0uaGVhZGluZ3tkaXNwbGF5OmJsb2NrO2ZvbnQtc2l6ZToxMXB4O2xldHRlci1zcGFjaW5nOjFweDttYXJnaW4tYm90dG9tOjVweDt0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2V9LmhpZ2hsaWdodHtmb250LXNpemU6MTJweDtmb250LXdlaWdodDpub3JtYWw7bWF4LXdpZHRoOjEwMCU7b3ZlcmZsb3c6aGlkZGVuO3BhZGRpbmc6MH0uaGlnaGxpZ2h0Om5vdCg6bGFzdC1jaGlsZCl7bWFyZ2luLWJvdHRvbToyMHB4fS5oaWdobGlnaHQgcHJle292ZXJmbG93OmF1dG87bWF4LXdpZHRoOjEwMCV9LmxvYWRlcnthbmltYXRpb246c3BpbkFyb3VuZCA1MDBtcyBpbmZpbml0ZSBsaW5lYXI7Ym9yZGVyOjJweCBzb2xpZCAjZGJkYmRiO2JvcmRlci1yYWRpdXM6MjkwNDg2cHg7Ym9yZGVyLXJpZ2h0LWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlci10b3AtY29sb3I6dHJhbnNwYXJlbnQ7Y29udGVudDpcXFwiXFxcIjtkaXNwbGF5OmJsb2NrO2hlaWdodDoxNnB4O3Bvc2l0aW9uOnJlbGF0aXZlO3dpZHRoOjE2cHh9Lm51bWJlcntiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjU7Ym9yZGVyLXJhZGl1czoyOTA0ODZweDtkaXNwbGF5OmlubGluZS1ibG9jaztmb250LXNpemU6MThweDt2ZXJ0aWNhbC1hbGlnbjp0b3B9LnRhZ3thbGlnbi1pdGVtczpjZW50ZXI7YmFja2dyb3VuZC1jb2xvcjojZjVmNWY1O2JvcmRlci1yYWRpdXM6MjkwNDg2cHg7Y29sb3I6IzRhNGE0YTtkaXNwbGF5OmlubGluZS1mbGV4O2ZvbnQtc2l6ZToxMnB4O2hlaWdodDoyNHB4O2p1c3RpZnktY29udGVudDpjZW50ZXI7bGluZS1oZWlnaHQ6MTZweDtwYWRkaW5nLWxlZnQ6MTBweDtwYWRkaW5nLXJpZ2h0OjEwcHg7dmVydGljYWwtYWxpZ246dG9wO3doaXRlLXNwYWNlOm5vd3JhcH0udGFnIC5kZWxldGV7bWFyZ2luLWxlZnQ6NHB4O21hcmdpbi1yaWdodDotNnB4fS50YWcuaXMtd2hpdGV7YmFja2dyb3VuZC1jb2xvcjojZmZmO2NvbG9yOiMwYTBhMGF9LnRhZy5pcy1ibGFja3tiYWNrZ3JvdW5kLWNvbG9yOiMwYTBhMGE7Y29sb3I6I2ZmZn0udGFnLmlzLWxpZ2h0e2JhY2tncm91bmQtY29sb3I6I2Y1ZjVmNTtjb2xvcjojMzYzNjM2fS50YWcuaXMtZGFya3tiYWNrZ3JvdW5kLWNvbG9yOiMzNjM2MzY7Y29sb3I6I2Y1ZjVmNX0udGFnLmlzLXByaW1hcnl7YmFja2dyb3VuZC1jb2xvcjojMDBkMWIyO2NvbG9yOiNmZmZ9LnRhZy5pcy1pbmZve2JhY2tncm91bmQtY29sb3I6IzMyNzNkYztjb2xvcjojZmZmfS50YWcuaXMtc3VjY2Vzc3tiYWNrZ3JvdW5kLWNvbG9yOiMyM2QxNjA7Y29sb3I6I2ZmZn0udGFnLmlzLXdhcm5pbmd7YmFja2dyb3VuZC1jb2xvcjojZmZkZDU3O2NvbG9yOnJnYmEoMCwwLDAsMC43KX0udGFnLmlzLWRhbmdlcntiYWNrZ3JvdW5kLWNvbG9yOiNmZjM4NjA7Y29sb3I6I2ZmZn0udGFnLmlzLXNtYWxse2ZvbnQtc2l6ZToxMXB4O2hlaWdodDoyMHB4O3BhZGRpbmctbGVmdDo4cHg7cGFkZGluZy1yaWdodDo4cHh9LnRhZy5pcy1tZWRpdW17Zm9udC1zaXplOjE0cHg7aGVpZ2h0OjMycHg7cGFkZGluZy1sZWZ0OjE0cHg7cGFkZGluZy1yaWdodDoxNHB4fS50YWcuaXMtbGFyZ2V7Zm9udC1zaXplOjE4cHg7aGVpZ2h0OjQwcHg7bGluZS1oZWlnaHQ6MjRweDtwYWRkaW5nLWxlZnQ6MThweDtwYWRkaW5nLXJpZ2h0OjE4cHh9LnRhZy5pcy1sYXJnZSAuZGVsZXRle21hcmdpbi1sZWZ0OjRweDttYXJnaW4tcmlnaHQ6LThweH0uY2FyZC1oZWFkZXJ7YWxpZ24taXRlbXM6c3RyZXRjaDtib3gtc2hhZG93OjAgMXB4IDJweCByZ2JhKDEwLDEwLDEwLDAuMSk7ZGlzcGxheTpmbGV4O21pbi1oZWlnaHQ6NDBweH0uY2FyZC1oZWFkZXItdGl0bGV7YWxpZ24taXRlbXM6ZmxleC1zdGFydDtjb2xvcjojMzYzNjM2O2Rpc3BsYXk6ZmxleDtmbGV4LWdyb3c6MTtmb250LXdlaWdodDpib2xkO3BhZGRpbmc6MTBweH0uY2FyZC1oZWFkZXItaWNvbnthbGlnbi1pdGVtczpjZW50ZXI7Y3Vyc29yOnBvaW50ZXI7ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpjZW50ZXI7d2lkdGg6NDBweH0uY2FyZC1pbWFnZXtkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOnJlbGF0aXZlfS5jYXJkLWNvbnRlbnR7cGFkZGluZzoyMHB4fS5jYXJkLWNvbnRlbnQgLnRpdGxlKy5zdWJ0aXRsZXttYXJnaW4tdG9wOi0yMHB4fS5jYXJkLWZvb3Rlcntib3JkZXItdG9wOjFweCBzb2xpZCAjZGJkYmRiO2FsaWduLWl0ZW1zOnN0cmV0Y2g7ZGlzcGxheTpmbGV4fS5jYXJkLWZvb3Rlci1pdGVte2FsaWduLWl0ZW1zOmNlbnRlcjtkaXNwbGF5OmZsZXg7ZmxleC1ncm93OjE7anVzdGlmeS1jb250ZW50OmNlbnRlcjtwYWRkaW5nOjEwcHh9LmNhcmQtZm9vdGVyLWl0ZW06bm90KDpsYXN0LWNoaWxkKXtib3JkZXItcmlnaHQ6MXB4IHNvbGlkICNkYmRiZGJ9LmNhcmR7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JveC1zaGFkb3c6MCAycHggM3B4IHJnYmEoMTAsMTAsMTAsMC4xKSwwIDAgMCAxcHggcmdiYSgxMCwxMCwxMCwwLjEpO2NvbG9yOiM0YTRhNGE7bWF4LXdpZHRoOjEwMCU7cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MzAwcHh9LmNhcmQgLm1lZGlhOm5vdCg6bGFzdC1jaGlsZCl7bWFyZ2luLWJvdHRvbToxMHB4fS5jYXJkLmlzLWZ1bGx3aWR0aHt3aWR0aDoxMDAlfS5jYXJkLmlzLXJvdW5kZWR7Ym9yZGVyLXJhZGl1czo1cHh9LmhpZ2hsaWdodHtiYWNrZ3JvdW5kLWNvbG9yOiNmZGY2ZTM7Y29sb3I6IzU4NmU3NX0uaGlnaGxpZ2h0IC5je2NvbG9yOiM5M2ExYTF9LmhpZ2hsaWdodCAuZXJyLC5oaWdobGlnaHQgLmd7Y29sb3I6IzU4NmU3NX0uaGlnaGxpZ2h0IC5re2NvbG9yOiM4NTk5MDB9LmhpZ2hsaWdodCAubCwuaGlnaGxpZ2h0IC5ue2NvbG9yOiM1ODZlNzV9LmhpZ2hsaWdodCAub3tjb2xvcjojODU5OTAwfS5oaWdobGlnaHQgLnh7Y29sb3I6I2NiNGIxNn0uaGlnaGxpZ2h0IC5we2NvbG9yOiM1ODZlNzV9LmhpZ2hsaWdodCAuY217Y29sb3I6IzkzYTFhMX0uaGlnaGxpZ2h0IC5jcHtjb2xvcjojODU5OTAwfS5oaWdobGlnaHQgLmMxe2NvbG9yOiM5M2ExYTF9LmhpZ2hsaWdodCAuY3N7Y29sb3I6Izg1OTkwMH0uaGlnaGxpZ2h0IC5nZHtjb2xvcjojMmFhMTk4fS5oaWdobGlnaHQgLmdle2NvbG9yOiM1ODZlNzU7Zm9udC1zdHlsZTppdGFsaWN9LmhpZ2hsaWdodCAuZ3J7Y29sb3I6I2RjMzIyZn0uaGlnaGxpZ2h0IC5naHtjb2xvcjojY2I0YjE2fS5oaWdobGlnaHQgLmdpe2NvbG9yOiM4NTk5MDB9LmhpZ2hsaWdodCAuZ28sLmhpZ2hsaWdodCAuZ3B7Y29sb3I6IzU4NmU3NX0uaGlnaGxpZ2h0IC5nc3tjb2xvcjojNTg2ZTc1O2ZvbnQtd2VpZ2h0OmJvbGR9LmhpZ2hsaWdodCAuZ3V7Y29sb3I6I2NiNGIxNn0uaGlnaGxpZ2h0IC5ndHtjb2xvcjojNTg2ZTc1fS5oaWdobGlnaHQgLmtje2NvbG9yOiNjYjRiMTZ9LmhpZ2hsaWdodCAua2R7Y29sb3I6IzI2OGJkMn0uaGlnaGxpZ2h0IC5rbiwuaGlnaGxpZ2h0IC5rcHtjb2xvcjojODU5OTAwfS5oaWdobGlnaHQgLmtye2NvbG9yOiMyNjhiZDJ9LmhpZ2hsaWdodCAua3R7Y29sb3I6I2RjMzIyZn0uaGlnaGxpZ2h0IC5sZHtjb2xvcjojNTg2ZTc1fS5oaWdobGlnaHQgLm0sLmhpZ2hsaWdodCAuc3tjb2xvcjojMmFhMTk4fS5oaWdobGlnaHQgLm5he2NvbG9yOiNCNTg5MDB9LmhpZ2hsaWdodCAubmJ7Y29sb3I6IzU4NmU3NX0uaGlnaGxpZ2h0IC5uY3tjb2xvcjojMjY4YmQyfS5oaWdobGlnaHQgLm5ve2NvbG9yOiNjYjRiMTZ9LmhpZ2hsaWdodCAubmR7Y29sb3I6IzI2OGJkMn0uaGlnaGxpZ2h0IC5uaSwuaGlnaGxpZ2h0IC5uZXtjb2xvcjojY2I0YjE2fS5oaWdobGlnaHQgLm5me2NvbG9yOiMyNjhiZDJ9LmhpZ2hsaWdodCAubmwsLmhpZ2hsaWdodCAubm4sLmhpZ2hsaWdodCAubngsLmhpZ2hsaWdodCAucHl7Y29sb3I6IzU4NmU3NX0uaGlnaGxpZ2h0IC5udCwuaGlnaGxpZ2h0IC5udntjb2xvcjojMjY4YmQyfS5oaWdobGlnaHQgLm93e2NvbG9yOiM4NTk5MDB9LmhpZ2hsaWdodCAud3tjb2xvcjojNTg2ZTc1fS5oaWdobGlnaHQgLm1mLC5oaWdobGlnaHQgLm1oLC5oaWdobGlnaHQgLm1pLC5oaWdobGlnaHQgLm1ve2NvbG9yOiMyYWExOTh9LmhpZ2hsaWdodCAuc2J7Y29sb3I6IzkzYTFhMX0uaGlnaGxpZ2h0IC5zY3tjb2xvcjojMmFhMTk4fS5oaWdobGlnaHQgLnNke2NvbG9yOiM1ODZlNzV9LmhpZ2hsaWdodCAuczJ7Y29sb3I6IzJhYTE5OH0uaGlnaGxpZ2h0IC5zZXtjb2xvcjojY2I0YjE2fS5oaWdobGlnaHQgLnNoe2NvbG9yOiM1ODZlNzV9LmhpZ2hsaWdodCAuc2ksLmhpZ2hsaWdodCAuc3h7Y29sb3I6IzJhYTE5OH0uaGlnaGxpZ2h0IC5zcntjb2xvcjojZGMzMjJmfS5oaWdobGlnaHQgLnMxLC5oaWdobGlnaHQgLnNze2NvbG9yOiMyYWExOTh9LmhpZ2hsaWdodCAuYnAsLmhpZ2hsaWdodCAudmMsLmhpZ2hsaWdodCAudmcsLmhpZ2hsaWdodCAudml7Y29sb3I6IzI2OGJkMn0uaGlnaGxpZ2h0IC5pbHtjb2xvcjojMmFhMTk4fS5sZXZlbC1pdGVtIC50aXRsZSwubGV2ZWwtaXRlbSAuc3VidGl0bGV7bWFyZ2luLWJvdHRvbTowfUBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KXsubGV2ZWwtaXRlbTpub3QoOmxhc3QtY2hpbGQpe21hcmdpbi1ib3R0b206MTBweH19LmxldmVsLWxlZnQgLmxldmVsLWl0ZW06bm90KDpsYXN0LWNoaWxkKSwubGV2ZWwtcmlnaHQgLmxldmVsLWl0ZW06bm90KDpsYXN0LWNoaWxkKXttYXJnaW4tcmlnaHQ6MTBweH0ubGV2ZWwtbGVmdCAubGV2ZWwtaXRlbS5pcy1mbGV4aWJsZSwubGV2ZWwtcmlnaHQgLmxldmVsLWl0ZW0uaXMtZmxleGlibGV7ZmxleC1ncm93OjF9QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpey5sZXZlbC1sZWZ0Ky5sZXZlbC1yaWdodHttYXJnaW4tdG9wOjIwcHh9fUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KXsubGV2ZWwtbGVmdHthbGlnbi1pdGVtczpjZW50ZXI7ZGlzcGxheTpmbGV4fX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCl7LmxldmVsLXJpZ2h0e2FsaWduLWl0ZW1zOmNlbnRlcjtkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OmZsZXgtZW5kfX0ubGV2ZWx7YWxpZ24taXRlbXM6Y2VudGVyO2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVufS5sZXZlbDpub3QoOmxhc3QtY2hpbGQpe21hcmdpbi1ib3R0b206MjBweH0ubGV2ZWwgY29kZXtib3JkZXItcmFkaXVzOjNweH0ubGV2ZWwgaW1ne2Rpc3BsYXk6aW5saW5lLWJsb2NrO3ZlcnRpY2FsLWFsaWduOnRvcH0ubGV2ZWwuaXMtbW9iaWxle2Rpc3BsYXk6ZmxleH0ubGV2ZWwuaXMtbW9iaWxlPi5sZXZlbC1pdGVtOm5vdCg6bGFzdC1jaGlsZCl7bWFyZ2luLWJvdHRvbTowfS5sZXZlbC5pcy1tb2JpbGU+LmxldmVsLWl0ZW06bm90KC5pcy1uYXJyb3cpe2ZsZXgtZ3JvdzoxfUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KXsubGV2ZWx7ZGlzcGxheTpmbGV4fS5sZXZlbD4ubGV2ZWwtaXRlbTpub3QoLmlzLW5hcnJvdyl7ZmxleC1ncm93OjF9fS5tZWRpYS1udW1iZXIsLm1lZGlhLWxlZnQsLm1lZGlhLXJpZ2h0e2ZsZXgtZ3JvdzowO2ZsZXgtc2hyaW5rOjB9Lm1lZGlhLW51bWJlcntiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjU7Ym9yZGVyLXJhZGl1czoyOTA0ODZweDtkaXNwbGF5OmlubGluZS1ibG9jaztmb250LXNpemU6MThweDtoZWlnaHQ6MzJweDtsaW5lLWhlaWdodDoyNHB4O21hcmdpbi1yaWdodDoxMHB4O21pbi13aWR0aDozMnB4O3BhZGRpbmc6NHB4IDhweDt0ZXh0LWFsaWduOmNlbnRlcjt2ZXJ0aWNhbC1hbGlnbjp0b3B9Lm1lZGlhLWxlZnR7bWFyZ2luLXJpZ2h0OjEwcHh9Lm1lZGlhLXJpZ2h0e21hcmdpbi1sZWZ0OjEwcHh9Lm1lZGlhLWNvbnRlbnR7ZmxleC1ncm93OjE7ZmxleC1zaHJpbms6MTt0ZXh0LWFsaWduOmxlZnR9Lm1lZGlhe2FsaWduLWl0ZW1zOmZsZXgtc3RhcnQ7ZGlzcGxheTpmbGV4O3RleHQtYWxpZ246bGVmdH0ubWVkaWEgLmNvbnRlbnQ6bm90KDpsYXN0LWNoaWxkKXttYXJnaW4tYm90dG9tOjEwcHh9Lm1lZGlhIC5tZWRpYXtib3JkZXItdG9wOjFweCBzb2xpZCByZ2JhKDIxOSwyMTksMjE5LDAuNSk7ZGlzcGxheTpmbGV4O3BhZGRpbmctdG9wOjEwcHh9Lm1lZGlhIC5tZWRpYSAuY29udGVudDpub3QoOmxhc3QtY2hpbGQpLC5tZWRpYSAubWVkaWEgLmNvbnRyb2w6bm90KDpsYXN0LWNoaWxkKXttYXJnaW4tYm90dG9tOjVweH0ubWVkaWEgLm1lZGlhIC5tZWRpYXtwYWRkaW5nLXRvcDo1cHh9Lm1lZGlhIC5tZWRpYSAubWVkaWErLm1lZGlhe21hcmdpbi10b3A6NXB4fS5tZWRpYSsubWVkaWF7Ym9yZGVyLXRvcDoxcHggc29saWQgcmdiYSgyMTksMjE5LDIxOSwwLjUpO21hcmdpbi10b3A6MTBweDtwYWRkaW5nLXRvcDoxMHB4fS5tZWRpYS5pcy1sYXJnZSsubWVkaWF7bWFyZ2luLXRvcDoyMHB4O3BhZGRpbmctdG9wOjIwcHh9QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpey5tZWRpYS5pcy1sYXJnZSAubWVkaWEtbnVtYmVye21hcmdpbi1yaWdodDoyMHB4fX0ubWVudS1uYXYgYXtkaXNwbGF5OmJsb2NrO3BhZGRpbmc6NXB4IDEwcHh9Lm1lbnUtbGlzdCBhe2JvcmRlci1yYWRpdXM6MnB4O2NvbG9yOiM0YTRhNGE7ZGlzcGxheTpibG9jaztwYWRkaW5nOjVweCAxMHB4fS5tZW51LWxpc3QgYTpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjU7Y29sb3I6IzRhOGJmYX0ubWVudS1saXN0IGEuaXMtYWN0aXZle2JhY2tncm91bmQtY29sb3I6IzRhOGJmYTtjb2xvcjojZmZmfS5tZW51LWxpc3QgbGkgdWx7Ym9yZGVyLWxlZnQ6MXB4IHNvbGlkICNkYmRiZGI7bWFyZ2luOjEwcHg7cGFkZGluZy1sZWZ0OjEwcHh9Lm1lbnUtbGFiZWx7Y29sb3I6IzdhN2E3YTtmb250LXNpemU6MTFweDtsZXR0ZXItc3BhY2luZzoxcHg7bWFyZ2luLWJvdHRvbTo1cHg7dGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlfS5tZW51LWxhYmVsOm5vdCg6Zmlyc3QtY2hpbGQpe21hcmdpbi10b3A6MjBweH0ubWVzc2FnZS1ib2R5e2JvcmRlcjoxcHggc29saWQgI2RiZGJkYjtib3JkZXItcmFkaXVzOjNweDtwYWRkaW5nOjEycHggMTVweH0ubWVzc2FnZS1ib2R5IHN0cm9uZ3tjb2xvcjppbmhlcml0fS5tZXNzYWdlLWhlYWRlcntiYWNrZ3JvdW5kLWNvbG9yOiM0YTRhNGE7Ym9yZGVyLXJhZGl1czozcHggM3B4IDAgMDtjb2xvcjojZmZmO3BhZGRpbmc6N3B4IDEwcHh9Lm1lc3NhZ2UtaGVhZGVyIHN0cm9uZ3tjb2xvcjppbmhlcml0fS5tZXNzYWdlLWhlYWRlcisubWVzc2FnZS1ib2R5e2JvcmRlci1yYWRpdXM6MCAwIDNweCAzcHg7Ym9yZGVyLXRvcDpub25lfS5tZXNzYWdle2JhY2tncm91bmQtY29sb3I6I2Y1ZjVmNTtib3JkZXItcmFkaXVzOjNweH0ubWVzc2FnZTpub3QoOmxhc3QtY2hpbGQpe21hcmdpbi1ib3R0b206MjBweH0ubWVzc2FnZS5pcy13aGl0ZXtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9Lm1lc3NhZ2UuaXMtd2hpdGUgLm1lc3NhZ2UtaGVhZGVye2JhY2tncm91bmQtY29sb3I6I2ZmZjtjb2xvcjojMGEwYTBhfS5tZXNzYWdlLmlzLXdoaXRlIC5tZXNzYWdlLWJvZHl7Ym9yZGVyLWNvbG9yOiNmZmY7Y29sb3I6IzY2Nn0ubWVzc2FnZS5pcy1ibGFja3tiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjV9Lm1lc3NhZ2UuaXMtYmxhY2sgLm1lc3NhZ2UtaGVhZGVye2JhY2tncm91bmQtY29sb3I6IzBhMGEwYTtjb2xvcjojZmZmfS5tZXNzYWdlLmlzLWJsYWNrIC5tZXNzYWdlLWJvZHl7Ym9yZGVyLWNvbG9yOiMwYTBhMGE7Y29sb3I6Z3JheX0ubWVzc2FnZS5pcy1saWdodHtiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjV9Lm1lc3NhZ2UuaXMtbGlnaHQgLm1lc3NhZ2UtaGVhZGVye2JhY2tncm91bmQtY29sb3I6I2Y1ZjVmNTtjb2xvcjojMzYzNjM2fS5tZXNzYWdlLmlzLWxpZ2h0IC5tZXNzYWdlLWJvZHl7Ym9yZGVyLWNvbG9yOiNmNWY1ZjU7Y29sb3I6IzY2Nn0ubWVzc2FnZS5pcy1kYXJre2JhY2tncm91bmQtY29sb3I6I2Y1ZjVmNX0ubWVzc2FnZS5pcy1kYXJrIC5tZXNzYWdlLWhlYWRlcntiYWNrZ3JvdW5kLWNvbG9yOiMzNjM2MzY7Y29sb3I6I2Y1ZjVmNX0ubWVzc2FnZS5pcy1kYXJrIC5tZXNzYWdlLWJvZHl7Ym9yZGVyLWNvbG9yOiMzNjM2MzY7Y29sb3I6Z3JheX0ubWVzc2FnZS5pcy1wcmltYXJ5e2JhY2tncm91bmQtY29sb3I6I2ViZmZmY30ubWVzc2FnZS5pcy1wcmltYXJ5IC5tZXNzYWdlLWhlYWRlcntiYWNrZ3JvdW5kLWNvbG9yOiMwMGQxYjI7Y29sb3I6I2ZmZn0ubWVzc2FnZS5pcy1wcmltYXJ5IC5tZXNzYWdlLWJvZHl7Ym9yZGVyLWNvbG9yOiMwMGQxYjI7Y29sb3I6Z3JheX0ubWVzc2FnZS5pcy1pbmZve2JhY2tncm91bmQtY29sb3I6I2VlZjNmY30ubWVzc2FnZS5pcy1pbmZvIC5tZXNzYWdlLWhlYWRlcntiYWNrZ3JvdW5kLWNvbG9yOiMzMjczZGM7Y29sb3I6I2ZmZn0ubWVzc2FnZS5pcy1pbmZvIC5tZXNzYWdlLWJvZHl7Ym9yZGVyLWNvbG9yOiMzMjczZGM7Y29sb3I6Z3JheX0ubWVzc2FnZS5pcy1zdWNjZXNze2JhY2tncm91bmQtY29sb3I6I2VlZmNmM30ubWVzc2FnZS5pcy1zdWNjZXNzIC5tZXNzYWdlLWhlYWRlcntiYWNrZ3JvdW5kLWNvbG9yOiMyM2QxNjA7Y29sb3I6I2ZmZn0ubWVzc2FnZS5pcy1zdWNjZXNzIC5tZXNzYWdlLWJvZHl7Ym9yZGVyLWNvbG9yOiMyM2QxNjA7Y29sb3I6Z3JheX0ubWVzc2FnZS5pcy13YXJuaW5ne2JhY2tncm91bmQtY29sb3I6I2ZmZmJlYn0ubWVzc2FnZS5pcy13YXJuaW5nIC5tZXNzYWdlLWhlYWRlcntiYWNrZ3JvdW5kLWNvbG9yOiNmZmRkNTc7Y29sb3I6cmdiYSgwLDAsMCwwLjcpfS5tZXNzYWdlLmlzLXdhcm5pbmcgLm1lc3NhZ2UtYm9keXtib3JkZXItY29sb3I6I2ZmZGQ1Nztjb2xvcjpncmF5fS5tZXNzYWdlLmlzLWRhbmdlcntiYWNrZ3JvdW5kLWNvbG9yOiNmZmViZWZ9Lm1lc3NhZ2UuaXMtZGFuZ2VyIC5tZXNzYWdlLWhlYWRlcntiYWNrZ3JvdW5kLWNvbG9yOiNmZjM4NjA7Y29sb3I6I2ZmZn0ubWVzc2FnZS5pcy1kYW5nZXIgLm1lc3NhZ2UtYm9keXtib3JkZXItY29sb3I6I2ZmMzg2MDtjb2xvcjpncmF5fS5tb2RhbC1iYWNrZ3JvdW5ke2JvdHRvbTowO2xlZnQ6MDtwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDowO3RvcDowO2JhY2tncm91bmQtY29sb3I6cmdiYSgxMCwxMCwxMCwwLjg2KX0ubW9kYWwtY29udGVudCwubW9kYWwtY2FyZHttYXJnaW46MCAyMHB4O21heC1oZWlnaHQ6Y2FsYygxMDB2aCAtIDE2MHB4KTtvdmVyZmxvdzphdXRvO3Bvc2l0aW9uOnJlbGF0aXZlO3dpZHRoOjEwMCV9QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpey5tb2RhbC1jb250ZW50LC5tb2RhbC1jYXJke21hcmdpbjowIGF1dG87bWF4LWhlaWdodDpjYWxjKDEwMHZoIC0gNDBweCk7d2lkdGg6NjQwcHh9fS5tb2RhbC1jbG9zZXstd2Via2l0LXRvdWNoLWNhbGxvdXQ6bm9uZTstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmU7LW1vei1hcHBlYXJhbmNlOm5vbmU7LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmU7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEwLDEwLDEwLDAuMSk7Ym9yZGVyOm5vbmU7Ym9yZGVyLXJhZGl1czoyOTA0ODZweDtjdXJzb3I6cG9pbnRlcjtkaXNwbGF5OmlubGluZS1ibG9jaztoZWlnaHQ6MjRweDtvdXRsaW5lOm5vbmU7cG9zaXRpb246cmVsYXRpdmU7dmVydGljYWwtYWxpZ246dG9wO3dpZHRoOjI0cHg7YmFja2dyb3VuZDpub25lO2hlaWdodDo0MHB4O3Bvc2l0aW9uOmZpeGVkO3JpZ2h0OjIwcHg7dG9wOjIwcHg7d2lkdGg6NDBweH0ubW9kYWwtY2xvc2U6YmVmb3JlLC5tb2RhbC1jbG9zZTphZnRlcntiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Y29udGVudDpcXFwiXFxcIjtkaXNwbGF5OmJsb2NrO2hlaWdodDoycHg7bGVmdDo1MCU7bWFyZ2luLWxlZnQ6LTI1JTttYXJnaW4tdG9wOi0xcHg7cG9zaXRpb246YWJzb2x1dGU7dG9wOjUwJTt3aWR0aDo1MCV9Lm1vZGFsLWNsb3NlOmJlZm9yZXt0cmFuc2Zvcm06cm90YXRlKDQ1ZGVnKX0ubW9kYWwtY2xvc2U6YWZ0ZXJ7dHJhbnNmb3JtOnJvdGF0ZSgtNDVkZWcpfS5tb2RhbC1jbG9zZTpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTAsMTAsMTAsMC4yKX0ubW9kYWwtY2xvc2UuaXMtc21hbGx7aGVpZ2h0OjE2cHg7d2lkdGg6MTZweH0ubW9kYWwtY2xvc2UuaXMtbWVkaXVte2hlaWdodDozMnB4O3dpZHRoOjMycHh9Lm1vZGFsLWNsb3NlLmlzLWxhcmdle2hlaWdodDo0MHB4O3dpZHRoOjQwcHh9Lm1vZGFsLWNhcmR7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjttYXgtaGVpZ2h0OmNhbGMoMTAwdmggLSA0MHB4KTtvdmVyZmxvdzpoaWRkZW59Lm1vZGFsLWNhcmQtaGVhZCwubW9kYWwtY2FyZC1mb290e2FsaWduLWl0ZW1zOmNlbnRlcjtiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjU7ZGlzcGxheTpmbGV4O2ZsZXgtc2hyaW5rOjA7anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7cGFkZGluZzoyMHB4O3Bvc2l0aW9uOnJlbGF0aXZlfS5tb2RhbC1jYXJkLWhlYWR7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2RiZGJkYjtib3JkZXItdG9wLWxlZnQtcmFkaXVzOjVweDtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czo1cHh9Lm1vZGFsLWNhcmQtdGl0bGV7Y29sb3I6IzM2MzYzNjtmbGV4LWdyb3c6MTtmbGV4LXNocmluazowO2ZvbnQtc2l6ZToyNHB4O2xpbmUtaGVpZ2h0OjF9Lm1vZGFsLWNhcmQtZm9vdHtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjVweDtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czo1cHg7Ym9yZGVyLXRvcDoxcHggc29saWQgI2RiZGJkYn0ubW9kYWwtY2FyZC1mb290IC5idXR0b246bm90KDpsYXN0LWNoaWxkKXttYXJnaW4tcmlnaHQ6MTBweH0ubW9kYWwtY2FyZC1ib2R5e2JhY2tncm91bmQtY29sb3I6I2ZmZjtmbGV4LWdyb3c6MTtmbGV4LXNocmluazoxO292ZXJmbG93OmF1dG87cGFkZGluZzoyMHB4fS5tb2RhbHtib3R0b206MDtsZWZ0OjA7cG9zaXRpb246YWJzb2x1dGU7cmlnaHQ6MDt0b3A6MDthbGlnbi1pdGVtczpjZW50ZXI7ZGlzcGxheTpub25lO2p1c3RpZnktY29udGVudDpjZW50ZXI7b3ZlcmZsb3c6aGlkZGVuO3Bvc2l0aW9uOmZpeGVkO3otaW5kZXg6MTk4Nn0ubW9kYWwuaXMtYWN0aXZle2Rpc3BsYXk6ZmxleH0ubmF2LXRvZ2dsZXtjdXJzb3I6cG9pbnRlcjtkaXNwbGF5OmJsb2NrO2hlaWdodDo1MHB4O3Bvc2l0aW9uOnJlbGF0aXZlO3dpZHRoOjUwcHh9Lm5hdi10b2dnbGUgc3BhbntiYWNrZ3JvdW5kLWNvbG9yOiM0YTRhNGE7ZGlzcGxheTpibG9jaztoZWlnaHQ6MXB4O2xlZnQ6NTAlO21hcmdpbi1sZWZ0Oi03cHg7cG9zaXRpb246YWJzb2x1dGU7dG9wOjUwJTt0cmFuc2l0aW9uOm5vbmUgODZtcyBlYXNlLW91dDt0cmFuc2l0aW9uLXByb3BlcnR5OmJhY2tncm91bmQsIGxlZnQsIG9wYWNpdHksIHRyYW5zZm9ybTt3aWR0aDoxNXB4fS5uYXYtdG9nZ2xlIHNwYW46bnRoLWNoaWxkKDEpe21hcmdpbi10b3A6LTZweH0ubmF2LXRvZ2dsZSBzcGFuOm50aC1jaGlsZCgyKXttYXJnaW4tdG9wOi0xcHh9Lm5hdi10b2dnbGUgc3BhbjpudGgtY2hpbGQoMyl7bWFyZ2luLXRvcDo0cHh9Lm5hdi10b2dnbGU6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZjVmNWY1fS5uYXYtdG9nZ2xlLmlzLWFjdGl2ZSBzcGFue2JhY2tncm91bmQtY29sb3I6IzRhOGJmYX0ubmF2LXRvZ2dsZS5pcy1hY3RpdmUgc3BhbjpudGgtY2hpbGQoMSl7bWFyZ2luLWxlZnQ6LTVweDt0cmFuc2Zvcm06cm90YXRlKDQ1ZGVnKTt0cmFuc2Zvcm0tb3JpZ2luOmxlZnQgdG9wfS5uYXYtdG9nZ2xlLmlzLWFjdGl2ZSBzcGFuOm50aC1jaGlsZCgyKXtvcGFjaXR5OjB9Lm5hdi10b2dnbGUuaXMtYWN0aXZlIHNwYW46bnRoLWNoaWxkKDMpe21hcmdpbi1sZWZ0Oi01cHg7dHJhbnNmb3JtOnJvdGF0ZSgtNDVkZWcpO3RyYW5zZm9ybS1vcmlnaW46bGVmdCBib3R0b219QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpey5uYXYtdG9nZ2xle2Rpc3BsYXk6bm9uZX19Lm5hdi1pdGVte2FsaWduLWl0ZW1zOmNlbnRlcjtkaXNwbGF5OmZsZXg7ZmxleC1ncm93OjA7ZmxleC1zaHJpbms6MDtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO3BhZGRpbmc6MTBweH0ubmF2LWl0ZW0gYXtmbGV4LWdyb3c6MTtmbGV4LXNocmluazowfS5uYXYtaXRlbSBpbWd7bWF4LWhlaWdodDoyNHB4fS5uYXYtaXRlbSAuYnV0dG9uKy5idXR0b257bWFyZ2luLWxlZnQ6MTBweH0ubmF2LWl0ZW0gLnRhZzpmaXJzdC1jaGlsZHttYXJnaW4tcmlnaHQ6NXB4fS5uYXYtaXRlbSAudGFnOmxhc3QtY2hpbGR7bWFyZ2luLWxlZnQ6NXB4fUBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KXsubmF2LWl0ZW17anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnR9fS5uYXYtaXRlbSBhLGEubmF2LWl0ZW17Y29sb3I6IzdhN2E3YX0ubmF2LWl0ZW0gYTpob3ZlcixhLm5hdi1pdGVtOmhvdmVye2NvbG9yOiMzNjM2MzZ9Lm5hdi1pdGVtIGEuaXMtYWN0aXZlLGEubmF2LWl0ZW0uaXMtYWN0aXZle2NvbG9yOiM0YThiZmF9Lm5hdi1pdGVtIGEuaXMtdGFiLGEubmF2LWl0ZW0uaXMtdGFie2JvcmRlci1ib3R0b206MXB4IHNvbGlkIHRyYW5zcGFyZW50O2JvcmRlci10b3A6MXB4IHNvbGlkIHRyYW5zcGFyZW50O3BhZGRpbmctbGVmdDoxMnB4O3BhZGRpbmctcmlnaHQ6MTJweH0ubmF2LWl0ZW0gYS5pcy10YWI6aG92ZXIsYS5uYXYtaXRlbS5pcy10YWI6aG92ZXJ7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgIzRhOGJmYTtib3JkZXItdG9wOjFweCBzb2xpZCB0cmFuc3BhcmVudH0ubmF2LWl0ZW0gYS5pcy10YWIuaXMtYWN0aXZlLGEubmF2LWl0ZW0uaXMtdGFiLmlzLWFjdGl2ZXtib3JkZXItYm90dG9tOjNweCBzb2xpZCAjNGE4YmZhO2JvcmRlci10b3A6M3B4IHNvbGlkIHRyYW5zcGFyZW50O2NvbG9yOiM0YThiZmF9QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpey5uYXYtbWVudXtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym94LXNoYWRvdzowIDRweCA3cHggcmdiYSgxMCwxMCwxMCwwLjEpO2xlZnQ6MDtkaXNwbGF5Om5vbmU7cmlnaHQ6MDt0b3A6MTAwJTtwb3NpdGlvbjphYnNvbHV0ZX0ubmF2LW1lbnUgLm5hdi1pdGVte2JvcmRlci10b3A6MXB4IHNvbGlkIHJnYmEoMjE5LDIxOSwyMTksMC41KTtwYWRkaW5nOjEwcHh9Lm5hdi1tZW51LmlzLWFjdGl2ZXtkaXNwbGF5OmJsb2NrfX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCkgYW5kIChtYXgtd2lkdGg6IDk3OXB4KXsubmF2LW1lbnV7cGFkZGluZy1yaWdodDoyMHB4fX0ubmF2LWxlZnR7YWxpZ24taXRlbXM6c3RyZXRjaDtkaXNwbGF5OmZsZXg7ZmxleC1iYXNpczowO2ZsZXgtZ3JvdzoxO2ZsZXgtc2hyaW5rOjA7anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7b3ZlcmZsb3c6aGlkZGVuO292ZXJmbG93LXg6YXV0bzt3aGl0ZS1zcGFjZTpub3dyYXB9Lm5hdi1jZW50ZXJ7YWxpZ24taXRlbXM6c3RyZXRjaDtkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OmNlbnRlcjttYXJnaW4tbGVmdDphdXRvO21hcmdpbi1yaWdodDphdXRvfUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KXsubmF2LXJpZ2h0e2FsaWduLWl0ZW1zOnN0cmV0Y2g7ZGlzcGxheTpmbGV4O2ZsZXgtYmFzaXM6MDtmbGV4LWdyb3c6MTtmbGV4LXNocmluazowO2p1c3RpZnktY29udGVudDpmbGV4LWVuZH19Lm5hdnthbGlnbi1pdGVtczpzdHJldGNoO2JhY2tncm91bmQtY29sb3I6I2ZmZjtkaXNwbGF5OmZsZXg7bWluLWhlaWdodDo1MHB4O3Bvc2l0aW9uOnJlbGF0aXZlO3RleHQtYWxpZ246Y2VudGVyO3otaW5kZXg6Mn0ubmF2Pi5jb250YWluZXJ7YWxpZ24taXRlbXM6c3RyZXRjaDtkaXNwbGF5OmZsZXg7bWluLWhlaWdodDo1MHB4O3dpZHRoOjEwMCV9Lm5hdj4uY29udGFpbmVyPi5uYXYtbGVmdD4ubmF2LWl0ZW06Zmlyc3QtY2hpbGQ6bm90KC5pcy10YWIpe3BhZGRpbmctbGVmdDowfS5uYXY+LmNvbnRhaW5lcj4ubmF2LXJpZ2h0Pi5uYXYtaXRlbTpsYXN0LWNoaWxkOm5vdCguaXMtdGFiKXtwYWRkaW5nLXJpZ2h0OjB9LmNvbnRhaW5lcj4ubmF2Pi5uYXYtbGVmdD4ubmF2LWl0ZW06Zmlyc3QtY2hpbGQ6bm90KC5pcy10YWIpe3BhZGRpbmctbGVmdDowfS5jb250YWluZXI+Lm5hdj4ubmF2LXJpZ2h0Pi5uYXYtaXRlbTpsYXN0LWNoaWxkOm5vdCguaXMtdGFiKXtwYWRkaW5nLXJpZ2h0OjB9Lm5hdi5oYXMtc2hhZG93e2JveC1zaGFkb3c6MCAycHggM3B4IHJnYmEoMTAsMTAsMTAsMC4xKX1AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5NzlweCl7Lm5hdj4uY29udGFpbmVyPi5uYXYtbGVmdD4ubmF2LWl0ZW0uaXMtYnJhbmQ6Zmlyc3QtY2hpbGQsLmNvbnRhaW5lcj4ubmF2Pi5uYXYtbGVmdD4ubmF2LWl0ZW0uaXMtYnJhbmQ6Zmlyc3QtY2hpbGR7cGFkZGluZy1sZWZ0OjIwcHh9fS5wYWdpbmF0aW9ue2FsaWduLWl0ZW1zOmNlbnRlcjtkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OmNlbnRlcjt0ZXh0LWFsaWduOmNlbnRlcn0ucGFnaW5hdGlvbiBhe2Rpc3BsYXk6YmxvY2s7bWluLXdpZHRoOjMycHg7cGFkZGluZzozcHggOHB4fS5wYWdpbmF0aW9uIHNwYW57Y29sb3I6IzdhN2E3YTtkaXNwbGF5OmJsb2NrO21hcmdpbjowIDRweH0ucGFnaW5hdGlvbiBsaXttYXJnaW46MCAycHh9LnBhZ2luYXRpb24gdWx7YWxpZ24taXRlbXM6Y2VudGVyO2Rpc3BsYXk6ZmxleDtmbGV4LWdyb3c6MTtmbGV4LXNocmluazowO2p1c3RpZnktY29udGVudDpjZW50ZXJ9QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpey5wYWdpbmF0aW9ue2ZsZXgtd3JhcDp3cmFwfS5wYWdpbmF0aW9uPmF7d2lkdGg6Y2FsYyg1MCUgLSA1cHgpfS5wYWdpbmF0aW9uPmE6bm90KDpmaXJzdC1jaGlsZCl7bWFyZ2luLWxlZnQ6MTBweH0ucGFnaW5hdGlvbiBsaXtmbGV4LWdyb3c6MTtmbGV4LXNocmluazowfS5wYWdpbmF0aW9uIHVse21hcmdpbi10b3A6MTBweH19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpey5wYWdpbmF0aW9uPmE6bm90KDpmaXJzdC1jaGlsZCl7b3JkZXI6MX19LnBhbmVsLWljb257ZGlzcGxheTppbmxpbmUtYmxvY2s7Zm9udC1zaXplOjE0cHg7aGVpZ2h0OjE2cHg7bGluZS1oZWlnaHQ6MTZweDt0ZXh0LWFsaWduOmNlbnRlcjt2ZXJ0aWNhbC1hbGlnbjp0b3A7d2lkdGg6MTZweDtjb2xvcjojN2E3YTdhO2Zsb2F0OmxlZnQ7bWFyZ2luOjAgNHB4IDAgLTJweH0ucGFuZWwtaWNvbiAuZmF7Zm9udC1zaXplOmluaGVyaXQ7bGluZS1oZWlnaHQ6aW5oZXJpdH0ucGFuZWwtaGVhZGluZ3tiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjU7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2RiZGJkYjtib3JkZXItcmFkaXVzOjRweCA0cHggMCAwO2NvbG9yOiMzNjM2MzY7Zm9udC1zaXplOjE4cHg7Zm9udC13ZWlnaHQ6MzAwO3BhZGRpbmc6MTBweH0ucGFuZWwtbGlzdCBhe2NvbG9yOiM0YTRhNGF9LnBhbmVsLWxpc3QgYTpob3Zlcntjb2xvcjojNGE4YmZhfS5wYW5lbC10YWJze2Rpc3BsYXk6ZmxleDtmb250LXNpemU6MTFweDtwYWRkaW5nOjVweCAxMHB4IDA7anVzdGlmeS1jb250ZW50OmNlbnRlcn0ucGFuZWwtdGFicyBhe2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNkYmRiZGI7bWFyZ2luLWJvdHRvbTotMXB4O3BhZGRpbmc6NXB4fS5wYW5lbC10YWJzIGEuaXMtYWN0aXZle2JvcmRlci1ib3R0b20tY29sb3I6IzM2MzYzNjtjb2xvcjojNGE4YmZhfS5wYW5lbC10YWJzOm5vdCg6bGFzdC1jaGlsZCl7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2RiZGJkYn0ucGFuZWwtYmxvY2t7Y29sb3I6IzM2MzYzNjtkaXNwbGF5OmJsb2NrO2xpbmUtaGVpZ2h0OjE2cHg7cGFkZGluZzoxMHB4fS5wYW5lbC1ibG9jazpub3QoOmxhc3QtY2hpbGQpe2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNkYmRiZGJ9YS5wYW5lbC1ibG9jazpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjV9LnBhbmVse2JvcmRlcjoxcHggc29saWQgI2RiZGJkYjtib3JkZXItcmFkaXVzOjVweH0ucGFuZWw6bm90KDpsYXN0LWNoaWxkKXttYXJnaW4tYm90dG9tOjIwcHh9LnRhYnN7LXdlYmtpdC10b3VjaC1jYWxsb3V0Om5vbmU7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lO2FsaWduLWl0ZW1zOnN0cmV0Y2g7ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuO2xpbmUtaGVpZ2h0OjI0cHg7b3ZlcmZsb3c6aGlkZGVuO292ZXJmbG93LXg6YXV0bzt3aGl0ZS1zcGFjZTpub3dyYXB9LnRhYnM6bm90KDpsYXN0LWNoaWxkKXttYXJnaW4tYm90dG9tOjIwcHh9LnRhYnMgYXthbGlnbi1pdGVtczpjZW50ZXI7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2RiZGJkYjtjb2xvcjojNGE0YTRhO2Rpc3BsYXk6ZmxleDtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO21hcmdpbi1ib3R0b206LTFweDtwYWRkaW5nOjZweCAxMnB4O3ZlcnRpY2FsLWFsaWduOnRvcH0udGFicyBhOmhvdmVye2JvcmRlci1ib3R0b20tY29sb3I6IzM2MzYzNjtjb2xvcjojMzYzNjM2fS50YWJzIGxpe2Rpc3BsYXk6YmxvY2t9LnRhYnMgbGkuaXMtYWN0aXZlIGF7Ym9yZGVyLWJvdHRvbS1jb2xvcjojNGE4YmZhO2NvbG9yOiM0YThiZmF9LnRhYnMgdWx7YWxpZ24taXRlbXM6Y2VudGVyO2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNkYmRiZGI7ZGlzcGxheTpmbGV4O2ZsZXgtZ3JvdzoxO2ZsZXgtc2hyaW5rOjA7anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnR9LnRhYnMgdWwuaXMtbGVmdHtwYWRkaW5nLXJpZ2h0OjEwcHh9LnRhYnMgdWwuaXMtY2VudGVye2ZsZXg6bm9uZTtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO3BhZGRpbmctbGVmdDoxMHB4O3BhZGRpbmctcmlnaHQ6MTBweH0udGFicyB1bC5pcy1yaWdodHtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1lbmQ7cGFkZGluZy1sZWZ0OjEwcHh9LnRhYnMgLmljb246Zmlyc3QtY2hpbGR7bWFyZ2luLXJpZ2h0OjhweH0udGFicyAuaWNvbjpsYXN0LWNoaWxke21hcmdpbi1sZWZ0OjhweH0udGFicy5pcy1jZW50ZXJlZCB1bHtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyfS50YWJzLmlzLXJpZ2h0IHVse2p1c3RpZnktY29udGVudDpmbGV4LWVuZH0udGFicy5pcy1ib3hlZCBhe2JvcmRlcjoxcHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLXJhZGl1czozcHggM3B4IDAgMDtwYWRkaW5nLWJvdHRvbTo1cHg7cGFkZGluZy10b3A6NXB4fS50YWJzLmlzLWJveGVkIGE6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZjVmNWY1O2JvcmRlci1ib3R0b20tY29sb3I6I2RiZGJkYn0udGFicy5pcy1ib3hlZCBsaS5pcy1hY3RpdmUgYXtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym9yZGVyLWNvbG9yOiNkYmRiZGI7Ym9yZGVyLWJvdHRvbS1jb2xvcjp0cmFuc3BhcmVudCAhaW1wb3J0YW50fS50YWJzLmlzLWZ1bGx3aWR0aCBsaXtmbGV4LWdyb3c6MTtmbGV4LXNocmluazowfS50YWJzLmlzLXRvZ2dsZSBhe2JvcmRlcjoxcHggc29saWQgI2RiZGJkYjttYXJnaW4tYm90dG9tOjA7cGFkZGluZy1ib3R0b206NXB4O3BhZGRpbmctdG9wOjVweDtwb3NpdGlvbjpyZWxhdGl2ZX0udGFicy5pcy10b2dnbGUgYTpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjU7Ym9yZGVyLWNvbG9yOiNiNWI1YjU7ei1pbmRleDoyfS50YWJzLmlzLXRvZ2dsZSBsaStsaXttYXJnaW4tbGVmdDotMXB4fS50YWJzLmlzLXRvZ2dsZSBsaTpmaXJzdC1jaGlsZCBhe2JvcmRlci1yYWRpdXM6M3B4IDAgMCAzcHh9LnRhYnMuaXMtdG9nZ2xlIGxpOmxhc3QtY2hpbGQgYXtib3JkZXItcmFkaXVzOjAgM3B4IDNweCAwfS50YWJzLmlzLXRvZ2dsZSBsaS5pcy1hY3RpdmUgYXtiYWNrZ3JvdW5kLWNvbG9yOiMwMGQxYjI7Ym9yZGVyLWNvbG9yOiMwMGQxYjI7Y29sb3I6I2ZmZjt6LWluZGV4OjF9LnRhYnMuaXMtdG9nZ2xlIHVse2JvcmRlci1ib3R0b206bm9uZX0udGFicy5pcy1zbWFsbHtmb250LXNpemU6MTFweH0udGFicy5pcy1zbWFsbCBhe3BhZGRpbmc6MnB4IDhweH0udGFicy5pcy1zbWFsbC5pcy1ib3hlZCBhLC50YWJzLmlzLXNtYWxsLmlzLXRvZ2dsZSBhe3BhZGRpbmctYm90dG9tOjFweDtwYWRkaW5nLXRvcDoxcHh9LnRhYnMuaXMtbWVkaXVte2ZvbnQtc2l6ZToxOHB4fS50YWJzLmlzLW1lZGl1bSBhe3BhZGRpbmc6MTBweCAxNnB4fS50YWJzLmlzLW1lZGl1bS5pcy1ib3hlZCBhLC50YWJzLmlzLW1lZGl1bS5pcy10b2dnbGUgYXtwYWRkaW5nLWJvdHRvbTo5cHg7cGFkZGluZy10b3A6OXB4fS50YWJzLmlzLWxhcmdle2ZvbnQtc2l6ZToyOHB4fS50YWJzLmlzLWxhcmdlIGF7cGFkZGluZzoxNHB4IDIwcHh9LnRhYnMuaXMtbGFyZ2UuaXMtYm94ZWQgYSwudGFicy5pcy1sYXJnZS5pcy10b2dnbGUgYXtwYWRkaW5nLWJvdHRvbToxM3B4O3BhZGRpbmctdG9wOjEzcHh9LmNvbHVtbntkaXNwbGF5OmJsb2NrO2ZsZXgtYmFzaXM6MDtmbGV4LWdyb3c6MTtmbGV4LXNocmluazoxO3BhZGRpbmc6MTBweH0uY29sdW1ucy5pcy1tb2JpbGU+LmNvbHVtbi5pcy1uYXJyb3d7ZmxleDpub25lfS5jb2x1bW5zLmlzLW1vYmlsZT4uY29sdW1uLmlzLWZ1bGx7ZmxleDpub25lO3dpZHRoOjEwMCV9LmNvbHVtbnMuaXMtbW9iaWxlPi5jb2x1bW4uaXMtdGhyZWUtcXVhcnRlcnN7ZmxleDpub25lO3dpZHRoOjc1JX0uY29sdW1ucy5pcy1tb2JpbGU+LmNvbHVtbi5pcy10d28tdGhpcmRze2ZsZXg6bm9uZTt3aWR0aDo2Ni42NjY2JX0uY29sdW1ucy5pcy1tb2JpbGU+LmNvbHVtbi5pcy1oYWxme2ZsZXg6bm9uZTt3aWR0aDo1MCV9LmNvbHVtbnMuaXMtbW9iaWxlPi5jb2x1bW4uaXMtb25lLXRoaXJke2ZsZXg6bm9uZTt3aWR0aDozMy4zMzMzJX0uY29sdW1ucy5pcy1tb2JpbGU+LmNvbHVtbi5pcy1vbmUtcXVhcnRlcntmbGV4Om5vbmU7d2lkdGg6MjUlfS5jb2x1bW5zLmlzLW1vYmlsZT4uY29sdW1uLmlzLW9mZnNldC10aHJlZS1xdWFydGVyc3ttYXJnaW4tbGVmdDo3NSV9LmNvbHVtbnMuaXMtbW9iaWxlPi5jb2x1bW4uaXMtb2Zmc2V0LXR3by10aGlyZHN7bWFyZ2luLWxlZnQ6NjYuNjY2NiV9LmNvbHVtbnMuaXMtbW9iaWxlPi5jb2x1bW4uaXMtb2Zmc2V0LWhhbGZ7bWFyZ2luLWxlZnQ6NTAlfS5jb2x1bW5zLmlzLW1vYmlsZT4uY29sdW1uLmlzLW9mZnNldC1vbmUtdGhpcmR7bWFyZ2luLWxlZnQ6MzMuMzMzMyV9LmNvbHVtbnMuaXMtbW9iaWxlPi5jb2x1bW4uaXMtb2Zmc2V0LW9uZS1xdWFydGVye21hcmdpbi1sZWZ0OjI1JX0uY29sdW1ucy5pcy1tb2JpbGU+LmNvbHVtbi5pcy0xe2ZsZXg6bm9uZTt3aWR0aDo4LjMzMzMzJX0uY29sdW1ucy5pcy1tb2JpbGU+LmNvbHVtbi5pcy1vZmZzZXQtMXttYXJnaW4tbGVmdDo4LjMzMzMzJX0uY29sdW1ucy5pcy1tb2JpbGU+LmNvbHVtbi5pcy0ye2ZsZXg6bm9uZTt3aWR0aDoxNi42NjY2NyV9LmNvbHVtbnMuaXMtbW9iaWxlPi5jb2x1bW4uaXMtb2Zmc2V0LTJ7bWFyZ2luLWxlZnQ6MTYuNjY2NjclfS5jb2x1bW5zLmlzLW1vYmlsZT4uY29sdW1uLmlzLTN7ZmxleDpub25lO3dpZHRoOjI1JX0uY29sdW1ucy5pcy1tb2JpbGU+LmNvbHVtbi5pcy1vZmZzZXQtM3ttYXJnaW4tbGVmdDoyNSV9LmNvbHVtbnMuaXMtbW9iaWxlPi5jb2x1bW4uaXMtNHtmbGV4Om5vbmU7d2lkdGg6MzMuMzMzMzMlfS5jb2x1bW5zLmlzLW1vYmlsZT4uY29sdW1uLmlzLW9mZnNldC00e21hcmdpbi1sZWZ0OjMzLjMzMzMzJX0uY29sdW1ucy5pcy1tb2JpbGU+LmNvbHVtbi5pcy01e2ZsZXg6bm9uZTt3aWR0aDo0MS42NjY2NyV9LmNvbHVtbnMuaXMtbW9iaWxlPi5jb2x1bW4uaXMtb2Zmc2V0LTV7bWFyZ2luLWxlZnQ6NDEuNjY2NjclfS5jb2x1bW5zLmlzLW1vYmlsZT4uY29sdW1uLmlzLTZ7ZmxleDpub25lO3dpZHRoOjUwJX0uY29sdW1ucy5pcy1tb2JpbGU+LmNvbHVtbi5pcy1vZmZzZXQtNnttYXJnaW4tbGVmdDo1MCV9LmNvbHVtbnMuaXMtbW9iaWxlPi5jb2x1bW4uaXMtN3tmbGV4Om5vbmU7d2lkdGg6NTguMzMzMzMlfS5jb2x1bW5zLmlzLW1vYmlsZT4uY29sdW1uLmlzLW9mZnNldC03e21hcmdpbi1sZWZ0OjU4LjMzMzMzJX0uY29sdW1ucy5pcy1tb2JpbGU+LmNvbHVtbi5pcy04e2ZsZXg6bm9uZTt3aWR0aDo2Ni42NjY2NyV9LmNvbHVtbnMuaXMtbW9iaWxlPi5jb2x1bW4uaXMtb2Zmc2V0LTh7bWFyZ2luLWxlZnQ6NjYuNjY2NjclfS5jb2x1bW5zLmlzLW1vYmlsZT4uY29sdW1uLmlzLTl7ZmxleDpub25lO3dpZHRoOjc1JX0uY29sdW1ucy5pcy1tb2JpbGU+LmNvbHVtbi5pcy1vZmZzZXQtOXttYXJnaW4tbGVmdDo3NSV9LmNvbHVtbnMuaXMtbW9iaWxlPi5jb2x1bW4uaXMtMTB7ZmxleDpub25lO3dpZHRoOjgzLjMzMzMzJX0uY29sdW1ucy5pcy1tb2JpbGU+LmNvbHVtbi5pcy1vZmZzZXQtMTB7bWFyZ2luLWxlZnQ6ODMuMzMzMzMlfS5jb2x1bW5zLmlzLW1vYmlsZT4uY29sdW1uLmlzLTExe2ZsZXg6bm9uZTt3aWR0aDo5MS42NjY2NyV9LmNvbHVtbnMuaXMtbW9iaWxlPi5jb2x1bW4uaXMtb2Zmc2V0LTExe21hcmdpbi1sZWZ0OjkxLjY2NjY3JX0uY29sdW1ucy5pcy1tb2JpbGU+LmNvbHVtbi5pcy0xMntmbGV4Om5vbmU7d2lkdGg6MTAwJX0uY29sdW1ucy5pcy1tb2JpbGU+LmNvbHVtbi5pcy1vZmZzZXQtMTJ7bWFyZ2luLWxlZnQ6MTAwJX1AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCl7LmNvbHVtbi5pcy1uYXJyb3ctbW9iaWxle2ZsZXg6bm9uZX0uY29sdW1uLmlzLWZ1bGwtbW9iaWxle2ZsZXg6bm9uZTt3aWR0aDoxMDAlfS5jb2x1bW4uaXMtdGhyZWUtcXVhcnRlcnMtbW9iaWxle2ZsZXg6bm9uZTt3aWR0aDo3NSV9LmNvbHVtbi5pcy10d28tdGhpcmRzLW1vYmlsZXtmbGV4Om5vbmU7d2lkdGg6NjYuNjY2NiV9LmNvbHVtbi5pcy1oYWxmLW1vYmlsZXtmbGV4Om5vbmU7d2lkdGg6NTAlfS5jb2x1bW4uaXMtb25lLXRoaXJkLW1vYmlsZXtmbGV4Om5vbmU7d2lkdGg6MzMuMzMzMyV9LmNvbHVtbi5pcy1vbmUtcXVhcnRlci1tb2JpbGV7ZmxleDpub25lO3dpZHRoOjI1JX0uY29sdW1uLmlzLW9mZnNldC10aHJlZS1xdWFydGVycy1tb2JpbGV7bWFyZ2luLWxlZnQ6NzUlfS5jb2x1bW4uaXMtb2Zmc2V0LXR3by10aGlyZHMtbW9iaWxle21hcmdpbi1sZWZ0OjY2LjY2NjYlfS5jb2x1bW4uaXMtb2Zmc2V0LWhhbGYtbW9iaWxle21hcmdpbi1sZWZ0OjUwJX0uY29sdW1uLmlzLW9mZnNldC1vbmUtdGhpcmQtbW9iaWxle21hcmdpbi1sZWZ0OjMzLjMzMzMlfS5jb2x1bW4uaXMtb2Zmc2V0LW9uZS1xdWFydGVyLW1vYmlsZXttYXJnaW4tbGVmdDoyNSV9LmNvbHVtbi5pcy0xLW1vYmlsZXtmbGV4Om5vbmU7d2lkdGg6OC4zMzMzMyV9LmNvbHVtbi5pcy1vZmZzZXQtMS1tb2JpbGV7bWFyZ2luLWxlZnQ6OC4zMzMzMyV9LmNvbHVtbi5pcy0yLW1vYmlsZXtmbGV4Om5vbmU7d2lkdGg6MTYuNjY2NjclfS5jb2x1bW4uaXMtb2Zmc2V0LTItbW9iaWxle21hcmdpbi1sZWZ0OjE2LjY2NjY3JX0uY29sdW1uLmlzLTMtbW9iaWxle2ZsZXg6bm9uZTt3aWR0aDoyNSV9LmNvbHVtbi5pcy1vZmZzZXQtMy1tb2JpbGV7bWFyZ2luLWxlZnQ6MjUlfS5jb2x1bW4uaXMtNC1tb2JpbGV7ZmxleDpub25lO3dpZHRoOjMzLjMzMzMzJX0uY29sdW1uLmlzLW9mZnNldC00LW1vYmlsZXttYXJnaW4tbGVmdDozMy4zMzMzMyV9LmNvbHVtbi5pcy01LW1vYmlsZXtmbGV4Om5vbmU7d2lkdGg6NDEuNjY2NjclfS5jb2x1bW4uaXMtb2Zmc2V0LTUtbW9iaWxle21hcmdpbi1sZWZ0OjQxLjY2NjY3JX0uY29sdW1uLmlzLTYtbW9iaWxle2ZsZXg6bm9uZTt3aWR0aDo1MCV9LmNvbHVtbi5pcy1vZmZzZXQtNi1tb2JpbGV7bWFyZ2luLWxlZnQ6NTAlfS5jb2x1bW4uaXMtNy1tb2JpbGV7ZmxleDpub25lO3dpZHRoOjU4LjMzMzMzJX0uY29sdW1uLmlzLW9mZnNldC03LW1vYmlsZXttYXJnaW4tbGVmdDo1OC4zMzMzMyV9LmNvbHVtbi5pcy04LW1vYmlsZXtmbGV4Om5vbmU7d2lkdGg6NjYuNjY2NjclfS5jb2x1bW4uaXMtb2Zmc2V0LTgtbW9iaWxle21hcmdpbi1sZWZ0OjY2LjY2NjY3JX0uY29sdW1uLmlzLTktbW9iaWxle2ZsZXg6bm9uZTt3aWR0aDo3NSV9LmNvbHVtbi5pcy1vZmZzZXQtOS1tb2JpbGV7bWFyZ2luLWxlZnQ6NzUlfS5jb2x1bW4uaXMtMTAtbW9iaWxle2ZsZXg6bm9uZTt3aWR0aDo4My4zMzMzMyV9LmNvbHVtbi5pcy1vZmZzZXQtMTAtbW9iaWxle21hcmdpbi1sZWZ0OjgzLjMzMzMzJX0uY29sdW1uLmlzLTExLW1vYmlsZXtmbGV4Om5vbmU7d2lkdGg6OTEuNjY2NjclfS5jb2x1bW4uaXMtb2Zmc2V0LTExLW1vYmlsZXttYXJnaW4tbGVmdDo5MS42NjY2NyV9LmNvbHVtbi5pcy0xMi1tb2JpbGV7ZmxleDpub25lO3dpZHRoOjEwMCV9LmNvbHVtbi5pcy1vZmZzZXQtMTItbW9iaWxle21hcmdpbi1sZWZ0OjEwMCV9fUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KXsuY29sdW1uLmlzLW5hcnJvdywuY29sdW1uLmlzLW5hcnJvdy10YWJsZXR7ZmxleDpub25lfS5jb2x1bW4uaXMtZnVsbCwuY29sdW1uLmlzLWZ1bGwtdGFibGV0e2ZsZXg6bm9uZTt3aWR0aDoxMDAlfS5jb2x1bW4uaXMtdGhyZWUtcXVhcnRlcnMsLmNvbHVtbi5pcy10aHJlZS1xdWFydGVycy10YWJsZXR7ZmxleDpub25lO3dpZHRoOjc1JX0uY29sdW1uLmlzLXR3by10aGlyZHMsLmNvbHVtbi5pcy10d28tdGhpcmRzLXRhYmxldHtmbGV4Om5vbmU7d2lkdGg6NjYuNjY2NiV9LmNvbHVtbi5pcy1oYWxmLC5jb2x1bW4uaXMtaGFsZi10YWJsZXR7ZmxleDpub25lO3dpZHRoOjUwJX0uY29sdW1uLmlzLW9uZS10aGlyZCwuY29sdW1uLmlzLW9uZS10aGlyZC10YWJsZXR7ZmxleDpub25lO3dpZHRoOjMzLjMzMzMlfS5jb2x1bW4uaXMtb25lLXF1YXJ0ZXIsLmNvbHVtbi5pcy1vbmUtcXVhcnRlci10YWJsZXR7ZmxleDpub25lO3dpZHRoOjI1JX0uY29sdW1uLmlzLW9mZnNldC10aHJlZS1xdWFydGVycywuY29sdW1uLmlzLW9mZnNldC10aHJlZS1xdWFydGVycy10YWJsZXR7bWFyZ2luLWxlZnQ6NzUlfS5jb2x1bW4uaXMtb2Zmc2V0LXR3by10aGlyZHMsLmNvbHVtbi5pcy1vZmZzZXQtdHdvLXRoaXJkcy10YWJsZXR7bWFyZ2luLWxlZnQ6NjYuNjY2NiV9LmNvbHVtbi5pcy1vZmZzZXQtaGFsZiwuY29sdW1uLmlzLW9mZnNldC1oYWxmLXRhYmxldHttYXJnaW4tbGVmdDo1MCV9LmNvbHVtbi5pcy1vZmZzZXQtb25lLXRoaXJkLC5jb2x1bW4uaXMtb2Zmc2V0LW9uZS10aGlyZC10YWJsZXR7bWFyZ2luLWxlZnQ6MzMuMzMzMyV9LmNvbHVtbi5pcy1vZmZzZXQtb25lLXF1YXJ0ZXIsLmNvbHVtbi5pcy1vZmZzZXQtb25lLXF1YXJ0ZXItdGFibGV0e21hcmdpbi1sZWZ0OjI1JX0uY29sdW1uLmlzLTEsLmNvbHVtbi5pcy0xLXRhYmxldHtmbGV4Om5vbmU7d2lkdGg6OC4zMzMzMyV9LmNvbHVtbi5pcy1vZmZzZXQtMSwuY29sdW1uLmlzLW9mZnNldC0xLXRhYmxldHttYXJnaW4tbGVmdDo4LjMzMzMzJX0uY29sdW1uLmlzLTIsLmNvbHVtbi5pcy0yLXRhYmxldHtmbGV4Om5vbmU7d2lkdGg6MTYuNjY2NjclfS5jb2x1bW4uaXMtb2Zmc2V0LTIsLmNvbHVtbi5pcy1vZmZzZXQtMi10YWJsZXR7bWFyZ2luLWxlZnQ6MTYuNjY2NjclfS5jb2x1bW4uaXMtMywuY29sdW1uLmlzLTMtdGFibGV0e2ZsZXg6bm9uZTt3aWR0aDoyNSV9LmNvbHVtbi5pcy1vZmZzZXQtMywuY29sdW1uLmlzLW9mZnNldC0zLXRhYmxldHttYXJnaW4tbGVmdDoyNSV9LmNvbHVtbi5pcy00LC5jb2x1bW4uaXMtNC10YWJsZXR7ZmxleDpub25lO3dpZHRoOjMzLjMzMzMzJX0uY29sdW1uLmlzLW9mZnNldC00LC5jb2x1bW4uaXMtb2Zmc2V0LTQtdGFibGV0e21hcmdpbi1sZWZ0OjMzLjMzMzMzJX0uY29sdW1uLmlzLTUsLmNvbHVtbi5pcy01LXRhYmxldHtmbGV4Om5vbmU7d2lkdGg6NDEuNjY2NjclfS5jb2x1bW4uaXMtb2Zmc2V0LTUsLmNvbHVtbi5pcy1vZmZzZXQtNS10YWJsZXR7bWFyZ2luLWxlZnQ6NDEuNjY2NjclfS5jb2x1bW4uaXMtNiwuY29sdW1uLmlzLTYtdGFibGV0e2ZsZXg6bm9uZTt3aWR0aDo1MCV9LmNvbHVtbi5pcy1vZmZzZXQtNiwuY29sdW1uLmlzLW9mZnNldC02LXRhYmxldHttYXJnaW4tbGVmdDo1MCV9LmNvbHVtbi5pcy03LC5jb2x1bW4uaXMtNy10YWJsZXR7ZmxleDpub25lO3dpZHRoOjU4LjMzMzMzJX0uY29sdW1uLmlzLW9mZnNldC03LC5jb2x1bW4uaXMtb2Zmc2V0LTctdGFibGV0e21hcmdpbi1sZWZ0OjU4LjMzMzMzJX0uY29sdW1uLmlzLTgsLmNvbHVtbi5pcy04LXRhYmxldHtmbGV4Om5vbmU7d2lkdGg6NjYuNjY2NjclfS5jb2x1bW4uaXMtb2Zmc2V0LTgsLmNvbHVtbi5pcy1vZmZzZXQtOC10YWJsZXR7bWFyZ2luLWxlZnQ6NjYuNjY2NjclfS5jb2x1bW4uaXMtOSwuY29sdW1uLmlzLTktdGFibGV0e2ZsZXg6bm9uZTt3aWR0aDo3NSV9LmNvbHVtbi5pcy1vZmZzZXQtOSwuY29sdW1uLmlzLW9mZnNldC05LXRhYmxldHttYXJnaW4tbGVmdDo3NSV9LmNvbHVtbi5pcy0xMCwuY29sdW1uLmlzLTEwLXRhYmxldHtmbGV4Om5vbmU7d2lkdGg6ODMuMzMzMzMlfS5jb2x1bW4uaXMtb2Zmc2V0LTEwLC5jb2x1bW4uaXMtb2Zmc2V0LTEwLXRhYmxldHttYXJnaW4tbGVmdDo4My4zMzMzMyV9LmNvbHVtbi5pcy0xMSwuY29sdW1uLmlzLTExLXRhYmxldHtmbGV4Om5vbmU7d2lkdGg6OTEuNjY2NjclfS5jb2x1bW4uaXMtb2Zmc2V0LTExLC5jb2x1bW4uaXMtb2Zmc2V0LTExLXRhYmxldHttYXJnaW4tbGVmdDo5MS42NjY2NyV9LmNvbHVtbi5pcy0xMiwuY29sdW1uLmlzLTEyLXRhYmxldHtmbGV4Om5vbmU7d2lkdGg6MTAwJX0uY29sdW1uLmlzLW9mZnNldC0xMiwuY29sdW1uLmlzLW9mZnNldC0xMi10YWJsZXR7bWFyZ2luLWxlZnQ6MTAwJX19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTgwcHgpey5jb2x1bW4uaXMtbmFycm93LWRlc2t0b3B7ZmxleDpub25lfS5jb2x1bW4uaXMtZnVsbC1kZXNrdG9we2ZsZXg6bm9uZTt3aWR0aDoxMDAlfS5jb2x1bW4uaXMtdGhyZWUtcXVhcnRlcnMtZGVza3RvcHtmbGV4Om5vbmU7d2lkdGg6NzUlfS5jb2x1bW4uaXMtdHdvLXRoaXJkcy1kZXNrdG9we2ZsZXg6bm9uZTt3aWR0aDo2Ni42NjY2JX0uY29sdW1uLmlzLWhhbGYtZGVza3RvcHtmbGV4Om5vbmU7d2lkdGg6NTAlfS5jb2x1bW4uaXMtb25lLXRoaXJkLWRlc2t0b3B7ZmxleDpub25lO3dpZHRoOjMzLjMzMzMlfS5jb2x1bW4uaXMtb25lLXF1YXJ0ZXItZGVza3RvcHtmbGV4Om5vbmU7d2lkdGg6MjUlfS5jb2x1bW4uaXMtb2Zmc2V0LXRocmVlLXF1YXJ0ZXJzLWRlc2t0b3B7bWFyZ2luLWxlZnQ6NzUlfS5jb2x1bW4uaXMtb2Zmc2V0LXR3by10aGlyZHMtZGVza3RvcHttYXJnaW4tbGVmdDo2Ni42NjY2JX0uY29sdW1uLmlzLW9mZnNldC1oYWxmLWRlc2t0b3B7bWFyZ2luLWxlZnQ6NTAlfS5jb2x1bW4uaXMtb2Zmc2V0LW9uZS10aGlyZC1kZXNrdG9we21hcmdpbi1sZWZ0OjMzLjMzMzMlfS5jb2x1bW4uaXMtb2Zmc2V0LW9uZS1xdWFydGVyLWRlc2t0b3B7bWFyZ2luLWxlZnQ6MjUlfS5jb2x1bW4uaXMtMS1kZXNrdG9we2ZsZXg6bm9uZTt3aWR0aDo4LjMzMzMzJX0uY29sdW1uLmlzLW9mZnNldC0xLWRlc2t0b3B7bWFyZ2luLWxlZnQ6OC4zMzMzMyV9LmNvbHVtbi5pcy0yLWRlc2t0b3B7ZmxleDpub25lO3dpZHRoOjE2LjY2NjY3JX0uY29sdW1uLmlzLW9mZnNldC0yLWRlc2t0b3B7bWFyZ2luLWxlZnQ6MTYuNjY2NjclfS5jb2x1bW4uaXMtMy1kZXNrdG9we2ZsZXg6bm9uZTt3aWR0aDoyNSV9LmNvbHVtbi5pcy1vZmZzZXQtMy1kZXNrdG9we21hcmdpbi1sZWZ0OjI1JX0uY29sdW1uLmlzLTQtZGVza3RvcHtmbGV4Om5vbmU7d2lkdGg6MzMuMzMzMzMlfS5jb2x1bW4uaXMtb2Zmc2V0LTQtZGVza3RvcHttYXJnaW4tbGVmdDozMy4zMzMzMyV9LmNvbHVtbi5pcy01LWRlc2t0b3B7ZmxleDpub25lO3dpZHRoOjQxLjY2NjY3JX0uY29sdW1uLmlzLW9mZnNldC01LWRlc2t0b3B7bWFyZ2luLWxlZnQ6NDEuNjY2NjclfS5jb2x1bW4uaXMtNi1kZXNrdG9we2ZsZXg6bm9uZTt3aWR0aDo1MCV9LmNvbHVtbi5pcy1vZmZzZXQtNi1kZXNrdG9we21hcmdpbi1sZWZ0OjUwJX0uY29sdW1uLmlzLTctZGVza3RvcHtmbGV4Om5vbmU7d2lkdGg6NTguMzMzMzMlfS5jb2x1bW4uaXMtb2Zmc2V0LTctZGVza3RvcHttYXJnaW4tbGVmdDo1OC4zMzMzMyV9LmNvbHVtbi5pcy04LWRlc2t0b3B7ZmxleDpub25lO3dpZHRoOjY2LjY2NjY3JX0uY29sdW1uLmlzLW9mZnNldC04LWRlc2t0b3B7bWFyZ2luLWxlZnQ6NjYuNjY2NjclfS5jb2x1bW4uaXMtOS1kZXNrdG9we2ZsZXg6bm9uZTt3aWR0aDo3NSV9LmNvbHVtbi5pcy1vZmZzZXQtOS1kZXNrdG9we21hcmdpbi1sZWZ0Ojc1JX0uY29sdW1uLmlzLTEwLWRlc2t0b3B7ZmxleDpub25lO3dpZHRoOjgzLjMzMzMzJX0uY29sdW1uLmlzLW9mZnNldC0xMC1kZXNrdG9we21hcmdpbi1sZWZ0OjgzLjMzMzMzJX0uY29sdW1uLmlzLTExLWRlc2t0b3B7ZmxleDpub25lO3dpZHRoOjkxLjY2NjY3JX0uY29sdW1uLmlzLW9mZnNldC0xMS1kZXNrdG9we21hcmdpbi1sZWZ0OjkxLjY2NjY3JX0uY29sdW1uLmlzLTEyLWRlc2t0b3B7ZmxleDpub25lO3dpZHRoOjEwMCV9LmNvbHVtbi5pcy1vZmZzZXQtMTItZGVza3RvcHttYXJnaW4tbGVmdDoxMDAlfX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMTgwcHgpey5jb2x1bW4uaXMtbmFycm93LXdpZGVzY3JlZW57ZmxleDpub25lfS5jb2x1bW4uaXMtZnVsbC13aWRlc2NyZWVue2ZsZXg6bm9uZTt3aWR0aDoxMDAlfS5jb2x1bW4uaXMtdGhyZWUtcXVhcnRlcnMtd2lkZXNjcmVlbntmbGV4Om5vbmU7d2lkdGg6NzUlfS5jb2x1bW4uaXMtdHdvLXRoaXJkcy13aWRlc2NyZWVue2ZsZXg6bm9uZTt3aWR0aDo2Ni42NjY2JX0uY29sdW1uLmlzLWhhbGYtd2lkZXNjcmVlbntmbGV4Om5vbmU7d2lkdGg6NTAlfS5jb2x1bW4uaXMtb25lLXRoaXJkLXdpZGVzY3JlZW57ZmxleDpub25lO3dpZHRoOjMzLjMzMzMlfS5jb2x1bW4uaXMtb25lLXF1YXJ0ZXItd2lkZXNjcmVlbntmbGV4Om5vbmU7d2lkdGg6MjUlfS5jb2x1bW4uaXMtb2Zmc2V0LXRocmVlLXF1YXJ0ZXJzLXdpZGVzY3JlZW57bWFyZ2luLWxlZnQ6NzUlfS5jb2x1bW4uaXMtb2Zmc2V0LXR3by10aGlyZHMtd2lkZXNjcmVlbnttYXJnaW4tbGVmdDo2Ni42NjY2JX0uY29sdW1uLmlzLW9mZnNldC1oYWxmLXdpZGVzY3JlZW57bWFyZ2luLWxlZnQ6NTAlfS5jb2x1bW4uaXMtb2Zmc2V0LW9uZS10aGlyZC13aWRlc2NyZWVue21hcmdpbi1sZWZ0OjMzLjMzMzMlfS5jb2x1bW4uaXMtb2Zmc2V0LW9uZS1xdWFydGVyLXdpZGVzY3JlZW57bWFyZ2luLWxlZnQ6MjUlfS5jb2x1bW4uaXMtMS13aWRlc2NyZWVue2ZsZXg6bm9uZTt3aWR0aDo4LjMzMzMzJX0uY29sdW1uLmlzLW9mZnNldC0xLXdpZGVzY3JlZW57bWFyZ2luLWxlZnQ6OC4zMzMzMyV9LmNvbHVtbi5pcy0yLXdpZGVzY3JlZW57ZmxleDpub25lO3dpZHRoOjE2LjY2NjY3JX0uY29sdW1uLmlzLW9mZnNldC0yLXdpZGVzY3JlZW57bWFyZ2luLWxlZnQ6MTYuNjY2NjclfS5jb2x1bW4uaXMtMy13aWRlc2NyZWVue2ZsZXg6bm9uZTt3aWR0aDoyNSV9LmNvbHVtbi5pcy1vZmZzZXQtMy13aWRlc2NyZWVue21hcmdpbi1sZWZ0OjI1JX0uY29sdW1uLmlzLTQtd2lkZXNjcmVlbntmbGV4Om5vbmU7d2lkdGg6MzMuMzMzMzMlfS5jb2x1bW4uaXMtb2Zmc2V0LTQtd2lkZXNjcmVlbnttYXJnaW4tbGVmdDozMy4zMzMzMyV9LmNvbHVtbi5pcy01LXdpZGVzY3JlZW57ZmxleDpub25lO3dpZHRoOjQxLjY2NjY3JX0uY29sdW1uLmlzLW9mZnNldC01LXdpZGVzY3JlZW57bWFyZ2luLWxlZnQ6NDEuNjY2NjclfS5jb2x1bW4uaXMtNi13aWRlc2NyZWVue2ZsZXg6bm9uZTt3aWR0aDo1MCV9LmNvbHVtbi5pcy1vZmZzZXQtNi13aWRlc2NyZWVue21hcmdpbi1sZWZ0OjUwJX0uY29sdW1uLmlzLTctd2lkZXNjcmVlbntmbGV4Om5vbmU7d2lkdGg6NTguMzMzMzMlfS5jb2x1bW4uaXMtb2Zmc2V0LTctd2lkZXNjcmVlbnttYXJnaW4tbGVmdDo1OC4zMzMzMyV9LmNvbHVtbi5pcy04LXdpZGVzY3JlZW57ZmxleDpub25lO3dpZHRoOjY2LjY2NjY3JX0uY29sdW1uLmlzLW9mZnNldC04LXdpZGVzY3JlZW57bWFyZ2luLWxlZnQ6NjYuNjY2NjclfS5jb2x1bW4uaXMtOS13aWRlc2NyZWVue2ZsZXg6bm9uZTt3aWR0aDo3NSV9LmNvbHVtbi5pcy1vZmZzZXQtOS13aWRlc2NyZWVue21hcmdpbi1sZWZ0Ojc1JX0uY29sdW1uLmlzLTEwLXdpZGVzY3JlZW57ZmxleDpub25lO3dpZHRoOjgzLjMzMzMzJX0uY29sdW1uLmlzLW9mZnNldC0xMC13aWRlc2NyZWVue21hcmdpbi1sZWZ0OjgzLjMzMzMzJX0uY29sdW1uLmlzLTExLXdpZGVzY3JlZW57ZmxleDpub25lO3dpZHRoOjkxLjY2NjY3JX0uY29sdW1uLmlzLW9mZnNldC0xMS13aWRlc2NyZWVue21hcmdpbi1sZWZ0OjkxLjY2NjY3JX0uY29sdW1uLmlzLTEyLXdpZGVzY3JlZW57ZmxleDpub25lO3dpZHRoOjEwMCV9LmNvbHVtbi5pcy1vZmZzZXQtMTItd2lkZXNjcmVlbnttYXJnaW4tbGVmdDoxMDAlfX0uY29sdW1uc3ttYXJnaW4tbGVmdDotMTBweDttYXJnaW4tcmlnaHQ6LTEwcHg7bWFyZ2luLXRvcDotMTBweH0uY29sdW1uczpsYXN0LWNoaWxke21hcmdpbi1ib3R0b206LTEwcHh9LmNvbHVtbnM6bm90KDpsYXN0LWNoaWxkKXttYXJnaW4tYm90dG9tOjEwcHh9LmNvbHVtbnMuaXMtY2VudGVyZWR7anVzdGlmeS1jb250ZW50OmNlbnRlcn0uY29sdW1ucy5pcy1nYXBsZXNze21hcmdpbi1sZWZ0OjA7bWFyZ2luLXJpZ2h0OjA7bWFyZ2luLXRvcDowfS5jb2x1bW5zLmlzLWdhcGxlc3M6bGFzdC1jaGlsZHttYXJnaW4tYm90dG9tOjB9LmNvbHVtbnMuaXMtZ2FwbGVzczpub3QoOmxhc3QtY2hpbGQpe21hcmdpbi1ib3R0b206MjBweH0uY29sdW1ucy5pcy1nYXBsZXNzPi5jb2x1bW57bWFyZ2luOjA7cGFkZGluZzowfUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KXsuY29sdW1ucy5pcy1ncmlke2ZsZXgtd3JhcDp3cmFwfS5jb2x1bW5zLmlzLWdyaWQ+LmNvbHVtbnttYXgtd2lkdGg6MzMuMzMzMyU7cGFkZGluZzoxMHB4O3dpZHRoOjMzLjMzMzMlfS5jb2x1bW5zLmlzLWdyaWQ+LmNvbHVtbisuY29sdW1ue21hcmdpbi1sZWZ0OjB9fS5jb2x1bW5zLmlzLW1vYmlsZXtkaXNwbGF5OmZsZXh9LmNvbHVtbnMuaXMtbXVsdGlsaW5le2ZsZXgtd3JhcDp3cmFwfS5jb2x1bW5zLmlzLXZjZW50ZXJlZHthbGlnbi1pdGVtczpjZW50ZXJ9QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpey5jb2x1bW5zOm5vdCguaXMtZGVza3RvcCl7ZGlzcGxheTpmbGV4fX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5ODBweCl7LmNvbHVtbnMuaXMtZGVza3RvcHtkaXNwbGF5OmZsZXh9fS50aWxle2FsaWduLWl0ZW1zOnN0cmV0Y2g7ZGlzcGxheTpibG9jaztmbGV4LWJhc2lzOmF1dG87ZmxleC1ncm93OjE7ZmxleC1zaHJpbms6MTttaW4taGVpZ2h0Om1pbi1jb250ZW50fS50aWxlLmlzLWFuY2VzdG9ye21hcmdpbi1sZWZ0Oi0xMHB4O21hcmdpbi1yaWdodDotMTBweDttYXJnaW4tdG9wOi0xMHB4fS50aWxlLmlzLWFuY2VzdG9yOmxhc3QtY2hpbGR7bWFyZ2luLWJvdHRvbTotMTBweH0udGlsZS5pcy1hbmNlc3Rvcjpub3QoOmxhc3QtY2hpbGQpe21hcmdpbi1ib3R0b206MTBweH0udGlsZS5pcy1jaGlsZHttYXJnaW46MCAhaW1wb3J0YW50fS50aWxlLmlzLXBhcmVudHtwYWRkaW5nOjEwcHh9LnRpbGUuaXMtdmVydGljYWx7ZmxleC1kaXJlY3Rpb246Y29sdW1ufS50aWxlLmlzLXZlcnRpY2FsPi50aWxlLmlzLWNoaWxkOm5vdCg6bGFzdC1jaGlsZCl7bWFyZ2luLWJvdHRvbToyMHB4ICFpbXBvcnRhbnR9QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpey50aWxlOm5vdCguaXMtY2hpbGQpe2Rpc3BsYXk6ZmxleH0udGlsZS5pcy0xe2ZsZXg6bm9uZTt3aWR0aDo4LjMzMzMzJX0udGlsZS5pcy0ye2ZsZXg6bm9uZTt3aWR0aDoxNi42NjY2NyV9LnRpbGUuaXMtM3tmbGV4Om5vbmU7d2lkdGg6MjUlfS50aWxlLmlzLTR7ZmxleDpub25lO3dpZHRoOjMzLjMzMzMzJX0udGlsZS5pcy01e2ZsZXg6bm9uZTt3aWR0aDo0MS42NjY2NyV9LnRpbGUuaXMtNntmbGV4Om5vbmU7d2lkdGg6NTAlfS50aWxlLmlzLTd7ZmxleDpub25lO3dpZHRoOjU4LjMzMzMzJX0udGlsZS5pcy04e2ZsZXg6bm9uZTt3aWR0aDo2Ni42NjY2NyV9LnRpbGUuaXMtOXtmbGV4Om5vbmU7d2lkdGg6NzUlfS50aWxlLmlzLTEwe2ZsZXg6bm9uZTt3aWR0aDo4My4zMzMzMyV9LnRpbGUuaXMtMTF7ZmxleDpub25lO3dpZHRoOjkxLjY2NjY3JX0udGlsZS5pcy0xMntmbGV4Om5vbmU7d2lkdGg6MTAwJX19Lmhlcm8tdmlkZW97Ym90dG9tOjA7bGVmdDowO3Bvc2l0aW9uOmFic29sdXRlO3JpZ2h0OjA7dG9wOjA7b3ZlcmZsb3c6aGlkZGVufS5oZXJvLXZpZGVvIHZpZGVve2xlZnQ6NTAlO21pbi1oZWlnaHQ6MTAwJTttaW4td2lkdGg6MTAwJTtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6NTAlO3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgtNTAlLCAtNTAlLCAwKX0uaGVyby12aWRlby5pcy10cmFuc3BhcmVudHtvcGFjaXR5OjAuM31AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCl7Lmhlcm8tdmlkZW97ZGlzcGxheTpub25lfX0uaGVyby1idXR0b25ze21hcmdpbi10b3A6MjBweH1AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCl7Lmhlcm8tYnV0dG9ucyAuYnV0dG9ue2Rpc3BsYXk6ZmxleH0uaGVyby1idXR0b25zIC5idXR0b246bm90KDpsYXN0LWNoaWxkKXttYXJnaW4tYm90dG9tOjEwcHh9fUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KXsuaGVyby1idXR0b25ze2Rpc3BsYXk6ZmxleDtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyfS5oZXJvLWJ1dHRvbnMgLmJ1dHRvbjpub3QoOmxhc3QtY2hpbGQpe21hcmdpbi1yaWdodDoyMHB4fX0uaGVyby1oZWFkLC5oZXJvLWZvb3R7ZmxleC1zaHJpbms6MH0uaGVyby1ib2R5e2ZsZXgtZ3JvdzoxO2ZsZXgtc2hyaW5rOjA7cGFkZGluZzo0MHB4IDIwcHh9QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTI0MHB4KXsuaGVyby1ib2R5e3BhZGRpbmctbGVmdDowO3BhZGRpbmctcmlnaHQ6MH19Lmhlcm97YWxpZ24taXRlbXM6c3RyZXRjaDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2Vlbn0uaGVybyAubmF2e2JhY2tncm91bmQ6bm9uZTtib3gtc2hhZG93OjAgMXB4IDAgcmdiYSgyMTksMjE5LDIxOSwwLjMpfS5oZXJvIC50YWJzIHVse2JvcmRlci1ib3R0b206bm9uZX0uaGVyby5pcy13aGl0ZXtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Y29sb3I6IzBhMGEwYX0uaGVyby5pcy13aGl0ZSAudGl0bGV7Y29sb3I6IzBhMGEwYX0uaGVyby5pcy13aGl0ZSAudGl0bGUgYSwuaGVyby5pcy13aGl0ZSAudGl0bGUgc3Ryb25ne2NvbG9yOmluaGVyaXR9Lmhlcm8uaXMtd2hpdGUgLnN1YnRpdGxle2NvbG9yOnJnYmEoMTAsMTAsMTAsMC45KX0uaGVyby5pcy13aGl0ZSAuc3VidGl0bGUgYSwuaGVyby5pcy13aGl0ZSAuc3VidGl0bGUgc3Ryb25ne2NvbG9yOiMwYTBhMGF9Lmhlcm8uaXMtd2hpdGUgLm5hdntib3gtc2hhZG93OjAgMXB4IDAgcmdiYSgxMCwxMCwxMCwwLjIpfUBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KXsuaGVyby5pcy13aGl0ZSAubmF2LW1lbnV7YmFja2dyb3VuZC1jb2xvcjojZmZmfX0uaGVyby5pcy13aGl0ZSBhLm5hdi1pdGVtLC5oZXJvLmlzLXdoaXRlIC5uYXYtaXRlbSBhOm5vdCguYnV0dG9uKXtjb2xvcjpyZ2JhKDEwLDEwLDEwLDAuNyl9Lmhlcm8uaXMtd2hpdGUgYS5uYXYtaXRlbTpob3ZlciwuaGVyby5pcy13aGl0ZSBhLm5hdi1pdGVtLmlzLWFjdGl2ZSwuaGVyby5pcy13aGl0ZSAubmF2LWl0ZW0gYTpub3QoLmJ1dHRvbik6aG92ZXIsLmhlcm8uaXMtd2hpdGUgLm5hdi1pdGVtIGE6bm90KC5idXR0b24pLmlzLWFjdGl2ZXtjb2xvcjojMGEwYTBhfS5oZXJvLmlzLXdoaXRlIC50YWJzIGF7Y29sb3I6IzBhMGEwYTtvcGFjaXR5OjAuOX0uaGVyby5pcy13aGl0ZSAudGFicyBhOmhvdmVye29wYWNpdHk6MX0uaGVyby5pcy13aGl0ZSAudGFicyBsaS5pcy1hY3RpdmUgYXtvcGFjaXR5OjF9Lmhlcm8uaXMtd2hpdGUgLnRhYnMuaXMtYm94ZWQgYSwuaGVyby5pcy13aGl0ZSAudGFicy5pcy10b2dnbGUgYXtjb2xvcjojMGEwYTBhfS5oZXJvLmlzLXdoaXRlIC50YWJzLmlzLWJveGVkIGE6aG92ZXIsLmhlcm8uaXMtd2hpdGUgLnRhYnMuaXMtdG9nZ2xlIGE6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEwLDEwLDEwLDAuMSl9Lmhlcm8uaXMtd2hpdGUgLnRhYnMuaXMtYm94ZWQgbGkuaXMtYWN0aXZlIGEsLmhlcm8uaXMtd2hpdGUgLnRhYnMuaXMtYm94ZWQgbGkuaXMtYWN0aXZlIGE6aG92ZXIsLmhlcm8uaXMtd2hpdGUgLnRhYnMuaXMtdG9nZ2xlIGxpLmlzLWFjdGl2ZSBhLC5oZXJvLmlzLXdoaXRlIC50YWJzLmlzLXRvZ2dsZSBsaS5pcy1hY3RpdmUgYTpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiMwYTBhMGE7Ym9yZGVyLWNvbG9yOiMwYTBhMGE7Y29sb3I6I2ZmZn0uaGVyby5pcy13aGl0ZS5pcy1ib2xke2JhY2tncm91bmQtaW1hZ2U6bGluZWFyLWdyYWRpZW50KDE0MWRlZywgI2U2ZTZlNiAwJSwgI2ZmZiA3MSUsICNmZmYgMTAwJSl9QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpey5oZXJvLmlzLXdoaXRlIC5uYXYtdG9nZ2xlIHNwYW57YmFja2dyb3VuZC1jb2xvcjojMGEwYTBhfS5oZXJvLmlzLXdoaXRlIC5uYXYtdG9nZ2xlOmhvdmVye2JhY2tncm91bmQtY29sb3I6cmdiYSgxMCwxMCwxMCwwLjEpfS5oZXJvLmlzLXdoaXRlIC5uYXYtdG9nZ2xlLmlzLWFjdGl2ZSBzcGFue2JhY2tncm91bmQtY29sb3I6IzBhMGEwYX0uaGVyby5pcy13aGl0ZSAubmF2LW1lbnUgLm5hdi1pdGVte2JvcmRlci10b3AtY29sb3I6cmdiYSgxMCwxMCwxMCwwLjIpfX0uaGVyby5pcy1ibGFja3tiYWNrZ3JvdW5kLWNvbG9yOiMwYTBhMGE7Y29sb3I6I2ZmZn0uaGVyby5pcy1ibGFjayAudGl0bGV7Y29sb3I6I2ZmZn0uaGVyby5pcy1ibGFjayAudGl0bGUgYSwuaGVyby5pcy1ibGFjayAudGl0bGUgc3Ryb25ne2NvbG9yOmluaGVyaXR9Lmhlcm8uaXMtYmxhY2sgLnN1YnRpdGxle2NvbG9yOnJnYmEoMjU1LDI1NSwyNTUsMC45KX0uaGVyby5pcy1ibGFjayAuc3VidGl0bGUgYSwuaGVyby5pcy1ibGFjayAuc3VidGl0bGUgc3Ryb25ne2NvbG9yOiNmZmZ9Lmhlcm8uaXMtYmxhY2sgLm5hdntib3gtc2hhZG93OjAgMXB4IDAgcmdiYSgyNTUsMjU1LDI1NSwwLjIpfUBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KXsuaGVyby5pcy1ibGFjayAubmF2LW1lbnV7YmFja2dyb3VuZC1jb2xvcjojMGEwYTBhfX0uaGVyby5pcy1ibGFjayBhLm5hdi1pdGVtLC5oZXJvLmlzLWJsYWNrIC5uYXYtaXRlbSBhOm5vdCguYnV0dG9uKXtjb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LDAuNyl9Lmhlcm8uaXMtYmxhY2sgYS5uYXYtaXRlbTpob3ZlciwuaGVyby5pcy1ibGFjayBhLm5hdi1pdGVtLmlzLWFjdGl2ZSwuaGVyby5pcy1ibGFjayAubmF2LWl0ZW0gYTpub3QoLmJ1dHRvbik6aG92ZXIsLmhlcm8uaXMtYmxhY2sgLm5hdi1pdGVtIGE6bm90KC5idXR0b24pLmlzLWFjdGl2ZXtjb2xvcjojZmZmfS5oZXJvLmlzLWJsYWNrIC50YWJzIGF7Y29sb3I6I2ZmZjtvcGFjaXR5OjAuOX0uaGVyby5pcy1ibGFjayAudGFicyBhOmhvdmVye29wYWNpdHk6MX0uaGVyby5pcy1ibGFjayAudGFicyBsaS5pcy1hY3RpdmUgYXtvcGFjaXR5OjF9Lmhlcm8uaXMtYmxhY2sgLnRhYnMuaXMtYm94ZWQgYSwuaGVyby5pcy1ibGFjayAudGFicy5pcy10b2dnbGUgYXtjb2xvcjojZmZmfS5oZXJvLmlzLWJsYWNrIC50YWJzLmlzLWJveGVkIGE6aG92ZXIsLmhlcm8uaXMtYmxhY2sgLnRhYnMuaXMtdG9nZ2xlIGE6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEwLDEwLDEwLDAuMSl9Lmhlcm8uaXMtYmxhY2sgLnRhYnMuaXMtYm94ZWQgbGkuaXMtYWN0aXZlIGEsLmhlcm8uaXMtYmxhY2sgLnRhYnMuaXMtYm94ZWQgbGkuaXMtYWN0aXZlIGE6aG92ZXIsLmhlcm8uaXMtYmxhY2sgLnRhYnMuaXMtdG9nZ2xlIGxpLmlzLWFjdGl2ZSBhLC5oZXJvLmlzLWJsYWNrIC50YWJzLmlzLXRvZ2dsZSBsaS5pcy1hY3RpdmUgYTpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym9yZGVyLWNvbG9yOiNmZmY7Y29sb3I6IzBhMGEwYX0uaGVyby5pcy1ibGFjay5pcy1ib2xke2JhY2tncm91bmQtaW1hZ2U6bGluZWFyLWdyYWRpZW50KDE0MWRlZywgIzAwMCAwJSwgIzBhMGEwYSA3MSUsICMxODE2MTYgMTAwJSl9QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpey5oZXJvLmlzLWJsYWNrIC5uYXYtdG9nZ2xlIHNwYW57YmFja2dyb3VuZC1jb2xvcjojZmZmfS5oZXJvLmlzLWJsYWNrIC5uYXYtdG9nZ2xlOmhvdmVye2JhY2tncm91bmQtY29sb3I6cmdiYSgxMCwxMCwxMCwwLjEpfS5oZXJvLmlzLWJsYWNrIC5uYXYtdG9nZ2xlLmlzLWFjdGl2ZSBzcGFue2JhY2tncm91bmQtY29sb3I6I2ZmZn0uaGVyby5pcy1ibGFjayAubmF2LW1lbnUgLm5hdi1pdGVte2JvcmRlci10b3AtY29sb3I6cmdiYSgyNTUsMjU1LDI1NSwwLjIpfX0uaGVyby5pcy1saWdodHtiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjU7Y29sb3I6IzM2MzYzNn0uaGVyby5pcy1saWdodCAudGl0bGV7Y29sb3I6IzM2MzYzNn0uaGVyby5pcy1saWdodCAudGl0bGUgYSwuaGVyby5pcy1saWdodCAudGl0bGUgc3Ryb25ne2NvbG9yOmluaGVyaXR9Lmhlcm8uaXMtbGlnaHQgLnN1YnRpdGxle2NvbG9yOnJnYmEoNTQsNTQsNTQsMC45KX0uaGVyby5pcy1saWdodCAuc3VidGl0bGUgYSwuaGVyby5pcy1saWdodCAuc3VidGl0bGUgc3Ryb25ne2NvbG9yOiMzNjM2MzZ9Lmhlcm8uaXMtbGlnaHQgLm5hdntib3gtc2hhZG93OjAgMXB4IDAgcmdiYSg1NCw1NCw1NCwwLjIpfUBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KXsuaGVyby5pcy1saWdodCAubmF2LW1lbnV7YmFja2dyb3VuZC1jb2xvcjojZjVmNWY1fX0uaGVyby5pcy1saWdodCBhLm5hdi1pdGVtLC5oZXJvLmlzLWxpZ2h0IC5uYXYtaXRlbSBhOm5vdCguYnV0dG9uKXtjb2xvcjpyZ2JhKDU0LDU0LDU0LDAuNyl9Lmhlcm8uaXMtbGlnaHQgYS5uYXYtaXRlbTpob3ZlciwuaGVyby5pcy1saWdodCBhLm5hdi1pdGVtLmlzLWFjdGl2ZSwuaGVyby5pcy1saWdodCAubmF2LWl0ZW0gYTpub3QoLmJ1dHRvbik6aG92ZXIsLmhlcm8uaXMtbGlnaHQgLm5hdi1pdGVtIGE6bm90KC5idXR0b24pLmlzLWFjdGl2ZXtjb2xvcjojMzYzNjM2fS5oZXJvLmlzLWxpZ2h0IC50YWJzIGF7Y29sb3I6IzM2MzYzNjtvcGFjaXR5OjAuOX0uaGVyby5pcy1saWdodCAudGFicyBhOmhvdmVye29wYWNpdHk6MX0uaGVyby5pcy1saWdodCAudGFicyBsaS5pcy1hY3RpdmUgYXtvcGFjaXR5OjF9Lmhlcm8uaXMtbGlnaHQgLnRhYnMuaXMtYm94ZWQgYSwuaGVyby5pcy1saWdodCAudGFicy5pcy10b2dnbGUgYXtjb2xvcjojMzYzNjM2fS5oZXJvLmlzLWxpZ2h0IC50YWJzLmlzLWJveGVkIGE6aG92ZXIsLmhlcm8uaXMtbGlnaHQgLnRhYnMuaXMtdG9nZ2xlIGE6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEwLDEwLDEwLDAuMSl9Lmhlcm8uaXMtbGlnaHQgLnRhYnMuaXMtYm94ZWQgbGkuaXMtYWN0aXZlIGEsLmhlcm8uaXMtbGlnaHQgLnRhYnMuaXMtYm94ZWQgbGkuaXMtYWN0aXZlIGE6aG92ZXIsLmhlcm8uaXMtbGlnaHQgLnRhYnMuaXMtdG9nZ2xlIGxpLmlzLWFjdGl2ZSBhLC5oZXJvLmlzLWxpZ2h0IC50YWJzLmlzLXRvZ2dsZSBsaS5pcy1hY3RpdmUgYTpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiMzNjM2MzY7Ym9yZGVyLWNvbG9yOiMzNjM2MzY7Y29sb3I6I2Y1ZjVmNX0uaGVyby5pcy1saWdodC5pcy1ib2xke2JhY2tncm91bmQtaW1hZ2U6bGluZWFyLWdyYWRpZW50KDE0MWRlZywgI2RmZDhkOSAwJSwgI2Y1ZjVmNSA3MSUsICNmZmYgMTAwJSl9QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpey5oZXJvLmlzLWxpZ2h0IC5uYXYtdG9nZ2xlIHNwYW57YmFja2dyb3VuZC1jb2xvcjojMzYzNjM2fS5oZXJvLmlzLWxpZ2h0IC5uYXYtdG9nZ2xlOmhvdmVye2JhY2tncm91bmQtY29sb3I6cmdiYSgxMCwxMCwxMCwwLjEpfS5oZXJvLmlzLWxpZ2h0IC5uYXYtdG9nZ2xlLmlzLWFjdGl2ZSBzcGFue2JhY2tncm91bmQtY29sb3I6IzM2MzYzNn0uaGVyby5pcy1saWdodCAubmF2LW1lbnUgLm5hdi1pdGVte2JvcmRlci10b3AtY29sb3I6cmdiYSg1NCw1NCw1NCwwLjIpfX0uaGVyby5pcy1kYXJre2JhY2tncm91bmQtY29sb3I6IzM2MzYzNjtjb2xvcjojZjVmNWY1fS5oZXJvLmlzLWRhcmsgLnRpdGxle2NvbG9yOiNmNWY1ZjV9Lmhlcm8uaXMtZGFyayAudGl0bGUgYSwuaGVyby5pcy1kYXJrIC50aXRsZSBzdHJvbmd7Y29sb3I6aW5oZXJpdH0uaGVyby5pcy1kYXJrIC5zdWJ0aXRsZXtjb2xvcjpyZ2JhKDI0NSwyNDUsMjQ1LDAuOSl9Lmhlcm8uaXMtZGFyayAuc3VidGl0bGUgYSwuaGVyby5pcy1kYXJrIC5zdWJ0aXRsZSBzdHJvbmd7Y29sb3I6I2Y1ZjVmNX0uaGVyby5pcy1kYXJrIC5uYXZ7Ym94LXNoYWRvdzowIDFweCAwIHJnYmEoMjQ1LDI0NSwyNDUsMC4yKX1AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCl7Lmhlcm8uaXMtZGFyayAubmF2LW1lbnV7YmFja2dyb3VuZC1jb2xvcjojMzYzNjM2fX0uaGVyby5pcy1kYXJrIGEubmF2LWl0ZW0sLmhlcm8uaXMtZGFyayAubmF2LWl0ZW0gYTpub3QoLmJ1dHRvbil7Y29sb3I6cmdiYSgyNDUsMjQ1LDI0NSwwLjcpfS5oZXJvLmlzLWRhcmsgYS5uYXYtaXRlbTpob3ZlciwuaGVyby5pcy1kYXJrIGEubmF2LWl0ZW0uaXMtYWN0aXZlLC5oZXJvLmlzLWRhcmsgLm5hdi1pdGVtIGE6bm90KC5idXR0b24pOmhvdmVyLC5oZXJvLmlzLWRhcmsgLm5hdi1pdGVtIGE6bm90KC5idXR0b24pLmlzLWFjdGl2ZXtjb2xvcjojZjVmNWY1fS5oZXJvLmlzLWRhcmsgLnRhYnMgYXtjb2xvcjojZjVmNWY1O29wYWNpdHk6MC45fS5oZXJvLmlzLWRhcmsgLnRhYnMgYTpob3ZlcntvcGFjaXR5OjF9Lmhlcm8uaXMtZGFyayAudGFicyBsaS5pcy1hY3RpdmUgYXtvcGFjaXR5OjF9Lmhlcm8uaXMtZGFyayAudGFicy5pcy1ib3hlZCBhLC5oZXJvLmlzLWRhcmsgLnRhYnMuaXMtdG9nZ2xlIGF7Y29sb3I6I2Y1ZjVmNX0uaGVyby5pcy1kYXJrIC50YWJzLmlzLWJveGVkIGE6aG92ZXIsLmhlcm8uaXMtZGFyayAudGFicy5pcy10b2dnbGUgYTpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTAsMTAsMTAsMC4xKX0uaGVyby5pcy1kYXJrIC50YWJzLmlzLWJveGVkIGxpLmlzLWFjdGl2ZSBhLC5oZXJvLmlzLWRhcmsgLnRhYnMuaXMtYm94ZWQgbGkuaXMtYWN0aXZlIGE6aG92ZXIsLmhlcm8uaXMtZGFyayAudGFicy5pcy10b2dnbGUgbGkuaXMtYWN0aXZlIGEsLmhlcm8uaXMtZGFyayAudGFicy5pcy10b2dnbGUgbGkuaXMtYWN0aXZlIGE6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZjVmNWY1O2JvcmRlci1jb2xvcjojZjVmNWY1O2NvbG9yOiMzNjM2MzZ9Lmhlcm8uaXMtZGFyay5pcy1ib2xke2JhY2tncm91bmQtaW1hZ2U6bGluZWFyLWdyYWRpZW50KDE0MWRlZywgIzFmMTkxYSAwJSwgIzM2MzYzNiA3MSUsICM0NjQwM2YgMTAwJSl9QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpey5oZXJvLmlzLWRhcmsgLm5hdi10b2dnbGUgc3BhbntiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjV9Lmhlcm8uaXMtZGFyayAubmF2LXRvZ2dsZTpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTAsMTAsMTAsMC4xKX0uaGVyby5pcy1kYXJrIC5uYXYtdG9nZ2xlLmlzLWFjdGl2ZSBzcGFue2JhY2tncm91bmQtY29sb3I6I2Y1ZjVmNX0uaGVyby5pcy1kYXJrIC5uYXYtbWVudSAubmF2LWl0ZW17Ym9yZGVyLXRvcC1jb2xvcjpyZ2JhKDI0NSwyNDUsMjQ1LDAuMil9fS5oZXJvLmlzLXByaW1hcnl7YmFja2dyb3VuZC1jb2xvcjojMDBkMWIyO2NvbG9yOiNmZmZ9Lmhlcm8uaXMtcHJpbWFyeSAudGl0bGV7Y29sb3I6I2ZmZn0uaGVyby5pcy1wcmltYXJ5IC50aXRsZSBhLC5oZXJvLmlzLXByaW1hcnkgLnRpdGxlIHN0cm9uZ3tjb2xvcjppbmhlcml0fS5oZXJvLmlzLXByaW1hcnkgLnN1YnRpdGxle2NvbG9yOnJnYmEoMjU1LDI1NSwyNTUsMC45KX0uaGVyby5pcy1wcmltYXJ5IC5zdWJ0aXRsZSBhLC5oZXJvLmlzLXByaW1hcnkgLnN1YnRpdGxlIHN0cm9uZ3tjb2xvcjojZmZmfS5oZXJvLmlzLXByaW1hcnkgLm5hdntib3gtc2hhZG93OjAgMXB4IDAgcmdiYSgyNTUsMjU1LDI1NSwwLjIpfUBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KXsuaGVyby5pcy1wcmltYXJ5IC5uYXYtbWVudXtiYWNrZ3JvdW5kLWNvbG9yOiMwMGQxYjJ9fS5oZXJvLmlzLXByaW1hcnkgYS5uYXYtaXRlbSwuaGVyby5pcy1wcmltYXJ5IC5uYXYtaXRlbSBhOm5vdCguYnV0dG9uKXtjb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LDAuNyl9Lmhlcm8uaXMtcHJpbWFyeSBhLm5hdi1pdGVtOmhvdmVyLC5oZXJvLmlzLXByaW1hcnkgYS5uYXYtaXRlbS5pcy1hY3RpdmUsLmhlcm8uaXMtcHJpbWFyeSAubmF2LWl0ZW0gYTpub3QoLmJ1dHRvbik6aG92ZXIsLmhlcm8uaXMtcHJpbWFyeSAubmF2LWl0ZW0gYTpub3QoLmJ1dHRvbikuaXMtYWN0aXZle2NvbG9yOiNmZmZ9Lmhlcm8uaXMtcHJpbWFyeSAudGFicyBhe2NvbG9yOiNmZmY7b3BhY2l0eTowLjl9Lmhlcm8uaXMtcHJpbWFyeSAudGFicyBhOmhvdmVye29wYWNpdHk6MX0uaGVyby5pcy1wcmltYXJ5IC50YWJzIGxpLmlzLWFjdGl2ZSBhe29wYWNpdHk6MX0uaGVyby5pcy1wcmltYXJ5IC50YWJzLmlzLWJveGVkIGEsLmhlcm8uaXMtcHJpbWFyeSAudGFicy5pcy10b2dnbGUgYXtjb2xvcjojZmZmfS5oZXJvLmlzLXByaW1hcnkgLnRhYnMuaXMtYm94ZWQgYTpob3ZlciwuaGVyby5pcy1wcmltYXJ5IC50YWJzLmlzLXRvZ2dsZSBhOmhvdmVye2JhY2tncm91bmQtY29sb3I6cmdiYSgxMCwxMCwxMCwwLjEpfS5oZXJvLmlzLXByaW1hcnkgLnRhYnMuaXMtYm94ZWQgbGkuaXMtYWN0aXZlIGEsLmhlcm8uaXMtcHJpbWFyeSAudGFicy5pcy1ib3hlZCBsaS5pcy1hY3RpdmUgYTpob3ZlciwuaGVyby5pcy1wcmltYXJ5IC50YWJzLmlzLXRvZ2dsZSBsaS5pcy1hY3RpdmUgYSwuaGVyby5pcy1wcmltYXJ5IC50YWJzLmlzLXRvZ2dsZSBsaS5pcy1hY3RpdmUgYTpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym9yZGVyLWNvbG9yOiNmZmY7Y29sb3I6IzAwZDFiMn0uaGVyby5pcy1wcmltYXJ5LmlzLWJvbGR7YmFja2dyb3VuZC1pbWFnZTpsaW5lYXItZ3JhZGllbnQoMTQxZGVnLCAjMDA5ZTZjIDAlLCAjMDBkMWIyIDcxJSwgIzAwZTdlYiAxMDAlKX1AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCl7Lmhlcm8uaXMtcHJpbWFyeSAubmF2LXRvZ2dsZSBzcGFue2JhY2tncm91bmQtY29sb3I6I2ZmZn0uaGVyby5pcy1wcmltYXJ5IC5uYXYtdG9nZ2xlOmhvdmVye2JhY2tncm91bmQtY29sb3I6cmdiYSgxMCwxMCwxMCwwLjEpfS5oZXJvLmlzLXByaW1hcnkgLm5hdi10b2dnbGUuaXMtYWN0aXZlIHNwYW57YmFja2dyb3VuZC1jb2xvcjojZmZmfS5oZXJvLmlzLXByaW1hcnkgLm5hdi1tZW51IC5uYXYtaXRlbXtib3JkZXItdG9wLWNvbG9yOnJnYmEoMjU1LDI1NSwyNTUsMC4yKX19Lmhlcm8uaXMtaW5mb3tiYWNrZ3JvdW5kLWNvbG9yOiMzMjczZGM7Y29sb3I6I2ZmZn0uaGVyby5pcy1pbmZvIC50aXRsZXtjb2xvcjojZmZmfS5oZXJvLmlzLWluZm8gLnRpdGxlIGEsLmhlcm8uaXMtaW5mbyAudGl0bGUgc3Ryb25ne2NvbG9yOmluaGVyaXR9Lmhlcm8uaXMtaW5mbyAuc3VidGl0bGV7Y29sb3I6cmdiYSgyNTUsMjU1LDI1NSwwLjkpfS5oZXJvLmlzLWluZm8gLnN1YnRpdGxlIGEsLmhlcm8uaXMtaW5mbyAuc3VidGl0bGUgc3Ryb25ne2NvbG9yOiNmZmZ9Lmhlcm8uaXMtaW5mbyAubmF2e2JveC1zaGFkb3c6MCAxcHggMCByZ2JhKDI1NSwyNTUsMjU1LDAuMil9QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpey5oZXJvLmlzLWluZm8gLm5hdi1tZW51e2JhY2tncm91bmQtY29sb3I6IzMyNzNkY319Lmhlcm8uaXMtaW5mbyBhLm5hdi1pdGVtLC5oZXJvLmlzLWluZm8gLm5hdi1pdGVtIGE6bm90KC5idXR0b24pe2NvbG9yOnJnYmEoMjU1LDI1NSwyNTUsMC43KX0uaGVyby5pcy1pbmZvIGEubmF2LWl0ZW06aG92ZXIsLmhlcm8uaXMtaW5mbyBhLm5hdi1pdGVtLmlzLWFjdGl2ZSwuaGVyby5pcy1pbmZvIC5uYXYtaXRlbSBhOm5vdCguYnV0dG9uKTpob3ZlciwuaGVyby5pcy1pbmZvIC5uYXYtaXRlbSBhOm5vdCguYnV0dG9uKS5pcy1hY3RpdmV7Y29sb3I6I2ZmZn0uaGVyby5pcy1pbmZvIC50YWJzIGF7Y29sb3I6I2ZmZjtvcGFjaXR5OjAuOX0uaGVyby5pcy1pbmZvIC50YWJzIGE6aG92ZXJ7b3BhY2l0eToxfS5oZXJvLmlzLWluZm8gLnRhYnMgbGkuaXMtYWN0aXZlIGF7b3BhY2l0eToxfS5oZXJvLmlzLWluZm8gLnRhYnMuaXMtYm94ZWQgYSwuaGVyby5pcy1pbmZvIC50YWJzLmlzLXRvZ2dsZSBhe2NvbG9yOiNmZmZ9Lmhlcm8uaXMtaW5mbyAudGFicy5pcy1ib3hlZCBhOmhvdmVyLC5oZXJvLmlzLWluZm8gLnRhYnMuaXMtdG9nZ2xlIGE6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEwLDEwLDEwLDAuMSl9Lmhlcm8uaXMtaW5mbyAudGFicy5pcy1ib3hlZCBsaS5pcy1hY3RpdmUgYSwuaGVyby5pcy1pbmZvIC50YWJzLmlzLWJveGVkIGxpLmlzLWFjdGl2ZSBhOmhvdmVyLC5oZXJvLmlzLWluZm8gLnRhYnMuaXMtdG9nZ2xlIGxpLmlzLWFjdGl2ZSBhLC5oZXJvLmlzLWluZm8gLnRhYnMuaXMtdG9nZ2xlIGxpLmlzLWFjdGl2ZSBhOmhvdmVye2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXItY29sb3I6I2ZmZjtjb2xvcjojMzI3M2RjfS5oZXJvLmlzLWluZm8uaXMtYm9sZHtiYWNrZ3JvdW5kLWltYWdlOmxpbmVhci1ncmFkaWVudCgxNDFkZWcsICMxNTc3YzYgMCUsICMzMjczZGMgNzElLCAjNDM2NmU1IDEwMCUpfUBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KXsuaGVyby5pcy1pbmZvIC5uYXYtdG9nZ2xlIHNwYW57YmFja2dyb3VuZC1jb2xvcjojZmZmfS5oZXJvLmlzLWluZm8gLm5hdi10b2dnbGU6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEwLDEwLDEwLDAuMSl9Lmhlcm8uaXMtaW5mbyAubmF2LXRvZ2dsZS5pcy1hY3RpdmUgc3BhbntiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9Lmhlcm8uaXMtaW5mbyAubmF2LW1lbnUgLm5hdi1pdGVte2JvcmRlci10b3AtY29sb3I6cmdiYSgyNTUsMjU1LDI1NSwwLjIpfX0uaGVyby5pcy1zdWNjZXNze2JhY2tncm91bmQtY29sb3I6IzIzZDE2MDtjb2xvcjojZmZmfS5oZXJvLmlzLXN1Y2Nlc3MgLnRpdGxle2NvbG9yOiNmZmZ9Lmhlcm8uaXMtc3VjY2VzcyAudGl0bGUgYSwuaGVyby5pcy1zdWNjZXNzIC50aXRsZSBzdHJvbmd7Y29sb3I6aW5oZXJpdH0uaGVyby5pcy1zdWNjZXNzIC5zdWJ0aXRsZXtjb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LDAuOSl9Lmhlcm8uaXMtc3VjY2VzcyAuc3VidGl0bGUgYSwuaGVyby5pcy1zdWNjZXNzIC5zdWJ0aXRsZSBzdHJvbmd7Y29sb3I6I2ZmZn0uaGVyby5pcy1zdWNjZXNzIC5uYXZ7Ym94LXNoYWRvdzowIDFweCAwIHJnYmEoMjU1LDI1NSwyNTUsMC4yKX1AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCl7Lmhlcm8uaXMtc3VjY2VzcyAubmF2LW1lbnV7YmFja2dyb3VuZC1jb2xvcjojMjNkMTYwfX0uaGVyby5pcy1zdWNjZXNzIGEubmF2LWl0ZW0sLmhlcm8uaXMtc3VjY2VzcyAubmF2LWl0ZW0gYTpub3QoLmJ1dHRvbil7Y29sb3I6cmdiYSgyNTUsMjU1LDI1NSwwLjcpfS5oZXJvLmlzLXN1Y2Nlc3MgYS5uYXYtaXRlbTpob3ZlciwuaGVyby5pcy1zdWNjZXNzIGEubmF2LWl0ZW0uaXMtYWN0aXZlLC5oZXJvLmlzLXN1Y2Nlc3MgLm5hdi1pdGVtIGE6bm90KC5idXR0b24pOmhvdmVyLC5oZXJvLmlzLXN1Y2Nlc3MgLm5hdi1pdGVtIGE6bm90KC5idXR0b24pLmlzLWFjdGl2ZXtjb2xvcjojZmZmfS5oZXJvLmlzLXN1Y2Nlc3MgLnRhYnMgYXtjb2xvcjojZmZmO29wYWNpdHk6MC45fS5oZXJvLmlzLXN1Y2Nlc3MgLnRhYnMgYTpob3ZlcntvcGFjaXR5OjF9Lmhlcm8uaXMtc3VjY2VzcyAudGFicyBsaS5pcy1hY3RpdmUgYXtvcGFjaXR5OjF9Lmhlcm8uaXMtc3VjY2VzcyAudGFicy5pcy1ib3hlZCBhLC5oZXJvLmlzLXN1Y2Nlc3MgLnRhYnMuaXMtdG9nZ2xlIGF7Y29sb3I6I2ZmZn0uaGVyby5pcy1zdWNjZXNzIC50YWJzLmlzLWJveGVkIGE6aG92ZXIsLmhlcm8uaXMtc3VjY2VzcyAudGFicy5pcy10b2dnbGUgYTpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTAsMTAsMTAsMC4xKX0uaGVyby5pcy1zdWNjZXNzIC50YWJzLmlzLWJveGVkIGxpLmlzLWFjdGl2ZSBhLC5oZXJvLmlzLXN1Y2Nlc3MgLnRhYnMuaXMtYm94ZWQgbGkuaXMtYWN0aXZlIGE6aG92ZXIsLmhlcm8uaXMtc3VjY2VzcyAudGFicy5pcy10b2dnbGUgbGkuaXMtYWN0aXZlIGEsLmhlcm8uaXMtc3VjY2VzcyAudGFicy5pcy10b2dnbGUgbGkuaXMtYWN0aXZlIGE6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlci1jb2xvcjojZmZmO2NvbG9yOiMyM2QxNjB9Lmhlcm8uaXMtc3VjY2Vzcy5pcy1ib2xke2JhY2tncm91bmQtaW1hZ2U6bGluZWFyLWdyYWRpZW50KDE0MWRlZywgIzEyYWYyZiAwJSwgIzIzZDE2MCA3MSUsICMyY2UyOGEgMTAwJSl9QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpey5oZXJvLmlzLXN1Y2Nlc3MgLm5hdi10b2dnbGUgc3BhbntiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9Lmhlcm8uaXMtc3VjY2VzcyAubmF2LXRvZ2dsZTpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTAsMTAsMTAsMC4xKX0uaGVyby5pcy1zdWNjZXNzIC5uYXYtdG9nZ2xlLmlzLWFjdGl2ZSBzcGFue2JhY2tncm91bmQtY29sb3I6I2ZmZn0uaGVyby5pcy1zdWNjZXNzIC5uYXYtbWVudSAubmF2LWl0ZW17Ym9yZGVyLXRvcC1jb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LDAuMil9fS5oZXJvLmlzLXdhcm5pbmd7YmFja2dyb3VuZC1jb2xvcjojZmZkZDU3O2NvbG9yOnJnYmEoMCwwLDAsMC43KX0uaGVyby5pcy13YXJuaW5nIC50aXRsZXtjb2xvcjpyZ2JhKDAsMCwwLDAuNyl9Lmhlcm8uaXMtd2FybmluZyAudGl0bGUgYSwuaGVyby5pcy13YXJuaW5nIC50aXRsZSBzdHJvbmd7Y29sb3I6aW5oZXJpdH0uaGVyby5pcy13YXJuaW5nIC5zdWJ0aXRsZXtjb2xvcjpyZ2JhKDAsMCwwLDAuOSl9Lmhlcm8uaXMtd2FybmluZyAuc3VidGl0bGUgYSwuaGVyby5pcy13YXJuaW5nIC5zdWJ0aXRsZSBzdHJvbmd7Y29sb3I6cmdiYSgwLDAsMCwwLjcpfS5oZXJvLmlzLXdhcm5pbmcgLm5hdntib3gtc2hhZG93OjAgMXB4IDAgcmdiYSgwLDAsMCwwLjIpfUBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KXsuaGVyby5pcy13YXJuaW5nIC5uYXYtbWVudXtiYWNrZ3JvdW5kLWNvbG9yOiNmZmRkNTd9fS5oZXJvLmlzLXdhcm5pbmcgYS5uYXYtaXRlbSwuaGVyby5pcy13YXJuaW5nIC5uYXYtaXRlbSBhOm5vdCguYnV0dG9uKXtjb2xvcjpyZ2JhKDAsMCwwLDAuNyl9Lmhlcm8uaXMtd2FybmluZyBhLm5hdi1pdGVtOmhvdmVyLC5oZXJvLmlzLXdhcm5pbmcgYS5uYXYtaXRlbS5pcy1hY3RpdmUsLmhlcm8uaXMtd2FybmluZyAubmF2LWl0ZW0gYTpub3QoLmJ1dHRvbik6aG92ZXIsLmhlcm8uaXMtd2FybmluZyAubmF2LWl0ZW0gYTpub3QoLmJ1dHRvbikuaXMtYWN0aXZle2NvbG9yOnJnYmEoMCwwLDAsMC43KX0uaGVyby5pcy13YXJuaW5nIC50YWJzIGF7Y29sb3I6cmdiYSgwLDAsMCwwLjcpO29wYWNpdHk6MC45fS5oZXJvLmlzLXdhcm5pbmcgLnRhYnMgYTpob3ZlcntvcGFjaXR5OjF9Lmhlcm8uaXMtd2FybmluZyAudGFicyBsaS5pcy1hY3RpdmUgYXtvcGFjaXR5OjF9Lmhlcm8uaXMtd2FybmluZyAudGFicy5pcy1ib3hlZCBhLC5oZXJvLmlzLXdhcm5pbmcgLnRhYnMuaXMtdG9nZ2xlIGF7Y29sb3I6cmdiYSgwLDAsMCwwLjcpfS5oZXJvLmlzLXdhcm5pbmcgLnRhYnMuaXMtYm94ZWQgYTpob3ZlciwuaGVyby5pcy13YXJuaW5nIC50YWJzLmlzLXRvZ2dsZSBhOmhvdmVye2JhY2tncm91bmQtY29sb3I6cmdiYSgxMCwxMCwxMCwwLjEpfS5oZXJvLmlzLXdhcm5pbmcgLnRhYnMuaXMtYm94ZWQgbGkuaXMtYWN0aXZlIGEsLmhlcm8uaXMtd2FybmluZyAudGFicy5pcy1ib3hlZCBsaS5pcy1hY3RpdmUgYTpob3ZlciwuaGVyby5pcy13YXJuaW5nIC50YWJzLmlzLXRvZ2dsZSBsaS5pcy1hY3RpdmUgYSwuaGVyby5pcy13YXJuaW5nIC50YWJzLmlzLXRvZ2dsZSBsaS5pcy1hY3RpdmUgYTpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsMC43KTtib3JkZXItY29sb3I6cmdiYSgwLDAsMCwwLjcpO2NvbG9yOiNmZmRkNTd9Lmhlcm8uaXMtd2FybmluZy5pcy1ib2xke2JhY2tncm91bmQtaW1hZ2U6bGluZWFyLWdyYWRpZW50KDE0MWRlZywgI2ZmYWYyNCAwJSwgI2ZmZGQ1NyA3MSUsICNmZmZhNzAgMTAwJSl9QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpey5oZXJvLmlzLXdhcm5pbmcgLm5hdi10b2dnbGUgc3BhbntiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsMC43KX0uaGVyby5pcy13YXJuaW5nIC5uYXYtdG9nZ2xlOmhvdmVye2JhY2tncm91bmQtY29sb3I6cmdiYSgxMCwxMCwxMCwwLjEpfS5oZXJvLmlzLXdhcm5pbmcgLm5hdi10b2dnbGUuaXMtYWN0aXZlIHNwYW57YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLDAuNyl9Lmhlcm8uaXMtd2FybmluZyAubmF2LW1lbnUgLm5hdi1pdGVte2JvcmRlci10b3AtY29sb3I6cmdiYSgwLDAsMCwwLjIpfX0uaGVyby5pcy1kYW5nZXJ7YmFja2dyb3VuZC1jb2xvcjojZmYzODYwO2NvbG9yOiNmZmZ9Lmhlcm8uaXMtZGFuZ2VyIC50aXRsZXtjb2xvcjojZmZmfS5oZXJvLmlzLWRhbmdlciAudGl0bGUgYSwuaGVyby5pcy1kYW5nZXIgLnRpdGxlIHN0cm9uZ3tjb2xvcjppbmhlcml0fS5oZXJvLmlzLWRhbmdlciAuc3VidGl0bGV7Y29sb3I6cmdiYSgyNTUsMjU1LDI1NSwwLjkpfS5oZXJvLmlzLWRhbmdlciAuc3VidGl0bGUgYSwuaGVyby5pcy1kYW5nZXIgLnN1YnRpdGxlIHN0cm9uZ3tjb2xvcjojZmZmfS5oZXJvLmlzLWRhbmdlciAubmF2e2JveC1zaGFkb3c6MCAxcHggMCByZ2JhKDI1NSwyNTUsMjU1LDAuMil9QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpey5oZXJvLmlzLWRhbmdlciAubmF2LW1lbnV7YmFja2dyb3VuZC1jb2xvcjojZmYzODYwfX0uaGVyby5pcy1kYW5nZXIgYS5uYXYtaXRlbSwuaGVyby5pcy1kYW5nZXIgLm5hdi1pdGVtIGE6bm90KC5idXR0b24pe2NvbG9yOnJnYmEoMjU1LDI1NSwyNTUsMC43KX0uaGVyby5pcy1kYW5nZXIgYS5uYXYtaXRlbTpob3ZlciwuaGVyby5pcy1kYW5nZXIgYS5uYXYtaXRlbS5pcy1hY3RpdmUsLmhlcm8uaXMtZGFuZ2VyIC5uYXYtaXRlbSBhOm5vdCguYnV0dG9uKTpob3ZlciwuaGVyby5pcy1kYW5nZXIgLm5hdi1pdGVtIGE6bm90KC5idXR0b24pLmlzLWFjdGl2ZXtjb2xvcjojZmZmfS5oZXJvLmlzLWRhbmdlciAudGFicyBhe2NvbG9yOiNmZmY7b3BhY2l0eTowLjl9Lmhlcm8uaXMtZGFuZ2VyIC50YWJzIGE6aG92ZXJ7b3BhY2l0eToxfS5oZXJvLmlzLWRhbmdlciAudGFicyBsaS5pcy1hY3RpdmUgYXtvcGFjaXR5OjF9Lmhlcm8uaXMtZGFuZ2VyIC50YWJzLmlzLWJveGVkIGEsLmhlcm8uaXMtZGFuZ2VyIC50YWJzLmlzLXRvZ2dsZSBhe2NvbG9yOiNmZmZ9Lmhlcm8uaXMtZGFuZ2VyIC50YWJzLmlzLWJveGVkIGE6aG92ZXIsLmhlcm8uaXMtZGFuZ2VyIC50YWJzLmlzLXRvZ2dsZSBhOmhvdmVye2JhY2tncm91bmQtY29sb3I6cmdiYSgxMCwxMCwxMCwwLjEpfS5oZXJvLmlzLWRhbmdlciAudGFicy5pcy1ib3hlZCBsaS5pcy1hY3RpdmUgYSwuaGVyby5pcy1kYW5nZXIgLnRhYnMuaXMtYm94ZWQgbGkuaXMtYWN0aXZlIGE6aG92ZXIsLmhlcm8uaXMtZGFuZ2VyIC50YWJzLmlzLXRvZ2dsZSBsaS5pcy1hY3RpdmUgYSwuaGVyby5pcy1kYW5nZXIgLnRhYnMuaXMtdG9nZ2xlIGxpLmlzLWFjdGl2ZSBhOmhvdmVye2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXItY29sb3I6I2ZmZjtjb2xvcjojZmYzODYwfS5oZXJvLmlzLWRhbmdlci5pcy1ib2xke2JhY2tncm91bmQtaW1hZ2U6bGluZWFyLWdyYWRpZW50KDE0MWRlZywgI2ZmMDU2MSAwJSwgI2ZmMzg2MCA3MSUsICNmZjUyNTcgMTAwJSl9QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpey5oZXJvLmlzLWRhbmdlciAubmF2LXRvZ2dsZSBzcGFue2JhY2tncm91bmQtY29sb3I6I2ZmZn0uaGVyby5pcy1kYW5nZXIgLm5hdi10b2dnbGU6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEwLDEwLDEwLDAuMSl9Lmhlcm8uaXMtZGFuZ2VyIC5uYXYtdG9nZ2xlLmlzLWFjdGl2ZSBzcGFue2JhY2tncm91bmQtY29sb3I6I2ZmZn0uaGVyby5pcy1kYW5nZXIgLm5hdi1tZW51IC5uYXYtaXRlbXtib3JkZXItdG9wLWNvbG9yOnJnYmEoMjU1LDI1NSwyNTUsMC4yKX19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpey5oZXJvLmlzLW1lZGl1bSAuaGVyby1ib2R5e3BhZGRpbmctYm90dG9tOjEyMHB4O3BhZGRpbmctdG9wOjEyMHB4fX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCl7Lmhlcm8uaXMtbGFyZ2UgLmhlcm8tYm9keXtwYWRkaW5nLWJvdHRvbToyNDBweDtwYWRkaW5nLXRvcDoyNDBweH19Lmhlcm8uaXMtZnVsbGhlaWdodHttaW4taGVpZ2h0OjEwMHZofS5oZXJvLmlzLWZ1bGxoZWlnaHQgLmhlcm8tYm9keXthbGlnbi1pdGVtczpjZW50ZXI7ZGlzcGxheTpmbGV4fS5oZXJvLmlzLWZ1bGxoZWlnaHQgLmhlcm8tYm9keT4uY29udGFpbmVye2ZsZXgtZ3JvdzoxO2ZsZXgtc2hyaW5rOjF9LnNlY3Rpb257YmFja2dyb3VuZC1jb2xvcjojZmZmO3BhZGRpbmc6NDBweCAyMHB4fUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk4MHB4KXsuc2VjdGlvbi5pcy1tZWRpdW17cGFkZGluZzoxMjBweCAyMHB4fS5zZWN0aW9uLmlzLWxhcmdle3BhZGRpbmc6MjQwcHggMjBweH19LmZvb3RlcntiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjU7cGFkZGluZzo0MHB4IDIwcHggODBweH0uZm9vdGVyIGEsLmZvb3RlciBhOnZpc2l0ZWR7Y29sb3I6IzRhNGE0YX0uZm9vdGVyIGE6aG92ZXIsLmZvb3RlciBhOnZpc2l0ZWQ6aG92ZXJ7Y29sb3I6IzM2MzYzNn0uZm9vdGVyIGE6bm90KC5pY29uKSwuZm9vdGVyIGE6dmlzaXRlZDpub3QoLmljb24pe2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNkYmRiZGJ9LmZvb3RlciBhOm5vdCguaWNvbik6aG92ZXIsLmZvb3RlciBhOnZpc2l0ZWQ6bm90KC5pY29uKTpob3Zlcntib3JkZXItYm90dG9tLWNvbG9yOiM0YThiZmF9XFxuXCIsIFwiXCJdKTtcbiIsInZhciBzY29wZSA9ICh0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiICYmIGdsb2JhbCkgfHxcbiAgICAgICAgICAgICh0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiAmJiBzZWxmKSB8fFxuICAgICAgICAgICAgd2luZG93O1xudmFyIGFwcGx5ID0gRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5O1xuXG4vLyBET00gQVBJcywgZm9yIGNvbXBsZXRlbmVzc1xuXG5leHBvcnRzLnNldFRpbWVvdXQgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBUaW1lb3V0KGFwcGx5LmNhbGwoc2V0VGltZW91dCwgc2NvcGUsIGFyZ3VtZW50cyksIGNsZWFyVGltZW91dCk7XG59O1xuZXhwb3J0cy5zZXRJbnRlcnZhbCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IFRpbWVvdXQoYXBwbHkuY2FsbChzZXRJbnRlcnZhbCwgc2NvcGUsIGFyZ3VtZW50cyksIGNsZWFySW50ZXJ2YWwpO1xufTtcbmV4cG9ydHMuY2xlYXJUaW1lb3V0ID1cbmV4cG9ydHMuY2xlYXJJbnRlcnZhbCA9IGZ1bmN0aW9uKHRpbWVvdXQpIHtcbiAgaWYgKHRpbWVvdXQpIHtcbiAgICB0aW1lb3V0LmNsb3NlKCk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIFRpbWVvdXQoaWQsIGNsZWFyRm4pIHtcbiAgdGhpcy5faWQgPSBpZDtcbiAgdGhpcy5fY2xlYXJGbiA9IGNsZWFyRm47XG59XG5UaW1lb3V0LnByb3RvdHlwZS51bnJlZiA9IFRpbWVvdXQucHJvdG90eXBlLnJlZiA9IGZ1bmN0aW9uKCkge307XG5UaW1lb3V0LnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLl9jbGVhckZuLmNhbGwoc2NvcGUsIHRoaXMuX2lkKTtcbn07XG5cbi8vIERvZXMgbm90IHN0YXJ0IHRoZSB0aW1lLCBqdXN0IHNldHMgdXAgdGhlIG1lbWJlcnMgbmVlZGVkLlxuZXhwb3J0cy5lbnJvbGwgPSBmdW5jdGlvbihpdGVtLCBtc2Vjcykge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG4gIGl0ZW0uX2lkbGVUaW1lb3V0ID0gbXNlY3M7XG59O1xuXG5leHBvcnRzLnVuZW5yb2xsID0gZnVuY3Rpb24oaXRlbSkge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG4gIGl0ZW0uX2lkbGVUaW1lb3V0ID0gLTE7XG59O1xuXG5leHBvcnRzLl91bnJlZkFjdGl2ZSA9IGV4cG9ydHMuYWN0aXZlID0gZnVuY3Rpb24oaXRlbSkge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG5cbiAgdmFyIG1zZWNzID0gaXRlbS5faWRsZVRpbWVvdXQ7XG4gIGlmIChtc2VjcyA+PSAwKSB7XG4gICAgaXRlbS5faWRsZVRpbWVvdXRJZCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gb25UaW1lb3V0KCkge1xuICAgICAgaWYgKGl0ZW0uX29uVGltZW91dClcbiAgICAgICAgaXRlbS5fb25UaW1lb3V0KCk7XG4gICAgfSwgbXNlY3MpO1xuICB9XG59O1xuXG4vLyBzZXRpbW1lZGlhdGUgYXR0YWNoZXMgaXRzZWxmIHRvIHRoZSBnbG9iYWwgb2JqZWN0XG5yZXF1aXJlKFwic2V0aW1tZWRpYXRlXCIpO1xuLy8gT24gc29tZSBleG90aWMgZW52aXJvbm1lbnRzLCBpdCdzIG5vdCBjbGVhciB3aGljaCBvYmplY3QgYHNldGltbWVkaWF0ZWAgd2FzXG4vLyBhYmxlIHRvIGluc3RhbGwgb250by4gIFNlYXJjaCBlYWNoIHBvc3NpYmlsaXR5IGluIHRoZSBzYW1lIG9yZGVyIGFzIHRoZVxuLy8gYHNldGltbWVkaWF0ZWAgbGlicmFyeS5cbmV4cG9ydHMuc2V0SW1tZWRpYXRlID0gKHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHNlbGYuc2V0SW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAodHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBnbG9iYWwuc2V0SW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAodGhpcyAmJiB0aGlzLnNldEltbWVkaWF0ZSk7XG5leHBvcnRzLmNsZWFySW1tZWRpYXRlID0gKHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHNlbGYuY2xlYXJJbW1lZGlhdGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgZ2xvYmFsLmNsZWFySW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICh0aGlzICYmIHRoaXMuY2xlYXJJbW1lZGlhdGUpO1xuIiwiKGZ1bmN0aW9uIChnbG9iYWwsIHVuZGVmaW5lZCkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgaWYgKGdsb2JhbC5zZXRJbW1lZGlhdGUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBuZXh0SGFuZGxlID0gMTsgLy8gU3BlYyBzYXlzIGdyZWF0ZXIgdGhhbiB6ZXJvXG4gICAgdmFyIHRhc2tzQnlIYW5kbGUgPSB7fTtcbiAgICB2YXIgY3VycmVudGx5UnVubmluZ0FUYXNrID0gZmFsc2U7XG4gICAgdmFyIGRvYyA9IGdsb2JhbC5kb2N1bWVudDtcbiAgICB2YXIgcmVnaXN0ZXJJbW1lZGlhdGU7XG5cbiAgICBmdW5jdGlvbiBzZXRJbW1lZGlhdGUoY2FsbGJhY2spIHtcbiAgICAgIC8vIENhbGxiYWNrIGNhbiBlaXRoZXIgYmUgYSBmdW5jdGlvbiBvciBhIHN0cmluZ1xuICAgICAgaWYgKHR5cGVvZiBjYWxsYmFjayAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIGNhbGxiYWNrID0gbmV3IEZ1bmN0aW9uKFwiXCIgKyBjYWxsYmFjayk7XG4gICAgICB9XG4gICAgICAvLyBDb3B5IGZ1bmN0aW9uIGFyZ3VtZW50c1xuICAgICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDEpO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgYXJnc1tpXSA9IGFyZ3VtZW50c1tpICsgMV07XG4gICAgICB9XG4gICAgICAvLyBTdG9yZSBhbmQgcmVnaXN0ZXIgdGhlIHRhc2tcbiAgICAgIHZhciB0YXNrID0geyBjYWxsYmFjazogY2FsbGJhY2ssIGFyZ3M6IGFyZ3MgfTtcbiAgICAgIHRhc2tzQnlIYW5kbGVbbmV4dEhhbmRsZV0gPSB0YXNrO1xuICAgICAgcmVnaXN0ZXJJbW1lZGlhdGUobmV4dEhhbmRsZSk7XG4gICAgICByZXR1cm4gbmV4dEhhbmRsZSsrO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNsZWFySW1tZWRpYXRlKGhhbmRsZSkge1xuICAgICAgICBkZWxldGUgdGFza3NCeUhhbmRsZVtoYW5kbGVdO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJ1bih0YXNrKSB7XG4gICAgICAgIHZhciBjYWxsYmFjayA9IHRhc2suY2FsbGJhY2s7XG4gICAgICAgIHZhciBhcmdzID0gdGFzay5hcmdzO1xuICAgICAgICBzd2l0Y2ggKGFyZ3MubGVuZ3RoKSB7XG4gICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgY2FsbGJhY2soYXJnc1swXSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgY2FsbGJhY2soYXJnc1swXSwgYXJnc1sxXSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgY2FsbGJhY2soYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGNhbGxiYWNrLmFwcGx5KHVuZGVmaW5lZCwgYXJncyk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJ1bklmUHJlc2VudChoYW5kbGUpIHtcbiAgICAgICAgLy8gRnJvbSB0aGUgc3BlYzogXCJXYWl0IHVudGlsIGFueSBpbnZvY2F0aW9ucyBvZiB0aGlzIGFsZ29yaXRobSBzdGFydGVkIGJlZm9yZSB0aGlzIG9uZSBoYXZlIGNvbXBsZXRlZC5cIlxuICAgICAgICAvLyBTbyBpZiB3ZSdyZSBjdXJyZW50bHkgcnVubmluZyBhIHRhc2ssIHdlJ2xsIG5lZWQgdG8gZGVsYXkgdGhpcyBpbnZvY2F0aW9uLlxuICAgICAgICBpZiAoY3VycmVudGx5UnVubmluZ0FUYXNrKSB7XG4gICAgICAgICAgICAvLyBEZWxheSBieSBkb2luZyBhIHNldFRpbWVvdXQuIHNldEltbWVkaWF0ZSB3YXMgdHJpZWQgaW5zdGVhZCwgYnV0IGluIEZpcmVmb3ggNyBpdCBnZW5lcmF0ZWQgYVxuICAgICAgICAgICAgLy8gXCJ0b28gbXVjaCByZWN1cnNpb25cIiBlcnJvci5cbiAgICAgICAgICAgIHNldFRpbWVvdXQocnVuSWZQcmVzZW50LCAwLCBoYW5kbGUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdmFyIHRhc2sgPSB0YXNrc0J5SGFuZGxlW2hhbmRsZV07XG4gICAgICAgICAgICBpZiAodGFzaykge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRseVJ1bm5pbmdBVGFzayA9IHRydWU7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgcnVuKHRhc2spO1xuICAgICAgICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFySW1tZWRpYXRlKGhhbmRsZSk7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRseVJ1bm5pbmdBVGFzayA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGluc3RhbGxOZXh0VGlja0ltcGxlbWVudGF0aW9uKCkge1xuICAgICAgICByZWdpc3RlckltbWVkaWF0ZSA9IGZ1bmN0aW9uKGhhbmRsZSkge1xuICAgICAgICAgICAgcHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbiAoKSB7IHJ1bklmUHJlc2VudChoYW5kbGUpOyB9KTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjYW5Vc2VQb3N0TWVzc2FnZSgpIHtcbiAgICAgICAgLy8gVGhlIHRlc3QgYWdhaW5zdCBgaW1wb3J0U2NyaXB0c2AgcHJldmVudHMgdGhpcyBpbXBsZW1lbnRhdGlvbiBmcm9tIGJlaW5nIGluc3RhbGxlZCBpbnNpZGUgYSB3ZWIgd29ya2VyLFxuICAgICAgICAvLyB3aGVyZSBgZ2xvYmFsLnBvc3RNZXNzYWdlYCBtZWFucyBzb21ldGhpbmcgY29tcGxldGVseSBkaWZmZXJlbnQgYW5kIGNhbid0IGJlIHVzZWQgZm9yIHRoaXMgcHVycG9zZS5cbiAgICAgICAgaWYgKGdsb2JhbC5wb3N0TWVzc2FnZSAmJiAhZ2xvYmFsLmltcG9ydFNjcmlwdHMpIHtcbiAgICAgICAgICAgIHZhciBwb3N0TWVzc2FnZUlzQXN5bmNocm9ub3VzID0gdHJ1ZTtcbiAgICAgICAgICAgIHZhciBvbGRPbk1lc3NhZ2UgPSBnbG9iYWwub25tZXNzYWdlO1xuICAgICAgICAgICAgZ2xvYmFsLm9ubWVzc2FnZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHBvc3RNZXNzYWdlSXNBc3luY2hyb25vdXMgPSBmYWxzZTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBnbG9iYWwucG9zdE1lc3NhZ2UoXCJcIiwgXCIqXCIpO1xuICAgICAgICAgICAgZ2xvYmFsLm9ubWVzc2FnZSA9IG9sZE9uTWVzc2FnZTtcbiAgICAgICAgICAgIHJldHVybiBwb3N0TWVzc2FnZUlzQXN5bmNocm9ub3VzO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaW5zdGFsbFBvc3RNZXNzYWdlSW1wbGVtZW50YXRpb24oKSB7XG4gICAgICAgIC8vIEluc3RhbGxzIGFuIGV2ZW50IGhhbmRsZXIgb24gYGdsb2JhbGAgZm9yIHRoZSBgbWVzc2FnZWAgZXZlbnQ6IHNlZVxuICAgICAgICAvLyAqIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuL0RPTS93aW5kb3cucG9zdE1lc3NhZ2VcbiAgICAgICAgLy8gKiBodHRwOi8vd3d3LndoYXR3Zy5vcmcvc3BlY3Mvd2ViLWFwcHMvY3VycmVudC13b3JrL211bHRpcGFnZS9jb21tcy5odG1sI2Nyb3NzRG9jdW1lbnRNZXNzYWdlc1xuXG4gICAgICAgIHZhciBtZXNzYWdlUHJlZml4ID0gXCJzZXRJbW1lZGlhdGUkXCIgKyBNYXRoLnJhbmRvbSgpICsgXCIkXCI7XG4gICAgICAgIHZhciBvbkdsb2JhbE1lc3NhZ2UgPSBmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgaWYgKGV2ZW50LnNvdXJjZSA9PT0gZ2xvYmFsICYmXG4gICAgICAgICAgICAgICAgdHlwZW9mIGV2ZW50LmRhdGEgPT09IFwic3RyaW5nXCIgJiZcbiAgICAgICAgICAgICAgICBldmVudC5kYXRhLmluZGV4T2YobWVzc2FnZVByZWZpeCkgPT09IDApIHtcbiAgICAgICAgICAgICAgICBydW5JZlByZXNlbnQoK2V2ZW50LmRhdGEuc2xpY2UobWVzc2FnZVByZWZpeC5sZW5ndGgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICBpZiAoZ2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgICAgICAgIGdsb2JhbC5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLCBvbkdsb2JhbE1lc3NhZ2UsIGZhbHNlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGdsb2JhbC5hdHRhY2hFdmVudChcIm9ubWVzc2FnZVwiLCBvbkdsb2JhbE1lc3NhZ2UpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVnaXN0ZXJJbW1lZGlhdGUgPSBmdW5jdGlvbihoYW5kbGUpIHtcbiAgICAgICAgICAgIGdsb2JhbC5wb3N0TWVzc2FnZShtZXNzYWdlUHJlZml4ICsgaGFuZGxlLCBcIipcIik7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaW5zdGFsbE1lc3NhZ2VDaGFubmVsSW1wbGVtZW50YXRpb24oKSB7XG4gICAgICAgIHZhciBjaGFubmVsID0gbmV3IE1lc3NhZ2VDaGFubmVsKCk7XG4gICAgICAgIGNoYW5uZWwucG9ydDEub25tZXNzYWdlID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICAgIHZhciBoYW5kbGUgPSBldmVudC5kYXRhO1xuICAgICAgICAgICAgcnVuSWZQcmVzZW50KGhhbmRsZSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgcmVnaXN0ZXJJbW1lZGlhdGUgPSBmdW5jdGlvbihoYW5kbGUpIHtcbiAgICAgICAgICAgIGNoYW5uZWwucG9ydDIucG9zdE1lc3NhZ2UoaGFuZGxlKTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpbnN0YWxsUmVhZHlTdGF0ZUNoYW5nZUltcGxlbWVudGF0aW9uKCkge1xuICAgICAgICB2YXIgaHRtbCA9IGRvYy5kb2N1bWVudEVsZW1lbnQ7XG4gICAgICAgIHJlZ2lzdGVySW1tZWRpYXRlID0gZnVuY3Rpb24oaGFuZGxlKSB7XG4gICAgICAgICAgICAvLyBDcmVhdGUgYSA8c2NyaXB0PiBlbGVtZW50OyBpdHMgcmVhZHlzdGF0ZWNoYW5nZSBldmVudCB3aWxsIGJlIGZpcmVkIGFzeW5jaHJvbm91c2x5IG9uY2UgaXQgaXMgaW5zZXJ0ZWRcbiAgICAgICAgICAgIC8vIGludG8gdGhlIGRvY3VtZW50LiBEbyBzbywgdGh1cyBxdWV1aW5nIHVwIHRoZSB0YXNrLiBSZW1lbWJlciB0byBjbGVhbiB1cCBvbmNlIGl0J3MgYmVlbiBjYWxsZWQuXG4gICAgICAgICAgICB2YXIgc2NyaXB0ID0gZG9jLmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7XG4gICAgICAgICAgICBzY3JpcHQub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJ1bklmUHJlc2VudChoYW5kbGUpO1xuICAgICAgICAgICAgICAgIHNjcmlwdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBudWxsO1xuICAgICAgICAgICAgICAgIGh0bWwucmVtb3ZlQ2hpbGQoc2NyaXB0KTtcbiAgICAgICAgICAgICAgICBzY3JpcHQgPSBudWxsO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGh0bWwuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpbnN0YWxsU2V0VGltZW91dEltcGxlbWVudGF0aW9uKCkge1xuICAgICAgICByZWdpc3RlckltbWVkaWF0ZSA9IGZ1bmN0aW9uKGhhbmRsZSkge1xuICAgICAgICAgICAgc2V0VGltZW91dChydW5JZlByZXNlbnQsIDAsIGhhbmRsZSk7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgLy8gSWYgc3VwcG9ydGVkLCB3ZSBzaG91bGQgYXR0YWNoIHRvIHRoZSBwcm90b3R5cGUgb2YgZ2xvYmFsLCBzaW5jZSB0aGF0IGlzIHdoZXJlIHNldFRpbWVvdXQgZXQgYWwuIGxpdmUuXG4gICAgdmFyIGF0dGFjaFRvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mICYmIE9iamVjdC5nZXRQcm90b3R5cGVPZihnbG9iYWwpO1xuICAgIGF0dGFjaFRvID0gYXR0YWNoVG8gJiYgYXR0YWNoVG8uc2V0VGltZW91dCA/IGF0dGFjaFRvIDogZ2xvYmFsO1xuXG4gICAgLy8gRG9uJ3QgZ2V0IGZvb2xlZCBieSBlLmcuIGJyb3dzZXJpZnkgZW52aXJvbm1lbnRzLlxuICAgIGlmICh7fS50b1N0cmluZy5jYWxsKGdsb2JhbC5wcm9jZXNzKSA9PT0gXCJbb2JqZWN0IHByb2Nlc3NdXCIpIHtcbiAgICAgICAgLy8gRm9yIE5vZGUuanMgYmVmb3JlIDAuOVxuICAgICAgICBpbnN0YWxsTmV4dFRpY2tJbXBsZW1lbnRhdGlvbigpO1xuXG4gICAgfSBlbHNlIGlmIChjYW5Vc2VQb3N0TWVzc2FnZSgpKSB7XG4gICAgICAgIC8vIEZvciBub24tSUUxMCBtb2Rlcm4gYnJvd3NlcnNcbiAgICAgICAgaW5zdGFsbFBvc3RNZXNzYWdlSW1wbGVtZW50YXRpb24oKTtcblxuICAgIH0gZWxzZSBpZiAoZ2xvYmFsLk1lc3NhZ2VDaGFubmVsKSB7XG4gICAgICAgIC8vIEZvciB3ZWIgd29ya2Vycywgd2hlcmUgc3VwcG9ydGVkXG4gICAgICAgIGluc3RhbGxNZXNzYWdlQ2hhbm5lbEltcGxlbWVudGF0aW9uKCk7XG5cbiAgICB9IGVsc2UgaWYgKGRvYyAmJiBcIm9ucmVhZHlzdGF0ZWNoYW5nZVwiIGluIGRvYy5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpKSB7XG4gICAgICAgIC8vIEZvciBJRSA24oCTOFxuICAgICAgICBpbnN0YWxsUmVhZHlTdGF0ZUNoYW5nZUltcGxlbWVudGF0aW9uKCk7XG5cbiAgICB9IGVsc2Uge1xuICAgICAgICAvLyBGb3Igb2xkZXIgYnJvd3NlcnNcbiAgICAgICAgaW5zdGFsbFNldFRpbWVvdXRJbXBsZW1lbnRhdGlvbigpO1xuICAgIH1cblxuICAgIGF0dGFjaFRvLnNldEltbWVkaWF0ZSA9IHNldEltbWVkaWF0ZTtcbiAgICBhdHRhY2hUby5jbGVhckltbWVkaWF0ZSA9IGNsZWFySW1tZWRpYXRlO1xufSh0eXBlb2Ygc2VsZiA9PT0gXCJ1bmRlZmluZWRcIiA/IHR5cGVvZiBnbG9iYWwgPT09IFwidW5kZWZpbmVkXCIgPyB0aGlzIDogZ2xvYmFsIDogc2VsZikpO1xuIiwiZXhwb3J0IGNvbnN0IFlPVVRVQkVfQVBJX0tFWSA9ICdBSXphU3lDUm9ra2l6ak1nRkpRV2JoM1UyS2ljcWhOS2N3R1dwajAnIiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2luZGV4LmpzIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanM/aW5kZW50ZWRTeW50YXghLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9BcHAudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1zYXNzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvaW5kZXguanMhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz9pbmRlbnRlZFN5bnRheCEuLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0FwcC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZsYW5nPXNhc3MmXCIiLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIm1haW57bWluLWhlaWdodDo4MHZoO21hcmdpbi10b3A6MTEwcHh9XFxuXCIsIFwiXCJdKTtcbiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9BcHAudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vQXBwLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsIjx0ZW1wbGF0ZSBsYW5nPVwicHVnXCI+XG4gIGRpdiNhcHBcbiAgICB2LWhlYWRlclxuICAgIHYtbmF2XG4gICAgcm91dGVyLXZpZXdcbiAgICB2dWUtcHJvZ3Jlc3MtYmFyXG4gICAgZGl2KHYtaWY9XCJlcnJvcnMubGVuZ3RoXCIpXG4gICAgICBhbGVydCh2LWZvcj1cImVycm9yLCBpIGluIGVycm9yc1wiLDprZXk9XCJpXCIsdHlwZT1cImluZm9cIiw6bWVzc2FnZT1cImVycm9yXCIscG9zaXRpb249XCJib3R0b20tcmlnaHRcIixhdXRvaGlkZSkgXG4gICAgdi1mb290ZXJcbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5jb25zdCBIZWFkZXIgPSAoKSA9PiBpbXBvcnQoLyogd2VicGFja0NodW5rTmFtZTogXCJoZWFkZXJcIiAqLyAnfmNvbXBvbmVudHMvSGVhZGVyLnZ1ZScpXG5jb25zdCBGb290ZXIgPSAoKSA9PiBpbXBvcnQoLyogd2VicGFja0NodW5rTmFtZTogXCJmb290ZXJcIiAqLyAnfmNvbXBvbmVudHMvRm9vdGVyLnZ1ZScpXG5jb25zdCBOYXYgPSAoKSA9PiBpbXBvcnQoLyogd2VicGFja0NodW5rTmFtZTogXCJuYXZcIiAqLyAnfmNvbXBvbmVudHMvTmF2LnZ1ZScpXG5jb25zdCBBbGVydCA9ICgpID0+IGltcG9ydCgvKiB3ZWJwYWNrQ2h1bmtOYW1lOiBcImFsZXJ0XCIgKi8gJ35jb21wb25lbnRzL0FsZXJ0LnZ1ZScpXG5pbXBvcnQgZXZlbnRzIGZyb20gJ35ldmVudHMnXG5pbXBvcnQgY29uZmlnIGZyb20gJ35jb25maWcnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgZXJyb3JzOiBbXVxuICAgIH1cbiAgfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICBhcHAoKSB7XG4gICAgICByZXR1cm4gY29uZmlnLmFwcFxuICAgIH1cbiAgfSxcbiAgY29tcG9uZW50czoge1xuICAgICd2LWhlYWRlcic6IEhlYWRlcixcbiAgICAndi1uYXYnOiBOYXYsXG4gICAgJ3YtZm9vdGVyJzogRm9vdGVyLFxuICAgICdhbGVydCc6IEFsZXJ0XG4gIH0sXG4gIGNyZWF0ZWQoKSB7XG4gICAgZXZlbnRzLiRvbignYXBpLmVycm9yJywgKGVycikgPT4ge1xuICAgICAgdGhpcy5lcnJvcnMucHVzaChlcnIubmFtZSArICc6ICcgKyBlcnIubWVzc2FnZSlcbiAgICB9KVxuICB9LFxuICBoZWFkOiB7XG4gICAgbWV0YSgpIHtcbiAgICAgIHJldHVybiBbXG4gICAgICAgIHsgbmFtZTogJ3R3aXR0ZXI6Y2FyZCcsIGNvbnRlbnQ6ICdzdW1tYXJ5X2xhcmdlX2ltYWdlJyB9LFxuICAgICAgICB7IG5hbWU6ICd0d2l0dGVyOmNyZWF0b3InLCBjb250ZW50OiAnQCcgKyB0aGlzLmFwcC50d2l0dGVyLnVzZXJuYW1lIH0sXG4gICAgICAgIHsgbmFtZTogJ3R3aXR0ZXI6c2l0ZScsIGNvbnRlbnQ6ICdAJyArIHRoaXMuYXBwLnR3aXR0ZXIudXNlcm5hbWUgfSxcbiAgICAgICAgeyBuYW1lOiAndHdpdHRlcjp0aXRsZScsIGNvbnRlbnQ6IHRoaXMuYXBwLnRpdGxlIH0sXG4gICAgICAgIHsgbmFtZTogJ3R3aXR0ZXI6ZGVzY3JpcHRpb24nLCBjb250ZW50OiB0aGlzLmFwcC5kZXNjcmlwdGlvbiB9LFxuICAgICAgICB7IG5hbWU6ICd0d2l0dGVyOmltYWdlJywgY29udGVudDogdGhpcy5hcHAudXJsICsgdGhpcy5hcHAubG9nby5zaGFyZSB9LFxuICAgICAgICB7IHByb3BlcnR5OiAnb2c6dXJsJywgY29udGVudDogdGhpcy5hcHAudXJsIH0sXG4gICAgICAgIHsgcHJvcGVydHk6ICdvZzp0eXBlJywgY29udGVudDogJ3NpdGUnIH0sXG4gICAgICAgIHsgcHJvcGVydHk6ICdvZzp0aXRsZScsIGNvbnRlbnQ6IHRoaXMuYXBwLnRpdGxlIH0sXG4gICAgICAgIHsgcHJvcGVydHk6ICdvZzppbWFnZScsIGNvbnRlbnQ6IHRoaXMuYXBwLnVybCArIHRoaXMuYXBwLmxvZ28uc2hhcmUgfSxcbiAgICAgICAgeyBwcm9wZXJ0eTogJ29nOmltYWdlOnR5cGUnLCBjb250ZW50OiAnaW1hZ2UvcG5nJyB9LFxuICAgICAgICB7IHByb3BlcnR5OiAnb2c6aW1hZ2U6d2lkdGgnLCBjb250ZW50OiAnMTIwMCcgfSxcbiAgICAgICAgeyBwcm9wZXJ0eTogJ29nOmltYWdlOmhlaWdodCcsIGNvbnRlbnQ6ICc2MzAnIH0sXG4gICAgICAgIHsgcHJvcGVydHk6ICdvZzpkZXNjcmlwdGlvbicsIGNvbnRlbnQ6IHRoaXMuYXBwLmRlc2NyaXB0aW9uIH1cbiAgICAgIF1cbiAgICB9XG4gIH1cbn1cbjwvc2NyaXB0PlxuXG48c3R5bGUgbGFuZz1cInNhc3NcIj5cbm1haW5cbiAgbWluLWhlaWdodDogODB2aFxuICBtYXJnaW4tdG9wOiAxMTBweFxuPC9zdHlsZT5cbiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vQXBwLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD02NTcyMjg3ZSZsYW5nPXB1ZyZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9BcHAudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9BcHAudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5pbXBvcnQgc3R5bGUwIGZyb20gXCIuL0FwcC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZsYW5nPXNhc3MmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsInZhciByZW5kZXIgPSBmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHthdHRyczp7XCJpZFwiOlwiYXBwXCJ9fSxbX2MoJ3YtaGVhZGVyJyksX2MoJ3YtbmF2JyksX2MoJ3JvdXRlci12aWV3JyksX2MoJ3Z1ZS1wcm9ncmVzcy1iYXInKSwoX3ZtLmVycm9ycy5sZW5ndGgpP19jKCdkaXYnLF92bS5fbCgoX3ZtLmVycm9ycyksZnVuY3Rpb24oZXJyb3IsaSl7cmV0dXJuIF9jKCdhbGVydCcse2tleTppLGF0dHJzOntcInR5cGVcIjpcImluZm9cIixcIm1lc3NhZ2VcIjplcnJvcixcInBvc2l0aW9uXCI6XCJib3R0b20tcmlnaHRcIixcImF1dG9oaWRlXCI6XCJcIn19KX0pLDEpOl92bS5fZSgpLF9jKCd2LWZvb3RlcicpXSwxKX1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiLyohXG4gICogdnVlLXJvdXRlciB2My4xLjJcbiAgKiAoYykgMjAxOSBFdmFuIFlvdVxuICAqIEBsaWNlbnNlIE1JVFxuICAqL1xuLyogICovXG5cbmZ1bmN0aW9uIGFzc2VydCAoY29uZGl0aW9uLCBtZXNzYWdlKSB7XG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKChcIlt2dWUtcm91dGVyXSBcIiArIG1lc3NhZ2UpKVxuICB9XG59XG5cbmZ1bmN0aW9uIHdhcm4gKGNvbmRpdGlvbiwgbWVzc2FnZSkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiAhY29uZGl0aW9uKSB7XG4gICAgdHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnICYmIGNvbnNvbGUud2FybigoXCJbdnVlLXJvdXRlcl0gXCIgKyBtZXNzYWdlKSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaXNFcnJvciAoZXJyKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZXJyKS5pbmRleE9mKCdFcnJvcicpID4gLTFcbn1cblxuZnVuY3Rpb24gaXNFeHRlbmRlZEVycm9yIChjb25zdHJ1Y3RvciwgZXJyKSB7XG4gIHJldHVybiAoXG4gICAgZXJyIGluc3RhbmNlb2YgY29uc3RydWN0b3IgfHxcbiAgICAvLyBfbmFtZSBpcyB0byBzdXBwb3J0IElFOSB0b29cbiAgICAoZXJyICYmIChlcnIubmFtZSA9PT0gY29uc3RydWN0b3IubmFtZSB8fCBlcnIuX25hbWUgPT09IGNvbnN0cnVjdG9yLl9uYW1lKSlcbiAgKVxufVxuXG5mdW5jdGlvbiBleHRlbmQgKGEsIGIpIHtcbiAgZm9yICh2YXIga2V5IGluIGIpIHtcbiAgICBhW2tleV0gPSBiW2tleV07XG4gIH1cbiAgcmV0dXJuIGFcbn1cblxudmFyIFZpZXcgPSB7XG4gIG5hbWU6ICdSb3V0ZXJWaWV3JyxcbiAgZnVuY3Rpb25hbDogdHJ1ZSxcbiAgcHJvcHM6IHtcbiAgICBuYW1lOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnZGVmYXVsdCdcbiAgICB9XG4gIH0sXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyIChfLCByZWYpIHtcbiAgICB2YXIgcHJvcHMgPSByZWYucHJvcHM7XG4gICAgdmFyIGNoaWxkcmVuID0gcmVmLmNoaWxkcmVuO1xuICAgIHZhciBwYXJlbnQgPSByZWYucGFyZW50O1xuICAgIHZhciBkYXRhID0gcmVmLmRhdGE7XG5cbiAgICAvLyB1c2VkIGJ5IGRldnRvb2xzIHRvIGRpc3BsYXkgYSByb3V0ZXItdmlldyBiYWRnZVxuICAgIGRhdGEucm91dGVyVmlldyA9IHRydWU7XG5cbiAgICAvLyBkaXJlY3RseSB1c2UgcGFyZW50IGNvbnRleHQncyBjcmVhdGVFbGVtZW50KCkgZnVuY3Rpb25cbiAgICAvLyBzbyB0aGF0IGNvbXBvbmVudHMgcmVuZGVyZWQgYnkgcm91dGVyLXZpZXcgY2FuIHJlc29sdmUgbmFtZWQgc2xvdHNcbiAgICB2YXIgaCA9IHBhcmVudC4kY3JlYXRlRWxlbWVudDtcbiAgICB2YXIgbmFtZSA9IHByb3BzLm5hbWU7XG4gICAgdmFyIHJvdXRlID0gcGFyZW50LiRyb3V0ZTtcbiAgICB2YXIgY2FjaGUgPSBwYXJlbnQuX3JvdXRlclZpZXdDYWNoZSB8fCAocGFyZW50Ll9yb3V0ZXJWaWV3Q2FjaGUgPSB7fSk7XG5cbiAgICAvLyBkZXRlcm1pbmUgY3VycmVudCB2aWV3IGRlcHRoLCBhbHNvIGNoZWNrIHRvIHNlZSBpZiB0aGUgdHJlZVxuICAgIC8vIGhhcyBiZWVuIHRvZ2dsZWQgaW5hY3RpdmUgYnV0IGtlcHQtYWxpdmUuXG4gICAgdmFyIGRlcHRoID0gMDtcbiAgICB2YXIgaW5hY3RpdmUgPSBmYWxzZTtcbiAgICB3aGlsZSAocGFyZW50ICYmIHBhcmVudC5fcm91dGVyUm9vdCAhPT0gcGFyZW50KSB7XG4gICAgICB2YXIgdm5vZGVEYXRhID0gcGFyZW50LiR2bm9kZSAmJiBwYXJlbnQuJHZub2RlLmRhdGE7XG4gICAgICBpZiAodm5vZGVEYXRhKSB7XG4gICAgICAgIGlmICh2bm9kZURhdGEucm91dGVyVmlldykge1xuICAgICAgICAgIGRlcHRoKys7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZub2RlRGF0YS5rZWVwQWxpdmUgJiYgcGFyZW50Ll9pbmFjdGl2ZSkge1xuICAgICAgICAgIGluYWN0aXZlID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcGFyZW50ID0gcGFyZW50LiRwYXJlbnQ7XG4gICAgfVxuICAgIGRhdGEucm91dGVyVmlld0RlcHRoID0gZGVwdGg7XG5cbiAgICAvLyByZW5kZXIgcHJldmlvdXMgdmlldyBpZiB0aGUgdHJlZSBpcyBpbmFjdGl2ZSBhbmQga2VwdC1hbGl2ZVxuICAgIGlmIChpbmFjdGl2ZSkge1xuICAgICAgcmV0dXJuIGgoY2FjaGVbbmFtZV0sIGRhdGEsIGNoaWxkcmVuKVxuICAgIH1cblxuICAgIHZhciBtYXRjaGVkID0gcm91dGUubWF0Y2hlZFtkZXB0aF07XG4gICAgLy8gcmVuZGVyIGVtcHR5IG5vZGUgaWYgbm8gbWF0Y2hlZCByb3V0ZVxuICAgIGlmICghbWF0Y2hlZCkge1xuICAgICAgY2FjaGVbbmFtZV0gPSBudWxsO1xuICAgICAgcmV0dXJuIGgoKVxuICAgIH1cblxuICAgIHZhciBjb21wb25lbnQgPSBjYWNoZVtuYW1lXSA9IG1hdGNoZWQuY29tcG9uZW50c1tuYW1lXTtcblxuICAgIC8vIGF0dGFjaCBpbnN0YW5jZSByZWdpc3RyYXRpb24gaG9va1xuICAgIC8vIHRoaXMgd2lsbCBiZSBjYWxsZWQgaW4gdGhlIGluc3RhbmNlJ3MgaW5qZWN0ZWQgbGlmZWN5Y2xlIGhvb2tzXG4gICAgZGF0YS5yZWdpc3RlclJvdXRlSW5zdGFuY2UgPSBmdW5jdGlvbiAodm0sIHZhbCkge1xuICAgICAgLy8gdmFsIGNvdWxkIGJlIHVuZGVmaW5lZCBmb3IgdW5yZWdpc3RyYXRpb25cbiAgICAgIHZhciBjdXJyZW50ID0gbWF0Y2hlZC5pbnN0YW5jZXNbbmFtZV07XG4gICAgICBpZiAoXG4gICAgICAgICh2YWwgJiYgY3VycmVudCAhPT0gdm0pIHx8XG4gICAgICAgICghdmFsICYmIGN1cnJlbnQgPT09IHZtKVxuICAgICAgKSB7XG4gICAgICAgIG1hdGNoZWQuaW5zdGFuY2VzW25hbWVdID0gdmFsO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIGFsc28gcmVnaXN0ZXIgaW5zdGFuY2UgaW4gcHJlcGF0Y2ggaG9va1xuICAgIC8vIGluIGNhc2UgdGhlIHNhbWUgY29tcG9uZW50IGluc3RhbmNlIGlzIHJldXNlZCBhY3Jvc3MgZGlmZmVyZW50IHJvdXRlc1xuICAgIDsoZGF0YS5ob29rIHx8IChkYXRhLmhvb2sgPSB7fSkpLnByZXBhdGNoID0gZnVuY3Rpb24gKF8sIHZub2RlKSB7XG4gICAgICBtYXRjaGVkLmluc3RhbmNlc1tuYW1lXSA9IHZub2RlLmNvbXBvbmVudEluc3RhbmNlO1xuICAgIH07XG5cbiAgICAvLyByZWdpc3RlciBpbnN0YW5jZSBpbiBpbml0IGhvb2tcbiAgICAvLyBpbiBjYXNlIGtlcHQtYWxpdmUgY29tcG9uZW50IGJlIGFjdGl2ZWQgd2hlbiByb3V0ZXMgY2hhbmdlZFxuICAgIGRhdGEuaG9vay5pbml0ID0gZnVuY3Rpb24gKHZub2RlKSB7XG4gICAgICBpZiAodm5vZGUuZGF0YS5rZWVwQWxpdmUgJiZcbiAgICAgICAgdm5vZGUuY29tcG9uZW50SW5zdGFuY2UgJiZcbiAgICAgICAgdm5vZGUuY29tcG9uZW50SW5zdGFuY2UgIT09IG1hdGNoZWQuaW5zdGFuY2VzW25hbWVdXG4gICAgICApIHtcbiAgICAgICAgbWF0Y2hlZC5pbnN0YW5jZXNbbmFtZV0gPSB2bm9kZS5jb21wb25lbnRJbnN0YW5jZTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgLy8gcmVzb2x2ZSBwcm9wc1xuICAgIHZhciBwcm9wc1RvUGFzcyA9IGRhdGEucHJvcHMgPSByZXNvbHZlUHJvcHMocm91dGUsIG1hdGNoZWQucHJvcHMgJiYgbWF0Y2hlZC5wcm9wc1tuYW1lXSk7XG4gICAgaWYgKHByb3BzVG9QYXNzKSB7XG4gICAgICAvLyBjbG9uZSB0byBwcmV2ZW50IG11dGF0aW9uXG4gICAgICBwcm9wc1RvUGFzcyA9IGRhdGEucHJvcHMgPSBleHRlbmQoe30sIHByb3BzVG9QYXNzKTtcbiAgICAgIC8vIHBhc3Mgbm9uLWRlY2xhcmVkIHByb3BzIGFzIGF0dHJzXG4gICAgICB2YXIgYXR0cnMgPSBkYXRhLmF0dHJzID0gZGF0YS5hdHRycyB8fCB7fTtcbiAgICAgIGZvciAodmFyIGtleSBpbiBwcm9wc1RvUGFzcykge1xuICAgICAgICBpZiAoIWNvbXBvbmVudC5wcm9wcyB8fCAhKGtleSBpbiBjb21wb25lbnQucHJvcHMpKSB7XG4gICAgICAgICAgYXR0cnNba2V5XSA9IHByb3BzVG9QYXNzW2tleV07XG4gICAgICAgICAgZGVsZXRlIHByb3BzVG9QYXNzW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gaChjb21wb25lbnQsIGRhdGEsIGNoaWxkcmVuKVxuICB9XG59XG5cbmZ1bmN0aW9uIHJlc29sdmVQcm9wcyAocm91dGUsIGNvbmZpZykge1xuICBzd2l0Y2ggKHR5cGVvZiBjb25maWcpIHtcbiAgICBjYXNlICd1bmRlZmluZWQnOlxuICAgICAgcmV0dXJuXG4gICAgY2FzZSAnb2JqZWN0JzpcbiAgICAgIHJldHVybiBjb25maWdcbiAgICBjYXNlICdmdW5jdGlvbic6XG4gICAgICByZXR1cm4gY29uZmlnKHJvdXRlKVxuICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgICAgcmV0dXJuIGNvbmZpZyA/IHJvdXRlLnBhcmFtcyA6IHVuZGVmaW5lZFxuICAgIGRlZmF1bHQ6XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICB3YXJuKFxuICAgICAgICAgIGZhbHNlLFxuICAgICAgICAgIFwicHJvcHMgaW4gXFxcIlwiICsgKHJvdXRlLnBhdGgpICsgXCJcXFwiIGlzIGEgXCIgKyAodHlwZW9mIGNvbmZpZykgKyBcIiwgXCIgK1xuICAgICAgICAgIFwiZXhwZWN0aW5nIGFuIG9iamVjdCwgZnVuY3Rpb24gb3IgYm9vbGVhbi5cIlxuICAgICAgICApO1xuICAgICAgfVxuICB9XG59XG5cbi8qICAqL1xuXG52YXIgZW5jb2RlUmVzZXJ2ZVJFID0gL1shJygpKl0vZztcbnZhciBlbmNvZGVSZXNlcnZlUmVwbGFjZXIgPSBmdW5jdGlvbiAoYykgeyByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KTsgfTtcbnZhciBjb21tYVJFID0gLyUyQy9nO1xuXG4vLyBmaXhlZCBlbmNvZGVVUklDb21wb25lbnQgd2hpY2ggaXMgbW9yZSBjb25mb3JtYW50IHRvIFJGQzM5ODY6XG4vLyAtIGVzY2FwZXMgWyEnKCkqXVxuLy8gLSBwcmVzZXJ2ZSBjb21tYXNcbnZhciBlbmNvZGUgPSBmdW5jdGlvbiAoc3RyKSB7IHJldHVybiBlbmNvZGVVUklDb21wb25lbnQoc3RyKVxuICAucmVwbGFjZShlbmNvZGVSZXNlcnZlUkUsIGVuY29kZVJlc2VydmVSZXBsYWNlcilcbiAgLnJlcGxhY2UoY29tbWFSRSwgJywnKTsgfTtcblxudmFyIGRlY29kZSA9IGRlY29kZVVSSUNvbXBvbmVudDtcblxuZnVuY3Rpb24gcmVzb2x2ZVF1ZXJ5IChcbiAgcXVlcnksXG4gIGV4dHJhUXVlcnksXG4gIF9wYXJzZVF1ZXJ5XG4pIHtcbiAgaWYgKCBleHRyYVF1ZXJ5ID09PSB2b2lkIDAgKSBleHRyYVF1ZXJ5ID0ge307XG5cbiAgdmFyIHBhcnNlID0gX3BhcnNlUXVlcnkgfHwgcGFyc2VRdWVyeTtcbiAgdmFyIHBhcnNlZFF1ZXJ5O1xuICB0cnkge1xuICAgIHBhcnNlZFF1ZXJ5ID0gcGFyc2UocXVlcnkgfHwgJycpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB3YXJuKGZhbHNlLCBlLm1lc3NhZ2UpO1xuICAgIHBhcnNlZFF1ZXJ5ID0ge307XG4gIH1cbiAgZm9yICh2YXIga2V5IGluIGV4dHJhUXVlcnkpIHtcbiAgICBwYXJzZWRRdWVyeVtrZXldID0gZXh0cmFRdWVyeVtrZXldO1xuICB9XG4gIHJldHVybiBwYXJzZWRRdWVyeVxufVxuXG5mdW5jdGlvbiBwYXJzZVF1ZXJ5IChxdWVyeSkge1xuICB2YXIgcmVzID0ge307XG5cbiAgcXVlcnkgPSBxdWVyeS50cmltKCkucmVwbGFjZSgvXihcXD98I3wmKS8sICcnKTtcblxuICBpZiAoIXF1ZXJ5KSB7XG4gICAgcmV0dXJuIHJlc1xuICB9XG5cbiAgcXVlcnkuc3BsaXQoJyYnKS5mb3JFYWNoKGZ1bmN0aW9uIChwYXJhbSkge1xuICAgIHZhciBwYXJ0cyA9IHBhcmFtLnJlcGxhY2UoL1xcKy9nLCAnICcpLnNwbGl0KCc9Jyk7XG4gICAgdmFyIGtleSA9IGRlY29kZShwYXJ0cy5zaGlmdCgpKTtcbiAgICB2YXIgdmFsID0gcGFydHMubGVuZ3RoID4gMFxuICAgICAgPyBkZWNvZGUocGFydHMuam9pbignPScpKVxuICAgICAgOiBudWxsO1xuXG4gICAgaWYgKHJlc1trZXldID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJlc1trZXldID0gdmFsO1xuICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShyZXNba2V5XSkpIHtcbiAgICAgIHJlc1trZXldLnB1c2godmFsKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzW2tleV0gPSBbcmVzW2tleV0sIHZhbF07XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gcmVzXG59XG5cbmZ1bmN0aW9uIHN0cmluZ2lmeVF1ZXJ5IChvYmopIHtcbiAgdmFyIHJlcyA9IG9iaiA/IE9iamVjdC5rZXlzKG9iaikubWFwKGZ1bmN0aW9uIChrZXkpIHtcbiAgICB2YXIgdmFsID0gb2JqW2tleV07XG5cbiAgICBpZiAodmFsID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiAnJ1xuICAgIH1cblxuICAgIGlmICh2YWwgPT09IG51bGwpIHtcbiAgICAgIHJldHVybiBlbmNvZGUoa2V5KVxuICAgIH1cblxuICAgIGlmIChBcnJheS5pc0FycmF5KHZhbCkpIHtcbiAgICAgIHZhciByZXN1bHQgPSBbXTtcbiAgICAgIHZhbC5mb3JFYWNoKGZ1bmN0aW9uICh2YWwyKSB7XG4gICAgICAgIGlmICh2YWwyID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuICAgICAgICBpZiAodmFsMiA9PT0gbnVsbCkge1xuICAgICAgICAgIHJlc3VsdC5wdXNoKGVuY29kZShrZXkpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXN1bHQucHVzaChlbmNvZGUoa2V5KSArICc9JyArIGVuY29kZSh2YWwyKSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHJlc3VsdC5qb2luKCcmJylcbiAgICB9XG5cbiAgICByZXR1cm4gZW5jb2RlKGtleSkgKyAnPScgKyBlbmNvZGUodmFsKVxuICB9KS5maWx0ZXIoZnVuY3Rpb24gKHgpIHsgcmV0dXJuIHgubGVuZ3RoID4gMDsgfSkuam9pbignJicpIDogbnVsbDtcbiAgcmV0dXJuIHJlcyA/IChcIj9cIiArIHJlcykgOiAnJ1xufVxuXG4vKiAgKi9cblxudmFyIHRyYWlsaW5nU2xhc2hSRSA9IC9cXC8/JC87XG5cbmZ1bmN0aW9uIGNyZWF0ZVJvdXRlIChcbiAgcmVjb3JkLFxuICBsb2NhdGlvbixcbiAgcmVkaXJlY3RlZEZyb20sXG4gIHJvdXRlclxuKSB7XG4gIHZhciBzdHJpbmdpZnlRdWVyeSQkMSA9IHJvdXRlciAmJiByb3V0ZXIub3B0aW9ucy5zdHJpbmdpZnlRdWVyeTtcblxuICB2YXIgcXVlcnkgPSBsb2NhdGlvbi5xdWVyeSB8fCB7fTtcbiAgdHJ5IHtcbiAgICBxdWVyeSA9IGNsb25lKHF1ZXJ5KTtcbiAgfSBjYXRjaCAoZSkge31cblxuICB2YXIgcm91dGUgPSB7XG4gICAgbmFtZTogbG9jYXRpb24ubmFtZSB8fCAocmVjb3JkICYmIHJlY29yZC5uYW1lKSxcbiAgICBtZXRhOiAocmVjb3JkICYmIHJlY29yZC5tZXRhKSB8fCB7fSxcbiAgICBwYXRoOiBsb2NhdGlvbi5wYXRoIHx8ICcvJyxcbiAgICBoYXNoOiBsb2NhdGlvbi5oYXNoIHx8ICcnLFxuICAgIHF1ZXJ5OiBxdWVyeSxcbiAgICBwYXJhbXM6IGxvY2F0aW9uLnBhcmFtcyB8fCB7fSxcbiAgICBmdWxsUGF0aDogZ2V0RnVsbFBhdGgobG9jYXRpb24sIHN0cmluZ2lmeVF1ZXJ5JCQxKSxcbiAgICBtYXRjaGVkOiByZWNvcmQgPyBmb3JtYXRNYXRjaChyZWNvcmQpIDogW11cbiAgfTtcbiAgaWYgKHJlZGlyZWN0ZWRGcm9tKSB7XG4gICAgcm91dGUucmVkaXJlY3RlZEZyb20gPSBnZXRGdWxsUGF0aChyZWRpcmVjdGVkRnJvbSwgc3RyaW5naWZ5UXVlcnkkJDEpO1xuICB9XG4gIHJldHVybiBPYmplY3QuZnJlZXplKHJvdXRlKVxufVxuXG5mdW5jdGlvbiBjbG9uZSAodmFsdWUpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgcmV0dXJuIHZhbHVlLm1hcChjbG9uZSlcbiAgfSBlbHNlIGlmICh2YWx1ZSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnKSB7XG4gICAgdmFyIHJlcyA9IHt9O1xuICAgIGZvciAodmFyIGtleSBpbiB2YWx1ZSkge1xuICAgICAgcmVzW2tleV0gPSBjbG9uZSh2YWx1ZVtrZXldKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB2YWx1ZVxuICB9XG59XG5cbi8vIHRoZSBzdGFydGluZyByb3V0ZSB0aGF0IHJlcHJlc2VudHMgdGhlIGluaXRpYWwgc3RhdGVcbnZhciBTVEFSVCA9IGNyZWF0ZVJvdXRlKG51bGwsIHtcbiAgcGF0aDogJy8nXG59KTtcblxuZnVuY3Rpb24gZm9ybWF0TWF0Y2ggKHJlY29yZCkge1xuICB2YXIgcmVzID0gW107XG4gIHdoaWxlIChyZWNvcmQpIHtcbiAgICByZXMudW5zaGlmdChyZWNvcmQpO1xuICAgIHJlY29yZCA9IHJlY29yZC5wYXJlbnQ7XG4gIH1cbiAgcmV0dXJuIHJlc1xufVxuXG5mdW5jdGlvbiBnZXRGdWxsUGF0aCAoXG4gIHJlZixcbiAgX3N0cmluZ2lmeVF1ZXJ5XG4pIHtcbiAgdmFyIHBhdGggPSByZWYucGF0aDtcbiAgdmFyIHF1ZXJ5ID0gcmVmLnF1ZXJ5OyBpZiAoIHF1ZXJ5ID09PSB2b2lkIDAgKSBxdWVyeSA9IHt9O1xuICB2YXIgaGFzaCA9IHJlZi5oYXNoOyBpZiAoIGhhc2ggPT09IHZvaWQgMCApIGhhc2ggPSAnJztcblxuICB2YXIgc3RyaW5naWZ5ID0gX3N0cmluZ2lmeVF1ZXJ5IHx8IHN0cmluZ2lmeVF1ZXJ5O1xuICByZXR1cm4gKHBhdGggfHwgJy8nKSArIHN0cmluZ2lmeShxdWVyeSkgKyBoYXNoXG59XG5cbmZ1bmN0aW9uIGlzU2FtZVJvdXRlIChhLCBiKSB7XG4gIGlmIChiID09PSBTVEFSVCkge1xuICAgIHJldHVybiBhID09PSBiXG4gIH0gZWxzZSBpZiAoIWIpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfSBlbHNlIGlmIChhLnBhdGggJiYgYi5wYXRoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIGEucGF0aC5yZXBsYWNlKHRyYWlsaW5nU2xhc2hSRSwgJycpID09PSBiLnBhdGgucmVwbGFjZSh0cmFpbGluZ1NsYXNoUkUsICcnKSAmJlxuICAgICAgYS5oYXNoID09PSBiLmhhc2ggJiZcbiAgICAgIGlzT2JqZWN0RXF1YWwoYS5xdWVyeSwgYi5xdWVyeSlcbiAgICApXG4gIH0gZWxzZSBpZiAoYS5uYW1lICYmIGIubmFtZSkge1xuICAgIHJldHVybiAoXG4gICAgICBhLm5hbWUgPT09IGIubmFtZSAmJlxuICAgICAgYS5oYXNoID09PSBiLmhhc2ggJiZcbiAgICAgIGlzT2JqZWN0RXF1YWwoYS5xdWVyeSwgYi5xdWVyeSkgJiZcbiAgICAgIGlzT2JqZWN0RXF1YWwoYS5wYXJhbXMsIGIucGFyYW1zKVxuICAgIClcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxufVxuXG5mdW5jdGlvbiBpc09iamVjdEVxdWFsIChhLCBiKSB7XG4gIGlmICggYSA9PT0gdm9pZCAwICkgYSA9IHt9O1xuICBpZiAoIGIgPT09IHZvaWQgMCApIGIgPSB7fTtcblxuICAvLyBoYW5kbGUgbnVsbCB2YWx1ZSAjMTU2NlxuICBpZiAoIWEgfHwgIWIpIHsgcmV0dXJuIGEgPT09IGIgfVxuICB2YXIgYUtleXMgPSBPYmplY3Qua2V5cyhhKTtcbiAgdmFyIGJLZXlzID0gT2JqZWN0LmtleXMoYik7XG4gIGlmIChhS2V5cy5sZW5ndGggIT09IGJLZXlzLmxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG4gIHJldHVybiBhS2V5cy5ldmVyeShmdW5jdGlvbiAoa2V5KSB7XG4gICAgdmFyIGFWYWwgPSBhW2tleV07XG4gICAgdmFyIGJWYWwgPSBiW2tleV07XG4gICAgLy8gY2hlY2sgbmVzdGVkIGVxdWFsaXR5XG4gICAgaWYgKHR5cGVvZiBhVmFsID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgYlZhbCA9PT0gJ29iamVjdCcpIHtcbiAgICAgIHJldHVybiBpc09iamVjdEVxdWFsKGFWYWwsIGJWYWwpXG4gICAgfVxuICAgIHJldHVybiBTdHJpbmcoYVZhbCkgPT09IFN0cmluZyhiVmFsKVxuICB9KVxufVxuXG5mdW5jdGlvbiBpc0luY2x1ZGVkUm91dGUgKGN1cnJlbnQsIHRhcmdldCkge1xuICByZXR1cm4gKFxuICAgIGN1cnJlbnQucGF0aC5yZXBsYWNlKHRyYWlsaW5nU2xhc2hSRSwgJy8nKS5pbmRleE9mKFxuICAgICAgdGFyZ2V0LnBhdGgucmVwbGFjZSh0cmFpbGluZ1NsYXNoUkUsICcvJylcbiAgICApID09PSAwICYmXG4gICAgKCF0YXJnZXQuaGFzaCB8fCBjdXJyZW50Lmhhc2ggPT09IHRhcmdldC5oYXNoKSAmJlxuICAgIHF1ZXJ5SW5jbHVkZXMoY3VycmVudC5xdWVyeSwgdGFyZ2V0LnF1ZXJ5KVxuICApXG59XG5cbmZ1bmN0aW9uIHF1ZXJ5SW5jbHVkZXMgKGN1cnJlbnQsIHRhcmdldCkge1xuICBmb3IgKHZhciBrZXkgaW4gdGFyZ2V0KSB7XG4gICAgaWYgKCEoa2V5IGluIGN1cnJlbnQpKSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWVcbn1cblxuLyogICovXG5cbmZ1bmN0aW9uIHJlc29sdmVQYXRoIChcbiAgcmVsYXRpdmUsXG4gIGJhc2UsXG4gIGFwcGVuZFxuKSB7XG4gIHZhciBmaXJzdENoYXIgPSByZWxhdGl2ZS5jaGFyQXQoMCk7XG4gIGlmIChmaXJzdENoYXIgPT09ICcvJykge1xuICAgIHJldHVybiByZWxhdGl2ZVxuICB9XG5cbiAgaWYgKGZpcnN0Q2hhciA9PT0gJz8nIHx8IGZpcnN0Q2hhciA9PT0gJyMnKSB7XG4gICAgcmV0dXJuIGJhc2UgKyByZWxhdGl2ZVxuICB9XG5cbiAgdmFyIHN0YWNrID0gYmFzZS5zcGxpdCgnLycpO1xuXG4gIC8vIHJlbW92ZSB0cmFpbGluZyBzZWdtZW50IGlmOlxuICAvLyAtIG5vdCBhcHBlbmRpbmdcbiAgLy8gLSBhcHBlbmRpbmcgdG8gdHJhaWxpbmcgc2xhc2ggKGxhc3Qgc2VnbWVudCBpcyBlbXB0eSlcbiAgaWYgKCFhcHBlbmQgfHwgIXN0YWNrW3N0YWNrLmxlbmd0aCAtIDFdKSB7XG4gICAgc3RhY2sucG9wKCk7XG4gIH1cblxuICAvLyByZXNvbHZlIHJlbGF0aXZlIHBhdGhcbiAgdmFyIHNlZ21lbnRzID0gcmVsYXRpdmUucmVwbGFjZSgvXlxcLy8sICcnKS5zcGxpdCgnLycpO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHNlZ21lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNlZ21lbnQgPSBzZWdtZW50c1tpXTtcbiAgICBpZiAoc2VnbWVudCA9PT0gJy4uJykge1xuICAgICAgc3RhY2sucG9wKCk7XG4gICAgfSBlbHNlIGlmIChzZWdtZW50ICE9PSAnLicpIHtcbiAgICAgIHN0YWNrLnB1c2goc2VnbWVudCk7XG4gICAgfVxuICB9XG5cbiAgLy8gZW5zdXJlIGxlYWRpbmcgc2xhc2hcbiAgaWYgKHN0YWNrWzBdICE9PSAnJykge1xuICAgIHN0YWNrLnVuc2hpZnQoJycpO1xuICB9XG5cbiAgcmV0dXJuIHN0YWNrLmpvaW4oJy8nKVxufVxuXG5mdW5jdGlvbiBwYXJzZVBhdGggKHBhdGgpIHtcbiAgdmFyIGhhc2ggPSAnJztcbiAgdmFyIHF1ZXJ5ID0gJyc7XG5cbiAgdmFyIGhhc2hJbmRleCA9IHBhdGguaW5kZXhPZignIycpO1xuICBpZiAoaGFzaEluZGV4ID49IDApIHtcbiAgICBoYXNoID0gcGF0aC5zbGljZShoYXNoSW5kZXgpO1xuICAgIHBhdGggPSBwYXRoLnNsaWNlKDAsIGhhc2hJbmRleCk7XG4gIH1cblxuICB2YXIgcXVlcnlJbmRleCA9IHBhdGguaW5kZXhPZignPycpO1xuICBpZiAocXVlcnlJbmRleCA+PSAwKSB7XG4gICAgcXVlcnkgPSBwYXRoLnNsaWNlKHF1ZXJ5SW5kZXggKyAxKTtcbiAgICBwYXRoID0gcGF0aC5zbGljZSgwLCBxdWVyeUluZGV4KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcGF0aDogcGF0aCxcbiAgICBxdWVyeTogcXVlcnksXG4gICAgaGFzaDogaGFzaFxuICB9XG59XG5cbmZ1bmN0aW9uIGNsZWFuUGF0aCAocGF0aCkge1xuICByZXR1cm4gcGF0aC5yZXBsYWNlKC9cXC9cXC8vZywgJy8nKVxufVxuXG52YXIgaXNhcnJheSA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG5cbi8qKlxuICogRXhwb3NlIGBwYXRoVG9SZWdleHBgLlxuICovXG52YXIgcGF0aFRvUmVnZXhwXzEgPSBwYXRoVG9SZWdleHA7XG52YXIgcGFyc2VfMSA9IHBhcnNlO1xudmFyIGNvbXBpbGVfMSA9IGNvbXBpbGU7XG52YXIgdG9rZW5zVG9GdW5jdGlvbl8xID0gdG9rZW5zVG9GdW5jdGlvbjtcbnZhciB0b2tlbnNUb1JlZ0V4cF8xID0gdG9rZW5zVG9SZWdFeHA7XG5cbi8qKlxuICogVGhlIG1haW4gcGF0aCBtYXRjaGluZyByZWdleHAgdXRpbGl0eS5cbiAqXG4gKiBAdHlwZSB7UmVnRXhwfVxuICovXG52YXIgUEFUSF9SRUdFWFAgPSBuZXcgUmVnRXhwKFtcbiAgLy8gTWF0Y2ggZXNjYXBlZCBjaGFyYWN0ZXJzIHRoYXQgd291bGQgb3RoZXJ3aXNlIGFwcGVhciBpbiBmdXR1cmUgbWF0Y2hlcy5cbiAgLy8gVGhpcyBhbGxvd3MgdGhlIHVzZXIgdG8gZXNjYXBlIHNwZWNpYWwgY2hhcmFjdGVycyB0aGF0IHdvbid0IHRyYW5zZm9ybS5cbiAgJyhcXFxcXFxcXC4pJyxcbiAgLy8gTWF0Y2ggRXhwcmVzcy1zdHlsZSBwYXJhbWV0ZXJzIGFuZCB1bi1uYW1lZCBwYXJhbWV0ZXJzIHdpdGggYSBwcmVmaXhcbiAgLy8gYW5kIG9wdGlvbmFsIHN1ZmZpeGVzLiBNYXRjaGVzIGFwcGVhciBhczpcbiAgLy9cbiAgLy8gXCIvOnRlc3QoXFxcXGQrKT9cIiA9PiBbXCIvXCIsIFwidGVzdFwiLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCBcIj9cIiwgdW5kZWZpbmVkXVxuICAvLyBcIi9yb3V0ZShcXFxcZCspXCIgID0+IFt1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCB1bmRlZmluZWRdXG4gIC8vIFwiLypcIiAgICAgICAgICAgID0+IFtcIi9cIiwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIipcIl1cbiAgJyhbXFxcXC8uXSk/KD86KD86XFxcXDooXFxcXHcrKSg/OlxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpP3xcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKShbKyo/XSk/fChcXFxcKikpJ1xuXS5qb2luKCd8JyksICdnJyk7XG5cbi8qKlxuICogUGFyc2UgYSBzdHJpbmcgZm9yIHRoZSByYXcgdG9rZW5zLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gb3B0aW9uc1xuICogQHJldHVybiB7IUFycmF5fVxuICovXG5mdW5jdGlvbiBwYXJzZSAoc3RyLCBvcHRpb25zKSB7XG4gIHZhciB0b2tlbnMgPSBbXTtcbiAgdmFyIGtleSA9IDA7XG4gIHZhciBpbmRleCA9IDA7XG4gIHZhciBwYXRoID0gJyc7XG4gIHZhciBkZWZhdWx0RGVsaW1pdGVyID0gb3B0aW9ucyAmJiBvcHRpb25zLmRlbGltaXRlciB8fCAnLyc7XG4gIHZhciByZXM7XG5cbiAgd2hpbGUgKChyZXMgPSBQQVRIX1JFR0VYUC5leGVjKHN0cikpICE9IG51bGwpIHtcbiAgICB2YXIgbSA9IHJlc1swXTtcbiAgICB2YXIgZXNjYXBlZCA9IHJlc1sxXTtcbiAgICB2YXIgb2Zmc2V0ID0gcmVzLmluZGV4O1xuICAgIHBhdGggKz0gc3RyLnNsaWNlKGluZGV4LCBvZmZzZXQpO1xuICAgIGluZGV4ID0gb2Zmc2V0ICsgbS5sZW5ndGg7XG5cbiAgICAvLyBJZ25vcmUgYWxyZWFkeSBlc2NhcGVkIHNlcXVlbmNlcy5cbiAgICBpZiAoZXNjYXBlZCkge1xuICAgICAgcGF0aCArPSBlc2NhcGVkWzFdO1xuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICB2YXIgbmV4dCA9IHN0cltpbmRleF07XG4gICAgdmFyIHByZWZpeCA9IHJlc1syXTtcbiAgICB2YXIgbmFtZSA9IHJlc1szXTtcbiAgICB2YXIgY2FwdHVyZSA9IHJlc1s0XTtcbiAgICB2YXIgZ3JvdXAgPSByZXNbNV07XG4gICAgdmFyIG1vZGlmaWVyID0gcmVzWzZdO1xuICAgIHZhciBhc3RlcmlzayA9IHJlc1s3XTtcblxuICAgIC8vIFB1c2ggdGhlIGN1cnJlbnQgcGF0aCBvbnRvIHRoZSB0b2tlbnMuXG4gICAgaWYgKHBhdGgpIHtcbiAgICAgIHRva2Vucy5wdXNoKHBhdGgpO1xuICAgICAgcGF0aCA9ICcnO1xuICAgIH1cblxuICAgIHZhciBwYXJ0aWFsID0gcHJlZml4ICE9IG51bGwgJiYgbmV4dCAhPSBudWxsICYmIG5leHQgIT09IHByZWZpeDtcbiAgICB2YXIgcmVwZWF0ID0gbW9kaWZpZXIgPT09ICcrJyB8fCBtb2RpZmllciA9PT0gJyonO1xuICAgIHZhciBvcHRpb25hbCA9IG1vZGlmaWVyID09PSAnPycgfHwgbW9kaWZpZXIgPT09ICcqJztcbiAgICB2YXIgZGVsaW1pdGVyID0gcmVzWzJdIHx8IGRlZmF1bHREZWxpbWl0ZXI7XG4gICAgdmFyIHBhdHRlcm4gPSBjYXB0dXJlIHx8IGdyb3VwO1xuXG4gICAgdG9rZW5zLnB1c2goe1xuICAgICAgbmFtZTogbmFtZSB8fCBrZXkrKyxcbiAgICAgIHByZWZpeDogcHJlZml4IHx8ICcnLFxuICAgICAgZGVsaW1pdGVyOiBkZWxpbWl0ZXIsXG4gICAgICBvcHRpb25hbDogb3B0aW9uYWwsXG4gICAgICByZXBlYXQ6IHJlcGVhdCxcbiAgICAgIHBhcnRpYWw6IHBhcnRpYWwsXG4gICAgICBhc3RlcmlzazogISFhc3RlcmlzayxcbiAgICAgIHBhdHRlcm46IHBhdHRlcm4gPyBlc2NhcGVHcm91cChwYXR0ZXJuKSA6IChhc3RlcmlzayA/ICcuKicgOiAnW14nICsgZXNjYXBlU3RyaW5nKGRlbGltaXRlcikgKyAnXSs/JylcbiAgICB9KTtcbiAgfVxuXG4gIC8vIE1hdGNoIGFueSBjaGFyYWN0ZXJzIHN0aWxsIHJlbWFpbmluZy5cbiAgaWYgKGluZGV4IDwgc3RyLmxlbmd0aCkge1xuICAgIHBhdGggKz0gc3RyLnN1YnN0cihpbmRleCk7XG4gIH1cblxuICAvLyBJZiB0aGUgcGF0aCBleGlzdHMsIHB1c2ggaXQgb250byB0aGUgZW5kLlxuICBpZiAocGF0aCkge1xuICAgIHRva2Vucy5wdXNoKHBhdGgpO1xuICB9XG5cbiAgcmV0dXJuIHRva2Vuc1xufVxuXG4vKipcbiAqIENvbXBpbGUgYSBzdHJpbmcgdG8gYSB0ZW1wbGF0ZSBmdW5jdGlvbiBmb3IgdGhlIHBhdGguXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgICAgICAgICAgICBzdHJcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IWZ1bmN0aW9uKE9iamVjdD0sIE9iamVjdD0pfVxuICovXG5mdW5jdGlvbiBjb21waWxlIChzdHIsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvRnVuY3Rpb24ocGFyc2Uoc3RyLCBvcHRpb25zKSlcbn1cblxuLyoqXG4gKiBQcmV0dGllciBlbmNvZGluZyBvZiBVUkkgcGF0aCBzZWdtZW50cy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZVVSSUNvbXBvbmVudFByZXR0eSAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bXFwvPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEVuY29kZSB0aGUgYXN0ZXJpc2sgcGFyYW1ldGVyLiBTaW1pbGFyIHRvIGBwcmV0dHlgLCBidXQgYWxsb3dzIHNsYXNoZXMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVBc3RlcmlzayAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIG1ldGhvZCBmb3IgdHJhbnNmb3JtaW5nIHRva2VucyBpbnRvIHRoZSBwYXRoIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiB0b2tlbnNUb0Z1bmN0aW9uICh0b2tlbnMpIHtcbiAgLy8gQ29tcGlsZSBhbGwgdGhlIHRva2VucyBpbnRvIHJlZ2V4cHMuXG4gIHZhciBtYXRjaGVzID0gbmV3IEFycmF5KHRva2Vucy5sZW5ndGgpO1xuXG4gIC8vIENvbXBpbGUgYWxsIHRoZSBwYXR0ZXJucyBiZWZvcmUgY29tcGlsYXRpb24uXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHR5cGVvZiB0b2tlbnNbaV0gPT09ICdvYmplY3QnKSB7XG4gICAgICBtYXRjaGVzW2ldID0gbmV3IFJlZ0V4cCgnXig/OicgKyB0b2tlbnNbaV0ucGF0dGVybiArICcpJCcpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAob2JqLCBvcHRzKSB7XG4gICAgdmFyIHBhdGggPSAnJztcbiAgICB2YXIgZGF0YSA9IG9iaiB8fCB7fTtcbiAgICB2YXIgb3B0aW9ucyA9IG9wdHMgfHwge307XG4gICAgdmFyIGVuY29kZSA9IG9wdGlvbnMucHJldHR5ID8gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IDogZW5jb2RlVVJJQ29tcG9uZW50O1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXTtcblxuICAgICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcGF0aCArPSB0b2tlbjtcblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICB2YXIgdmFsdWUgPSBkYXRhW3Rva2VuLm5hbWVdO1xuICAgICAgdmFyIHNlZ21lbnQ7XG5cbiAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgIC8vIFByZXBlbmQgcGFydGlhbCBzZWdtZW50IHByZWZpeGVzLlxuICAgICAgICAgIGlmICh0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgICBwYXRoICs9IHRva2VuLnByZWZpeDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gYmUgZGVmaW5lZCcpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGlzYXJyYXkodmFsdWUpKSB7XG4gICAgICAgIGlmICghdG9rZW4ucmVwZWF0KSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgcmVwZWF0LCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeSh2YWx1ZSkgKyAnYCcpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAodmFsdWUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCBiZSBlbXB0eScpXG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWx1ZS5sZW5ndGg7IGorKykge1xuICAgICAgICAgIHNlZ21lbnQgPSBlbmNvZGUodmFsdWVbal0pO1xuXG4gICAgICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIGFsbCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG1hdGNoIFwiJyArIHRva2VuLnBhdHRlcm4gKyAnXCIsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHNlZ21lbnQpICsgJ2AnKVxuICAgICAgICAgIH1cblxuICAgICAgICAgIHBhdGggKz0gKGogPT09IDAgPyB0b2tlbi5wcmVmaXggOiB0b2tlbi5kZWxpbWl0ZXIpICsgc2VnbWVudDtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHNlZ21lbnQgPSB0b2tlbi5hc3RlcmlzayA/IGVuY29kZUFzdGVyaXNrKHZhbHVlKSA6IGVuY29kZSh2YWx1ZSk7XG5cbiAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIFwiJyArIHNlZ21lbnQgKyAnXCInKVxuICAgICAgfVxuXG4gICAgICBwYXRoICs9IHRva2VuLnByZWZpeCArIHNlZ21lbnQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIHBhdGhcbiAgfVxufVxuXG4vKipcbiAqIEVzY2FwZSBhIHJlZ3VsYXIgZXhwcmVzc2lvbiBzdHJpbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSBzdHJcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlU3RyaW5nIChzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC8oWy4rKj89XiE6JHt9KClbXFxdfFxcL1xcXFxdKS9nLCAnXFxcXCQxJylcbn1cblxuLyoqXG4gKiBFc2NhcGUgdGhlIGNhcHR1cmluZyBncm91cCBieSBlc2NhcGluZyBzcGVjaWFsIGNoYXJhY3RlcnMgYW5kIG1lYW5pbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSBncm91cFxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlc2NhcGVHcm91cCAoZ3JvdXApIHtcbiAgcmV0dXJuIGdyb3VwLnJlcGxhY2UoLyhbPSE6JFxcLygpXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogQXR0YWNoIHRoZSBrZXlzIGFzIGEgcHJvcGVydHkgb2YgdGhlIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshUmVnRXhwfSByZVxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gYXR0YWNoS2V5cyAocmUsIGtleXMpIHtcbiAgcmUua2V5cyA9IGtleXM7XG4gIHJldHVybiByZVxufVxuXG4vKipcbiAqIEdldCB0aGUgZmxhZ3MgZm9yIGEgcmVnZXhwIGZyb20gdGhlIG9wdGlvbnMuXG4gKlxuICogQHBhcmFtICB7T2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGZsYWdzIChvcHRpb25zKSB7XG4gIHJldHVybiBvcHRpb25zLnNlbnNpdGl2ZSA/ICcnIDogJ2knXG59XG5cbi8qKlxuICogUHVsbCBvdXQga2V5cyBmcm9tIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHJlZ2V4cFRvUmVnZXhwIChwYXRoLCBrZXlzKSB7XG4gIC8vIFVzZSBhIG5lZ2F0aXZlIGxvb2thaGVhZCB0byBtYXRjaCBvbmx5IGNhcHR1cmluZyBncm91cHMuXG4gIHZhciBncm91cHMgPSBwYXRoLnNvdXJjZS5tYXRjaCgvXFwoKD8hXFw/KS9nKTtcblxuICBpZiAoZ3JvdXBzKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBncm91cHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGtleXMucHVzaCh7XG4gICAgICAgIG5hbWU6IGksXG4gICAgICAgIHByZWZpeDogbnVsbCxcbiAgICAgICAgZGVsaW1pdGVyOiBudWxsLFxuICAgICAgICBvcHRpb25hbDogZmFsc2UsXG4gICAgICAgIHJlcGVhdDogZmFsc2UsXG4gICAgICAgIHBhcnRpYWw6IGZhbHNlLFxuICAgICAgICBhc3RlcmlzazogZmFsc2UsXG4gICAgICAgIHBhdHRlcm46IG51bGxcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKHBhdGgsIGtleXMpXG59XG5cbi8qKlxuICogVHJhbnNmb3JtIGFuIGFycmF5IGludG8gYSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgcGF0aFxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gYXJyYXlUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICB2YXIgcGFydHMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHBhdGgubGVuZ3RoOyBpKyspIHtcbiAgICBwYXJ0cy5wdXNoKHBhdGhUb1JlZ2V4cChwYXRoW2ldLCBrZXlzLCBvcHRpb25zKS5zb3VyY2UpO1xuICB9XG5cbiAgdmFyIHJlZ2V4cCA9IG5ldyBSZWdFeHAoJyg/OicgKyBwYXJ0cy5qb2luKCd8JykgKyAnKScsIGZsYWdzKG9wdGlvbnMpKTtcblxuICByZXR1cm4gYXR0YWNoS2V5cyhyZWdleHAsIGtleXMpXG59XG5cbi8qKlxuICogQ3JlYXRlIGEgcGF0aCByZWdleHAgZnJvbSBzdHJpbmcgaW5wdXQuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgcGF0aFxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gc3RyaW5nVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvUmVnRXhwKHBhcnNlKHBhdGgsIG9wdGlvbnMpLCBrZXlzLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIGZ1bmN0aW9uIGZvciB0YWtpbmcgdG9rZW5zIGFuZCByZXR1cm5pbmcgYSBSZWdFeHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgICAgICAgICB0b2tlbnNcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0ga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiB0b2tlbnNUb1JlZ0V4cCAodG9rZW5zLCBrZXlzLCBvcHRpb25zKSB7XG4gIGlmICghaXNhcnJheShrZXlzKSkge1xuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpO1xuICAgIGtleXMgPSBbXTtcbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG4gIHZhciBzdHJpY3QgPSBvcHRpb25zLnN0cmljdDtcbiAgdmFyIGVuZCA9IG9wdGlvbnMuZW5kICE9PSBmYWxzZTtcbiAgdmFyIHJvdXRlID0gJyc7XG5cbiAgLy8gSXRlcmF0ZSBvdmVyIHRoZSB0b2tlbnMgYW5kIGNyZWF0ZSBvdXIgcmVnZXhwIHN0cmluZy5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV07XG5cbiAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgcm91dGUgKz0gZXNjYXBlU3RyaW5nKHRva2VuKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHByZWZpeCA9IGVzY2FwZVN0cmluZyh0b2tlbi5wcmVmaXgpO1xuICAgICAgdmFyIGNhcHR1cmUgPSAnKD86JyArIHRva2VuLnBhdHRlcm4gKyAnKSc7XG5cbiAgICAgIGtleXMucHVzaCh0b2tlbik7XG5cbiAgICAgIGlmICh0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgY2FwdHVyZSArPSAnKD86JyArIHByZWZpeCArIGNhcHR1cmUgKyAnKSonO1xuICAgICAgfVxuXG4gICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgY2FwdHVyZSA9ICcoPzonICsgcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpKT8nO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyk/JztcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSc7XG4gICAgICB9XG5cbiAgICAgIHJvdXRlICs9IGNhcHR1cmU7XG4gICAgfVxuICB9XG5cbiAgdmFyIGRlbGltaXRlciA9IGVzY2FwZVN0cmluZyhvcHRpb25zLmRlbGltaXRlciB8fCAnLycpO1xuICB2YXIgZW5kc1dpdGhEZWxpbWl0ZXIgPSByb3V0ZS5zbGljZSgtZGVsaW1pdGVyLmxlbmd0aCkgPT09IGRlbGltaXRlcjtcblxuICAvLyBJbiBub24tc3RyaWN0IG1vZGUgd2UgYWxsb3cgYSBzbGFzaCBhdCB0aGUgZW5kIG9mIG1hdGNoLiBJZiB0aGUgcGF0aCB0b1xuICAvLyBtYXRjaCBhbHJlYWR5IGVuZHMgd2l0aCBhIHNsYXNoLCB3ZSByZW1vdmUgaXQgZm9yIGNvbnNpc3RlbmN5LiBUaGUgc2xhc2hcbiAgLy8gaXMgdmFsaWQgYXQgdGhlIGVuZCBvZiBhIHBhdGggbWF0Y2gsIG5vdCBpbiB0aGUgbWlkZGxlLiBUaGlzIGlzIGltcG9ydGFudFxuICAvLyBpbiBub24tZW5kaW5nIG1vZGUsIHdoZXJlIFwiL3Rlc3QvXCIgc2hvdWxkbid0IG1hdGNoIFwiL3Rlc3QvL3JvdXRlXCIuXG4gIGlmICghc3RyaWN0KSB7XG4gICAgcm91dGUgPSAoZW5kc1dpdGhEZWxpbWl0ZXIgPyByb3V0ZS5zbGljZSgwLCAtZGVsaW1pdGVyLmxlbmd0aCkgOiByb3V0ZSkgKyAnKD86JyArIGRlbGltaXRlciArICcoPz0kKSk/JztcbiAgfVxuXG4gIGlmIChlbmQpIHtcbiAgICByb3V0ZSArPSAnJCc7XG4gIH0gZWxzZSB7XG4gICAgLy8gSW4gbm9uLWVuZGluZyBtb2RlLCB3ZSBuZWVkIHRoZSBjYXB0dXJpbmcgZ3JvdXBzIHRvIG1hdGNoIGFzIG11Y2ggYXNcbiAgICAvLyBwb3NzaWJsZSBieSB1c2luZyBhIHBvc2l0aXZlIGxvb2thaGVhZCB0byB0aGUgZW5kIG9yIG5leHQgcGF0aCBzZWdtZW50LlxuICAgIHJvdXRlICs9IHN0cmljdCAmJiBlbmRzV2l0aERlbGltaXRlciA/ICcnIDogJyg/PScgKyBkZWxpbWl0ZXIgKyAnfCQpJztcbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKG5ldyBSZWdFeHAoJ14nICsgcm91dGUsIGZsYWdzKG9wdGlvbnMpKSwga2V5cylcbn1cblxuLyoqXG4gKiBOb3JtYWxpemUgdGhlIGdpdmVuIHBhdGggc3RyaW5nLCByZXR1cm5pbmcgYSByZWd1bGFyIGV4cHJlc3Npb24uXG4gKlxuICogQW4gZW1wdHkgYXJyYXkgY2FuIGJlIHBhc3NlZCBpbiBmb3IgdGhlIGtleXMsIHdoaWNoIHdpbGwgaG9sZCB0aGVcbiAqIHBsYWNlaG9sZGVyIGtleSBkZXNjcmlwdGlvbnMuIEZvciBleGFtcGxlLCB1c2luZyBgL3VzZXIvOmlkYCwgYGtleXNgIHdpbGxcbiAqIGNvbnRhaW4gYFt7IG5hbWU6ICdpZCcsIGRlbGltaXRlcjogJy8nLCBvcHRpb25hbDogZmFsc2UsIHJlcGVhdDogZmFsc2UgfV1gLlxuICpcbiAqIEBwYXJhbSAgeyhzdHJpbmd8UmVnRXhwfEFycmF5KX0gcGF0aFxuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSAgICAgICBrZXlzXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHBhdGhUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKTtcbiAgICBrZXlzID0gW107XG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICBpZiAocGF0aCBpbnN0YW5jZW9mIFJlZ0V4cCkge1xuICAgIHJldHVybiByZWdleHBUb1JlZ2V4cChwYXRoLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpKVxuICB9XG5cbiAgaWYgKGlzYXJyYXkocGF0aCkpIHtcbiAgICByZXR1cm4gYXJyYXlUb1JlZ2V4cCgvKiogQHR5cGUgeyFBcnJheX0gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxuICB9XG5cbiAgcmV0dXJuIHN0cmluZ1RvUmVnZXhwKC8qKiBAdHlwZSB7c3RyaW5nfSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXG59XG5wYXRoVG9SZWdleHBfMS5wYXJzZSA9IHBhcnNlXzE7XG5wYXRoVG9SZWdleHBfMS5jb21waWxlID0gY29tcGlsZV8xO1xucGF0aFRvUmVnZXhwXzEudG9rZW5zVG9GdW5jdGlvbiA9IHRva2Vuc1RvRnVuY3Rpb25fMTtcbnBhdGhUb1JlZ2V4cF8xLnRva2Vuc1RvUmVnRXhwID0gdG9rZW5zVG9SZWdFeHBfMTtcblxuLyogICovXG5cbi8vICRmbG93LWRpc2FibGUtbGluZVxudmFyIHJlZ2V4cENvbXBpbGVDYWNoZSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cbmZ1bmN0aW9uIGZpbGxQYXJhbXMgKFxuICBwYXRoLFxuICBwYXJhbXMsXG4gIHJvdXRlTXNnXG4pIHtcbiAgcGFyYW1zID0gcGFyYW1zIHx8IHt9O1xuICB0cnkge1xuICAgIHZhciBmaWxsZXIgPVxuICAgICAgcmVnZXhwQ29tcGlsZUNhY2hlW3BhdGhdIHx8XG4gICAgICAocmVnZXhwQ29tcGlsZUNhY2hlW3BhdGhdID0gcGF0aFRvUmVnZXhwXzEuY29tcGlsZShwYXRoKSk7XG5cbiAgICAvLyBGaXggIzI1MDUgcmVzb2x2aW5nIGFzdGVyaXNrIHJvdXRlcyB7IG5hbWU6ICdub3QtZm91bmQnLCBwYXJhbXM6IHsgcGF0aE1hdGNoOiAnL25vdC1mb3VuZCcgfX1cbiAgICBpZiAocGFyYW1zLnBhdGhNYXRjaCkgeyBwYXJhbXNbMF0gPSBwYXJhbXMucGF0aE1hdGNoOyB9XG5cbiAgICByZXR1cm4gZmlsbGVyKHBhcmFtcywgeyBwcmV0dHk6IHRydWUgfSlcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICB3YXJuKGZhbHNlLCAoXCJtaXNzaW5nIHBhcmFtIGZvciBcIiArIHJvdXRlTXNnICsgXCI6IFwiICsgKGUubWVzc2FnZSkpKTtcbiAgICB9XG4gICAgcmV0dXJuICcnXG4gIH0gZmluYWxseSB7XG4gICAgLy8gZGVsZXRlIHRoZSAwIGlmIGl0IHdhcyBhZGRlZFxuICAgIGRlbGV0ZSBwYXJhbXNbMF07XG4gIH1cbn1cblxuLyogICovXG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZUxvY2F0aW9uIChcbiAgcmF3LFxuICBjdXJyZW50LFxuICBhcHBlbmQsXG4gIHJvdXRlclxuKSB7XG4gIHZhciBuZXh0ID0gdHlwZW9mIHJhdyA9PT0gJ3N0cmluZycgPyB7IHBhdGg6IHJhdyB9IDogcmF3O1xuICAvLyBuYW1lZCB0YXJnZXRcbiAgaWYgKG5leHQuX25vcm1hbGl6ZWQpIHtcbiAgICByZXR1cm4gbmV4dFxuICB9IGVsc2UgaWYgKG5leHQubmFtZSkge1xuICAgIHJldHVybiBleHRlbmQoe30sIHJhdylcbiAgfVxuXG4gIC8vIHJlbGF0aXZlIHBhcmFtc1xuICBpZiAoIW5leHQucGF0aCAmJiBuZXh0LnBhcmFtcyAmJiBjdXJyZW50KSB7XG4gICAgbmV4dCA9IGV4dGVuZCh7fSwgbmV4dCk7XG4gICAgbmV4dC5fbm9ybWFsaXplZCA9IHRydWU7XG4gICAgdmFyIHBhcmFtcyA9IGV4dGVuZChleHRlbmQoe30sIGN1cnJlbnQucGFyYW1zKSwgbmV4dC5wYXJhbXMpO1xuICAgIGlmIChjdXJyZW50Lm5hbWUpIHtcbiAgICAgIG5leHQubmFtZSA9IGN1cnJlbnQubmFtZTtcbiAgICAgIG5leHQucGFyYW1zID0gcGFyYW1zO1xuICAgIH0gZWxzZSBpZiAoY3VycmVudC5tYXRjaGVkLmxlbmd0aCkge1xuICAgICAgdmFyIHJhd1BhdGggPSBjdXJyZW50Lm1hdGNoZWRbY3VycmVudC5tYXRjaGVkLmxlbmd0aCAtIDFdLnBhdGg7XG4gICAgICBuZXh0LnBhdGggPSBmaWxsUGFyYW1zKHJhd1BhdGgsIHBhcmFtcywgKFwicGF0aCBcIiArIChjdXJyZW50LnBhdGgpKSk7XG4gICAgfSBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICB3YXJuKGZhbHNlLCBcInJlbGF0aXZlIHBhcmFtcyBuYXZpZ2F0aW9uIHJlcXVpcmVzIGEgY3VycmVudCByb3V0ZS5cIik7XG4gICAgfVxuICAgIHJldHVybiBuZXh0XG4gIH1cblxuICB2YXIgcGFyc2VkUGF0aCA9IHBhcnNlUGF0aChuZXh0LnBhdGggfHwgJycpO1xuICB2YXIgYmFzZVBhdGggPSAoY3VycmVudCAmJiBjdXJyZW50LnBhdGgpIHx8ICcvJztcbiAgdmFyIHBhdGggPSBwYXJzZWRQYXRoLnBhdGhcbiAgICA/IHJlc29sdmVQYXRoKHBhcnNlZFBhdGgucGF0aCwgYmFzZVBhdGgsIGFwcGVuZCB8fCBuZXh0LmFwcGVuZClcbiAgICA6IGJhc2VQYXRoO1xuXG4gIHZhciBxdWVyeSA9IHJlc29sdmVRdWVyeShcbiAgICBwYXJzZWRQYXRoLnF1ZXJ5LFxuICAgIG5leHQucXVlcnksXG4gICAgcm91dGVyICYmIHJvdXRlci5vcHRpb25zLnBhcnNlUXVlcnlcbiAgKTtcblxuICB2YXIgaGFzaCA9IG5leHQuaGFzaCB8fCBwYXJzZWRQYXRoLmhhc2g7XG4gIGlmIChoYXNoICYmIGhhc2guY2hhckF0KDApICE9PSAnIycpIHtcbiAgICBoYXNoID0gXCIjXCIgKyBoYXNoO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBfbm9ybWFsaXplZDogdHJ1ZSxcbiAgICBwYXRoOiBwYXRoLFxuICAgIHF1ZXJ5OiBxdWVyeSxcbiAgICBoYXNoOiBoYXNoXG4gIH1cbn1cblxuLyogICovXG5cbi8vIHdvcmsgYXJvdW5kIHdlaXJkIGZsb3cgYnVnXG52YXIgdG9UeXBlcyA9IFtTdHJpbmcsIE9iamVjdF07XG52YXIgZXZlbnRUeXBlcyA9IFtTdHJpbmcsIEFycmF5XTtcblxudmFyIG5vb3AgPSBmdW5jdGlvbiAoKSB7fTtcblxudmFyIExpbmsgPSB7XG4gIG5hbWU6ICdSb3V0ZXJMaW5rJyxcbiAgcHJvcHM6IHtcbiAgICB0bzoge1xuICAgICAgdHlwZTogdG9UeXBlcyxcbiAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgfSxcbiAgICB0YWc6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICdhJ1xuICAgIH0sXG4gICAgZXhhY3Q6IEJvb2xlYW4sXG4gICAgYXBwZW5kOiBCb29sZWFuLFxuICAgIHJlcGxhY2U6IEJvb2xlYW4sXG4gICAgYWN0aXZlQ2xhc3M6IFN0cmluZyxcbiAgICBleGFjdEFjdGl2ZUNsYXNzOiBTdHJpbmcsXG4gICAgZXZlbnQ6IHtcbiAgICAgIHR5cGU6IGV2ZW50VHlwZXMsXG4gICAgICBkZWZhdWx0OiAnY2xpY2snXG4gICAgfVxuICB9LFxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlciAoaCkge1xuICAgIHZhciB0aGlzJDEgPSB0aGlzO1xuXG4gICAgdmFyIHJvdXRlciA9IHRoaXMuJHJvdXRlcjtcbiAgICB2YXIgY3VycmVudCA9IHRoaXMuJHJvdXRlO1xuICAgIHZhciByZWYgPSByb3V0ZXIucmVzb2x2ZShcbiAgICAgIHRoaXMudG8sXG4gICAgICBjdXJyZW50LFxuICAgICAgdGhpcy5hcHBlbmRcbiAgICApO1xuICAgIHZhciBsb2NhdGlvbiA9IHJlZi5sb2NhdGlvbjtcbiAgICB2YXIgcm91dGUgPSByZWYucm91dGU7XG4gICAgdmFyIGhyZWYgPSByZWYuaHJlZjtcblxuICAgIHZhciBjbGFzc2VzID0ge307XG4gICAgdmFyIGdsb2JhbEFjdGl2ZUNsYXNzID0gcm91dGVyLm9wdGlvbnMubGlua0FjdGl2ZUNsYXNzO1xuICAgIHZhciBnbG9iYWxFeGFjdEFjdGl2ZUNsYXNzID0gcm91dGVyLm9wdGlvbnMubGlua0V4YWN0QWN0aXZlQ2xhc3M7XG4gICAgLy8gU3VwcG9ydCBnbG9iYWwgZW1wdHkgYWN0aXZlIGNsYXNzXG4gICAgdmFyIGFjdGl2ZUNsYXNzRmFsbGJhY2sgPVxuICAgICAgZ2xvYmFsQWN0aXZlQ2xhc3MgPT0gbnVsbCA/ICdyb3V0ZXItbGluay1hY3RpdmUnIDogZ2xvYmFsQWN0aXZlQ2xhc3M7XG4gICAgdmFyIGV4YWN0QWN0aXZlQ2xhc3NGYWxsYmFjayA9XG4gICAgICBnbG9iYWxFeGFjdEFjdGl2ZUNsYXNzID09IG51bGxcbiAgICAgICAgPyAncm91dGVyLWxpbmstZXhhY3QtYWN0aXZlJ1xuICAgICAgICA6IGdsb2JhbEV4YWN0QWN0aXZlQ2xhc3M7XG4gICAgdmFyIGFjdGl2ZUNsYXNzID1cbiAgICAgIHRoaXMuYWN0aXZlQ2xhc3MgPT0gbnVsbCA/IGFjdGl2ZUNsYXNzRmFsbGJhY2sgOiB0aGlzLmFjdGl2ZUNsYXNzO1xuICAgIHZhciBleGFjdEFjdGl2ZUNsYXNzID1cbiAgICAgIHRoaXMuZXhhY3RBY3RpdmVDbGFzcyA9PSBudWxsXG4gICAgICAgID8gZXhhY3RBY3RpdmVDbGFzc0ZhbGxiYWNrXG4gICAgICAgIDogdGhpcy5leGFjdEFjdGl2ZUNsYXNzO1xuXG4gICAgdmFyIGNvbXBhcmVUYXJnZXQgPSByb3V0ZS5yZWRpcmVjdGVkRnJvbVxuICAgICAgPyBjcmVhdGVSb3V0ZShudWxsLCBub3JtYWxpemVMb2NhdGlvbihyb3V0ZS5yZWRpcmVjdGVkRnJvbSksIG51bGwsIHJvdXRlcilcbiAgICAgIDogcm91dGU7XG5cbiAgICBjbGFzc2VzW2V4YWN0QWN0aXZlQ2xhc3NdID0gaXNTYW1lUm91dGUoY3VycmVudCwgY29tcGFyZVRhcmdldCk7XG4gICAgY2xhc3Nlc1thY3RpdmVDbGFzc10gPSB0aGlzLmV4YWN0XG4gICAgICA/IGNsYXNzZXNbZXhhY3RBY3RpdmVDbGFzc11cbiAgICAgIDogaXNJbmNsdWRlZFJvdXRlKGN1cnJlbnQsIGNvbXBhcmVUYXJnZXQpO1xuXG4gICAgdmFyIGhhbmRsZXIgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgaWYgKGd1YXJkRXZlbnQoZSkpIHtcbiAgICAgICAgaWYgKHRoaXMkMS5yZXBsYWNlKSB7XG4gICAgICAgICAgcm91dGVyLnJlcGxhY2UobG9jYXRpb24sIG5vb3ApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJvdXRlci5wdXNoKGxvY2F0aW9uLCBub29wKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICB2YXIgb24gPSB7IGNsaWNrOiBndWFyZEV2ZW50IH07XG4gICAgaWYgKEFycmF5LmlzQXJyYXkodGhpcy5ldmVudCkpIHtcbiAgICAgIHRoaXMuZXZlbnQuZm9yRWFjaChmdW5jdGlvbiAoZSkge1xuICAgICAgICBvbltlXSA9IGhhbmRsZXI7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgb25bdGhpcy5ldmVudF0gPSBoYW5kbGVyO1xuICAgIH1cblxuICAgIHZhciBkYXRhID0geyBjbGFzczogY2xhc3NlcyB9O1xuXG4gICAgdmFyIHNjb3BlZFNsb3QgPVxuICAgICAgIXRoaXMuJHNjb3BlZFNsb3RzLiRoYXNOb3JtYWwgJiZcbiAgICAgIHRoaXMuJHNjb3BlZFNsb3RzLmRlZmF1bHQgJiZcbiAgICAgIHRoaXMuJHNjb3BlZFNsb3RzLmRlZmF1bHQoe1xuICAgICAgICBocmVmOiBocmVmLFxuICAgICAgICByb3V0ZTogcm91dGUsXG4gICAgICAgIG5hdmlnYXRlOiBoYW5kbGVyLFxuICAgICAgICBpc0FjdGl2ZTogY2xhc3Nlc1thY3RpdmVDbGFzc10sXG4gICAgICAgIGlzRXhhY3RBY3RpdmU6IGNsYXNzZXNbZXhhY3RBY3RpdmVDbGFzc11cbiAgICAgIH0pO1xuXG4gICAgaWYgKHNjb3BlZFNsb3QpIHtcbiAgICAgIGlmIChzY29wZWRTbG90Lmxlbmd0aCA9PT0gMSkge1xuICAgICAgICByZXR1cm4gc2NvcGVkU2xvdFswXVxuICAgICAgfSBlbHNlIGlmIChzY29wZWRTbG90Lmxlbmd0aCA+IDEgfHwgIXNjb3BlZFNsb3QubGVuZ3RoKSB7XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgd2FybihcbiAgICAgICAgICAgIGZhbHNlLFxuICAgICAgICAgICAgKFwiUm91dGVyTGluayB3aXRoIHRvPVxcXCJcIiArICh0aGlzLnByb3BzLnRvKSArIFwiXFxcIiBpcyB0cnlpbmcgdG8gdXNlIGEgc2NvcGVkIHNsb3QgYnV0IGl0IGRpZG4ndCBwcm92aWRlIGV4YWN0bHkgb25lIGNoaWxkLlwiKVxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNjb3BlZFNsb3QubGVuZ3RoID09PSAwID8gaCgpIDogaCgnc3BhbicsIHt9LCBzY29wZWRTbG90KVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0aGlzLnRhZyA9PT0gJ2EnKSB7XG4gICAgICBkYXRhLm9uID0gb247XG4gICAgICBkYXRhLmF0dHJzID0geyBocmVmOiBocmVmIH07XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGZpbmQgdGhlIGZpcnN0IDxhPiBjaGlsZCBhbmQgYXBwbHkgbGlzdGVuZXIgYW5kIGhyZWZcbiAgICAgIHZhciBhID0gZmluZEFuY2hvcih0aGlzLiRzbG90cy5kZWZhdWx0KTtcbiAgICAgIGlmIChhKSB7XG4gICAgICAgIC8vIGluIGNhc2UgdGhlIDxhPiBpcyBhIHN0YXRpYyBub2RlXG4gICAgICAgIGEuaXNTdGF0aWMgPSBmYWxzZTtcbiAgICAgICAgdmFyIGFEYXRhID0gKGEuZGF0YSA9IGV4dGVuZCh7fSwgYS5kYXRhKSk7XG4gICAgICAgIGFEYXRhLm9uID0gb247XG4gICAgICAgIHZhciBhQXR0cnMgPSAoYS5kYXRhLmF0dHJzID0gZXh0ZW5kKHt9LCBhLmRhdGEuYXR0cnMpKTtcbiAgICAgICAgYUF0dHJzLmhyZWYgPSBocmVmO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gZG9lc24ndCBoYXZlIDxhPiBjaGlsZCwgYXBwbHkgbGlzdGVuZXIgdG8gc2VsZlxuICAgICAgICBkYXRhLm9uID0gb247XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGgodGhpcy50YWcsIGRhdGEsIHRoaXMuJHNsb3RzLmRlZmF1bHQpXG4gIH1cbn1cblxuZnVuY3Rpb24gZ3VhcmRFdmVudCAoZSkge1xuICAvLyBkb24ndCByZWRpcmVjdCB3aXRoIGNvbnRyb2wga2V5c1xuICBpZiAoZS5tZXRhS2V5IHx8IGUuYWx0S2V5IHx8IGUuY3RybEtleSB8fCBlLnNoaWZ0S2V5KSB7IHJldHVybiB9XG4gIC8vIGRvbid0IHJlZGlyZWN0IHdoZW4gcHJldmVudERlZmF1bHQgY2FsbGVkXG4gIGlmIChlLmRlZmF1bHRQcmV2ZW50ZWQpIHsgcmV0dXJuIH1cbiAgLy8gZG9uJ3QgcmVkaXJlY3Qgb24gcmlnaHQgY2xpY2tcbiAgaWYgKGUuYnV0dG9uICE9PSB1bmRlZmluZWQgJiYgZS5idXR0b24gIT09IDApIHsgcmV0dXJuIH1cbiAgLy8gZG9uJ3QgcmVkaXJlY3QgaWYgYHRhcmdldD1cIl9ibGFua1wiYFxuICBpZiAoZS5jdXJyZW50VGFyZ2V0ICYmIGUuY3VycmVudFRhcmdldC5nZXRBdHRyaWJ1dGUpIHtcbiAgICB2YXIgdGFyZ2V0ID0gZS5jdXJyZW50VGFyZ2V0LmdldEF0dHJpYnV0ZSgndGFyZ2V0Jyk7XG4gICAgaWYgKC9cXGJfYmxhbmtcXGIvaS50ZXN0KHRhcmdldCkpIHsgcmV0dXJuIH1cbiAgfVxuICAvLyB0aGlzIG1heSBiZSBhIFdlZXggZXZlbnQgd2hpY2ggZG9lc24ndCBoYXZlIHRoaXMgbWV0aG9kXG4gIGlmIChlLnByZXZlbnREZWZhdWx0KSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICB9XG4gIHJldHVybiB0cnVlXG59XG5cbmZ1bmN0aW9uIGZpbmRBbmNob3IgKGNoaWxkcmVuKSB7XG4gIGlmIChjaGlsZHJlbikge1xuICAgIHZhciBjaGlsZDtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjaGlsZCA9IGNoaWxkcmVuW2ldO1xuICAgICAgaWYgKGNoaWxkLnRhZyA9PT0gJ2EnKSB7XG4gICAgICAgIHJldHVybiBjaGlsZFxuICAgICAgfVxuICAgICAgaWYgKGNoaWxkLmNoaWxkcmVuICYmIChjaGlsZCA9IGZpbmRBbmNob3IoY2hpbGQuY2hpbGRyZW4pKSkge1xuICAgICAgICByZXR1cm4gY2hpbGRcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxudmFyIF9WdWU7XG5cbmZ1bmN0aW9uIGluc3RhbGwgKFZ1ZSkge1xuICBpZiAoaW5zdGFsbC5pbnN0YWxsZWQgJiYgX1Z1ZSA9PT0gVnVlKSB7IHJldHVybiB9XG4gIGluc3RhbGwuaW5zdGFsbGVkID0gdHJ1ZTtcblxuICBfVnVlID0gVnVlO1xuXG4gIHZhciBpc0RlZiA9IGZ1bmN0aW9uICh2KSB7IHJldHVybiB2ICE9PSB1bmRlZmluZWQ7IH07XG5cbiAgdmFyIHJlZ2lzdGVySW5zdGFuY2UgPSBmdW5jdGlvbiAodm0sIGNhbGxWYWwpIHtcbiAgICB2YXIgaSA9IHZtLiRvcHRpb25zLl9wYXJlbnRWbm9kZTtcbiAgICBpZiAoaXNEZWYoaSkgJiYgaXNEZWYoaSA9IGkuZGF0YSkgJiYgaXNEZWYoaSA9IGkucmVnaXN0ZXJSb3V0ZUluc3RhbmNlKSkge1xuICAgICAgaSh2bSwgY2FsbFZhbCk7XG4gICAgfVxuICB9O1xuXG4gIFZ1ZS5taXhpbih7XG4gICAgYmVmb3JlQ3JlYXRlOiBmdW5jdGlvbiBiZWZvcmVDcmVhdGUgKCkge1xuICAgICAgaWYgKGlzRGVmKHRoaXMuJG9wdGlvbnMucm91dGVyKSkge1xuICAgICAgICB0aGlzLl9yb3V0ZXJSb290ID0gdGhpcztcbiAgICAgICAgdGhpcy5fcm91dGVyID0gdGhpcy4kb3B0aW9ucy5yb3V0ZXI7XG4gICAgICAgIHRoaXMuX3JvdXRlci5pbml0KHRoaXMpO1xuICAgICAgICBWdWUudXRpbC5kZWZpbmVSZWFjdGl2ZSh0aGlzLCAnX3JvdXRlJywgdGhpcy5fcm91dGVyLmhpc3RvcnkuY3VycmVudCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl9yb3V0ZXJSb290ID0gKHRoaXMuJHBhcmVudCAmJiB0aGlzLiRwYXJlbnQuX3JvdXRlclJvb3QpIHx8IHRoaXM7XG4gICAgICB9XG4gICAgICByZWdpc3Rlckluc3RhbmNlKHRoaXMsIHRoaXMpO1xuICAgIH0sXG4gICAgZGVzdHJveWVkOiBmdW5jdGlvbiBkZXN0cm95ZWQgKCkge1xuICAgICAgcmVnaXN0ZXJJbnN0YW5jZSh0aGlzKTtcbiAgICB9XG4gIH0pO1xuXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShWdWUucHJvdG90eXBlLCAnJHJvdXRlcicsIHtcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCAoKSB7IHJldHVybiB0aGlzLl9yb3V0ZXJSb290Ll9yb3V0ZXIgfVxuICB9KTtcblxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoVnVlLnByb3RvdHlwZSwgJyRyb3V0ZScsIHtcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCAoKSB7IHJldHVybiB0aGlzLl9yb3V0ZXJSb290Ll9yb3V0ZSB9XG4gIH0pO1xuXG4gIFZ1ZS5jb21wb25lbnQoJ1JvdXRlclZpZXcnLCBWaWV3KTtcbiAgVnVlLmNvbXBvbmVudCgnUm91dGVyTGluaycsIExpbmspO1xuXG4gIHZhciBzdHJhdHMgPSBWdWUuY29uZmlnLm9wdGlvbk1lcmdlU3RyYXRlZ2llcztcbiAgLy8gdXNlIHRoZSBzYW1lIGhvb2sgbWVyZ2luZyBzdHJhdGVneSBmb3Igcm91dGUgaG9va3NcbiAgc3RyYXRzLmJlZm9yZVJvdXRlRW50ZXIgPSBzdHJhdHMuYmVmb3JlUm91dGVMZWF2ZSA9IHN0cmF0cy5iZWZvcmVSb3V0ZVVwZGF0ZSA9IHN0cmF0cy5jcmVhdGVkO1xufVxuXG4vKiAgKi9cblxudmFyIGluQnJvd3NlciA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnO1xuXG4vKiAgKi9cblxuZnVuY3Rpb24gY3JlYXRlUm91dGVNYXAgKFxuICByb3V0ZXMsXG4gIG9sZFBhdGhMaXN0LFxuICBvbGRQYXRoTWFwLFxuICBvbGROYW1lTWFwXG4pIHtcbiAgLy8gdGhlIHBhdGggbGlzdCBpcyB1c2VkIHRvIGNvbnRyb2wgcGF0aCBtYXRjaGluZyBwcmlvcml0eVxuICB2YXIgcGF0aExpc3QgPSBvbGRQYXRoTGlzdCB8fCBbXTtcbiAgLy8gJGZsb3ctZGlzYWJsZS1saW5lXG4gIHZhciBwYXRoTWFwID0gb2xkUGF0aE1hcCB8fCBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAvLyAkZmxvdy1kaXNhYmxlLWxpbmVcbiAgdmFyIG5hbWVNYXAgPSBvbGROYW1lTWFwIHx8IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cbiAgcm91dGVzLmZvckVhY2goZnVuY3Rpb24gKHJvdXRlKSB7XG4gICAgYWRkUm91dGVSZWNvcmQocGF0aExpc3QsIHBhdGhNYXAsIG5hbWVNYXAsIHJvdXRlKTtcbiAgfSk7XG5cbiAgLy8gZW5zdXJlIHdpbGRjYXJkIHJvdXRlcyBhcmUgYWx3YXlzIGF0IHRoZSBlbmRcbiAgZm9yICh2YXIgaSA9IDAsIGwgPSBwYXRoTGlzdC5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICBpZiAocGF0aExpc3RbaV0gPT09ICcqJykge1xuICAgICAgcGF0aExpc3QucHVzaChwYXRoTGlzdC5zcGxpY2UoaSwgMSlbMF0pO1xuICAgICAgbC0tO1xuICAgICAgaS0tO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcGF0aExpc3Q6IHBhdGhMaXN0LFxuICAgIHBhdGhNYXA6IHBhdGhNYXAsXG4gICAgbmFtZU1hcDogbmFtZU1hcFxuICB9XG59XG5cbmZ1bmN0aW9uIGFkZFJvdXRlUmVjb3JkIChcbiAgcGF0aExpc3QsXG4gIHBhdGhNYXAsXG4gIG5hbWVNYXAsXG4gIHJvdXRlLFxuICBwYXJlbnQsXG4gIG1hdGNoQXNcbikge1xuICB2YXIgcGF0aCA9IHJvdXRlLnBhdGg7XG4gIHZhciBuYW1lID0gcm91dGUubmFtZTtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBhc3NlcnQocGF0aCAhPSBudWxsLCBcIlxcXCJwYXRoXFxcIiBpcyByZXF1aXJlZCBpbiBhIHJvdXRlIGNvbmZpZ3VyYXRpb24uXCIpO1xuICAgIGFzc2VydChcbiAgICAgIHR5cGVvZiByb3V0ZS5jb21wb25lbnQgIT09ICdzdHJpbmcnLFxuICAgICAgXCJyb3V0ZSBjb25maWcgXFxcImNvbXBvbmVudFxcXCIgZm9yIHBhdGg6IFwiICsgKFN0cmluZyhcbiAgICAgICAgcGF0aCB8fCBuYW1lXG4gICAgICApKSArIFwiIGNhbm5vdCBiZSBhIFwiICsgXCJzdHJpbmcgaWQuIFVzZSBhbiBhY3R1YWwgY29tcG9uZW50IGluc3RlYWQuXCJcbiAgICApO1xuICB9XG5cbiAgdmFyIHBhdGhUb1JlZ2V4cE9wdGlvbnMgPVxuICAgIHJvdXRlLnBhdGhUb1JlZ2V4cE9wdGlvbnMgfHwge307XG4gIHZhciBub3JtYWxpemVkUGF0aCA9IG5vcm1hbGl6ZVBhdGgocGF0aCwgcGFyZW50LCBwYXRoVG9SZWdleHBPcHRpb25zLnN0cmljdCk7XG5cbiAgaWYgKHR5cGVvZiByb3V0ZS5jYXNlU2Vuc2l0aXZlID09PSAnYm9vbGVhbicpIHtcbiAgICBwYXRoVG9SZWdleHBPcHRpb25zLnNlbnNpdGl2ZSA9IHJvdXRlLmNhc2VTZW5zaXRpdmU7XG4gIH1cblxuICB2YXIgcmVjb3JkID0ge1xuICAgIHBhdGg6IG5vcm1hbGl6ZWRQYXRoLFxuICAgIHJlZ2V4OiBjb21waWxlUm91dGVSZWdleChub3JtYWxpemVkUGF0aCwgcGF0aFRvUmVnZXhwT3B0aW9ucyksXG4gICAgY29tcG9uZW50czogcm91dGUuY29tcG9uZW50cyB8fCB7IGRlZmF1bHQ6IHJvdXRlLmNvbXBvbmVudCB9LFxuICAgIGluc3RhbmNlczoge30sXG4gICAgbmFtZTogbmFtZSxcbiAgICBwYXJlbnQ6IHBhcmVudCxcbiAgICBtYXRjaEFzOiBtYXRjaEFzLFxuICAgIHJlZGlyZWN0OiByb3V0ZS5yZWRpcmVjdCxcbiAgICBiZWZvcmVFbnRlcjogcm91dGUuYmVmb3JlRW50ZXIsXG4gICAgbWV0YTogcm91dGUubWV0YSB8fCB7fSxcbiAgICBwcm9wczpcbiAgICAgIHJvdXRlLnByb3BzID09IG51bGxcbiAgICAgICAgPyB7fVxuICAgICAgICA6IHJvdXRlLmNvbXBvbmVudHNcbiAgICAgICAgICA/IHJvdXRlLnByb3BzXG4gICAgICAgICAgOiB7IGRlZmF1bHQ6IHJvdXRlLnByb3BzIH1cbiAgfTtcblxuICBpZiAocm91dGUuY2hpbGRyZW4pIHtcbiAgICAvLyBXYXJuIGlmIHJvdXRlIGlzIG5hbWVkLCBkb2VzIG5vdCByZWRpcmVjdCBhbmQgaGFzIGEgZGVmYXVsdCBjaGlsZCByb3V0ZS5cbiAgICAvLyBJZiB1c2VycyBuYXZpZ2F0ZSB0byB0aGlzIHJvdXRlIGJ5IG5hbWUsIHRoZSBkZWZhdWx0IGNoaWxkIHdpbGxcbiAgICAvLyBub3QgYmUgcmVuZGVyZWQgKEdIIElzc3VlICM2MjkpXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmIChcbiAgICAgICAgcm91dGUubmFtZSAmJlxuICAgICAgICAhcm91dGUucmVkaXJlY3QgJiZcbiAgICAgICAgcm91dGUuY2hpbGRyZW4uc29tZShmdW5jdGlvbiAoY2hpbGQpIHsgcmV0dXJuIC9eXFwvPyQvLnRlc3QoY2hpbGQucGF0aCk7IH0pXG4gICAgICApIHtcbiAgICAgICAgd2FybihcbiAgICAgICAgICBmYWxzZSxcbiAgICAgICAgICBcIk5hbWVkIFJvdXRlICdcIiArIChyb3V0ZS5uYW1lKSArIFwiJyBoYXMgYSBkZWZhdWx0IGNoaWxkIHJvdXRlLiBcIiArXG4gICAgICAgICAgICBcIldoZW4gbmF2aWdhdGluZyB0byB0aGlzIG5hbWVkIHJvdXRlICg6dG89XFxcIntuYW1lOiAnXCIgKyAocm91dGUubmFtZSkgKyBcIidcXFwiKSwgXCIgK1xuICAgICAgICAgICAgXCJ0aGUgZGVmYXVsdCBjaGlsZCByb3V0ZSB3aWxsIG5vdCBiZSByZW5kZXJlZC4gUmVtb3ZlIHRoZSBuYW1lIGZyb20gXCIgK1xuICAgICAgICAgICAgXCJ0aGlzIHJvdXRlIGFuZCB1c2UgdGhlIG5hbWUgb2YgdGhlIGRlZmF1bHQgY2hpbGQgcm91dGUgZm9yIG5hbWVkIFwiICtcbiAgICAgICAgICAgIFwibGlua3MgaW5zdGVhZC5cIlxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cbiAgICByb3V0ZS5jaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uIChjaGlsZCkge1xuICAgICAgdmFyIGNoaWxkTWF0Y2hBcyA9IG1hdGNoQXNcbiAgICAgICAgPyBjbGVhblBhdGgoKG1hdGNoQXMgKyBcIi9cIiArIChjaGlsZC5wYXRoKSkpXG4gICAgICAgIDogdW5kZWZpbmVkO1xuICAgICAgYWRkUm91dGVSZWNvcmQocGF0aExpc3QsIHBhdGhNYXAsIG5hbWVNYXAsIGNoaWxkLCByZWNvcmQsIGNoaWxkTWF0Y2hBcyk7XG4gICAgfSk7XG4gIH1cblxuICBpZiAoIXBhdGhNYXBbcmVjb3JkLnBhdGhdKSB7XG4gICAgcGF0aExpc3QucHVzaChyZWNvcmQucGF0aCk7XG4gICAgcGF0aE1hcFtyZWNvcmQucGF0aF0gPSByZWNvcmQ7XG4gIH1cblxuICBpZiAocm91dGUuYWxpYXMgIT09IHVuZGVmaW5lZCkge1xuICAgIHZhciBhbGlhc2VzID0gQXJyYXkuaXNBcnJheShyb3V0ZS5hbGlhcykgPyByb3V0ZS5hbGlhcyA6IFtyb3V0ZS5hbGlhc107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhbGlhc2VzLmxlbmd0aDsgKytpKSB7XG4gICAgICB2YXIgYWxpYXMgPSBhbGlhc2VzW2ldO1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgYWxpYXMgPT09IHBhdGgpIHtcbiAgICAgICAgd2FybihcbiAgICAgICAgICBmYWxzZSxcbiAgICAgICAgICAoXCJGb3VuZCBhbiBhbGlhcyB3aXRoIHRoZSBzYW1lIHZhbHVlIGFzIHRoZSBwYXRoOiBcXFwiXCIgKyBwYXRoICsgXCJcXFwiLiBZb3UgaGF2ZSB0byByZW1vdmUgdGhhdCBhbGlhcy4gSXQgd2lsbCBiZSBpZ25vcmVkIGluIGRldmVsb3BtZW50LlwiKVxuICAgICAgICApO1xuICAgICAgICAvLyBza2lwIGluIGRldiB0byBtYWtlIGl0IHdvcmtcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgdmFyIGFsaWFzUm91dGUgPSB7XG4gICAgICAgIHBhdGg6IGFsaWFzLFxuICAgICAgICBjaGlsZHJlbjogcm91dGUuY2hpbGRyZW5cbiAgICAgIH07XG4gICAgICBhZGRSb3V0ZVJlY29yZChcbiAgICAgICAgcGF0aExpc3QsXG4gICAgICAgIHBhdGhNYXAsXG4gICAgICAgIG5hbWVNYXAsXG4gICAgICAgIGFsaWFzUm91dGUsXG4gICAgICAgIHBhcmVudCxcbiAgICAgICAgcmVjb3JkLnBhdGggfHwgJy8nIC8vIG1hdGNoQXNcbiAgICAgICk7XG4gICAgfVxuICB9XG5cbiAgaWYgKG5hbWUpIHtcbiAgICBpZiAoIW5hbWVNYXBbbmFtZV0pIHtcbiAgICAgIG5hbWVNYXBbbmFtZV0gPSByZWNvcmQ7XG4gICAgfSBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICFtYXRjaEFzKSB7XG4gICAgICB3YXJuKFxuICAgICAgICBmYWxzZSxcbiAgICAgICAgXCJEdXBsaWNhdGUgbmFtZWQgcm91dGVzIGRlZmluaXRpb246IFwiICtcbiAgICAgICAgICBcInsgbmFtZTogXFxcIlwiICsgbmFtZSArIFwiXFxcIiwgcGF0aDogXFxcIlwiICsgKHJlY29yZC5wYXRoKSArIFwiXFxcIiB9XCJcbiAgICAgICk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGNvbXBpbGVSb3V0ZVJlZ2V4IChcbiAgcGF0aCxcbiAgcGF0aFRvUmVnZXhwT3B0aW9uc1xuKSB7XG4gIHZhciByZWdleCA9IHBhdGhUb1JlZ2V4cF8xKHBhdGgsIFtdLCBwYXRoVG9SZWdleHBPcHRpb25zKTtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICB2YXIga2V5cyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgcmVnZXgua2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIHdhcm4oXG4gICAgICAgICFrZXlzW2tleS5uYW1lXSxcbiAgICAgICAgKFwiRHVwbGljYXRlIHBhcmFtIGtleXMgaW4gcm91dGUgd2l0aCBwYXRoOiBcXFwiXCIgKyBwYXRoICsgXCJcXFwiXCIpXG4gICAgICApO1xuICAgICAga2V5c1trZXkubmFtZV0gPSB0cnVlO1xuICAgIH0pO1xuICB9XG4gIHJldHVybiByZWdleFxufVxuXG5mdW5jdGlvbiBub3JtYWxpemVQYXRoIChcbiAgcGF0aCxcbiAgcGFyZW50LFxuICBzdHJpY3Rcbikge1xuICBpZiAoIXN0cmljdCkgeyBwYXRoID0gcGF0aC5yZXBsYWNlKC9cXC8kLywgJycpOyB9XG4gIGlmIChwYXRoWzBdID09PSAnLycpIHsgcmV0dXJuIHBhdGggfVxuICBpZiAocGFyZW50ID09IG51bGwpIHsgcmV0dXJuIHBhdGggfVxuICByZXR1cm4gY2xlYW5QYXRoKCgocGFyZW50LnBhdGgpICsgXCIvXCIgKyBwYXRoKSlcbn1cblxuLyogICovXG5cblxuXG5mdW5jdGlvbiBjcmVhdGVNYXRjaGVyIChcbiAgcm91dGVzLFxuICByb3V0ZXJcbikge1xuICB2YXIgcmVmID0gY3JlYXRlUm91dGVNYXAocm91dGVzKTtcbiAgdmFyIHBhdGhMaXN0ID0gcmVmLnBhdGhMaXN0O1xuICB2YXIgcGF0aE1hcCA9IHJlZi5wYXRoTWFwO1xuICB2YXIgbmFtZU1hcCA9IHJlZi5uYW1lTWFwO1xuXG4gIGZ1bmN0aW9uIGFkZFJvdXRlcyAocm91dGVzKSB7XG4gICAgY3JlYXRlUm91dGVNYXAocm91dGVzLCBwYXRoTGlzdCwgcGF0aE1hcCwgbmFtZU1hcCk7XG4gIH1cblxuICBmdW5jdGlvbiBtYXRjaCAoXG4gICAgcmF3LFxuICAgIGN1cnJlbnRSb3V0ZSxcbiAgICByZWRpcmVjdGVkRnJvbVxuICApIHtcbiAgICB2YXIgbG9jYXRpb24gPSBub3JtYWxpemVMb2NhdGlvbihyYXcsIGN1cnJlbnRSb3V0ZSwgZmFsc2UsIHJvdXRlcik7XG4gICAgdmFyIG5hbWUgPSBsb2NhdGlvbi5uYW1lO1xuXG4gICAgaWYgKG5hbWUpIHtcbiAgICAgIHZhciByZWNvcmQgPSBuYW1lTWFwW25hbWVdO1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgd2FybihyZWNvcmQsIChcIlJvdXRlIHdpdGggbmFtZSAnXCIgKyBuYW1lICsgXCInIGRvZXMgbm90IGV4aXN0XCIpKTtcbiAgICAgIH1cbiAgICAgIGlmICghcmVjb3JkKSB7IHJldHVybiBfY3JlYXRlUm91dGUobnVsbCwgbG9jYXRpb24pIH1cbiAgICAgIHZhciBwYXJhbU5hbWVzID0gcmVjb3JkLnJlZ2V4LmtleXNcbiAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoa2V5KSB7IHJldHVybiAha2V5Lm9wdGlvbmFsOyB9KVxuICAgICAgICAubWFwKGZ1bmN0aW9uIChrZXkpIHsgcmV0dXJuIGtleS5uYW1lOyB9KTtcblxuICAgICAgaWYgKHR5cGVvZiBsb2NhdGlvbi5wYXJhbXMgIT09ICdvYmplY3QnKSB7XG4gICAgICAgIGxvY2F0aW9uLnBhcmFtcyA9IHt9O1xuICAgICAgfVxuXG4gICAgICBpZiAoY3VycmVudFJvdXRlICYmIHR5cGVvZiBjdXJyZW50Um91dGUucGFyYW1zID09PSAnb2JqZWN0Jykge1xuICAgICAgICBmb3IgKHZhciBrZXkgaW4gY3VycmVudFJvdXRlLnBhcmFtcykge1xuICAgICAgICAgIGlmICghKGtleSBpbiBsb2NhdGlvbi5wYXJhbXMpICYmIHBhcmFtTmFtZXMuaW5kZXhPZihrZXkpID4gLTEpIHtcbiAgICAgICAgICAgIGxvY2F0aW9uLnBhcmFtc1trZXldID0gY3VycmVudFJvdXRlLnBhcmFtc1trZXldO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsb2NhdGlvbi5wYXRoID0gZmlsbFBhcmFtcyhyZWNvcmQucGF0aCwgbG9jYXRpb24ucGFyYW1zLCAoXCJuYW1lZCByb3V0ZSBcXFwiXCIgKyBuYW1lICsgXCJcXFwiXCIpKTtcbiAgICAgIHJldHVybiBfY3JlYXRlUm91dGUocmVjb3JkLCBsb2NhdGlvbiwgcmVkaXJlY3RlZEZyb20pXG4gICAgfSBlbHNlIGlmIChsb2NhdGlvbi5wYXRoKSB7XG4gICAgICBsb2NhdGlvbi5wYXJhbXMgPSB7fTtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcGF0aExpc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIHBhdGggPSBwYXRoTGlzdFtpXTtcbiAgICAgICAgdmFyIHJlY29yZCQxID0gcGF0aE1hcFtwYXRoXTtcbiAgICAgICAgaWYgKG1hdGNoUm91dGUocmVjb3JkJDEucmVnZXgsIGxvY2F0aW9uLnBhdGgsIGxvY2F0aW9uLnBhcmFtcykpIHtcbiAgICAgICAgICByZXR1cm4gX2NyZWF0ZVJvdXRlKHJlY29yZCQxLCBsb2NhdGlvbiwgcmVkaXJlY3RlZEZyb20pXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgLy8gbm8gbWF0Y2hcbiAgICByZXR1cm4gX2NyZWF0ZVJvdXRlKG51bGwsIGxvY2F0aW9uKVxuICB9XG5cbiAgZnVuY3Rpb24gcmVkaXJlY3QgKFxuICAgIHJlY29yZCxcbiAgICBsb2NhdGlvblxuICApIHtcbiAgICB2YXIgb3JpZ2luYWxSZWRpcmVjdCA9IHJlY29yZC5yZWRpcmVjdDtcbiAgICB2YXIgcmVkaXJlY3QgPSB0eXBlb2Ygb3JpZ2luYWxSZWRpcmVjdCA9PT0gJ2Z1bmN0aW9uJ1xuICAgICAgPyBvcmlnaW5hbFJlZGlyZWN0KGNyZWF0ZVJvdXRlKHJlY29yZCwgbG9jYXRpb24sIG51bGwsIHJvdXRlcikpXG4gICAgICA6IG9yaWdpbmFsUmVkaXJlY3Q7XG5cbiAgICBpZiAodHlwZW9mIHJlZGlyZWN0ID09PSAnc3RyaW5nJykge1xuICAgICAgcmVkaXJlY3QgPSB7IHBhdGg6IHJlZGlyZWN0IH07XG4gICAgfVxuXG4gICAgaWYgKCFyZWRpcmVjdCB8fCB0eXBlb2YgcmVkaXJlY3QgIT09ICdvYmplY3QnKSB7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICB3YXJuKFxuICAgICAgICAgIGZhbHNlLCAoXCJpbnZhbGlkIHJlZGlyZWN0IG9wdGlvbjogXCIgKyAoSlNPTi5zdHJpbmdpZnkocmVkaXJlY3QpKSlcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBfY3JlYXRlUm91dGUobnVsbCwgbG9jYXRpb24pXG4gICAgfVxuXG4gICAgdmFyIHJlID0gcmVkaXJlY3Q7XG4gICAgdmFyIG5hbWUgPSByZS5uYW1lO1xuICAgIHZhciBwYXRoID0gcmUucGF0aDtcbiAgICB2YXIgcXVlcnkgPSBsb2NhdGlvbi5xdWVyeTtcbiAgICB2YXIgaGFzaCA9IGxvY2F0aW9uLmhhc2g7XG4gICAgdmFyIHBhcmFtcyA9IGxvY2F0aW9uLnBhcmFtcztcbiAgICBxdWVyeSA9IHJlLmhhc093blByb3BlcnR5KCdxdWVyeScpID8gcmUucXVlcnkgOiBxdWVyeTtcbiAgICBoYXNoID0gcmUuaGFzT3duUHJvcGVydHkoJ2hhc2gnKSA/IHJlLmhhc2ggOiBoYXNoO1xuICAgIHBhcmFtcyA9IHJlLmhhc093blByb3BlcnR5KCdwYXJhbXMnKSA/IHJlLnBhcmFtcyA6IHBhcmFtcztcblxuICAgIGlmIChuYW1lKSB7XG4gICAgICAvLyByZXNvbHZlZCBuYW1lZCBkaXJlY3RcbiAgICAgIHZhciB0YXJnZXRSZWNvcmQgPSBuYW1lTWFwW25hbWVdO1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgYXNzZXJ0KHRhcmdldFJlY29yZCwgKFwicmVkaXJlY3QgZmFpbGVkOiBuYW1lZCByb3V0ZSBcXFwiXCIgKyBuYW1lICsgXCJcXFwiIG5vdCBmb3VuZC5cIikpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG1hdGNoKHtcbiAgICAgICAgX25vcm1hbGl6ZWQ6IHRydWUsXG4gICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgIHF1ZXJ5OiBxdWVyeSxcbiAgICAgICAgaGFzaDogaGFzaCxcbiAgICAgICAgcGFyYW1zOiBwYXJhbXNcbiAgICAgIH0sIHVuZGVmaW5lZCwgbG9jYXRpb24pXG4gICAgfSBlbHNlIGlmIChwYXRoKSB7XG4gICAgICAvLyAxLiByZXNvbHZlIHJlbGF0aXZlIHJlZGlyZWN0XG4gICAgICB2YXIgcmF3UGF0aCA9IHJlc29sdmVSZWNvcmRQYXRoKHBhdGgsIHJlY29yZCk7XG4gICAgICAvLyAyLiByZXNvbHZlIHBhcmFtc1xuICAgICAgdmFyIHJlc29sdmVkUGF0aCA9IGZpbGxQYXJhbXMocmF3UGF0aCwgcGFyYW1zLCAoXCJyZWRpcmVjdCByb3V0ZSB3aXRoIHBhdGggXFxcIlwiICsgcmF3UGF0aCArIFwiXFxcIlwiKSk7XG4gICAgICAvLyAzLiByZW1hdGNoIHdpdGggZXhpc3RpbmcgcXVlcnkgYW5kIGhhc2hcbiAgICAgIHJldHVybiBtYXRjaCh7XG4gICAgICAgIF9ub3JtYWxpemVkOiB0cnVlLFxuICAgICAgICBwYXRoOiByZXNvbHZlZFBhdGgsXG4gICAgICAgIHF1ZXJ5OiBxdWVyeSxcbiAgICAgICAgaGFzaDogaGFzaFxuICAgICAgfSwgdW5kZWZpbmVkLCBsb2NhdGlvbilcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgd2FybihmYWxzZSwgKFwiaW52YWxpZCByZWRpcmVjdCBvcHRpb246IFwiICsgKEpTT04uc3RyaW5naWZ5KHJlZGlyZWN0KSkpKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBfY3JlYXRlUm91dGUobnVsbCwgbG9jYXRpb24pXG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gYWxpYXMgKFxuICAgIHJlY29yZCxcbiAgICBsb2NhdGlvbixcbiAgICBtYXRjaEFzXG4gICkge1xuICAgIHZhciBhbGlhc2VkUGF0aCA9IGZpbGxQYXJhbXMobWF0Y2hBcywgbG9jYXRpb24ucGFyYW1zLCAoXCJhbGlhc2VkIHJvdXRlIHdpdGggcGF0aCBcXFwiXCIgKyBtYXRjaEFzICsgXCJcXFwiXCIpKTtcbiAgICB2YXIgYWxpYXNlZE1hdGNoID0gbWF0Y2goe1xuICAgICAgX25vcm1hbGl6ZWQ6IHRydWUsXG4gICAgICBwYXRoOiBhbGlhc2VkUGF0aFxuICAgIH0pO1xuICAgIGlmIChhbGlhc2VkTWF0Y2gpIHtcbiAgICAgIHZhciBtYXRjaGVkID0gYWxpYXNlZE1hdGNoLm1hdGNoZWQ7XG4gICAgICB2YXIgYWxpYXNlZFJlY29yZCA9IG1hdGNoZWRbbWF0Y2hlZC5sZW5ndGggLSAxXTtcbiAgICAgIGxvY2F0aW9uLnBhcmFtcyA9IGFsaWFzZWRNYXRjaC5wYXJhbXM7XG4gICAgICByZXR1cm4gX2NyZWF0ZVJvdXRlKGFsaWFzZWRSZWNvcmQsIGxvY2F0aW9uKVxuICAgIH1cbiAgICByZXR1cm4gX2NyZWF0ZVJvdXRlKG51bGwsIGxvY2F0aW9uKVxuICB9XG5cbiAgZnVuY3Rpb24gX2NyZWF0ZVJvdXRlIChcbiAgICByZWNvcmQsXG4gICAgbG9jYXRpb24sXG4gICAgcmVkaXJlY3RlZEZyb21cbiAgKSB7XG4gICAgaWYgKHJlY29yZCAmJiByZWNvcmQucmVkaXJlY3QpIHtcbiAgICAgIHJldHVybiByZWRpcmVjdChyZWNvcmQsIHJlZGlyZWN0ZWRGcm9tIHx8IGxvY2F0aW9uKVxuICAgIH1cbiAgICBpZiAocmVjb3JkICYmIHJlY29yZC5tYXRjaEFzKSB7XG4gICAgICByZXR1cm4gYWxpYXMocmVjb3JkLCBsb2NhdGlvbiwgcmVjb3JkLm1hdGNoQXMpXG4gICAgfVxuICAgIHJldHVybiBjcmVhdGVSb3V0ZShyZWNvcmQsIGxvY2F0aW9uLCByZWRpcmVjdGVkRnJvbSwgcm91dGVyKVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBtYXRjaDogbWF0Y2gsXG4gICAgYWRkUm91dGVzOiBhZGRSb3V0ZXNcbiAgfVxufVxuXG5mdW5jdGlvbiBtYXRjaFJvdXRlIChcbiAgcmVnZXgsXG4gIHBhdGgsXG4gIHBhcmFtc1xuKSB7XG4gIHZhciBtID0gcGF0aC5tYXRjaChyZWdleCk7XG5cbiAgaWYgKCFtKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH0gZWxzZSBpZiAoIXBhcmFtcykge1xuICAgIHJldHVybiB0cnVlXG4gIH1cblxuICBmb3IgKHZhciBpID0gMSwgbGVuID0gbS5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICAgIHZhciBrZXkgPSByZWdleC5rZXlzW2kgLSAxXTtcbiAgICB2YXIgdmFsID0gdHlwZW9mIG1baV0gPT09ICdzdHJpbmcnID8gZGVjb2RlVVJJQ29tcG9uZW50KG1baV0pIDogbVtpXTtcbiAgICBpZiAoa2V5KSB7XG4gICAgICAvLyBGaXggIzE5OTQ6IHVzaW5nICogd2l0aCBwcm9wczogdHJ1ZSBnZW5lcmF0ZXMgYSBwYXJhbSBuYW1lZCAwXG4gICAgICBwYXJhbXNba2V5Lm5hbWUgfHwgJ3BhdGhNYXRjaCddID0gdmFsO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlXG59XG5cbmZ1bmN0aW9uIHJlc29sdmVSZWNvcmRQYXRoIChwYXRoLCByZWNvcmQpIHtcbiAgcmV0dXJuIHJlc29sdmVQYXRoKHBhdGgsIHJlY29yZC5wYXJlbnQgPyByZWNvcmQucGFyZW50LnBhdGggOiAnLycsIHRydWUpXG59XG5cbi8qICAqL1xuXG52YXIgcG9zaXRpb25TdG9yZSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cbmZ1bmN0aW9uIHNldHVwU2Nyb2xsICgpIHtcbiAgLy8gRml4IGZvciAjMTU4NSBmb3IgRmlyZWZveFxuICAvLyBGaXggZm9yICMyMTk1IEFkZCBvcHRpb25hbCB0aGlyZCBhdHRyaWJ1dGUgdG8gd29ya2Fyb3VuZCBhIGJ1ZyBpbiBzYWZhcmkgaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTE4MjY3OFxuICAvLyBGaXggZm9yICMyNzc0IFN1cHBvcnQgZm9yIGFwcHMgbG9hZGVkIGZyb20gV2luZG93cyBmaWxlIHNoYXJlcyBub3QgbWFwcGVkIHRvIG5ldHdvcmsgZHJpdmVzOiByZXBsYWNlZCBsb2NhdGlvbi5vcmlnaW4gd2l0aFxuICAvLyB3aW5kb3cubG9jYXRpb24ucHJvdG9jb2wgKyAnLy8nICsgd2luZG93LmxvY2F0aW9uLmhvc3RcbiAgLy8gbG9jYXRpb24uaG9zdCBjb250YWlucyB0aGUgcG9ydCBhbmQgbG9jYXRpb24uaG9zdG5hbWUgZG9lc24ndFxuICB2YXIgcHJvdG9jb2xBbmRQYXRoID0gd2luZG93LmxvY2F0aW9uLnByb3RvY29sICsgJy8vJyArIHdpbmRvdy5sb2NhdGlvbi5ob3N0O1xuICB2YXIgYWJzb2x1dGVQYXRoID0gd2luZG93LmxvY2F0aW9uLmhyZWYucmVwbGFjZShwcm90b2NvbEFuZFBhdGgsICcnKTtcbiAgd2luZG93Lmhpc3RvcnkucmVwbGFjZVN0YXRlKHsga2V5OiBnZXRTdGF0ZUtleSgpIH0sICcnLCBhYnNvbHV0ZVBhdGgpO1xuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncG9wc3RhdGUnLCBmdW5jdGlvbiAoZSkge1xuICAgIHNhdmVTY3JvbGxQb3NpdGlvbigpO1xuICAgIGlmIChlLnN0YXRlICYmIGUuc3RhdGUua2V5KSB7XG4gICAgICBzZXRTdGF0ZUtleShlLnN0YXRlLmtleSk7XG4gICAgfVxuICB9KTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlU2Nyb2xsIChcbiAgcm91dGVyLFxuICB0byxcbiAgZnJvbSxcbiAgaXNQb3Bcbikge1xuICBpZiAoIXJvdXRlci5hcHApIHtcbiAgICByZXR1cm5cbiAgfVxuXG4gIHZhciBiZWhhdmlvciA9IHJvdXRlci5vcHRpb25zLnNjcm9sbEJlaGF2aW9yO1xuICBpZiAoIWJlaGF2aW9yKSB7XG4gICAgcmV0dXJuXG4gIH1cblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGFzc2VydCh0eXBlb2YgYmVoYXZpb3IgPT09ICdmdW5jdGlvbicsIFwic2Nyb2xsQmVoYXZpb3IgbXVzdCBiZSBhIGZ1bmN0aW9uXCIpO1xuICB9XG5cbiAgLy8gd2FpdCB1bnRpbCByZS1yZW5kZXIgZmluaXNoZXMgYmVmb3JlIHNjcm9sbGluZ1xuICByb3V0ZXIuYXBwLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHBvc2l0aW9uID0gZ2V0U2Nyb2xsUG9zaXRpb24oKTtcbiAgICB2YXIgc2hvdWxkU2Nyb2xsID0gYmVoYXZpb3IuY2FsbChcbiAgICAgIHJvdXRlcixcbiAgICAgIHRvLFxuICAgICAgZnJvbSxcbiAgICAgIGlzUG9wID8gcG9zaXRpb24gOiBudWxsXG4gICAgKTtcblxuICAgIGlmICghc2hvdWxkU2Nyb2xsKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHNob3VsZFNjcm9sbC50aGVuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBzaG91bGRTY3JvbGxcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHNob3VsZFNjcm9sbCkge1xuICAgICAgICAgIHNjcm9sbFRvUG9zaXRpb24oKHNob3VsZFNjcm9sbCksIHBvc2l0aW9uKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgYXNzZXJ0KGZhbHNlLCBlcnIudG9TdHJpbmcoKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2Nyb2xsVG9Qb3NpdGlvbihzaG91bGRTY3JvbGwsIHBvc2l0aW9uKTtcbiAgICB9XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBzYXZlU2Nyb2xsUG9zaXRpb24gKCkge1xuICB2YXIga2V5ID0gZ2V0U3RhdGVLZXkoKTtcbiAgaWYgKGtleSkge1xuICAgIHBvc2l0aW9uU3RvcmVba2V5XSA9IHtcbiAgICAgIHg6IHdpbmRvdy5wYWdlWE9mZnNldCxcbiAgICAgIHk6IHdpbmRvdy5wYWdlWU9mZnNldFxuICAgIH07XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0U2Nyb2xsUG9zaXRpb24gKCkge1xuICB2YXIga2V5ID0gZ2V0U3RhdGVLZXkoKTtcbiAgaWYgKGtleSkge1xuICAgIHJldHVybiBwb3NpdGlvblN0b3JlW2tleV1cbiAgfVxufVxuXG5mdW5jdGlvbiBnZXRFbGVtZW50UG9zaXRpb24gKGVsLCBvZmZzZXQpIHtcbiAgdmFyIGRvY0VsID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuICB2YXIgZG9jUmVjdCA9IGRvY0VsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICB2YXIgZWxSZWN0ID0gZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gIHJldHVybiB7XG4gICAgeDogZWxSZWN0LmxlZnQgLSBkb2NSZWN0LmxlZnQgLSBvZmZzZXQueCxcbiAgICB5OiBlbFJlY3QudG9wIC0gZG9jUmVjdC50b3AgLSBvZmZzZXQueVxuICB9XG59XG5cbmZ1bmN0aW9uIGlzVmFsaWRQb3NpdGlvbiAob2JqKSB7XG4gIHJldHVybiBpc051bWJlcihvYmoueCkgfHwgaXNOdW1iZXIob2JqLnkpXG59XG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZVBvc2l0aW9uIChvYmopIHtcbiAgcmV0dXJuIHtcbiAgICB4OiBpc051bWJlcihvYmoueCkgPyBvYmoueCA6IHdpbmRvdy5wYWdlWE9mZnNldCxcbiAgICB5OiBpc051bWJlcihvYmoueSkgPyBvYmoueSA6IHdpbmRvdy5wYWdlWU9mZnNldFxuICB9XG59XG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZU9mZnNldCAob2JqKSB7XG4gIHJldHVybiB7XG4gICAgeDogaXNOdW1iZXIob2JqLngpID8gb2JqLnggOiAwLFxuICAgIHk6IGlzTnVtYmVyKG9iai55KSA/IG9iai55IDogMFxuICB9XG59XG5cbmZ1bmN0aW9uIGlzTnVtYmVyICh2KSB7XG4gIHJldHVybiB0eXBlb2YgdiA9PT0gJ251bWJlcidcbn1cblxudmFyIGhhc2hTdGFydHNXaXRoTnVtYmVyUkUgPSAvXiNcXGQvO1xuXG5mdW5jdGlvbiBzY3JvbGxUb1Bvc2l0aW9uIChzaG91bGRTY3JvbGwsIHBvc2l0aW9uKSB7XG4gIHZhciBpc09iamVjdCA9IHR5cGVvZiBzaG91bGRTY3JvbGwgPT09ICdvYmplY3QnO1xuICBpZiAoaXNPYmplY3QgJiYgdHlwZW9mIHNob3VsZFNjcm9sbC5zZWxlY3RvciA9PT0gJ3N0cmluZycpIHtcbiAgICAvLyBnZXRFbGVtZW50QnlJZCB3b3VsZCBzdGlsbCBmYWlsIGlmIHRoZSBzZWxlY3RvciBjb250YWlucyBhIG1vcmUgY29tcGxpY2F0ZWQgcXVlcnkgbGlrZSAjbWFpbltkYXRhLWF0dHJdXG4gICAgLy8gYnV0IGF0IHRoZSBzYW1lIHRpbWUsIGl0IGRvZXNuJ3QgbWFrZSBtdWNoIHNlbnNlIHRvIHNlbGVjdCBhbiBlbGVtZW50IHdpdGggYW4gaWQgYW5kIGFuIGV4dHJhIHNlbGVjdG9yXG4gICAgdmFyIGVsID0gaGFzaFN0YXJ0c1dpdGhOdW1iZXJSRS50ZXN0KHNob3VsZFNjcm9sbC5zZWxlY3RvcikgLy8gJGZsb3ctZGlzYWJsZS1saW5lXG4gICAgICA/IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHNob3VsZFNjcm9sbC5zZWxlY3Rvci5zbGljZSgxKSkgLy8gJGZsb3ctZGlzYWJsZS1saW5lXG4gICAgICA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2hvdWxkU2Nyb2xsLnNlbGVjdG9yKTtcblxuICAgIGlmIChlbCkge1xuICAgICAgdmFyIG9mZnNldCA9XG4gICAgICAgIHNob3VsZFNjcm9sbC5vZmZzZXQgJiYgdHlwZW9mIHNob3VsZFNjcm9sbC5vZmZzZXQgPT09ICdvYmplY3QnXG4gICAgICAgICAgPyBzaG91bGRTY3JvbGwub2Zmc2V0XG4gICAgICAgICAgOiB7fTtcbiAgICAgIG9mZnNldCA9IG5vcm1hbGl6ZU9mZnNldChvZmZzZXQpO1xuICAgICAgcG9zaXRpb24gPSBnZXRFbGVtZW50UG9zaXRpb24oZWwsIG9mZnNldCk7XG4gICAgfSBlbHNlIGlmIChpc1ZhbGlkUG9zaXRpb24oc2hvdWxkU2Nyb2xsKSkge1xuICAgICAgcG9zaXRpb24gPSBub3JtYWxpemVQb3NpdGlvbihzaG91bGRTY3JvbGwpO1xuICAgIH1cbiAgfSBlbHNlIGlmIChpc09iamVjdCAmJiBpc1ZhbGlkUG9zaXRpb24oc2hvdWxkU2Nyb2xsKSkge1xuICAgIHBvc2l0aW9uID0gbm9ybWFsaXplUG9zaXRpb24oc2hvdWxkU2Nyb2xsKTtcbiAgfVxuXG4gIGlmIChwb3NpdGlvbikge1xuICAgIHdpbmRvdy5zY3JvbGxUbyhwb3NpdGlvbi54LCBwb3NpdGlvbi55KTtcbiAgfVxufVxuXG4vKiAgKi9cblxudmFyIHN1cHBvcnRzUHVzaFN0YXRlID0gaW5Ccm93c2VyICYmIChmdW5jdGlvbiAoKSB7XG4gIHZhciB1YSA9IHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50O1xuXG4gIGlmIChcbiAgICAodWEuaW5kZXhPZignQW5kcm9pZCAyLicpICE9PSAtMSB8fCB1YS5pbmRleE9mKCdBbmRyb2lkIDQuMCcpICE9PSAtMSkgJiZcbiAgICB1YS5pbmRleE9mKCdNb2JpbGUgU2FmYXJpJykgIT09IC0xICYmXG4gICAgdWEuaW5kZXhPZignQ2hyb21lJykgPT09IC0xICYmXG4gICAgdWEuaW5kZXhPZignV2luZG93cyBQaG9uZScpID09PSAtMVxuICApIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIHJldHVybiB3aW5kb3cuaGlzdG9yeSAmJiAncHVzaFN0YXRlJyBpbiB3aW5kb3cuaGlzdG9yeVxufSkoKTtcblxuLy8gdXNlIFVzZXIgVGltaW5nIGFwaSAoaWYgcHJlc2VudCkgZm9yIG1vcmUgYWNjdXJhdGUga2V5IHByZWNpc2lvblxudmFyIFRpbWUgPSBpbkJyb3dzZXIgJiYgd2luZG93LnBlcmZvcm1hbmNlICYmIHdpbmRvdy5wZXJmb3JtYW5jZS5ub3dcbiAgPyB3aW5kb3cucGVyZm9ybWFuY2VcbiAgOiBEYXRlO1xuXG52YXIgX2tleSA9IGdlbktleSgpO1xuXG5mdW5jdGlvbiBnZW5LZXkgKCkge1xuICByZXR1cm4gVGltZS5ub3coKS50b0ZpeGVkKDMpXG59XG5cbmZ1bmN0aW9uIGdldFN0YXRlS2V5ICgpIHtcbiAgcmV0dXJuIF9rZXlcbn1cblxuZnVuY3Rpb24gc2V0U3RhdGVLZXkgKGtleSkge1xuICBfa2V5ID0ga2V5O1xufVxuXG5mdW5jdGlvbiBwdXNoU3RhdGUgKHVybCwgcmVwbGFjZSkge1xuICBzYXZlU2Nyb2xsUG9zaXRpb24oKTtcbiAgLy8gdHJ5Li4uY2F0Y2ggdGhlIHB1c2hTdGF0ZSBjYWxsIHRvIGdldCBhcm91bmQgU2FmYXJpXG4gIC8vIERPTSBFeGNlcHRpb24gMTggd2hlcmUgaXQgbGltaXRzIHRvIDEwMCBwdXNoU3RhdGUgY2FsbHNcbiAgdmFyIGhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdHJ5IHtcbiAgICBpZiAocmVwbGFjZSkge1xuICAgICAgaGlzdG9yeS5yZXBsYWNlU3RhdGUoeyBrZXk6IF9rZXkgfSwgJycsIHVybCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIF9rZXkgPSBnZW5LZXkoKTtcbiAgICAgIGhpc3RvcnkucHVzaFN0YXRlKHsga2V5OiBfa2V5IH0sICcnLCB1cmwpO1xuICAgIH1cbiAgfSBjYXRjaCAoZSkge1xuICAgIHdpbmRvdy5sb2NhdGlvbltyZXBsYWNlID8gJ3JlcGxhY2UnIDogJ2Fzc2lnbiddKHVybCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gcmVwbGFjZVN0YXRlICh1cmwpIHtcbiAgcHVzaFN0YXRlKHVybCwgdHJ1ZSk7XG59XG5cbi8qICAqL1xuXG5mdW5jdGlvbiBydW5RdWV1ZSAocXVldWUsIGZuLCBjYikge1xuICB2YXIgc3RlcCA9IGZ1bmN0aW9uIChpbmRleCkge1xuICAgIGlmIChpbmRleCA+PSBxdWV1ZS5sZW5ndGgpIHtcbiAgICAgIGNiKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChxdWV1ZVtpbmRleF0pIHtcbiAgICAgICAgZm4ocXVldWVbaW5kZXhdLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgc3RlcChpbmRleCArIDEpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN0ZXAoaW5kZXggKyAxKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG4gIHN0ZXAoMCk7XG59XG5cbi8qICAqL1xuXG5mdW5jdGlvbiByZXNvbHZlQXN5bmNDb21wb25lbnRzIChtYXRjaGVkKSB7XG4gIHJldHVybiBmdW5jdGlvbiAodG8sIGZyb20sIG5leHQpIHtcbiAgICB2YXIgaGFzQXN5bmMgPSBmYWxzZTtcbiAgICB2YXIgcGVuZGluZyA9IDA7XG4gICAgdmFyIGVycm9yID0gbnVsbDtcblxuICAgIGZsYXRNYXBDb21wb25lbnRzKG1hdGNoZWQsIGZ1bmN0aW9uIChkZWYsIF8sIG1hdGNoLCBrZXkpIHtcbiAgICAgIC8vIGlmIGl0J3MgYSBmdW5jdGlvbiBhbmQgZG9lc24ndCBoYXZlIGNpZCBhdHRhY2hlZCxcbiAgICAgIC8vIGFzc3VtZSBpdCdzIGFuIGFzeW5jIGNvbXBvbmVudCByZXNvbHZlIGZ1bmN0aW9uLlxuICAgICAgLy8gd2UgYXJlIG5vdCB1c2luZyBWdWUncyBkZWZhdWx0IGFzeW5jIHJlc29sdmluZyBtZWNoYW5pc20gYmVjYXVzZVxuICAgICAgLy8gd2Ugd2FudCB0byBoYWx0IHRoZSBuYXZpZ2F0aW9uIHVudGlsIHRoZSBpbmNvbWluZyBjb21wb25lbnQgaGFzIGJlZW5cbiAgICAgIC8vIHJlc29sdmVkLlxuICAgICAgaWYgKHR5cGVvZiBkZWYgPT09ICdmdW5jdGlvbicgJiYgZGVmLmNpZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGhhc0FzeW5jID0gdHJ1ZTtcbiAgICAgICAgcGVuZGluZysrO1xuXG4gICAgICAgIHZhciByZXNvbHZlID0gb25jZShmdW5jdGlvbiAocmVzb2x2ZWREZWYpIHtcbiAgICAgICAgICBpZiAoaXNFU01vZHVsZShyZXNvbHZlZERlZikpIHtcbiAgICAgICAgICAgIHJlc29sdmVkRGVmID0gcmVzb2x2ZWREZWYuZGVmYXVsdDtcbiAgICAgICAgICB9XG4gICAgICAgICAgLy8gc2F2ZSByZXNvbHZlZCBvbiBhc3luYyBmYWN0b3J5IGluIGNhc2UgaXQncyB1c2VkIGVsc2V3aGVyZVxuICAgICAgICAgIGRlZi5yZXNvbHZlZCA9IHR5cGVvZiByZXNvbHZlZERlZiA9PT0gJ2Z1bmN0aW9uJ1xuICAgICAgICAgICAgPyByZXNvbHZlZERlZlxuICAgICAgICAgICAgOiBfVnVlLmV4dGVuZChyZXNvbHZlZERlZik7XG4gICAgICAgICAgbWF0Y2guY29tcG9uZW50c1trZXldID0gcmVzb2x2ZWREZWY7XG4gICAgICAgICAgcGVuZGluZy0tO1xuICAgICAgICAgIGlmIChwZW5kaW5nIDw9IDApIHtcbiAgICAgICAgICAgIG5leHQoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHZhciByZWplY3QgPSBvbmNlKGZ1bmN0aW9uIChyZWFzb24pIHtcbiAgICAgICAgICB2YXIgbXNnID0gXCJGYWlsZWQgdG8gcmVzb2x2ZSBhc3luYyBjb21wb25lbnQgXCIgKyBrZXkgKyBcIjogXCIgKyByZWFzb247XG4gICAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB3YXJuKGZhbHNlLCBtc2cpO1xuICAgICAgICAgIGlmICghZXJyb3IpIHtcbiAgICAgICAgICAgIGVycm9yID0gaXNFcnJvcihyZWFzb24pXG4gICAgICAgICAgICAgID8gcmVhc29uXG4gICAgICAgICAgICAgIDogbmV3IEVycm9yKG1zZyk7XG4gICAgICAgICAgICBuZXh0KGVycm9yKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHZhciByZXM7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgcmVzID0gZGVmKHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICByZWplY3QoZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlcykge1xuICAgICAgICAgIGlmICh0eXBlb2YgcmVzLnRoZW4gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHJlcy50aGVuKHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIG5ldyBzeW50YXggaW4gVnVlIDIuM1xuICAgICAgICAgICAgdmFyIGNvbXAgPSByZXMuY29tcG9uZW50O1xuICAgICAgICAgICAgaWYgKGNvbXAgJiYgdHlwZW9mIGNvbXAudGhlbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICBjb21wLnRoZW4ocmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcblxuICAgIGlmICghaGFzQXN5bmMpIHsgbmV4dCgpOyB9XG4gIH1cbn1cblxuZnVuY3Rpb24gZmxhdE1hcENvbXBvbmVudHMgKFxuICBtYXRjaGVkLFxuICBmblxuKSB7XG4gIHJldHVybiBmbGF0dGVuKG1hdGNoZWQubWFwKGZ1bmN0aW9uIChtKSB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKG0uY29tcG9uZW50cykubWFwKGZ1bmN0aW9uIChrZXkpIHsgcmV0dXJuIGZuKFxuICAgICAgbS5jb21wb25lbnRzW2tleV0sXG4gICAgICBtLmluc3RhbmNlc1trZXldLFxuICAgICAgbSwga2V5XG4gICAgKTsgfSlcbiAgfSkpXG59XG5cbmZ1bmN0aW9uIGZsYXR0ZW4gKGFycikge1xuICByZXR1cm4gQXJyYXkucHJvdG90eXBlLmNvbmNhdC5hcHBseShbXSwgYXJyKVxufVxuXG52YXIgaGFzU3ltYm9sID1cbiAgdHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJlxuICB0eXBlb2YgU3ltYm9sLnRvU3RyaW5nVGFnID09PSAnc3ltYm9sJztcblxuZnVuY3Rpb24gaXNFU01vZHVsZSAob2JqKSB7XG4gIHJldHVybiBvYmouX19lc01vZHVsZSB8fCAoaGFzU3ltYm9sICYmIG9ialtTeW1ib2wudG9TdHJpbmdUYWddID09PSAnTW9kdWxlJylcbn1cblxuLy8gaW4gV2VicGFjayAyLCByZXF1aXJlLmVuc3VyZSBub3cgYWxzbyByZXR1cm5zIGEgUHJvbWlzZVxuLy8gc28gdGhlIHJlc29sdmUvcmVqZWN0IGZ1bmN0aW9ucyBtYXkgZ2V0IGNhbGxlZCBhbiBleHRyYSB0aW1lXG4vLyBpZiB0aGUgdXNlciB1c2VzIGFuIGFycm93IGZ1bmN0aW9uIHNob3J0aGFuZCB0aGF0IGhhcHBlbnMgdG9cbi8vIHJldHVybiB0aGF0IFByb21pc2UuXG5mdW5jdGlvbiBvbmNlIChmbikge1xuICB2YXIgY2FsbGVkID0gZmFsc2U7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGFyZ3MgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB3aGlsZSAoIGxlbi0tICkgYXJnc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiBdO1xuXG4gICAgaWYgKGNhbGxlZCkgeyByZXR1cm4gfVxuICAgIGNhbGxlZCA9IHRydWU7XG4gICAgcmV0dXJuIGZuLmFwcGx5KHRoaXMsIGFyZ3MpXG4gIH1cbn1cblxudmFyIE5hdmlnYXRpb25EdXBsaWNhdGVkID0gLypAX19QVVJFX18qLyhmdW5jdGlvbiAoRXJyb3IpIHtcbiAgZnVuY3Rpb24gTmF2aWdhdGlvbkR1cGxpY2F0ZWQgKCkge1xuICAgIEVycm9yLmNhbGwodGhpcywgJ05hdmlnYXRpbmcgdG8gY3VycmVudCBsb2NhdGlvbiBpcyBub3QgYWxsb3dlZCcpO1xuICAgIHRoaXMubmFtZSA9IHRoaXMuX25hbWUgPSAnTmF2aWdhdGlvbkR1cGxpY2F0ZWQnO1xuICB9XG5cbiAgaWYgKCBFcnJvciApIE5hdmlnYXRpb25EdXBsaWNhdGVkLl9fcHJvdG9fXyA9IEVycm9yO1xuICBOYXZpZ2F0aW9uRHVwbGljYXRlZC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKCBFcnJvciAmJiBFcnJvci5wcm90b3R5cGUgKTtcbiAgTmF2aWdhdGlvbkR1cGxpY2F0ZWQucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gTmF2aWdhdGlvbkR1cGxpY2F0ZWQ7XG5cbiAgcmV0dXJuIE5hdmlnYXRpb25EdXBsaWNhdGVkO1xufShFcnJvcikpO1xuXG4vLyBzdXBwb3J0IElFOVxuTmF2aWdhdGlvbkR1cGxpY2F0ZWQuX25hbWUgPSAnTmF2aWdhdGlvbkR1cGxpY2F0ZWQnO1xuXG4vKiAgKi9cblxudmFyIEhpc3RvcnkgPSBmdW5jdGlvbiBIaXN0b3J5IChyb3V0ZXIsIGJhc2UpIHtcbiAgdGhpcy5yb3V0ZXIgPSByb3V0ZXI7XG4gIHRoaXMuYmFzZSA9IG5vcm1hbGl6ZUJhc2UoYmFzZSk7XG4gIC8vIHN0YXJ0IHdpdGggYSByb3V0ZSBvYmplY3QgdGhhdCBzdGFuZHMgZm9yIFwibm93aGVyZVwiXG4gIHRoaXMuY3VycmVudCA9IFNUQVJUO1xuICB0aGlzLnBlbmRpbmcgPSBudWxsO1xuICB0aGlzLnJlYWR5ID0gZmFsc2U7XG4gIHRoaXMucmVhZHlDYnMgPSBbXTtcbiAgdGhpcy5yZWFkeUVycm9yQ2JzID0gW107XG4gIHRoaXMuZXJyb3JDYnMgPSBbXTtcbn07XG5cbkhpc3RvcnkucHJvdG90eXBlLmxpc3RlbiA9IGZ1bmN0aW9uIGxpc3RlbiAoY2IpIHtcbiAgdGhpcy5jYiA9IGNiO1xufTtcblxuSGlzdG9yeS5wcm90b3R5cGUub25SZWFkeSA9IGZ1bmN0aW9uIG9uUmVhZHkgKGNiLCBlcnJvckNiKSB7XG4gIGlmICh0aGlzLnJlYWR5KSB7XG4gICAgY2IoKTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLnJlYWR5Q2JzLnB1c2goY2IpO1xuICAgIGlmIChlcnJvckNiKSB7XG4gICAgICB0aGlzLnJlYWR5RXJyb3JDYnMucHVzaChlcnJvckNiKTtcbiAgICB9XG4gIH1cbn07XG5cbkhpc3RvcnkucHJvdG90eXBlLm9uRXJyb3IgPSBmdW5jdGlvbiBvbkVycm9yIChlcnJvckNiKSB7XG4gIHRoaXMuZXJyb3JDYnMucHVzaChlcnJvckNiKTtcbn07XG5cbkhpc3RvcnkucHJvdG90eXBlLnRyYW5zaXRpb25UbyA9IGZ1bmN0aW9uIHRyYW5zaXRpb25UbyAoXG4gIGxvY2F0aW9uLFxuICBvbkNvbXBsZXRlLFxuICBvbkFib3J0XG4pIHtcbiAgICB2YXIgdGhpcyQxID0gdGhpcztcblxuICB2YXIgcm91dGUgPSB0aGlzLnJvdXRlci5tYXRjaChsb2NhdGlvbiwgdGhpcy5jdXJyZW50KTtcbiAgdGhpcy5jb25maXJtVHJhbnNpdGlvbihcbiAgICByb3V0ZSxcbiAgICBmdW5jdGlvbiAoKSB7XG4gICAgICB0aGlzJDEudXBkYXRlUm91dGUocm91dGUpO1xuICAgICAgb25Db21wbGV0ZSAmJiBvbkNvbXBsZXRlKHJvdXRlKTtcbiAgICAgIHRoaXMkMS5lbnN1cmVVUkwoKTtcblxuICAgICAgLy8gZmlyZSByZWFkeSBjYnMgb25jZVxuICAgICAgaWYgKCF0aGlzJDEucmVhZHkpIHtcbiAgICAgICAgdGhpcyQxLnJlYWR5ID0gdHJ1ZTtcbiAgICAgICAgdGhpcyQxLnJlYWR5Q2JzLmZvckVhY2goZnVuY3Rpb24gKGNiKSB7XG4gICAgICAgICAgY2Iocm91dGUpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgIGlmIChvbkFib3J0KSB7XG4gICAgICAgIG9uQWJvcnQoZXJyKTtcbiAgICAgIH1cbiAgICAgIGlmIChlcnIgJiYgIXRoaXMkMS5yZWFkeSkge1xuICAgICAgICB0aGlzJDEucmVhZHkgPSB0cnVlO1xuICAgICAgICB0aGlzJDEucmVhZHlFcnJvckNicy5mb3JFYWNoKGZ1bmN0aW9uIChjYikge1xuICAgICAgICAgIGNiKGVycik7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgKTtcbn07XG5cbkhpc3RvcnkucHJvdG90eXBlLmNvbmZpcm1UcmFuc2l0aW9uID0gZnVuY3Rpb24gY29uZmlybVRyYW5zaXRpb24gKHJvdXRlLCBvbkNvbXBsZXRlLCBvbkFib3J0KSB7XG4gICAgdmFyIHRoaXMkMSA9IHRoaXM7XG5cbiAgdmFyIGN1cnJlbnQgPSB0aGlzLmN1cnJlbnQ7XG4gIHZhciBhYm9ydCA9IGZ1bmN0aW9uIChlcnIpIHtcbiAgICAvLyBhZnRlciBtZXJnaW5nIGh0dHBzOi8vZ2l0aHViLmNvbS92dWVqcy92dWUtcm91dGVyL3B1bGwvMjc3MSB3ZVxuICAgIC8vIFdoZW4gdGhlIHVzZXIgbmF2aWdhdGVzIHRocm91Z2ggaGlzdG9yeSB0aHJvdWdoIGJhY2svZm9yd2FyZCBidXR0b25zXG4gICAgLy8gd2UgZG8gbm90IHdhbnQgdG8gdGhyb3cgdGhlIGVycm9yLiBXZSBvbmx5IHRocm93IGl0IGlmIGRpcmVjdGx5IGNhbGxpbmdcbiAgICAvLyBwdXNoL3JlcGxhY2UuIFRoYXQncyB3aHkgaXQncyBub3QgaW5jbHVkZWQgaW4gaXNFcnJvclxuICAgIGlmICghaXNFeHRlbmRlZEVycm9yKE5hdmlnYXRpb25EdXBsaWNhdGVkLCBlcnIpICYmIGlzRXJyb3IoZXJyKSkge1xuICAgICAgaWYgKHRoaXMkMS5lcnJvckNicy5sZW5ndGgpIHtcbiAgICAgICAgdGhpcyQxLmVycm9yQ2JzLmZvckVhY2goZnVuY3Rpb24gKGNiKSB7XG4gICAgICAgICAgY2IoZXJyKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3YXJuKGZhbHNlLCAndW5jYXVnaHQgZXJyb3IgZHVyaW5nIHJvdXRlIG5hdmlnYXRpb246Jyk7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgIH1cbiAgICB9XG4gICAgb25BYm9ydCAmJiBvbkFib3J0KGVycik7XG4gIH07XG4gIGlmIChcbiAgICBpc1NhbWVSb3V0ZShyb3V0ZSwgY3VycmVudCkgJiZcbiAgICAvLyBpbiB0aGUgY2FzZSB0aGUgcm91dGUgbWFwIGhhcyBiZWVuIGR5bmFtaWNhbGx5IGFwcGVuZGVkIHRvXG4gICAgcm91dGUubWF0Y2hlZC5sZW5ndGggPT09IGN1cnJlbnQubWF0Y2hlZC5sZW5ndGhcbiAgKSB7XG4gICAgdGhpcy5lbnN1cmVVUkwoKTtcbiAgICByZXR1cm4gYWJvcnQobmV3IE5hdmlnYXRpb25EdXBsaWNhdGVkKHJvdXRlKSlcbiAgfVxuXG4gIHZhciByZWYgPSByZXNvbHZlUXVldWUoXG4gICAgdGhpcy5jdXJyZW50Lm1hdGNoZWQsXG4gICAgcm91dGUubWF0Y2hlZFxuICApO1xuICAgIHZhciB1cGRhdGVkID0gcmVmLnVwZGF0ZWQ7XG4gICAgdmFyIGRlYWN0aXZhdGVkID0gcmVmLmRlYWN0aXZhdGVkO1xuICAgIHZhciBhY3RpdmF0ZWQgPSByZWYuYWN0aXZhdGVkO1xuXG4gIHZhciBxdWV1ZSA9IFtdLmNvbmNhdChcbiAgICAvLyBpbi1jb21wb25lbnQgbGVhdmUgZ3VhcmRzXG4gICAgZXh0cmFjdExlYXZlR3VhcmRzKGRlYWN0aXZhdGVkKSxcbiAgICAvLyBnbG9iYWwgYmVmb3JlIGhvb2tzXG4gICAgdGhpcy5yb3V0ZXIuYmVmb3JlSG9va3MsXG4gICAgLy8gaW4tY29tcG9uZW50IHVwZGF0ZSBob29rc1xuICAgIGV4dHJhY3RVcGRhdGVIb29rcyh1cGRhdGVkKSxcbiAgICAvLyBpbi1jb25maWcgZW50ZXIgZ3VhcmRzXG4gICAgYWN0aXZhdGVkLm1hcChmdW5jdGlvbiAobSkgeyByZXR1cm4gbS5iZWZvcmVFbnRlcjsgfSksXG4gICAgLy8gYXN5bmMgY29tcG9uZW50c1xuICAgIHJlc29sdmVBc3luY0NvbXBvbmVudHMoYWN0aXZhdGVkKVxuICApO1xuXG4gIHRoaXMucGVuZGluZyA9IHJvdXRlO1xuICB2YXIgaXRlcmF0b3IgPSBmdW5jdGlvbiAoaG9vaywgbmV4dCkge1xuICAgIGlmICh0aGlzJDEucGVuZGluZyAhPT0gcm91dGUpIHtcbiAgICAgIHJldHVybiBhYm9ydCgpXG4gICAgfVxuICAgIHRyeSB7XG4gICAgICBob29rKHJvdXRlLCBjdXJyZW50LCBmdW5jdGlvbiAodG8pIHtcbiAgICAgICAgaWYgKHRvID09PSBmYWxzZSB8fCBpc0Vycm9yKHRvKSkge1xuICAgICAgICAgIC8vIG5leHQoZmFsc2UpIC0+IGFib3J0IG5hdmlnYXRpb24sIGVuc3VyZSBjdXJyZW50IFVSTFxuICAgICAgICAgIHRoaXMkMS5lbnN1cmVVUkwodHJ1ZSk7XG4gICAgICAgICAgYWJvcnQodG8pO1xuICAgICAgICB9IGVsc2UgaWYgKFxuICAgICAgICAgIHR5cGVvZiB0byA9PT0gJ3N0cmluZycgfHxcbiAgICAgICAgICAodHlwZW9mIHRvID09PSAnb2JqZWN0JyAmJlxuICAgICAgICAgICAgKHR5cGVvZiB0by5wYXRoID09PSAnc3RyaW5nJyB8fCB0eXBlb2YgdG8ubmFtZSA9PT0gJ3N0cmluZycpKVxuICAgICAgICApIHtcbiAgICAgICAgICAvLyBuZXh0KCcvJykgb3IgbmV4dCh7IHBhdGg6ICcvJyB9KSAtPiByZWRpcmVjdFxuICAgICAgICAgIGFib3J0KCk7XG4gICAgICAgICAgaWYgKHR5cGVvZiB0byA9PT0gJ29iamVjdCcgJiYgdG8ucmVwbGFjZSkge1xuICAgICAgICAgICAgdGhpcyQxLnJlcGxhY2UodG8pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzJDEucHVzaCh0byk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIGNvbmZpcm0gdHJhbnNpdGlvbiBhbmQgcGFzcyBvbiB0aGUgdmFsdWVcbiAgICAgICAgICBuZXh0KHRvKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgYWJvcnQoZSk7XG4gICAgfVxuICB9O1xuXG4gIHJ1blF1ZXVlKHF1ZXVlLCBpdGVyYXRvciwgZnVuY3Rpb24gKCkge1xuICAgIHZhciBwb3N0RW50ZXJDYnMgPSBbXTtcbiAgICB2YXIgaXNWYWxpZCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMkMS5jdXJyZW50ID09PSByb3V0ZTsgfTtcbiAgICAvLyB3YWl0IHVudGlsIGFzeW5jIGNvbXBvbmVudHMgYXJlIHJlc29sdmVkIGJlZm9yZVxuICAgIC8vIGV4dHJhY3RpbmcgaW4tY29tcG9uZW50IGVudGVyIGd1YXJkc1xuICAgIHZhciBlbnRlckd1YXJkcyA9IGV4dHJhY3RFbnRlckd1YXJkcyhhY3RpdmF0ZWQsIHBvc3RFbnRlckNicywgaXNWYWxpZCk7XG4gICAgdmFyIHF1ZXVlID0gZW50ZXJHdWFyZHMuY29uY2F0KHRoaXMkMS5yb3V0ZXIucmVzb2x2ZUhvb2tzKTtcbiAgICBydW5RdWV1ZShxdWV1ZSwgaXRlcmF0b3IsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmICh0aGlzJDEucGVuZGluZyAhPT0gcm91dGUpIHtcbiAgICAgICAgcmV0dXJuIGFib3J0KClcbiAgICAgIH1cbiAgICAgIHRoaXMkMS5wZW5kaW5nID0gbnVsbDtcbiAgICAgIG9uQ29tcGxldGUocm91dGUpO1xuICAgICAgaWYgKHRoaXMkMS5yb3V0ZXIuYXBwKSB7XG4gICAgICAgIHRoaXMkMS5yb3V0ZXIuYXBwLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcG9zdEVudGVyQ2JzLmZvckVhY2goZnVuY3Rpb24gKGNiKSB7XG4gICAgICAgICAgICBjYigpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG59O1xuXG5IaXN0b3J5LnByb3RvdHlwZS51cGRhdGVSb3V0ZSA9IGZ1bmN0aW9uIHVwZGF0ZVJvdXRlIChyb3V0ZSkge1xuICB2YXIgcHJldiA9IHRoaXMuY3VycmVudDtcbiAgdGhpcy5jdXJyZW50ID0gcm91dGU7XG4gIHRoaXMuY2IgJiYgdGhpcy5jYihyb3V0ZSk7XG4gIHRoaXMucm91dGVyLmFmdGVySG9va3MuZm9yRWFjaChmdW5jdGlvbiAoaG9vaykge1xuICAgIGhvb2sgJiYgaG9vayhyb3V0ZSwgcHJldik7XG4gIH0pO1xufTtcblxuZnVuY3Rpb24gbm9ybWFsaXplQmFzZSAoYmFzZSkge1xuICBpZiAoIWJhc2UpIHtcbiAgICBpZiAoaW5Ccm93c2VyKSB7XG4gICAgICAvLyByZXNwZWN0IDxiYXNlPiB0YWdcbiAgICAgIHZhciBiYXNlRWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdiYXNlJyk7XG4gICAgICBiYXNlID0gKGJhc2VFbCAmJiBiYXNlRWwuZ2V0QXR0cmlidXRlKCdocmVmJykpIHx8ICcvJztcbiAgICAgIC8vIHN0cmlwIGZ1bGwgVVJMIG9yaWdpblxuICAgICAgYmFzZSA9IGJhc2UucmVwbGFjZSgvXmh0dHBzPzpcXC9cXC9bXlxcL10rLywgJycpO1xuICAgIH0gZWxzZSB7XG4gICAgICBiYXNlID0gJy8nO1xuICAgIH1cbiAgfVxuICAvLyBtYWtlIHN1cmUgdGhlcmUncyB0aGUgc3RhcnRpbmcgc2xhc2hcbiAgaWYgKGJhc2UuY2hhckF0KDApICE9PSAnLycpIHtcbiAgICBiYXNlID0gJy8nICsgYmFzZTtcbiAgfVxuICAvLyByZW1vdmUgdHJhaWxpbmcgc2xhc2hcbiAgcmV0dXJuIGJhc2UucmVwbGFjZSgvXFwvJC8sICcnKVxufVxuXG5mdW5jdGlvbiByZXNvbHZlUXVldWUgKFxuICBjdXJyZW50LFxuICBuZXh0XG4pIHtcbiAgdmFyIGk7XG4gIHZhciBtYXggPSBNYXRoLm1heChjdXJyZW50Lmxlbmd0aCwgbmV4dC5sZW5ndGgpO1xuICBmb3IgKGkgPSAwOyBpIDwgbWF4OyBpKyspIHtcbiAgICBpZiAoY3VycmVudFtpXSAhPT0gbmV4dFtpXSkge1xuICAgICAgYnJlYWtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHtcbiAgICB1cGRhdGVkOiBuZXh0LnNsaWNlKDAsIGkpLFxuICAgIGFjdGl2YXRlZDogbmV4dC5zbGljZShpKSxcbiAgICBkZWFjdGl2YXRlZDogY3VycmVudC5zbGljZShpKVxuICB9XG59XG5cbmZ1bmN0aW9uIGV4dHJhY3RHdWFyZHMgKFxuICByZWNvcmRzLFxuICBuYW1lLFxuICBiaW5kLFxuICByZXZlcnNlXG4pIHtcbiAgdmFyIGd1YXJkcyA9IGZsYXRNYXBDb21wb25lbnRzKHJlY29yZHMsIGZ1bmN0aW9uIChkZWYsIGluc3RhbmNlLCBtYXRjaCwga2V5KSB7XG4gICAgdmFyIGd1YXJkID0gZXh0cmFjdEd1YXJkKGRlZiwgbmFtZSk7XG4gICAgaWYgKGd1YXJkKSB7XG4gICAgICByZXR1cm4gQXJyYXkuaXNBcnJheShndWFyZClcbiAgICAgICAgPyBndWFyZC5tYXAoZnVuY3Rpb24gKGd1YXJkKSB7IHJldHVybiBiaW5kKGd1YXJkLCBpbnN0YW5jZSwgbWF0Y2gsIGtleSk7IH0pXG4gICAgICAgIDogYmluZChndWFyZCwgaW5zdGFuY2UsIG1hdGNoLCBrZXkpXG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIGZsYXR0ZW4ocmV2ZXJzZSA/IGd1YXJkcy5yZXZlcnNlKCkgOiBndWFyZHMpXG59XG5cbmZ1bmN0aW9uIGV4dHJhY3RHdWFyZCAoXG4gIGRlZixcbiAga2V5XG4pIHtcbiAgaWYgKHR5cGVvZiBkZWYgIT09ICdmdW5jdGlvbicpIHtcbiAgICAvLyBleHRlbmQgbm93IHNvIHRoYXQgZ2xvYmFsIG1peGlucyBhcmUgYXBwbGllZC5cbiAgICBkZWYgPSBfVnVlLmV4dGVuZChkZWYpO1xuICB9XG4gIHJldHVybiBkZWYub3B0aW9uc1trZXldXG59XG5cbmZ1bmN0aW9uIGV4dHJhY3RMZWF2ZUd1YXJkcyAoZGVhY3RpdmF0ZWQpIHtcbiAgcmV0dXJuIGV4dHJhY3RHdWFyZHMoZGVhY3RpdmF0ZWQsICdiZWZvcmVSb3V0ZUxlYXZlJywgYmluZEd1YXJkLCB0cnVlKVxufVxuXG5mdW5jdGlvbiBleHRyYWN0VXBkYXRlSG9va3MgKHVwZGF0ZWQpIHtcbiAgcmV0dXJuIGV4dHJhY3RHdWFyZHModXBkYXRlZCwgJ2JlZm9yZVJvdXRlVXBkYXRlJywgYmluZEd1YXJkKVxufVxuXG5mdW5jdGlvbiBiaW5kR3VhcmQgKGd1YXJkLCBpbnN0YW5jZSkge1xuICBpZiAoaW5zdGFuY2UpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gYm91bmRSb3V0ZUd1YXJkICgpIHtcbiAgICAgIHJldHVybiBndWFyZC5hcHBseShpbnN0YW5jZSwgYXJndW1lbnRzKVxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBleHRyYWN0RW50ZXJHdWFyZHMgKFxuICBhY3RpdmF0ZWQsXG4gIGNicyxcbiAgaXNWYWxpZFxuKSB7XG4gIHJldHVybiBleHRyYWN0R3VhcmRzKFxuICAgIGFjdGl2YXRlZCxcbiAgICAnYmVmb3JlUm91dGVFbnRlcicsXG4gICAgZnVuY3Rpb24gKGd1YXJkLCBfLCBtYXRjaCwga2V5KSB7XG4gICAgICByZXR1cm4gYmluZEVudGVyR3VhcmQoZ3VhcmQsIG1hdGNoLCBrZXksIGNicywgaXNWYWxpZClcbiAgICB9XG4gIClcbn1cblxuZnVuY3Rpb24gYmluZEVudGVyR3VhcmQgKFxuICBndWFyZCxcbiAgbWF0Y2gsXG4gIGtleSxcbiAgY2JzLFxuICBpc1ZhbGlkXG4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHJvdXRlRW50ZXJHdWFyZCAodG8sIGZyb20sIG5leHQpIHtcbiAgICByZXR1cm4gZ3VhcmQodG8sIGZyb20sIGZ1bmN0aW9uIChjYikge1xuICAgICAgaWYgKHR5cGVvZiBjYiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBjYnMucHVzaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgLy8gIzc1MFxuICAgICAgICAgIC8vIGlmIGEgcm91dGVyLXZpZXcgaXMgd3JhcHBlZCB3aXRoIGFuIG91dC1pbiB0cmFuc2l0aW9uLFxuICAgICAgICAgIC8vIHRoZSBpbnN0YW5jZSBtYXkgbm90IGhhdmUgYmVlbiByZWdpc3RlcmVkIGF0IHRoaXMgdGltZS5cbiAgICAgICAgICAvLyB3ZSB3aWxsIG5lZWQgdG8gcG9sbCBmb3IgcmVnaXN0cmF0aW9uIHVudGlsIGN1cnJlbnQgcm91dGVcbiAgICAgICAgICAvLyBpcyBubyBsb25nZXIgdmFsaWQuXG4gICAgICAgICAgcG9sbChjYiwgbWF0Y2guaW5zdGFuY2VzLCBrZXksIGlzVmFsaWQpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIG5leHQoY2IpO1xuICAgIH0pXG4gIH1cbn1cblxuZnVuY3Rpb24gcG9sbCAoXG4gIGNiLCAvLyBzb21laG93IGZsb3cgY2Fubm90IGluZmVyIHRoaXMgaXMgYSBmdW5jdGlvblxuICBpbnN0YW5jZXMsXG4gIGtleSxcbiAgaXNWYWxpZFxuKSB7XG4gIGlmIChcbiAgICBpbnN0YW5jZXNba2V5XSAmJlxuICAgICFpbnN0YW5jZXNba2V5XS5faXNCZWluZ0Rlc3Ryb3llZCAvLyBkbyBub3QgcmV1c2UgYmVpbmcgZGVzdHJveWVkIGluc3RhbmNlXG4gICkge1xuICAgIGNiKGluc3RhbmNlc1trZXldKTtcbiAgfSBlbHNlIGlmIChpc1ZhbGlkKCkpIHtcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgIHBvbGwoY2IsIGluc3RhbmNlcywga2V5LCBpc1ZhbGlkKTtcbiAgICB9LCAxNik7XG4gIH1cbn1cblxuLyogICovXG5cbnZhciBIVE1MNUhpc3RvcnkgPSAvKkBfX1BVUkVfXyovKGZ1bmN0aW9uIChIaXN0b3J5JCQxKSB7XG4gIGZ1bmN0aW9uIEhUTUw1SGlzdG9yeSAocm91dGVyLCBiYXNlKSB7XG4gICAgdmFyIHRoaXMkMSA9IHRoaXM7XG5cbiAgICBIaXN0b3J5JCQxLmNhbGwodGhpcywgcm91dGVyLCBiYXNlKTtcblxuICAgIHZhciBleHBlY3RTY3JvbGwgPSByb3V0ZXIub3B0aW9ucy5zY3JvbGxCZWhhdmlvcjtcbiAgICB2YXIgc3VwcG9ydHNTY3JvbGwgPSBzdXBwb3J0c1B1c2hTdGF0ZSAmJiBleHBlY3RTY3JvbGw7XG5cbiAgICBpZiAoc3VwcG9ydHNTY3JvbGwpIHtcbiAgICAgIHNldHVwU2Nyb2xsKCk7XG4gICAgfVxuXG4gICAgdmFyIGluaXRMb2NhdGlvbiA9IGdldExvY2F0aW9uKHRoaXMuYmFzZSk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3BvcHN0YXRlJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgIHZhciBjdXJyZW50ID0gdGhpcyQxLmN1cnJlbnQ7XG5cbiAgICAgIC8vIEF2b2lkaW5nIGZpcnN0IGBwb3BzdGF0ZWAgZXZlbnQgZGlzcGF0Y2hlZCBpbiBzb21lIGJyb3dzZXJzIGJ1dCBmaXJzdFxuICAgICAgLy8gaGlzdG9yeSByb3V0ZSBub3QgdXBkYXRlZCBzaW5jZSBhc3luYyBndWFyZCBhdCB0aGUgc2FtZSB0aW1lLlxuICAgICAgdmFyIGxvY2F0aW9uID0gZ2V0TG9jYXRpb24odGhpcyQxLmJhc2UpO1xuICAgICAgaWYgKHRoaXMkMS5jdXJyZW50ID09PSBTVEFSVCAmJiBsb2NhdGlvbiA9PT0gaW5pdExvY2F0aW9uKSB7XG4gICAgICAgIHJldHVyblxuICAgICAgfVxuXG4gICAgICB0aGlzJDEudHJhbnNpdGlvblRvKGxvY2F0aW9uLCBmdW5jdGlvbiAocm91dGUpIHtcbiAgICAgICAgaWYgKHN1cHBvcnRzU2Nyb2xsKSB7XG4gICAgICAgICAgaGFuZGxlU2Nyb2xsKHJvdXRlciwgcm91dGUsIGN1cnJlbnQsIHRydWUpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGlmICggSGlzdG9yeSQkMSApIEhUTUw1SGlzdG9yeS5fX3Byb3RvX18gPSBIaXN0b3J5JCQxO1xuICBIVE1MNUhpc3RvcnkucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZSggSGlzdG9yeSQkMSAmJiBIaXN0b3J5JCQxLnByb3RvdHlwZSApO1xuICBIVE1MNUhpc3RvcnkucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gSFRNTDVIaXN0b3J5O1xuXG4gIEhUTUw1SGlzdG9yeS5wcm90b3R5cGUuZ28gPSBmdW5jdGlvbiBnbyAobikge1xuICAgIHdpbmRvdy5oaXN0b3J5LmdvKG4pO1xuICB9O1xuXG4gIEhUTUw1SGlzdG9yeS5wcm90b3R5cGUucHVzaCA9IGZ1bmN0aW9uIHB1c2ggKGxvY2F0aW9uLCBvbkNvbXBsZXRlLCBvbkFib3J0KSB7XG4gICAgdmFyIHRoaXMkMSA9IHRoaXM7XG5cbiAgICB2YXIgcmVmID0gdGhpcztcbiAgICB2YXIgZnJvbVJvdXRlID0gcmVmLmN1cnJlbnQ7XG4gICAgdGhpcy50cmFuc2l0aW9uVG8obG9jYXRpb24sIGZ1bmN0aW9uIChyb3V0ZSkge1xuICAgICAgcHVzaFN0YXRlKGNsZWFuUGF0aCh0aGlzJDEuYmFzZSArIHJvdXRlLmZ1bGxQYXRoKSk7XG4gICAgICBoYW5kbGVTY3JvbGwodGhpcyQxLnJvdXRlciwgcm91dGUsIGZyb21Sb3V0ZSwgZmFsc2UpO1xuICAgICAgb25Db21wbGV0ZSAmJiBvbkNvbXBsZXRlKHJvdXRlKTtcbiAgICB9LCBvbkFib3J0KTtcbiAgfTtcblxuICBIVE1MNUhpc3RvcnkucHJvdG90eXBlLnJlcGxhY2UgPSBmdW5jdGlvbiByZXBsYWNlIChsb2NhdGlvbiwgb25Db21wbGV0ZSwgb25BYm9ydCkge1xuICAgIHZhciB0aGlzJDEgPSB0aGlzO1xuXG4gICAgdmFyIHJlZiA9IHRoaXM7XG4gICAgdmFyIGZyb21Sb3V0ZSA9IHJlZi5jdXJyZW50O1xuICAgIHRoaXMudHJhbnNpdGlvblRvKGxvY2F0aW9uLCBmdW5jdGlvbiAocm91dGUpIHtcbiAgICAgIHJlcGxhY2VTdGF0ZShjbGVhblBhdGgodGhpcyQxLmJhc2UgKyByb3V0ZS5mdWxsUGF0aCkpO1xuICAgICAgaGFuZGxlU2Nyb2xsKHRoaXMkMS5yb3V0ZXIsIHJvdXRlLCBmcm9tUm91dGUsIGZhbHNlKTtcbiAgICAgIG9uQ29tcGxldGUgJiYgb25Db21wbGV0ZShyb3V0ZSk7XG4gICAgfSwgb25BYm9ydCk7XG4gIH07XG5cbiAgSFRNTDVIaXN0b3J5LnByb3RvdHlwZS5lbnN1cmVVUkwgPSBmdW5jdGlvbiBlbnN1cmVVUkwgKHB1c2gpIHtcbiAgICBpZiAoZ2V0TG9jYXRpb24odGhpcy5iYXNlKSAhPT0gdGhpcy5jdXJyZW50LmZ1bGxQYXRoKSB7XG4gICAgICB2YXIgY3VycmVudCA9IGNsZWFuUGF0aCh0aGlzLmJhc2UgKyB0aGlzLmN1cnJlbnQuZnVsbFBhdGgpO1xuICAgICAgcHVzaCA/IHB1c2hTdGF0ZShjdXJyZW50KSA6IHJlcGxhY2VTdGF0ZShjdXJyZW50KTtcbiAgICB9XG4gIH07XG5cbiAgSFRNTDVIaXN0b3J5LnByb3RvdHlwZS5nZXRDdXJyZW50TG9jYXRpb24gPSBmdW5jdGlvbiBnZXRDdXJyZW50TG9jYXRpb24gKCkge1xuICAgIHJldHVybiBnZXRMb2NhdGlvbih0aGlzLmJhc2UpXG4gIH07XG5cbiAgcmV0dXJuIEhUTUw1SGlzdG9yeTtcbn0oSGlzdG9yeSkpO1xuXG5mdW5jdGlvbiBnZXRMb2NhdGlvbiAoYmFzZSkge1xuICB2YXIgcGF0aCA9IGRlY29kZVVSSSh3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUpO1xuICBpZiAoYmFzZSAmJiBwYXRoLmluZGV4T2YoYmFzZSkgPT09IDApIHtcbiAgICBwYXRoID0gcGF0aC5zbGljZShiYXNlLmxlbmd0aCk7XG4gIH1cbiAgcmV0dXJuIChwYXRoIHx8ICcvJykgKyB3aW5kb3cubG9jYXRpb24uc2VhcmNoICsgd2luZG93LmxvY2F0aW9uLmhhc2hcbn1cblxuLyogICovXG5cbnZhciBIYXNoSGlzdG9yeSA9IC8qQF9fUFVSRV9fKi8oZnVuY3Rpb24gKEhpc3RvcnkkJDEpIHtcbiAgZnVuY3Rpb24gSGFzaEhpc3RvcnkgKHJvdXRlciwgYmFzZSwgZmFsbGJhY2spIHtcbiAgICBIaXN0b3J5JCQxLmNhbGwodGhpcywgcm91dGVyLCBiYXNlKTtcbiAgICAvLyBjaGVjayBoaXN0b3J5IGZhbGxiYWNrIGRlZXBsaW5raW5nXG4gICAgaWYgKGZhbGxiYWNrICYmIGNoZWNrRmFsbGJhY2sodGhpcy5iYXNlKSkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIGVuc3VyZVNsYXNoKCk7XG4gIH1cblxuICBpZiAoIEhpc3RvcnkkJDEgKSBIYXNoSGlzdG9yeS5fX3Byb3RvX18gPSBIaXN0b3J5JCQxO1xuICBIYXNoSGlzdG9yeS5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKCBIaXN0b3J5JCQxICYmIEhpc3RvcnkkJDEucHJvdG90eXBlICk7XG4gIEhhc2hIaXN0b3J5LnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IEhhc2hIaXN0b3J5O1xuXG4gIC8vIHRoaXMgaXMgZGVsYXllZCB1bnRpbCB0aGUgYXBwIG1vdW50c1xuICAvLyB0byBhdm9pZCB0aGUgaGFzaGNoYW5nZSBsaXN0ZW5lciBiZWluZyBmaXJlZCB0b28gZWFybHlcbiAgSGFzaEhpc3RvcnkucHJvdG90eXBlLnNldHVwTGlzdGVuZXJzID0gZnVuY3Rpb24gc2V0dXBMaXN0ZW5lcnMgKCkge1xuICAgIHZhciB0aGlzJDEgPSB0aGlzO1xuXG4gICAgdmFyIHJvdXRlciA9IHRoaXMucm91dGVyO1xuICAgIHZhciBleHBlY3RTY3JvbGwgPSByb3V0ZXIub3B0aW9ucy5zY3JvbGxCZWhhdmlvcjtcbiAgICB2YXIgc3VwcG9ydHNTY3JvbGwgPSBzdXBwb3J0c1B1c2hTdGF0ZSAmJiBleHBlY3RTY3JvbGw7XG5cbiAgICBpZiAoc3VwcG9ydHNTY3JvbGwpIHtcbiAgICAgIHNldHVwU2Nyb2xsKCk7XG4gICAgfVxuXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICBzdXBwb3J0c1B1c2hTdGF0ZSA/ICdwb3BzdGF0ZScgOiAnaGFzaGNoYW5nZScsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBjdXJyZW50ID0gdGhpcyQxLmN1cnJlbnQ7XG4gICAgICAgIGlmICghZW5zdXJlU2xhc2goKSkge1xuICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG4gICAgICAgIHRoaXMkMS50cmFuc2l0aW9uVG8oZ2V0SGFzaCgpLCBmdW5jdGlvbiAocm91dGUpIHtcbiAgICAgICAgICBpZiAoc3VwcG9ydHNTY3JvbGwpIHtcbiAgICAgICAgICAgIGhhbmRsZVNjcm9sbCh0aGlzJDEucm91dGVyLCByb3V0ZSwgY3VycmVudCwgdHJ1ZSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICghc3VwcG9ydHNQdXNoU3RhdGUpIHtcbiAgICAgICAgICAgIHJlcGxhY2VIYXNoKHJvdXRlLmZ1bGxQYXRoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICk7XG4gIH07XG5cbiAgSGFzaEhpc3RvcnkucHJvdG90eXBlLnB1c2ggPSBmdW5jdGlvbiBwdXNoIChsb2NhdGlvbiwgb25Db21wbGV0ZSwgb25BYm9ydCkge1xuICAgIHZhciB0aGlzJDEgPSB0aGlzO1xuXG4gICAgdmFyIHJlZiA9IHRoaXM7XG4gICAgdmFyIGZyb21Sb3V0ZSA9IHJlZi5jdXJyZW50O1xuICAgIHRoaXMudHJhbnNpdGlvblRvKFxuICAgICAgbG9jYXRpb24sXG4gICAgICBmdW5jdGlvbiAocm91dGUpIHtcbiAgICAgICAgcHVzaEhhc2gocm91dGUuZnVsbFBhdGgpO1xuICAgICAgICBoYW5kbGVTY3JvbGwodGhpcyQxLnJvdXRlciwgcm91dGUsIGZyb21Sb3V0ZSwgZmFsc2UpO1xuICAgICAgICBvbkNvbXBsZXRlICYmIG9uQ29tcGxldGUocm91dGUpO1xuICAgICAgfSxcbiAgICAgIG9uQWJvcnRcbiAgICApO1xuICB9O1xuXG4gIEhhc2hIaXN0b3J5LnByb3RvdHlwZS5yZXBsYWNlID0gZnVuY3Rpb24gcmVwbGFjZSAobG9jYXRpb24sIG9uQ29tcGxldGUsIG9uQWJvcnQpIHtcbiAgICB2YXIgdGhpcyQxID0gdGhpcztcblxuICAgIHZhciByZWYgPSB0aGlzO1xuICAgIHZhciBmcm9tUm91dGUgPSByZWYuY3VycmVudDtcbiAgICB0aGlzLnRyYW5zaXRpb25UbyhcbiAgICAgIGxvY2F0aW9uLFxuICAgICAgZnVuY3Rpb24gKHJvdXRlKSB7XG4gICAgICAgIHJlcGxhY2VIYXNoKHJvdXRlLmZ1bGxQYXRoKTtcbiAgICAgICAgaGFuZGxlU2Nyb2xsKHRoaXMkMS5yb3V0ZXIsIHJvdXRlLCBmcm9tUm91dGUsIGZhbHNlKTtcbiAgICAgICAgb25Db21wbGV0ZSAmJiBvbkNvbXBsZXRlKHJvdXRlKTtcbiAgICAgIH0sXG4gICAgICBvbkFib3J0XG4gICAgKTtcbiAgfTtcblxuICBIYXNoSGlzdG9yeS5wcm90b3R5cGUuZ28gPSBmdW5jdGlvbiBnbyAobikge1xuICAgIHdpbmRvdy5oaXN0b3J5LmdvKG4pO1xuICB9O1xuXG4gIEhhc2hIaXN0b3J5LnByb3RvdHlwZS5lbnN1cmVVUkwgPSBmdW5jdGlvbiBlbnN1cmVVUkwgKHB1c2gpIHtcbiAgICB2YXIgY3VycmVudCA9IHRoaXMuY3VycmVudC5mdWxsUGF0aDtcbiAgICBpZiAoZ2V0SGFzaCgpICE9PSBjdXJyZW50KSB7XG4gICAgICBwdXNoID8gcHVzaEhhc2goY3VycmVudCkgOiByZXBsYWNlSGFzaChjdXJyZW50KTtcbiAgICB9XG4gIH07XG5cbiAgSGFzaEhpc3RvcnkucHJvdG90eXBlLmdldEN1cnJlbnRMb2NhdGlvbiA9IGZ1bmN0aW9uIGdldEN1cnJlbnRMb2NhdGlvbiAoKSB7XG4gICAgcmV0dXJuIGdldEhhc2goKVxuICB9O1xuXG4gIHJldHVybiBIYXNoSGlzdG9yeTtcbn0oSGlzdG9yeSkpO1xuXG5mdW5jdGlvbiBjaGVja0ZhbGxiYWNrIChiYXNlKSB7XG4gIHZhciBsb2NhdGlvbiA9IGdldExvY2F0aW9uKGJhc2UpO1xuICBpZiAoIS9eXFwvIy8udGVzdChsb2NhdGlvbikpIHtcbiAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShjbGVhblBhdGgoYmFzZSArICcvIycgKyBsb2NhdGlvbikpO1xuICAgIHJldHVybiB0cnVlXG4gIH1cbn1cblxuZnVuY3Rpb24gZW5zdXJlU2xhc2ggKCkge1xuICB2YXIgcGF0aCA9IGdldEhhc2goKTtcbiAgaWYgKHBhdGguY2hhckF0KDApID09PSAnLycpIHtcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG4gIHJlcGxhY2VIYXNoKCcvJyArIHBhdGgpO1xuICByZXR1cm4gZmFsc2Vcbn1cblxuZnVuY3Rpb24gZ2V0SGFzaCAoKSB7XG4gIC8vIFdlIGNhbid0IHVzZSB3aW5kb3cubG9jYXRpb24uaGFzaCBoZXJlIGJlY2F1c2UgaXQncyBub3RcbiAgLy8gY29uc2lzdGVudCBhY3Jvc3MgYnJvd3NlcnMgLSBGaXJlZm94IHdpbGwgcHJlLWRlY29kZSBpdCFcbiAgdmFyIGhyZWYgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgdmFyIGluZGV4ID0gaHJlZi5pbmRleE9mKCcjJyk7XG4gIC8vIGVtcHR5IHBhdGhcbiAgaWYgKGluZGV4IDwgMCkgeyByZXR1cm4gJycgfVxuXG4gIGhyZWYgPSBocmVmLnNsaWNlKGluZGV4ICsgMSk7XG4gIC8vIGRlY29kZSB0aGUgaGFzaCBidXQgbm90IHRoZSBzZWFyY2ggb3IgaGFzaFxuICAvLyBhcyBzZWFyY2gocXVlcnkpIGlzIGFscmVhZHkgZGVjb2RlZFxuICAvLyBodHRwczovL2dpdGh1Yi5jb20vdnVlanMvdnVlLXJvdXRlci9pc3N1ZXMvMjcwOFxuICB2YXIgc2VhcmNoSW5kZXggPSBocmVmLmluZGV4T2YoJz8nKTtcbiAgaWYgKHNlYXJjaEluZGV4IDwgMCkge1xuICAgIHZhciBoYXNoSW5kZXggPSBocmVmLmluZGV4T2YoJyMnKTtcbiAgICBpZiAoaGFzaEluZGV4ID4gLTEpIHtcbiAgICAgIGhyZWYgPSBkZWNvZGVVUkkoaHJlZi5zbGljZSgwLCBoYXNoSW5kZXgpKSArIGhyZWYuc2xpY2UoaGFzaEluZGV4KTtcbiAgICB9IGVsc2UgeyBocmVmID0gZGVjb2RlVVJJKGhyZWYpOyB9XG4gIH0gZWxzZSB7XG4gICAgaWYgKHNlYXJjaEluZGV4ID4gLTEpIHtcbiAgICAgIGhyZWYgPSBkZWNvZGVVUkkoaHJlZi5zbGljZSgwLCBzZWFyY2hJbmRleCkpICsgaHJlZi5zbGljZShzZWFyY2hJbmRleCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGhyZWZcbn1cblxuZnVuY3Rpb24gZ2V0VXJsIChwYXRoKSB7XG4gIHZhciBocmVmID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gIHZhciBpID0gaHJlZi5pbmRleE9mKCcjJyk7XG4gIHZhciBiYXNlID0gaSA+PSAwID8gaHJlZi5zbGljZSgwLCBpKSA6IGhyZWY7XG4gIHJldHVybiAoYmFzZSArIFwiI1wiICsgcGF0aClcbn1cblxuZnVuY3Rpb24gcHVzaEhhc2ggKHBhdGgpIHtcbiAgaWYgKHN1cHBvcnRzUHVzaFN0YXRlKSB7XG4gICAgcHVzaFN0YXRlKGdldFVybChwYXRoKSk7XG4gIH0gZWxzZSB7XG4gICAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBwYXRoO1xuICB9XG59XG5cbmZ1bmN0aW9uIHJlcGxhY2VIYXNoIChwYXRoKSB7XG4gIGlmIChzdXBwb3J0c1B1c2hTdGF0ZSkge1xuICAgIHJlcGxhY2VTdGF0ZShnZXRVcmwocGF0aCkpO1xuICB9IGVsc2Uge1xuICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGdldFVybChwYXRoKSk7XG4gIH1cbn1cblxuLyogICovXG5cbnZhciBBYnN0cmFjdEhpc3RvcnkgPSAvKkBfX1BVUkVfXyovKGZ1bmN0aW9uIChIaXN0b3J5JCQxKSB7XG4gIGZ1bmN0aW9uIEFic3RyYWN0SGlzdG9yeSAocm91dGVyLCBiYXNlKSB7XG4gICAgSGlzdG9yeSQkMS5jYWxsKHRoaXMsIHJvdXRlciwgYmFzZSk7XG4gICAgdGhpcy5zdGFjayA9IFtdO1xuICAgIHRoaXMuaW5kZXggPSAtMTtcbiAgfVxuXG4gIGlmICggSGlzdG9yeSQkMSApIEFic3RyYWN0SGlzdG9yeS5fX3Byb3RvX18gPSBIaXN0b3J5JCQxO1xuICBBYnN0cmFjdEhpc3RvcnkucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZSggSGlzdG9yeSQkMSAmJiBIaXN0b3J5JCQxLnByb3RvdHlwZSApO1xuICBBYnN0cmFjdEhpc3RvcnkucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gQWJzdHJhY3RIaXN0b3J5O1xuXG4gIEFic3RyYWN0SGlzdG9yeS5wcm90b3R5cGUucHVzaCA9IGZ1bmN0aW9uIHB1c2ggKGxvY2F0aW9uLCBvbkNvbXBsZXRlLCBvbkFib3J0KSB7XG4gICAgdmFyIHRoaXMkMSA9IHRoaXM7XG5cbiAgICB0aGlzLnRyYW5zaXRpb25UbyhcbiAgICAgIGxvY2F0aW9uLFxuICAgICAgZnVuY3Rpb24gKHJvdXRlKSB7XG4gICAgICAgIHRoaXMkMS5zdGFjayA9IHRoaXMkMS5zdGFjay5zbGljZSgwLCB0aGlzJDEuaW5kZXggKyAxKS5jb25jYXQocm91dGUpO1xuICAgICAgICB0aGlzJDEuaW5kZXgrKztcbiAgICAgICAgb25Db21wbGV0ZSAmJiBvbkNvbXBsZXRlKHJvdXRlKTtcbiAgICAgIH0sXG4gICAgICBvbkFib3J0XG4gICAgKTtcbiAgfTtcblxuICBBYnN0cmFjdEhpc3RvcnkucHJvdG90eXBlLnJlcGxhY2UgPSBmdW5jdGlvbiByZXBsYWNlIChsb2NhdGlvbiwgb25Db21wbGV0ZSwgb25BYm9ydCkge1xuICAgIHZhciB0aGlzJDEgPSB0aGlzO1xuXG4gICAgdGhpcy50cmFuc2l0aW9uVG8oXG4gICAgICBsb2NhdGlvbixcbiAgICAgIGZ1bmN0aW9uIChyb3V0ZSkge1xuICAgICAgICB0aGlzJDEuc3RhY2sgPSB0aGlzJDEuc3RhY2suc2xpY2UoMCwgdGhpcyQxLmluZGV4KS5jb25jYXQocm91dGUpO1xuICAgICAgICBvbkNvbXBsZXRlICYmIG9uQ29tcGxldGUocm91dGUpO1xuICAgICAgfSxcbiAgICAgIG9uQWJvcnRcbiAgICApO1xuICB9O1xuXG4gIEFic3RyYWN0SGlzdG9yeS5wcm90b3R5cGUuZ28gPSBmdW5jdGlvbiBnbyAobikge1xuICAgIHZhciB0aGlzJDEgPSB0aGlzO1xuXG4gICAgdmFyIHRhcmdldEluZGV4ID0gdGhpcy5pbmRleCArIG47XG4gICAgaWYgKHRhcmdldEluZGV4IDwgMCB8fCB0YXJnZXRJbmRleCA+PSB0aGlzLnN0YWNrLmxlbmd0aCkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIHZhciByb3V0ZSA9IHRoaXMuc3RhY2tbdGFyZ2V0SW5kZXhdO1xuICAgIHRoaXMuY29uZmlybVRyYW5zaXRpb24oXG4gICAgICByb3V0ZSxcbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcyQxLmluZGV4ID0gdGFyZ2V0SW5kZXg7XG4gICAgICAgIHRoaXMkMS51cGRhdGVSb3V0ZShyb3V0ZSk7XG4gICAgICB9LFxuICAgICAgZnVuY3Rpb24gKGVycikge1xuICAgICAgICBpZiAoaXNFeHRlbmRlZEVycm9yKE5hdmlnYXRpb25EdXBsaWNhdGVkLCBlcnIpKSB7XG4gICAgICAgICAgdGhpcyQxLmluZGV4ID0gdGFyZ2V0SW5kZXg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICApO1xuICB9O1xuXG4gIEFic3RyYWN0SGlzdG9yeS5wcm90b3R5cGUuZ2V0Q3VycmVudExvY2F0aW9uID0gZnVuY3Rpb24gZ2V0Q3VycmVudExvY2F0aW9uICgpIHtcbiAgICB2YXIgY3VycmVudCA9IHRoaXMuc3RhY2tbdGhpcy5zdGFjay5sZW5ndGggLSAxXTtcbiAgICByZXR1cm4gY3VycmVudCA/IGN1cnJlbnQuZnVsbFBhdGggOiAnLydcbiAgfTtcblxuICBBYnN0cmFjdEhpc3RvcnkucHJvdG90eXBlLmVuc3VyZVVSTCA9IGZ1bmN0aW9uIGVuc3VyZVVSTCAoKSB7XG4gICAgLy8gbm9vcFxuICB9O1xuXG4gIHJldHVybiBBYnN0cmFjdEhpc3Rvcnk7XG59KEhpc3RvcnkpKTtcblxuLyogICovXG5cblxuXG52YXIgVnVlUm91dGVyID0gZnVuY3Rpb24gVnVlUm91dGVyIChvcHRpb25zKSB7XG4gIGlmICggb3B0aW9ucyA9PT0gdm9pZCAwICkgb3B0aW9ucyA9IHt9O1xuXG4gIHRoaXMuYXBwID0gbnVsbDtcbiAgdGhpcy5hcHBzID0gW107XG4gIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gIHRoaXMuYmVmb3JlSG9va3MgPSBbXTtcbiAgdGhpcy5yZXNvbHZlSG9va3MgPSBbXTtcbiAgdGhpcy5hZnRlckhvb2tzID0gW107XG4gIHRoaXMubWF0Y2hlciA9IGNyZWF0ZU1hdGNoZXIob3B0aW9ucy5yb3V0ZXMgfHwgW10sIHRoaXMpO1xuXG4gIHZhciBtb2RlID0gb3B0aW9ucy5tb2RlIHx8ICdoYXNoJztcbiAgdGhpcy5mYWxsYmFjayA9IG1vZGUgPT09ICdoaXN0b3J5JyAmJiAhc3VwcG9ydHNQdXNoU3RhdGUgJiYgb3B0aW9ucy5mYWxsYmFjayAhPT0gZmFsc2U7XG4gIGlmICh0aGlzLmZhbGxiYWNrKSB7XG4gICAgbW9kZSA9ICdoYXNoJztcbiAgfVxuICBpZiAoIWluQnJvd3Nlcikge1xuICAgIG1vZGUgPSAnYWJzdHJhY3QnO1xuICB9XG4gIHRoaXMubW9kZSA9IG1vZGU7XG5cbiAgc3dpdGNoIChtb2RlKSB7XG4gICAgY2FzZSAnaGlzdG9yeSc6XG4gICAgICB0aGlzLmhpc3RvcnkgPSBuZXcgSFRNTDVIaXN0b3J5KHRoaXMsIG9wdGlvbnMuYmFzZSk7XG4gICAgICBicmVha1xuICAgIGNhc2UgJ2hhc2gnOlxuICAgICAgdGhpcy5oaXN0b3J5ID0gbmV3IEhhc2hIaXN0b3J5KHRoaXMsIG9wdGlvbnMuYmFzZSwgdGhpcy5mYWxsYmFjayk7XG4gICAgICBicmVha1xuICAgIGNhc2UgJ2Fic3RyYWN0JzpcbiAgICAgIHRoaXMuaGlzdG9yeSA9IG5ldyBBYnN0cmFjdEhpc3RvcnkodGhpcywgb3B0aW9ucy5iYXNlKTtcbiAgICAgIGJyZWFrXG4gICAgZGVmYXVsdDpcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIGFzc2VydChmYWxzZSwgKFwiaW52YWxpZCBtb2RlOiBcIiArIG1vZGUpKTtcbiAgICAgIH1cbiAgfVxufTtcblxudmFyIHByb3RvdHlwZUFjY2Vzc29ycyA9IHsgY3VycmVudFJvdXRlOiB7IGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH07XG5cblZ1ZVJvdXRlci5wcm90b3R5cGUubWF0Y2ggPSBmdW5jdGlvbiBtYXRjaCAoXG4gIHJhdyxcbiAgY3VycmVudCxcbiAgcmVkaXJlY3RlZEZyb21cbikge1xuICByZXR1cm4gdGhpcy5tYXRjaGVyLm1hdGNoKHJhdywgY3VycmVudCwgcmVkaXJlY3RlZEZyb20pXG59O1xuXG5wcm90b3R5cGVBY2Nlc3NvcnMuY3VycmVudFJvdXRlLmdldCA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXMuaGlzdG9yeSAmJiB0aGlzLmhpc3RvcnkuY3VycmVudFxufTtcblxuVnVlUm91dGVyLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gaW5pdCAoYXBwIC8qIFZ1ZSBjb21wb25lbnQgaW5zdGFuY2UgKi8pIHtcbiAgICB2YXIgdGhpcyQxID0gdGhpcztcblxuICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGFzc2VydChcbiAgICBpbnN0YWxsLmluc3RhbGxlZCxcbiAgICBcIm5vdCBpbnN0YWxsZWQuIE1ha2Ugc3VyZSB0byBjYWxsIGBWdWUudXNlKFZ1ZVJvdXRlcilgIFwiICtcbiAgICBcImJlZm9yZSBjcmVhdGluZyByb290IGluc3RhbmNlLlwiXG4gICk7XG5cbiAgdGhpcy5hcHBzLnB1c2goYXBwKTtcblxuICAvLyBzZXQgdXAgYXBwIGRlc3Ryb3llZCBoYW5kbGVyXG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS92dWVqcy92dWUtcm91dGVyL2lzc3Vlcy8yNjM5XG4gIGFwcC4kb25jZSgnaG9vazpkZXN0cm95ZWQnLCBmdW5jdGlvbiAoKSB7XG4gICAgLy8gY2xlYW4gb3V0IGFwcCBmcm9tIHRoaXMuYXBwcyBhcnJheSBvbmNlIGRlc3Ryb3llZFxuICAgIHZhciBpbmRleCA9IHRoaXMkMS5hcHBzLmluZGV4T2YoYXBwKTtcbiAgICBpZiAoaW5kZXggPiAtMSkgeyB0aGlzJDEuYXBwcy5zcGxpY2UoaW5kZXgsIDEpOyB9XG4gICAgLy8gZW5zdXJlIHdlIHN0aWxsIGhhdmUgYSBtYWluIGFwcCBvciBudWxsIGlmIG5vIGFwcHNcbiAgICAvLyB3ZSBkbyBub3QgcmVsZWFzZSB0aGUgcm91dGVyIHNvIGl0IGNhbiBiZSByZXVzZWRcbiAgICBpZiAodGhpcyQxLmFwcCA9PT0gYXBwKSB7IHRoaXMkMS5hcHAgPSB0aGlzJDEuYXBwc1swXSB8fCBudWxsOyB9XG4gIH0pO1xuXG4gIC8vIG1haW4gYXBwIHByZXZpb3VzbHkgaW5pdGlhbGl6ZWRcbiAgLy8gcmV0dXJuIGFzIHdlIGRvbid0IG5lZWQgdG8gc2V0IHVwIG5ldyBoaXN0b3J5IGxpc3RlbmVyXG4gIGlmICh0aGlzLmFwcCkge1xuICAgIHJldHVyblxuICB9XG5cbiAgdGhpcy5hcHAgPSBhcHA7XG5cbiAgdmFyIGhpc3RvcnkgPSB0aGlzLmhpc3Rvcnk7XG5cbiAgaWYgKGhpc3RvcnkgaW5zdGFuY2VvZiBIVE1MNUhpc3RvcnkpIHtcbiAgICBoaXN0b3J5LnRyYW5zaXRpb25UbyhoaXN0b3J5LmdldEN1cnJlbnRMb2NhdGlvbigpKTtcbiAgfSBlbHNlIGlmIChoaXN0b3J5IGluc3RhbmNlb2YgSGFzaEhpc3RvcnkpIHtcbiAgICB2YXIgc2V0dXBIYXNoTGlzdGVuZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBoaXN0b3J5LnNldHVwTGlzdGVuZXJzKCk7XG4gICAgfTtcbiAgICBoaXN0b3J5LnRyYW5zaXRpb25UbyhcbiAgICAgIGhpc3RvcnkuZ2V0Q3VycmVudExvY2F0aW9uKCksXG4gICAgICBzZXR1cEhhc2hMaXN0ZW5lcixcbiAgICAgIHNldHVwSGFzaExpc3RlbmVyXG4gICAgKTtcbiAgfVxuXG4gIGhpc3RvcnkubGlzdGVuKGZ1bmN0aW9uIChyb3V0ZSkge1xuICAgIHRoaXMkMS5hcHBzLmZvckVhY2goZnVuY3Rpb24gKGFwcCkge1xuICAgICAgYXBwLl9yb3V0ZSA9IHJvdXRlO1xuICAgIH0pO1xuICB9KTtcbn07XG5cblZ1ZVJvdXRlci5wcm90b3R5cGUuYmVmb3JlRWFjaCA9IGZ1bmN0aW9uIGJlZm9yZUVhY2ggKGZuKSB7XG4gIHJldHVybiByZWdpc3Rlckhvb2sodGhpcy5iZWZvcmVIb29rcywgZm4pXG59O1xuXG5WdWVSb3V0ZXIucHJvdG90eXBlLmJlZm9yZVJlc29sdmUgPSBmdW5jdGlvbiBiZWZvcmVSZXNvbHZlIChmbikge1xuICByZXR1cm4gcmVnaXN0ZXJIb29rKHRoaXMucmVzb2x2ZUhvb2tzLCBmbilcbn07XG5cblZ1ZVJvdXRlci5wcm90b3R5cGUuYWZ0ZXJFYWNoID0gZnVuY3Rpb24gYWZ0ZXJFYWNoIChmbikge1xuICByZXR1cm4gcmVnaXN0ZXJIb29rKHRoaXMuYWZ0ZXJIb29rcywgZm4pXG59O1xuXG5WdWVSb3V0ZXIucHJvdG90eXBlLm9uUmVhZHkgPSBmdW5jdGlvbiBvblJlYWR5IChjYiwgZXJyb3JDYikge1xuICB0aGlzLmhpc3Rvcnkub25SZWFkeShjYiwgZXJyb3JDYik7XG59O1xuXG5WdWVSb3V0ZXIucHJvdG90eXBlLm9uRXJyb3IgPSBmdW5jdGlvbiBvbkVycm9yIChlcnJvckNiKSB7XG4gIHRoaXMuaGlzdG9yeS5vbkVycm9yKGVycm9yQ2IpO1xufTtcblxuVnVlUm91dGVyLnByb3RvdHlwZS5wdXNoID0gZnVuY3Rpb24gcHVzaCAobG9jYXRpb24sIG9uQ29tcGxldGUsIG9uQWJvcnQpIHtcbiAgICB2YXIgdGhpcyQxID0gdGhpcztcblxuICAvLyAkZmxvdy1kaXNhYmxlLWxpbmVcbiAgaWYgKCFvbkNvbXBsZXRlICYmICFvbkFib3J0ICYmIHR5cGVvZiBQcm9taXNlICE9PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICB0aGlzJDEuaGlzdG9yeS5wdXNoKGxvY2F0aW9uLCByZXNvbHZlLCByZWplY3QpO1xuICAgIH0pXG4gIH0gZWxzZSB7XG4gICAgdGhpcy5oaXN0b3J5LnB1c2gobG9jYXRpb24sIG9uQ29tcGxldGUsIG9uQWJvcnQpO1xuICB9XG59O1xuXG5WdWVSb3V0ZXIucHJvdG90eXBlLnJlcGxhY2UgPSBmdW5jdGlvbiByZXBsYWNlIChsb2NhdGlvbiwgb25Db21wbGV0ZSwgb25BYm9ydCkge1xuICAgIHZhciB0aGlzJDEgPSB0aGlzO1xuXG4gIC8vICRmbG93LWRpc2FibGUtbGluZVxuICBpZiAoIW9uQ29tcGxldGUgJiYgIW9uQWJvcnQgJiYgdHlwZW9mIFByb21pc2UgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHRoaXMkMS5oaXN0b3J5LnJlcGxhY2UobG9jYXRpb24sIHJlc29sdmUsIHJlamVjdCk7XG4gICAgfSlcbiAgfSBlbHNlIHtcbiAgICB0aGlzLmhpc3RvcnkucmVwbGFjZShsb2NhdGlvbiwgb25Db21wbGV0ZSwgb25BYm9ydCk7XG4gIH1cbn07XG5cblZ1ZVJvdXRlci5wcm90b3R5cGUuZ28gPSBmdW5jdGlvbiBnbyAobikge1xuICB0aGlzLmhpc3RvcnkuZ28obik7XG59O1xuXG5WdWVSb3V0ZXIucHJvdG90eXBlLmJhY2sgPSBmdW5jdGlvbiBiYWNrICgpIHtcbiAgdGhpcy5nbygtMSk7XG59O1xuXG5WdWVSb3V0ZXIucHJvdG90eXBlLmZvcndhcmQgPSBmdW5jdGlvbiBmb3J3YXJkICgpIHtcbiAgdGhpcy5nbygxKTtcbn07XG5cblZ1ZVJvdXRlci5wcm90b3R5cGUuZ2V0TWF0Y2hlZENvbXBvbmVudHMgPSBmdW5jdGlvbiBnZXRNYXRjaGVkQ29tcG9uZW50cyAodG8pIHtcbiAgdmFyIHJvdXRlID0gdG9cbiAgICA/IHRvLm1hdGNoZWRcbiAgICAgID8gdG9cbiAgICAgIDogdGhpcy5yZXNvbHZlKHRvKS5yb3V0ZVxuICAgIDogdGhpcy5jdXJyZW50Um91dGU7XG4gIGlmICghcm91dGUpIHtcbiAgICByZXR1cm4gW11cbiAgfVxuICByZXR1cm4gW10uY29uY2F0LmFwcGx5KFtdLCByb3V0ZS5tYXRjaGVkLm1hcChmdW5jdGlvbiAobSkge1xuICAgIHJldHVybiBPYmplY3Qua2V5cyhtLmNvbXBvbmVudHMpLm1hcChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICByZXR1cm4gbS5jb21wb25lbnRzW2tleV1cbiAgICB9KVxuICB9KSlcbn07XG5cblZ1ZVJvdXRlci5wcm90b3R5cGUucmVzb2x2ZSA9IGZ1bmN0aW9uIHJlc29sdmUgKFxuICB0byxcbiAgY3VycmVudCxcbiAgYXBwZW5kXG4pIHtcbiAgY3VycmVudCA9IGN1cnJlbnQgfHwgdGhpcy5oaXN0b3J5LmN1cnJlbnQ7XG4gIHZhciBsb2NhdGlvbiA9IG5vcm1hbGl6ZUxvY2F0aW9uKFxuICAgIHRvLFxuICAgIGN1cnJlbnQsXG4gICAgYXBwZW5kLFxuICAgIHRoaXNcbiAgKTtcbiAgdmFyIHJvdXRlID0gdGhpcy5tYXRjaChsb2NhdGlvbiwgY3VycmVudCk7XG4gIHZhciBmdWxsUGF0aCA9IHJvdXRlLnJlZGlyZWN0ZWRGcm9tIHx8IHJvdXRlLmZ1bGxQYXRoO1xuICB2YXIgYmFzZSA9IHRoaXMuaGlzdG9yeS5iYXNlO1xuICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYoYmFzZSwgZnVsbFBhdGgsIHRoaXMubW9kZSk7XG4gIHJldHVybiB7XG4gICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgIHJvdXRlOiByb3V0ZSxcbiAgICBocmVmOiBocmVmLFxuICAgIC8vIGZvciBiYWNrd2FyZHMgY29tcGF0XG4gICAgbm9ybWFsaXplZFRvOiBsb2NhdGlvbixcbiAgICByZXNvbHZlZDogcm91dGVcbiAgfVxufTtcblxuVnVlUm91dGVyLnByb3RvdHlwZS5hZGRSb3V0ZXMgPSBmdW5jdGlvbiBhZGRSb3V0ZXMgKHJvdXRlcykge1xuICB0aGlzLm1hdGNoZXIuYWRkUm91dGVzKHJvdXRlcyk7XG4gIGlmICh0aGlzLmhpc3RvcnkuY3VycmVudCAhPT0gU1RBUlQpIHtcbiAgICB0aGlzLmhpc3RvcnkudHJhbnNpdGlvblRvKHRoaXMuaGlzdG9yeS5nZXRDdXJyZW50TG9jYXRpb24oKSk7XG4gIH1cbn07XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKCBWdWVSb3V0ZXIucHJvdG90eXBlLCBwcm90b3R5cGVBY2Nlc3NvcnMgKTtcblxuZnVuY3Rpb24gcmVnaXN0ZXJIb29rIChsaXN0LCBmbikge1xuICBsaXN0LnB1c2goZm4pO1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBpID0gbGlzdC5pbmRleE9mKGZuKTtcbiAgICBpZiAoaSA+IC0xKSB7IGxpc3Quc3BsaWNlKGksIDEpOyB9XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlSHJlZiAoYmFzZSwgZnVsbFBhdGgsIG1vZGUpIHtcbiAgdmFyIHBhdGggPSBtb2RlID09PSAnaGFzaCcgPyAnIycgKyBmdWxsUGF0aCA6IGZ1bGxQYXRoO1xuICByZXR1cm4gYmFzZSA/IGNsZWFuUGF0aChiYXNlICsgJy8nICsgcGF0aCkgOiBwYXRoXG59XG5cblZ1ZVJvdXRlci5pbnN0YWxsID0gaW5zdGFsbDtcblZ1ZVJvdXRlci52ZXJzaW9uID0gJzMuMS4yJztcblxuaWYgKGluQnJvd3NlciAmJiB3aW5kb3cuVnVlKSB7XG4gIHdpbmRvdy5WdWUudXNlKFZ1ZVJvdXRlcik7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFZ1ZVJvdXRlcjtcbiIsImltcG9ydCBWdWUgZnJvbSAndnVlJ1xuaW1wb3J0IFZ1ZVJvdXRlciBmcm9tICd2dWUtcm91dGVyJ1xuY29uc3QgSW5kZXggPSAoKSA9PiBpbXBvcnQoLyogd2VicGFja0NodW5rTmFtZTogXCJpbmRleFwiICovICd+cGFnZXMvaW5kZXgudnVlJylcbmNvbnN0IFNpbmdsZVZpZGVvID0gKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tDaHVua05hbWU6IFwic2luZ2xlLXZpZGVvXCIgKi8gJ35wYWdlcy92aWRlb3Mvc2luZ2xlLnZ1ZScpXG5jb25zdCBTZWFyY2ggPSAoKSA9PiBpbXBvcnQoLyogd2VicGFja0NodW5rTmFtZTogXCJzZWFyY2hcIiAqLyAnfnBhZ2VzL3NlYXJjaC52dWUnKVxuY29uc3QgVG9waWNzID0gKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tDaHVua05hbWU6IFwidG9waWNzXCIgKi8gJ35wYWdlcy90b3BpY3MvaW5kZXgudnVlJylcbmNvbnN0IFNpbmdsZVRvcGljID0gKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tDaHVua05hbWU6IFwic2luZ2xlLXRvcGljXCIgKi8gJ35wYWdlcy90b3BpY3Mvc2luZ2xlLnZ1ZScpXG5jb25zdCBUb3BpY1ZpZGVvcyA9ICgpID0+IGltcG9ydCgvKiB3ZWJwYWNrQ2h1bmtOYW1lOiBcInRvcGljLXZpZGVvc1wiICovICd+cGFnZXMvdG9waWNzL3ZpZGVvcy52dWUnKVxuY29uc3QgU2luZ2xlQ2hhbm5lbCA9ICgpID0+IGltcG9ydCgvKiB3ZWJwYWNrQ2h1bmtOYW1lOiBcInNpbmdsZS1jaGFubmVsXCIgKi8gJ35wYWdlcy9jaGFubmVscy9zaW5nbGUudnVlJylcbmNvbnN0IENoYW5uZWxBYm91dCA9ICgpID0+IGltcG9ydCgvKiB3ZWJwYWNrQ2h1bmtOYW1lOiBcImNoYW5uZWwtYWJvdXRcIiAqLyAnfnBhZ2VzL2NoYW5uZWxzL2Fib3V0LnZ1ZScpXG5jb25zdCBDaGFubmVsVmlkZW9zID0gKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tDaHVua05hbWU6IFwiY2hhbm5lbC12aWRlb3NcIiAqLyAnfnBhZ2VzL2NoYW5uZWxzL3ZpZGVvcy52dWUnKVxuXG5WdWUudXNlKFZ1ZVJvdXRlcilcblxuY29uc3Qgcm91dGVzID0gW1xuICB7IHBhdGg6ICcvJywgY29tcG9uZW50OiBJbmRleCwgbWV0YTogeyBzY3JvbGxUb3A6IHRydWUgfSB9LFxuICB7IHBhdGg6ICcvdmlkZW8vOmlkJywgbmFtZTogJ3ZpZGVvJywgY29tcG9uZW50OiBTaW5nbGVWaWRlbywgbWV0YTogeyBzY3JvbGxUb3A6IHRydWUgfSB9LFxuICB7IHBhdGg6ICcvc2VhcmNoKicsIG5hbWU6ICdzZWFyY2gnLCBjb21wb25lbnQ6IFNlYXJjaCwgbWV0YTogeyBzY3JvbGxUb3A6IHRydWUgfSB9LFxuICB7IHBhdGg6ICcvdG9waWNzJywgbmFtZTogJ3RvcGljcycsIGNvbXBvbmVudDogVG9waWNzLCBtZXRhOiB7IHNjcm9sbFRvcDogdHJ1ZSB9IH0sXG4gIHtcbiAgICBwYXRoOiAnL3RvcGljLzppZCcsXG4gICAgbmFtZTogJ3RvcGljJyxcbiAgICBjb21wb25lbnQ6IFNpbmdsZVRvcGljLFxuICAgIG1ldGE6IHsgc2Nyb2xsVG9wOiB0cnVlIH0sXG4gICAgcmVkaXJlY3Q6IHsgbmFtZTogJ3RvcGljLXBvcHVsYXItdmlkZW9zJyB9LFxuICAgIGNoaWxkcmVuOiBbXG4gICAgICB7XG4gICAgICAgIHBhdGg6ICdyZWNlbnQnLFxuICAgICAgICBuYW1lOiAndG9waWMtcmVjZW50LXZpZGVvcycsXG4gICAgICAgIGNvbXBvbmVudDogVG9waWNWaWRlb3MsXG4gICAgICAgIG1ldGE6IHsgc2Nyb2xsVG9wOiBmYWxzZSwgb3JkZXI6ICdkYXRlJyB9XG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXRoOiAncG9wdWxhcicsXG4gICAgICAgIG5hbWU6ICd0b3BpYy1wb3B1bGFyLXZpZGVvcycsXG4gICAgICAgIGNvbXBvbmVudDogVG9waWNWaWRlb3MsXG4gICAgICAgIG1ldGE6IHsgc2Nyb2xsVG9wOiBmYWxzZSwgb3JkZXI6ICd2aWV3Q291bnQnIH1cbiAgICAgIH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICBwYXRoOiAnL2NoYW5uZWwvOmlkJyxcbiAgICBuYW1lOiAnY2hhbm5lbCcsXG4gICAgY29tcG9uZW50OiBTaW5nbGVDaGFubmVsLFxuICAgIG1ldGE6IHsgc2Nyb2xsVG9wOiB0cnVlIH0sXG4gICAgcmVkaXJlY3Q6IHsgbmFtZTogJ2NoYW5uZWwtcmVjZW50LXZpZGVvcycgfSxcbiAgICBjaGlsZHJlbjogW1xuICAgICAge1xuICAgICAgICBwYXRoOiAnYWJvdXQnLFxuICAgICAgICBuYW1lOiAnY2hhbm5lbC1hYm91dCcsXG4gICAgICAgIGNvbXBvbmVudDogQ2hhbm5lbEFib3V0LFxuICAgICAgICBtZXRhOiB7IHNjcm9sbFRvcDogZmFsc2UgfVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0aDogJ3VwbG9hZHMnLFxuICAgICAgICBuYW1lOiAnY2hhbm5lbC1yZWNlbnQtdmlkZW9zJyxcbiAgICAgICAgY29tcG9uZW50OiBDaGFubmVsVmlkZW9zLFxuICAgICAgICBtZXRhOiB7IHNjcm9sbFRvcDogZmFsc2UsIG9yZGVyOiAnZGF0ZScgfVxuICAgICAgfVxuICAgIF1cbiAgfVxuXVxuXG5jb25zdCByb3V0ZXIgPSBuZXcgVnVlUm91dGVyKHtcbiAgcm91dGVzLFxuICBsaW5rQWN0aXZlQ2xhc3M6ICdpcy1hY3RpdmUnXG59KVxuXG5yb3V0ZXIuYmVmb3JlRWFjaCgodG8sIGZyb20sIG5leHQpID0+IHtcbiAgaWYodG8ubWV0YS5zY3JvbGxUb3AgfHwgZnJvbS5tZXRhLnNjcm9sbFRvcCkge1xuICAgIHdpbmRvdy5zY3JvbGxUbygwLCAwKVxuICB9XG4gIG5leHQoKVxufSlcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyXG4iLCJpbXBvcnQgJ35hc3NldHMvc2Fzcy9zdHlsZS5zYXNzJ1xuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnXG5pbXBvcnQgQXBwIGZyb20gJ34vQXBwLnZ1ZSdcbmltcG9ydCByb3V0ZXIgZnJvbSAnfi9yb3V0ZXInXG5pbXBvcnQgVnVlRmlsdGVycyBmcm9tICd2dWUyLWZpbHRlcnMnXG5pbXBvcnQgVnVlUHJvZ3Jlc3NCYXIgZnJvbSAndnVlLXByb2dyZXNzYmFyJ1xuaW1wb3J0IFZ1ZUluZmluaXRlU2Nyb2xsIGZyb20gJ3Z1ZS1pbmZpbml0ZS1zY3JvbGwnXG5pbXBvcnQgVnVlSGVhZCBmcm9tICd2dWUtaGVhZCdcblxuVnVlLnVzZShWdWVIZWFkKVxuVnVlLnVzZShWdWVGaWx0ZXJzKVxuVnVlLnVzZShWdWVJbmZpbml0ZVNjcm9sbClcblZ1ZS51c2UoVnVlUHJvZ3Jlc3NCYXIsIHtcbiAgY29sb3I6ICdyZ2IoNzQsIDEzOSwgMjUwKScsXG4gIGZhaWxlZENvbG9yOiAncmdiKDIwNSwgMzMsIDEzKScsXG4gIGhlaWdodDogJzNweCdcbn0pXG5cbm5ldyBWdWUoe1xuICBlbDogJyNhcHAnLFxuICByb3V0ZXIsXG4gIHJlbmRlcjogaCA9PiBoKEFwcClcbn0pXG4iXSwic291cmNlUm9vdCI6IiJ9