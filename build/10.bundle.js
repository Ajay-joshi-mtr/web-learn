(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{132:function(t,e,r){var n=r(141);"string"==typeof n&&(n=[[t.i,n,""]]);r(6)(n,{});n.locals&&(t.exports=n.locals)},133:function(t,e){var r=1/0,n=9007199254740991,i=17976931348623157e292,o=NaN,s="[object Function]",a="[object GeneratorFunction]",u="[object Symbol]",l=/^\s+|\s+$/g,c=/^[-+]0x[0-9a-f]+$/i,f=/^0b[01]+$/i,d=/^0o[0-7]+$/i,p=/^(?:0|[1-9]\d*)$/,h=parseInt,v=Object.prototype.toString,m=Math.ceil,g=Math.max;function y(t,e,r){var n=-1,i=t.length;e<0&&(e=-e>i?0:i+e),(r=r>i?i:r)<0&&(r+=i),i=e>r?0:r-e>>>0,e>>>=0;for(var o=Array(i);++n<i;)o[n]=t[n+e];return o}function x(t,e,r){if(!w(r))return!1;var i=typeof e;return!!("number"==i?function(t){return null!=t&&function(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=n}(t.length)&&!function(t){var e=w(t)?v.call(t):"";return e==s||e==a}(t)}(r)&&function(t,e){return!!(e=null==e?n:e)&&("number"==typeof t||p.test(t))&&t>-1&&t%1==0&&t<e}(e,r.length):"string"==i&&e in r)&&function(t,e){return t===e||t!=t&&e!=e}(r[e],t)}function w(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}t.exports=function(t,e,n){e=(n?x(t,e,n):void 0===e)?1:g(function(t){var e=function(t){if(!t)return 0===t?t:0;if((t=function(t){if("number"==typeof t)return t;if(function(t){return"symbol"==typeof t||function(t){return!!t&&"object"==typeof t}(t)&&v.call(t)==u}(t))return o;if(w(t)){var e="function"==typeof t.valueOf?t.valueOf():t;t=w(e)?e+"":e}if("string"!=typeof t)return 0===t?t:+t;t=t.replace(l,"");var r=f.test(t);return r||d.test(t)?h(t.slice(2),r?2:8):c.test(t)?o:+t}(t))===r||t===-r){return(t<0?-1:1)*i}return t==t?t:0}(t),n=e%1;return e==e?n?e-n:e:0}(e),0);var s=t?t.length:0;if(!s||e<1)return[];for(var a=0,p=0,b=Array(m(s/e));a<s;)b[p++]=y(t,a,a+=e);return b}},136:function(t,e,r){"use strict";var n=r(22),i=r.n(n);e.a={prepareQuery:function(t){var e="";t.constructor===Array?e=(e=i()(t,"title").join("|")).replace(/\./g,""):t.constructor===Object&&(e=t.title);return"$1".replace(/\$1/,e)}}},138:function(t,e,r){t.exports=function(){"use strict";return function(t,e,r){var n=e.prototype;r.en.relativeTime={future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"};var i=function(t,e,n,i){for(var o,s,a=n.$locale().relativeTime,u=[{l:"s",r:44,d:"second"},{l:"m",r:89},{l:"mm",r:44,d:"minute"},{l:"h",r:89},{l:"hh",r:21,d:"hour"},{l:"d",r:35},{l:"dd",r:25,d:"day"},{l:"M",r:45},{l:"MM",r:10,d:"month"},{l:"y",r:17},{l:"yy",d:"year"}],l=u.length,c=0;c<l;c+=1){var f=u[c];f.d&&(o=i?r(t).diff(n,f.d,!0):n.diff(t,f.d,!0));var d=Math.round(Math.abs(o));if(d<=f.r||!f.r){1===d&&c>0&&(f=u[c-1]),s=a[f.l].replace("%d",d);break}}return e?s:(o>0?a.future:a.past).replace("%s",s)};n.to=function(t,e){return i(t,e,this,!0)},n.from=function(t,e){return i(t,e,this)},n.toNow=function(t){return this.to(r(),t)},n.fromNow=function(t){return this.from(r(),t)}}}()},139:function(t,e,r){"use strict";t.exports=function(t,e){for(var r=[],n=0,i=t.match(/P(?:(\d*)Y)?(?:(\d*)M)?(?:(\d*)W)?(?:(\d*)D)?T?(?:(\d*)H)?(?:(\d*)M)?(?:(\d*)S)?/i),o=[{pos:1,multiplier:31536e3},{pos:2,multiplier:2592e3},{pos:3,multiplier:604800},{pos:4,multiplier:86400},{pos:5,multiplier:3600},{pos:6,multiplier:60},{pos:7,multiplier:1}],s=0;s<o.length;s++)void 0!==i[o[s].pos]&&(n+=parseInt(i[o[s].pos])*o[s].multiplier);var a=n;return n>3599&&(r.push(parseInt(n/3600)),n%=3600),r.push(("0"+parseInt(n/60)).slice(-2)),r.push(("0"+n%60).slice(-2)),void 0===e?r.join(":"):"sec"===e?a:void 0}},140:function(t,e,r){"use strict";var n=r(132);r.n(n).a},141:function(t,e,r){(t.exports=r(5)(!1)).push([t.i,".spinner__wrapper[data-v-39432f99]{margin-top:40px;height:30px}.spinner[data-v-39432f99]{animation:rotator-data-v-39432f99 1.4s linear infinite}@keyframes rotator-data-v-39432f99{0%{transform:rotate(0deg)}100%{transform:rotate(270deg)}}.path[data-v-39432f99]{stroke-dasharray:187;stroke-dashoffset:0;transform-origin:center;stroke:#4a8bfa;animation:dash-data-v-39432f99 1.4s ease-in-out infinite}@keyframes dash-data-v-39432f99{0%{stroke-dashoffset:187}50%{stroke-dashoffset:46.75;transform:rotate(135deg)}100%{stroke-dashoffset:187;transform:rotate(450deg)}}\n",""])},142:function(t,e,r){"use strict";var n=function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"level spinner__wrapper"},[e("div",{staticClass:"level-item has-text-centered"},[this.show?e("svg",{staticClass:"spinner",attrs:{width:"30px",height:"30px",viewBox:"0 0 66 66",xmlns:"http://www.w3.org/2000/svg"}},[e("circle",{staticClass:"path",attrs:{fill:"none","stroke-width":"6","stroke-linecap":"round",cx:"33",cy:"33",r:"30"}})]):this._e()])])};n._withStripped=!0;var i={props:{show:{type:Boolean,default:!1}}},o=(r(140),r(1)),s=Object(o.a)(i,n,[],!1,null,"39432f99",null);s.options.__file="src/components/Spinner.vue";e.a=s.exports},181:function(t,e,r){"use strict";r.r(e);var n=function(){var t=this.$createElement,e=this._self._c||t;return e("section",{directives:[{name:"infinite-scroll",rawName:"v-infinite-scroll",value:this.loadMore,expression:"loadMore"}],staticClass:"section",attrs:{"infinite-scroll-disabled":"loading"}},[e("div",{staticClass:"container"},[e("video-list",{attrs:{videos:this.videos}}),e("spinner",{attrs:{show:this.loading}})],1)])};n._withStripped=!0;var i=r(21),o=r(136),s=r(134),a=r(142),u={components:{VideoList:s.a,Spinner:a.a},data:function(){return{videos:[],loading:!1,nextPage:null,limit:20}},created:function(){this.videos=[],this.nextPage=null,this.loadVideos()},watch:{$route:function(){this.videos=[],this.nextPage=null,this.loadVideos()}},methods:{loadVideos:function(){var t=this;this.loading=!0,i.a.fetchTopic(this.$route.params.id).then(function(e){var r={q:o.a.prepareQuery(e),order:t.$route.meta.order,maxResults:t.limit,pageToken:t.nextPage,videoCategoryId:27};i.a.fetchVideos(r).then(function(e){t.loading=!1,t.$Progress.finish(),e.videos.length?(t.nextPage=e.nextPageToken,e.videos.forEach(function(e){t.videos.push(e)})):t.nextPage=null}).catch(function(){t.loading=!1,t.$Progress.fail()})}).catch(function(){t.loading=!1,t.$Progress.fail()})},loadMore:function(){this.nextPage&&this.loadVideos()}}},l=r(1),c=Object(l.a)(u,n,[],!1,null,null,null);c.options.__file="src/pages/topics/videos.vue";e.default=c.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9TcGlubmVyLnZ1ZT82YTRjIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2guY2h1bmsvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWwvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RheWpzL3BsdWdpbi9yZWxhdGl2ZVRpbWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3lvdXR1YmUtZHVyYXRpb24tZm9ybWF0L2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1NwaW5uZXIudnVlPzJmOWIiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvU3Bpbm5lci52dWU/ODVjMCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9TcGlubmVyLnZ1ZT8wY2Q1Iiwid2VicGFjazovLy9zcmMvY29tcG9uZW50cy9TcGlubmVyLnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9TcGlubmVyLnZ1ZT8wM2UyIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1NwaW5uZXIudnVlIiwid2VicGFjazovLy8uL3NyYy9wYWdlcy90b3BpY3MvdmlkZW9zLnZ1ZT84ZWM4Iiwid2VicGFjazovLy8uL3NyYy9wYWdlcy90b3BpY3MvdmlkZW9zLnZ1ZT8yMGYyIiwid2VicGFjazovLy9zcmMvcGFnZXMvdG9waWNzL3ZpZGVvcy52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL3RvcGljcy92aWRlb3MudnVlIl0sIm5hbWVzIjpbImNvbnRlbnQiLCJtb2R1bGUiLCJpIiwibG9jYWxzIiwiZXhwb3J0cyIsIklORklOSVRZIiwiTUFYX1NBRkVfSU5URUdFUiIsIk1BWF9JTlRFR0VSIiwiTkFOIiwiZnVuY1RhZyIsImdlblRhZyIsInN5bWJvbFRhZyIsInJlVHJpbSIsInJlSXNCYWRIZXgiLCJyZUlzQmluYXJ5IiwicmVJc09jdGFsIiwicmVJc1VpbnQiLCJmcmVlUGFyc2VJbnQiLCJwYXJzZUludCIsIm9iamVjdFRvU3RyaW5nIiwiT2JqZWN0IiwicHJvdG90eXBlIiwidG9TdHJpbmciLCJuYXRpdmVDZWlsIiwiTWF0aCIsImNlaWwiLCJuYXRpdmVNYXgiLCJtYXgiLCJiYXNlU2xpY2UiLCJhcnJheSIsInN0YXJ0IiwiZW5kIiwiaW5kZXgiLCJsZW5ndGgiLCJyZXN1bHQiLCJBcnJheSIsImlzSXRlcmF0ZWVDYWxsIiwidmFsdWUiLCJvYmplY3QiLCJpc09iamVjdCIsInR5cGUiLCJpc0xlbmd0aCIsInRhZyIsImNhbGwiLCJpc0Z1bmN0aW9uIiwiaXNBcnJheUxpa2UiLCJ0ZXN0IiwiaXNJbmRleCIsIm90aGVyIiwiZXEiLCJzaXplIiwiZ3VhcmQiLCJ1bmRlZmluZWQiLCJpc09iamVjdExpa2UiLCJpc1N5bWJvbCIsInZhbHVlT2YiLCJyZXBsYWNlIiwiaXNCaW5hcnkiLCJzbGljZSIsInRvTnVtYmVyIiwidG9GaW5pdGUiLCJyZW1haW5kZXIiLCJ0b0ludGVnZXIiLCJyZXNJbmRleCIsInByZXBhcmVRdWVyeSIsInRvcGljcyIsInF1ZXJ5IiwiY29uc3RydWN0b3IiLCJtYXAiLCJqb2luIiwidGl0bGUiLCJlIiwiciIsInQiLCJuIiwiZW4iLCJyZWxhdGl2ZVRpbWUiLCJmdXR1cmUiLCJwYXN0IiwicyIsIm0iLCJtbSIsImgiLCJoaCIsImQiLCJkZCIsIk0iLCJNTSIsInkiLCJ5eSIsIm8iLCJhIiwiJGxvY2FsZSIsInUiLCJsIiwiZiIsImRpZmYiLCJyb3VuZCIsImFicyIsInRvIiwidGhpcyIsImZyb20iLCJ0b05vdyIsImZyb21Ob3ciLCJQVCIsImZvcm1hdCIsIm91dHB1dCIsImR1cmF0aW9uSW5TZWMiLCJtYXRjaGVzIiwibWF0Y2giLCJwYXJ0cyIsInBvcyIsIm11bHRpcGxpZXIiLCJ0b3RhbFNlYyIsInB1c2giLCJyZW5kZXIiLCJfaCIsIiRjcmVhdGVFbGVtZW50IiwiX2MiLCJfc2VsZiIsInN0YXRpY0NsYXNzIiwic2hvdyIsImF0dHJzIiwid2lkdGgiLCJoZWlnaHQiLCJ2aWV3Qm94IiwieG1sbnMiLCJmaWxsIiwiY3giLCJjeSIsIl9lIiwiX3dpdGhTdHJpcHBlZCIsInByb3BzIiwiQm9vbGVhbiIsImRlZmF1bHQiLCJjb21wb25lbnQiLCJvcHRpb25zIiwiX19maWxlIiwiZGlyZWN0aXZlcyIsIm5hbWUiLCJyYXdOYW1lIiwibG9hZE1vcmUiLCJleHByZXNzaW9uIiwidmlkZW9zIiwibG9hZGluZyIsImNvbXBvbmVudHMiLCJWaWRlb0xpc3QiLCJTcGlubmVyIiwiZGF0YSIsIm5leHRQYWdlIiwibGltaXQiLCJjcmVhdGVkIiwibG9hZFZpZGVvcyIsIndhdGNoIiwiJHJvdXRlIiwibWV0aG9kcyIsInN0b3JlIiwicSIsInV0aWwiLCJvcmRlciIsIm1heFJlc3VsdHMiLCJwYWdlVG9rZW4iLCJ2aWRlb0NhdGVnb3J5SWQiLCJmb3JFYWNoIl0sIm1hcHBpbmdzIjoiOEVBR0EsSUFBSUEsRUFBVSxFQUFRLEtBQ0EsaUJBQVpBLElBQXNCQSxFQUFVLENBQUMsQ0FBQ0MsRUFBT0MsRUFBSUYsRUFBUyxNQUVuRCxFQUFRLEVBQVIsQ0FBeURBLEVBQVMsSUFDNUVBLEVBQVFHLFNBQVFGLEVBQU9HLFFBQVVKLEVBQVFHLFMsa0JDRzVDLElBQUlFLEVBQVcsSUFDWEMsRUFBbUIsaUJBQ25CQyxFQUFjLHNCQUNkQyxFQUFNLElBR05DLEVBQVUsb0JBQ1ZDLEVBQVMsNkJBQ1RDLEVBQVksa0JBR1pDLEVBQVMsYUFHVEMsRUFBYSxxQkFHYkMsRUFBYSxhQUdiQyxFQUFZLGNBR1pDLEVBQVcsbUJBR1hDLEVBQWVDLFNBVWZDLEVBUGNDLE9BQU9DLFVBT1FDLFNBRzdCQyxFQUFhQyxLQUFLQyxLQUNsQkMsRUFBWUYsS0FBS0csSUFXckIsU0FBU0MsRUFBVUMsRUFBT0MsRUFBT0MsR0FDL0IsSUFBSUMsR0FBUyxFQUNUQyxFQUFTSixFQUFNSSxPQUVmSCxFQUFRLElBQ1ZBLEdBQVNBLEVBQVFHLEVBQVMsRUFBS0EsRUFBU0gsSUFF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LE9BQVEsR0FDUkMsU0FBUyxFQUNUSyxTQUFVLEtBQ1ZDLE1BQU8sS0FHWEMsUUFiRixXQWNJbkQsS0FBSzJDLE9BQVMsR0FDZDNDLEtBQUtpRCxTQUFXLEtBQ2hCakQsS0FBS29ELGNBRVBDLE1BQU8sQ0FDTEMsT0FESixXQUVNdEQsS0FBSzJDLE9BQVMsR0FDZDNDLEtBQUtpRCxTQUFXLEtBQ2hCakQsS0FBS29ELGVBR1RHLFFBQVMsQ0FDUEgsV0FESixXQUNBLFdBQ01wRCxLQUFLNEMsU0FBVSxFQUVmWSxFQUFOLHFEQUNRLElBQVIsR0FDVUMsRUFBR0MsRUFBYixrQkFDVUMsTUFBTyxFQUFqQixrQkFDVUMsV0FBWSxFQUF0QixNQUNVQyxVQUFXLEVBQXJCLFNBQ1VDLGdCQUFpQixJQUduQk4sRUFBUixrQ0FDVSxFQUFWLFdBQ1UsRUFBVixtQkFDQSxpQkFJVSxFQUFWLHlCQUNVMUgsRUFBTzZHLE9BQU9vQixRQUFRLFNBQWhDLEdBQ1ksRUFBWixrQkFMWSxFQUFaLGdCQUpBLE1BV0EsV0FDVSxFQUFWLFdBQ1UsRUFBVixxQkF0QkEsTUF3QkEsV0FDUSxFQUFSLFdBQ1EsRUFBUixvQkFHSXRCLFNBakNKLFdBa0NBLGVBQ016QyxLQUFLb0QsZ0IsT0NsRVBqQixFQUFZLFlBQ2QsRUFDQXBCLEVIc0JvQixJR3BCcEIsRUFDQSxLQUNBLEtBQ0EsTUF1QkZvQixFQUFVQyxRQUFRQyxPQUFTLDhCQUNaLFVBQUFGLEUiLCJmaWxlIjoiMTAuYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9TcGlubmVyLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTM5NDMyZjk5Jmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIHt9KTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1NwaW5uZXIudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9Mzk0MzJmOTkmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1NwaW5uZXIudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9Mzk0MzJmOTkmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiKTtcblx0XHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXHRcdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHRcdH0pO1xuXHR9XG5cdC8vIFdoZW4gdGhlIG1vZHVsZSBpcyBkaXNwb3NlZCwgcmVtb3ZlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiLyoqXG4gKiBsb2Rhc2ggKEN1c3RvbSBCdWlsZCkgPGh0dHBzOi8vbG9kYXNoLmNvbS8+XG4gKiBCdWlsZDogYGxvZGFzaCBtb2R1bGFyaXplIGV4cG9ydHM9XCJucG1cIiAtbyAuL2BcbiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzIDxodHRwczovL2pxdWVyeS5vcmcvPlxuICogUmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UgPGh0dHBzOi8vbG9kYXNoLmNvbS9saWNlbnNlPlxuICogQmFzZWQgb24gVW5kZXJzY29yZS5qcyAxLjguMyA8aHR0cDovL3VuZGVyc2NvcmVqcy5vcmcvTElDRU5TRT5cbiAqIENvcHlyaWdodCBKZXJlbXkgQXNoa2VuYXMsIERvY3VtZW50Q2xvdWQgYW5kIEludmVzdGlnYXRpdmUgUmVwb3J0ZXJzICYgRWRpdG9yc1xuICovXG5cbi8qKiBVc2VkIGFzIHJlZmVyZW5jZXMgZm9yIHZhcmlvdXMgYE51bWJlcmAgY29uc3RhbnRzLiAqL1xudmFyIElORklOSVRZID0gMSAvIDAsXG4gICAgTUFYX1NBRkVfSU5URUdFUiA9IDkwMDcxOTkyNTQ3NDA5OTEsXG4gICAgTUFYX0lOVEVHRVIgPSAxLjc5NzY5MzEzNDg2MjMxNTdlKzMwOCxcbiAgICBOQU4gPSAwIC8gMDtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIGZ1bmNUYWcgPSAnW29iamVjdCBGdW5jdGlvbl0nLFxuICAgIGdlblRhZyA9ICdbb2JqZWN0IEdlbmVyYXRvckZ1bmN0aW9uXScsXG4gICAgc3ltYm9sVGFnID0gJ1tvYmplY3QgU3ltYm9sXSc7XG5cbi8qKiBVc2VkIHRvIG1hdGNoIGxlYWRpbmcgYW5kIHRyYWlsaW5nIHdoaXRlc3BhY2UuICovXG52YXIgcmVUcmltID0gL15cXHMrfFxccyskL2c7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBiYWQgc2lnbmVkIGhleGFkZWNpbWFsIHN0cmluZyB2YWx1ZXMuICovXG52YXIgcmVJc0JhZEhleCA9IC9eWy0rXTB4WzAtOWEtZl0rJC9pO1xuXG4vKiogVXNlZCB0byBkZXRlY3QgYmluYXJ5IHN0cmluZyB2YWx1ZXMuICovXG52YXIgcmVJc0JpbmFyeSA9IC9eMGJbMDFdKyQvaTtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IG9jdGFsIHN0cmluZyB2YWx1ZXMuICovXG52YXIgcmVJc09jdGFsID0gL14wb1swLTddKyQvaTtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IHVuc2lnbmVkIGludGVnZXIgdmFsdWVzLiAqL1xudmFyIHJlSXNVaW50ID0gL14oPzowfFsxLTldXFxkKikkLztcblxuLyoqIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIHdpdGhvdXQgYSBkZXBlbmRlbmN5IG9uIGByb290YC4gKi9cbnZhciBmcmVlUGFyc2VJbnQgPSBwYXJzZUludDtcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqXG4gKiBVc2VkIHRvIHJlc29sdmUgdGhlXG4gKiBbYHRvU3RyaW5nVGFnYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtb2JqZWN0LnByb3RvdHlwZS50b3N0cmluZylcbiAqIG9mIHZhbHVlcy5cbiAqL1xudmFyIG9iamVjdFRvU3RyaW5nID0gb2JqZWN0UHJvdG8udG9TdHJpbmc7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIGZvciB0aG9zZSB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgb3RoZXIgYGxvZGFzaGAgbWV0aG9kcy4gKi9cbnZhciBuYXRpdmVDZWlsID0gTWF0aC5jZWlsLFxuICAgIG5hdGl2ZU1heCA9IE1hdGgubWF4O1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLnNsaWNlYCB3aXRob3V0IGFuIGl0ZXJhdGVlIGNhbGwgZ3VhcmQuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBzbGljZS5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbc3RhcnQ9MF0gVGhlIHN0YXJ0IHBvc2l0aW9uLlxuICogQHBhcmFtIHtudW1iZXJ9IFtlbmQ9YXJyYXkubGVuZ3RoXSBUaGUgZW5kIHBvc2l0aW9uLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBzbGljZSBvZiBgYXJyYXlgLlxuICovXG5mdW5jdGlvbiBiYXNlU2xpY2UoYXJyYXksIHN0YXJ0LCBlbmQpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBhcnJheS5sZW5ndGg7XG5cbiAgaWYgKHN0YXJ0IDwgMCkge1xuICAgIHN0YXJ0ID0gLXN0YXJ0ID4gbGVuZ3RoID8gMCA6IChsZW5ndGggKyBzdGFydCk7XG4gIH1cbiAgZW5kID0gZW5kID4gbGVuZ3RoID8gbGVuZ3RoIDogZW5kO1xuICBpZiAoZW5kIDwgMCkge1xuICAgIGVuZCArPSBsZW5ndGg7XG4gIH1cbiAgbGVuZ3RoID0gc3RhcnQgPiBlbmQgPyAwIDogKChlbmQgLSBzdGFydCkgPj4+IDApO1xuICBzdGFydCA+Pj49IDA7XG5cbiAgdmFyIHJlc3VsdCA9IEFycmF5KGxlbmd0aCk7XG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgcmVzdWx0W2luZGV4XSA9IGFycmF5W2luZGV4ICsgc3RhcnRdO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYSB2YWxpZCBhcnJheS1saWtlIGluZGV4LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbbGVuZ3RoPU1BWF9TQUZFX0lOVEVHRVJdIFRoZSB1cHBlciBib3VuZHMgb2YgYSB2YWxpZCBpbmRleC5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgdmFsaWQgaW5kZXgsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaXNJbmRleCh2YWx1ZSwgbGVuZ3RoKSB7XG4gIGxlbmd0aCA9IGxlbmd0aCA9PSBudWxsID8gTUFYX1NBRkVfSU5URUdFUiA6IGxlbmd0aDtcbiAgcmV0dXJuICEhbGVuZ3RoICYmXG4gICAgKHR5cGVvZiB2YWx1ZSA9PSAnbnVtYmVyJyB8fCByZUlzVWludC50ZXN0KHZhbHVlKSkgJiZcbiAgICAodmFsdWUgPiAtMSAmJiB2YWx1ZSAlIDEgPT0gMCAmJiB2YWx1ZSA8IGxlbmd0aCk7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIHRoZSBnaXZlbiBhcmd1bWVudHMgYXJlIGZyb20gYW4gaXRlcmF0ZWUgY2FsbC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgcG90ZW50aWFsIGl0ZXJhdGVlIHZhbHVlIGFyZ3VtZW50LlxuICogQHBhcmFtIHsqfSBpbmRleCBUaGUgcG90ZW50aWFsIGl0ZXJhdGVlIGluZGV4IG9yIGtleSBhcmd1bWVudC5cbiAqIEBwYXJhbSB7Kn0gb2JqZWN0IFRoZSBwb3RlbnRpYWwgaXRlcmF0ZWUgb2JqZWN0IGFyZ3VtZW50LlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBhcmd1bWVudHMgYXJlIGZyb20gYW4gaXRlcmF0ZWUgY2FsbCxcbiAqICBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGlzSXRlcmF0ZWVDYWxsKHZhbHVlLCBpbmRleCwgb2JqZWN0KSB7XG4gIGlmICghaXNPYmplY3Qob2JqZWN0KSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICB2YXIgdHlwZSA9IHR5cGVvZiBpbmRleDtcbiAgaWYgKHR5cGUgPT0gJ251bWJlcidcbiAgICAgICAgPyAoaXNBcnJheUxpa2Uob2JqZWN0KSAmJiBpc0luZGV4KGluZGV4LCBvYmplY3QubGVuZ3RoKSlcbiAgICAgICAgOiAodHlwZSA9PSAnc3RyaW5nJyAmJiBpbmRleCBpbiBvYmplY3QpXG4gICAgICApIHtcbiAgICByZXR1cm4gZXEob2JqZWN0W2luZGV4XSwgdmFsdWUpO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGFuIGFycmF5IG9mIGVsZW1lbnRzIHNwbGl0IGludG8gZ3JvdXBzIHRoZSBsZW5ndGggb2YgYHNpemVgLlxuICogSWYgYGFycmF5YCBjYW4ndCBiZSBzcGxpdCBldmVubHksIHRoZSBmaW5hbCBjaHVuayB3aWxsIGJlIHRoZSByZW1haW5pbmdcbiAqIGVsZW1lbnRzLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMy4wLjBcbiAqIEBjYXRlZ29yeSBBcnJheVxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIHByb2Nlc3MuXG4gKiBAcGFyYW0ge251bWJlcn0gW3NpemU9MV0gVGhlIGxlbmd0aCBvZiBlYWNoIGNodW5rXG4gKiBAcGFyYW0tIHtPYmplY3R9IFtndWFyZF0gRW5hYmxlcyB1c2UgYXMgYW4gaXRlcmF0ZWUgZm9yIG1ldGhvZHMgbGlrZSBgXy5tYXBgLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgYXJyYXkgb2YgY2h1bmtzLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmNodW5rKFsnYScsICdiJywgJ2MnLCAnZCddLCAyKTtcbiAqIC8vID0+IFtbJ2EnLCAnYiddLCBbJ2MnLCAnZCddXVxuICpcbiAqIF8uY2h1bmsoWydhJywgJ2InLCAnYycsICdkJ10sIDMpO1xuICogLy8gPT4gW1snYScsICdiJywgJ2MnXSwgWydkJ11dXG4gKi9cbmZ1bmN0aW9uIGNodW5rKGFycmF5LCBzaXplLCBndWFyZCkge1xuICBpZiAoKGd1YXJkID8gaXNJdGVyYXRlZUNhbGwoYXJyYXksIHNpemUsIGd1YXJkKSA6IHNpemUgPT09IHVuZGVmaW5lZCkpIHtcbiAgICBzaXplID0gMTtcbiAgfSBlbHNlIHtcbiAgICBzaXplID0gbmF0aXZlTWF4KHRvSW50ZWdlcihzaXplKSwgMCk7XG4gIH1cbiAgdmFyIGxlbmd0aCA9IGFycmF5ID8gYXJyYXkubGVuZ3RoIDogMDtcbiAgaWYgKCFsZW5ndGggfHwgc2l6ZSA8IDEpIHtcbiAgICByZXR1cm4gW107XG4gIH1cbiAgdmFyIGluZGV4ID0gMCxcbiAgICAgIHJlc0luZGV4ID0gMCxcbiAgICAgIHJlc3VsdCA9IEFycmF5KG5hdGl2ZUNlaWwobGVuZ3RoIC8gc2l6ZSkpO1xuXG4gIHdoaWxlIChpbmRleCA8IGxlbmd0aCkge1xuICAgIHJlc3VsdFtyZXNJbmRleCsrXSA9IGJhc2VTbGljZShhcnJheSwgaW5kZXgsIChpbmRleCArPSBzaXplKSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBQZXJmb3JtcyBhXG4gKiBbYFNhbWVWYWx1ZVplcm9gXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1zYW1ldmFsdWV6ZXJvKVxuICogY29tcGFyaXNvbiBiZXR3ZWVuIHR3byB2YWx1ZXMgdG8gZGV0ZXJtaW5lIGlmIHRoZXkgYXJlIGVxdWl2YWxlbnQuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0geyp9IG90aGVyIFRoZSBvdGhlciB2YWx1ZSB0byBjb21wYXJlLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSB2YWx1ZXMgYXJlIGVxdWl2YWxlbnQsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogdmFyIG9iamVjdCA9IHsgJ2EnOiAxIH07XG4gKiB2YXIgb3RoZXIgPSB7ICdhJzogMSB9O1xuICpcbiAqIF8uZXEob2JqZWN0LCBvYmplY3QpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uZXEob2JqZWN0LCBvdGhlcik7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uZXEoJ2EnLCAnYScpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uZXEoJ2EnLCBPYmplY3QoJ2EnKSk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uZXEoTmFOLCBOYU4pO1xuICogLy8gPT4gdHJ1ZVxuICovXG5mdW5jdGlvbiBlcSh2YWx1ZSwgb3RoZXIpIHtcbiAgcmV0dXJuIHZhbHVlID09PSBvdGhlciB8fCAodmFsdWUgIT09IHZhbHVlICYmIG90aGVyICE9PSBvdGhlcik7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYXJyYXktbGlrZS4gQSB2YWx1ZSBpcyBjb25zaWRlcmVkIGFycmF5LWxpa2UgaWYgaXQnc1xuICogbm90IGEgZnVuY3Rpb24gYW5kIGhhcyBhIGB2YWx1ZS5sZW5ndGhgIHRoYXQncyBhbiBpbnRlZ2VyIGdyZWF0ZXIgdGhhbiBvclxuICogZXF1YWwgdG8gYDBgIGFuZCBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gYE51bWJlci5NQVhfU0FGRV9JTlRFR0VSYC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhcnJheS1saWtlLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNBcnJheUxpa2UoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzQXJyYXlMaWtlKGRvY3VtZW50LmJvZHkuY2hpbGRyZW4pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNBcnJheUxpa2UoJ2FiYycpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNBcnJheUxpa2UoXy5ub29wKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQXJyYXlMaWtlKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSAhPSBudWxsICYmIGlzTGVuZ3RoKHZhbHVlLmxlbmd0aCkgJiYgIWlzRnVuY3Rpb24odmFsdWUpO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGNsYXNzaWZpZWQgYXMgYSBgRnVuY3Rpb25gIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIGZ1bmN0aW9uLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNGdW5jdGlvbihfKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzRnVuY3Rpb24oL2FiYy8pO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGdW5jdGlvbih2YWx1ZSkge1xuICAvLyBUaGUgdXNlIG9mIGBPYmplY3QjdG9TdHJpbmdgIGF2b2lkcyBpc3N1ZXMgd2l0aCB0aGUgYHR5cGVvZmAgb3BlcmF0b3JcbiAgLy8gaW4gU2FmYXJpIDgtOSB3aGljaCByZXR1cm5zICdvYmplY3QnIGZvciB0eXBlZCBhcnJheSBhbmQgb3RoZXIgY29uc3RydWN0b3JzLlxuICB2YXIgdGFnID0gaXNPYmplY3QodmFsdWUpID8gb2JqZWN0VG9TdHJpbmcuY2FsbCh2YWx1ZSkgOiAnJztcbiAgcmV0dXJuIHRhZyA9PSBmdW5jVGFnIHx8IHRhZyA9PSBnZW5UYWc7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYSB2YWxpZCBhcnJheS1saWtlIGxlbmd0aC5cbiAqXG4gKiAqKk5vdGU6KiogVGhpcyBtZXRob2QgaXMgbG9vc2VseSBiYXNlZCBvblxuICogW2BUb0xlbmd0aGBdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLXRvbGVuZ3RoKS5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHZhbGlkIGxlbmd0aCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzTGVuZ3RoKDMpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNMZW5ndGgoTnVtYmVyLk1JTl9WQUxVRSk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNMZW5ndGgoSW5maW5pdHkpO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzTGVuZ3RoKCczJyk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0xlbmd0aCh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09ICdudW1iZXInICYmXG4gICAgdmFsdWUgPiAtMSAmJiB2YWx1ZSAlIDEgPT0gMCAmJiB2YWx1ZSA8PSBNQVhfU0FGRV9JTlRFR0VSO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIHRoZVxuICogW2xhbmd1YWdlIHR5cGVdKGh0dHA6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1lY21hc2NyaXB0LWxhbmd1YWdlLXR5cGVzKVxuICogb2YgYE9iamVjdGAuIChlLmcuIGFycmF5cywgZnVuY3Rpb25zLCBvYmplY3RzLCByZWdleGVzLCBgbmV3IE51bWJlcigwKWAsIGFuZCBgbmV3IFN0cmluZygnJylgKVxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFuIG9iamVjdCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzT2JqZWN0KHt9KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0KFsxLCAyLCAzXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdChfLm5vb3ApO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3QobnVsbCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICB2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcbiAgcmV0dXJuICEhdmFsdWUgJiYgKHR5cGUgPT0gJ29iamVjdCcgfHwgdHlwZSA9PSAnZnVuY3Rpb24nKTtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBvYmplY3QtbGlrZS4gQSB2YWx1ZSBpcyBvYmplY3QtbGlrZSBpZiBpdCdzIG5vdCBgbnVsbGBcbiAqIGFuZCBoYXMgYSBgdHlwZW9mYCByZXN1bHQgb2YgXCJvYmplY3RcIi5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBvYmplY3QtbGlrZSwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZSh7fSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdExpa2UoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShfLm5vb3ApO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShudWxsKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0TGlrZSh2YWx1ZSkge1xuICByZXR1cm4gISF2YWx1ZSAmJiB0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCc7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhIGBTeW1ib2xgIHByaW1pdGl2ZSBvciBvYmplY3QuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBzeW1ib2wsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc1N5bWJvbChTeW1ib2wuaXRlcmF0b3IpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNTeW1ib2woJ2FiYycpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNTeW1ib2wodmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PSAnc3ltYm9sJyB8fFxuICAgIChpc09iamVjdExpa2UodmFsdWUpICYmIG9iamVjdFRvU3RyaW5nLmNhbGwodmFsdWUpID09IHN5bWJvbFRhZyk7XG59XG5cbi8qKlxuICogQ29udmVydHMgYHZhbHVlYCB0byBhIGZpbml0ZSBudW1iZXIuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjEyLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjb252ZXJ0LlxuICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgY29udmVydGVkIG51bWJlci5cbiAqIEBleGFtcGxlXG4gKlxuICogXy50b0Zpbml0ZSgzLjIpO1xuICogLy8gPT4gMy4yXG4gKlxuICogXy50b0Zpbml0ZShOdW1iZXIuTUlOX1ZBTFVFKTtcbiAqIC8vID0+IDVlLTMyNFxuICpcbiAqIF8udG9GaW5pdGUoSW5maW5pdHkpO1xuICogLy8gPT4gMS43OTc2OTMxMzQ4NjIzMTU3ZSszMDhcbiAqXG4gKiBfLnRvRmluaXRlKCczLjInKTtcbiAqIC8vID0+IDMuMlxuICovXG5mdW5jdGlvbiB0b0Zpbml0ZSh2YWx1ZSkge1xuICBpZiAoIXZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlID09PSAwID8gdmFsdWUgOiAwO1xuICB9XG4gIHZhbHVlID0gdG9OdW1iZXIodmFsdWUpO1xuICBpZiAodmFsdWUgPT09IElORklOSVRZIHx8IHZhbHVlID09PSAtSU5GSU5JVFkpIHtcbiAgICB2YXIgc2lnbiA9ICh2YWx1ZSA8IDAgPyAtMSA6IDEpO1xuICAgIHJldHVybiBzaWduICogTUFYX0lOVEVHRVI7XG4gIH1cbiAgcmV0dXJuIHZhbHVlID09PSB2YWx1ZSA/IHZhbHVlIDogMDtcbn1cblxuLyoqXG4gKiBDb252ZXJ0cyBgdmFsdWVgIHRvIGFuIGludGVnZXIuXG4gKlxuICogKipOb3RlOioqIFRoaXMgbWV0aG9kIGlzIGxvb3NlbHkgYmFzZWQgb25cbiAqIFtgVG9JbnRlZ2VyYF0oaHR0cDovL3d3dy5lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLXRvaW50ZWdlcikuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNvbnZlcnQuXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSBjb252ZXJ0ZWQgaW50ZWdlci5cbiAqIEBleGFtcGxlXG4gKlxuICogXy50b0ludGVnZXIoMy4yKTtcbiAqIC8vID0+IDNcbiAqXG4gKiBfLnRvSW50ZWdlcihOdW1iZXIuTUlOX1ZBTFVFKTtcbiAqIC8vID0+IDBcbiAqXG4gKiBfLnRvSW50ZWdlcihJbmZpbml0eSk7XG4gKiAvLyA9PiAxLjc5NzY5MzEzNDg2MjMxNTdlKzMwOFxuICpcbiAqIF8udG9JbnRlZ2VyKCczLjInKTtcbiAqIC8vID0+IDNcbiAqL1xuZnVuY3Rpb24gdG9JbnRlZ2VyKHZhbHVlKSB7XG4gIHZhciByZXN1bHQgPSB0b0Zpbml0ZSh2YWx1ZSksXG4gICAgICByZW1haW5kZXIgPSByZXN1bHQgJSAxO1xuXG4gIHJldHVybiByZXN1bHQgPT09IHJlc3VsdCA/IChyZW1haW5kZXIgPyByZXN1bHQgLSByZW1haW5kZXIgOiByZXN1bHQpIDogMDtcbn1cblxuLyoqXG4gKiBDb252ZXJ0cyBgdmFsdWVgIHRvIGEgbnVtYmVyLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBwcm9jZXNzLlxuICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgbnVtYmVyLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLnRvTnVtYmVyKDMuMik7XG4gKiAvLyA9PiAzLjJcbiAqXG4gKiBfLnRvTnVtYmVyKE51bWJlci5NSU5fVkFMVUUpO1xuICogLy8gPT4gNWUtMzI0XG4gKlxuICogXy50b051bWJlcihJbmZpbml0eSk7XG4gKiAvLyA9PiBJbmZpbml0eVxuICpcbiAqIF8udG9OdW1iZXIoJzMuMicpO1xuICogLy8gPT4gMy4yXG4gKi9cbmZ1bmN0aW9uIHRvTnVtYmVyKHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT0gJ251bWJlcicpIHtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbiAgaWYgKGlzU3ltYm9sKHZhbHVlKSkge1xuICAgIHJldHVybiBOQU47XG4gIH1cbiAgaWYgKGlzT2JqZWN0KHZhbHVlKSkge1xuICAgIHZhciBvdGhlciA9IHR5cGVvZiB2YWx1ZS52YWx1ZU9mID09ICdmdW5jdGlvbicgPyB2YWx1ZS52YWx1ZU9mKCkgOiB2YWx1ZTtcbiAgICB2YWx1ZSA9IGlzT2JqZWN0KG90aGVyKSA/IChvdGhlciArICcnKSA6IG90aGVyO1xuICB9XG4gIGlmICh0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gdmFsdWUgPT09IDAgPyB2YWx1ZSA6ICt2YWx1ZTtcbiAgfVxuICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UocmVUcmltLCAnJyk7XG4gIHZhciBpc0JpbmFyeSA9IHJlSXNCaW5hcnkudGVzdCh2YWx1ZSk7XG4gIHJldHVybiAoaXNCaW5hcnkgfHwgcmVJc09jdGFsLnRlc3QodmFsdWUpKVxuICAgID8gZnJlZVBhcnNlSW50KHZhbHVlLnNsaWNlKDIpLCBpc0JpbmFyeSA/IDIgOiA4KVxuICAgIDogKHJlSXNCYWRIZXgudGVzdCh2YWx1ZSkgPyBOQU4gOiArdmFsdWUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNodW5rO1xuIiwiaW1wb3J0IG1hcCBmcm9tICdsb2Rhc2gubWFwJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHByZXBhcmVRdWVyeSh0b3BpY3MpIHtcbiAgICBsZXQgcXVlcnkgPSAnJ1xuXG4gICAgaWYodG9waWNzLmNvbnN0cnVjdG9yID09PSBBcnJheSkge1xuICAgICAgLy8gZ2V0IGFsbCB0b3BpYyB0aXRsZXNcbiAgICAgIGNvbnN0IHRvcGljVGl0bGVzID0gbWFwKHRvcGljcywgJ3RpdGxlJylcbiAgICAgIC8vIHRyYW5zZm9ybSBhcnJheSBvZiB0b3BpY3MgdG8gcGlwZSBzdHJpbmdcbiAgICAgIHF1ZXJ5ID0gdG9waWNUaXRsZXMuam9pbignfCcpXG4gICAgICAvLyByZW1vdmUgYWxsIGRvdHNcbiAgICAgIHF1ZXJ5ID0gcXVlcnkucmVwbGFjZSgvXFwuL2csICcnKVxuICAgICAgLy8gcmVtb3ZlIGFsbCBzcGFjZXNcbiAgICAgIC8vIHF1ZXJ5ID0gcXVlcnkucmVwbGFjZSgvXFxzL2csICcnKVxuICAgIH0gZWxzZSBpZih0b3BpY3MuY29uc3RydWN0b3IgPT09IE9iamVjdCkge1xuICAgICAgcXVlcnkgPSB0b3BpY3MudGl0bGVcbiAgICB9XG5cbiAgICByZXR1cm4gJyQxJy5yZXBsYWNlKC9cXCQxLywgcXVlcnkpXG4gIH1cbn1cbiIsIiFmdW5jdGlvbihlLHIpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPXIoKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKHIpOmUuZGF5anNfcGx1Z2luX3JlbGF0aXZlVGltZT1yKCl9KHRoaXMsZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjtyZXR1cm4gZnVuY3Rpb24oZSxyLHQpe3ZhciBuPXIucHJvdG90eXBlO3QuZW4ucmVsYXRpdmVUaW1lPXtmdXR1cmU6XCJpbiAlc1wiLHBhc3Q6XCIlcyBhZ29cIixzOlwiYSBmZXcgc2Vjb25kc1wiLG06XCJhIG1pbnV0ZVwiLG1tOlwiJWQgbWludXRlc1wiLGg6XCJhbiBob3VyXCIsaGg6XCIlZCBob3Vyc1wiLGQ6XCJhIGRheVwiLGRkOlwiJWQgZGF5c1wiLE06XCJhIG1vbnRoXCIsTU06XCIlZCBtb250aHNcIix5OlwiYSB5ZWFyXCIseXk6XCIlZCB5ZWFyc1wifTt2YXIgbz1mdW5jdGlvbihlLHIsbixvKXtmb3IodmFyIGQsaSxhPW4uJGxvY2FsZSgpLnJlbGF0aXZlVGltZSx1PVt7bDpcInNcIixyOjQ0LGQ6XCJzZWNvbmRcIn0se2w6XCJtXCIscjo4OX0se2w6XCJtbVwiLHI6NDQsZDpcIm1pbnV0ZVwifSx7bDpcImhcIixyOjg5fSx7bDpcImhoXCIscjoyMSxkOlwiaG91clwifSx7bDpcImRcIixyOjM1fSx7bDpcImRkXCIscjoyNSxkOlwiZGF5XCJ9LHtsOlwiTVwiLHI6NDV9LHtsOlwiTU1cIixyOjEwLGQ6XCJtb250aFwifSx7bDpcInlcIixyOjE3fSx7bDpcInl5XCIsZDpcInllYXJcIn1dLGY9dS5sZW5ndGgscz0wO3M8ZjtzKz0xKXt2YXIgbD11W3NdO2wuZCYmKGQ9bz90KGUpLmRpZmYobixsLmQsITApOm4uZGlmZihlLGwuZCwhMCkpO3ZhciBtPU1hdGgucm91bmQoTWF0aC5hYnMoZCkpO2lmKG08PWwucnx8IWwucil7MT09PW0mJnM+MCYmKGw9dVtzLTFdKSxpPWFbbC5sXS5yZXBsYWNlKFwiJWRcIixtKTticmVha319cmV0dXJuIHI/aTooZD4wP2EuZnV0dXJlOmEucGFzdCkucmVwbGFjZShcIiVzXCIsaSl9O24udG89ZnVuY3Rpb24oZSxyKXtyZXR1cm4gbyhlLHIsdGhpcywhMCl9LG4uZnJvbT1mdW5jdGlvbihlLHIpe3JldHVybiBvKGUscix0aGlzKX0sbi50b05vdz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy50byh0KCksZSl9LG4uZnJvbU5vdz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5mcm9tKHQoKSxlKX19fSk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIHBhcnNlRHVyYXRpb24oUFQsIGZvcm1hdCkge1xuICB2YXIgb3V0cHV0ID0gW107XG4gIHZhciBkdXJhdGlvbkluU2VjID0gMDtcbiAgdmFyIG1hdGNoZXMgPSBQVC5tYXRjaCgvUCg/OihcXGQqKVkpPyg/OihcXGQqKU0pPyg/OihcXGQqKVcpPyg/OihcXGQqKUQpP1Q/KD86KFxcZCopSCk/KD86KFxcZCopTSk/KD86KFxcZCopUyk/L2kpO1xuICB2YXIgcGFydHMgPSBbXG4gICAgeyAvLyB5ZWFyc1xuICAgICAgcG9zOiAxLFxuICAgICAgbXVsdGlwbGllcjogODY0MDAgKiAzNjVcbiAgICB9LFxuICAgIHsgLy8gbW9udGhzXG4gICAgICBwb3M6IDIsXG4gICAgICBtdWx0aXBsaWVyOiA4NjQwMCAqIDMwXG4gICAgfSxcbiAgICB7IC8vIHdlZWtzXG4gICAgICBwb3M6IDMsXG4gICAgICBtdWx0aXBsaWVyOiA2MDQ4MDBcbiAgICB9LFxuICAgIHsgLy8gZGF5c1xuICAgICAgcG9zOiA0LFxuICAgICAgbXVsdGlwbGllcjogODY0MDBcbiAgICB9LFxuICAgIHsgLy8gaG91cnNcbiAgICAgIHBvczogNSxcbiAgICAgIG11bHRpcGxpZXI6IDM2MDBcbiAgICB9LFxuICAgIHsgLy8gbWludXRlc1xuICAgICAgcG9zOiA2LFxuICAgICAgbXVsdGlwbGllcjogNjBcbiAgICB9LFxuICAgIHsgLy8gc2Vjb25kc1xuICAgICAgcG9zOiA3LFxuICAgICAgbXVsdGlwbGllcjogMVxuICAgIH1cbiAgXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHBhcnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHR5cGVvZiBtYXRjaGVzW3BhcnRzW2ldLnBvc10gIT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGR1cmF0aW9uSW5TZWMgKz0gcGFyc2VJbnQobWF0Y2hlc1twYXJ0c1tpXS5wb3NdKSAqIHBhcnRzW2ldLm11bHRpcGxpZXI7XG4gICAgfVxuICB9XG4gIHZhciB0b3RhbFNlYyA9IGR1cmF0aW9uSW5TZWM7XG4gIC8vIEhvdXJzIGV4dHJhY3Rpb25cbiAgaWYgKGR1cmF0aW9uSW5TZWMgPiAzNTk5KSB7XG4gICAgb3V0cHV0LnB1c2gocGFyc2VJbnQoZHVyYXRpb25JblNlYyAvIDM2MDApKTtcbiAgICBkdXJhdGlvbkluU2VjICU9IDM2MDA7XG4gIH1cbiAgLy8gTWludXRlcyBleHRyYWN0aW9uIHdpdGggbGVhZGluZyB6ZXJvXG4gIG91dHB1dC5wdXNoKCgnMCcgKyBwYXJzZUludChkdXJhdGlvbkluU2VjIC8gNjApKS5zbGljZSgtMikpO1xuICAvLyBTZWNvbmRzIGV4dHJhY3Rpb24gd2l0aCBsZWFkaW5nIHplcm9cbiAgb3V0cHV0LnB1c2goKCcwJyArIGR1cmF0aW9uSW5TZWMgJSA2MCkuc2xpY2UoLTIpKTtcbiAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKVxuICAgIHJldHVybiBvdXRwdXQuam9pbignOicpO1xuICBlbHNlIGlmIChmb3JtYXQgPT09ICdzZWMnKVxuICAgIHJldHVybiB0b3RhbFNlYztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gcGFyc2VEdXJhdGlvbjtcbiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vU3Bpbm5lci52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0zOTQzMmY5OSZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vU3Bpbm5lci52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0zOTQzMmY5OSZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIiLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5zcGlubmVyX193cmFwcGVyW2RhdGEtdi0zOTQzMmY5OV17bWFyZ2luLXRvcDo0MHB4O2hlaWdodDozMHB4fS5zcGlubmVyW2RhdGEtdi0zOTQzMmY5OV17YW5pbWF0aW9uOnJvdGF0b3ItZGF0YS12LTM5NDMyZjk5IDEuNHMgbGluZWFyIGluZmluaXRlfUBrZXlmcmFtZXMgcm90YXRvci1kYXRhLXYtMzk0MzJmOTl7MCV7dHJhbnNmb3JtOnJvdGF0ZSgwZGVnKX0xMDAle3RyYW5zZm9ybTpyb3RhdGUoMjcwZGVnKX19LnBhdGhbZGF0YS12LTM5NDMyZjk5XXtzdHJva2UtZGFzaGFycmF5OjE4NztzdHJva2UtZGFzaG9mZnNldDowO3RyYW5zZm9ybS1vcmlnaW46Y2VudGVyO3N0cm9rZTojNGE4YmZhO2FuaW1hdGlvbjpkYXNoLWRhdGEtdi0zOTQzMmY5OSAxLjRzIGVhc2UtaW4tb3V0IGluZmluaXRlfUBrZXlmcmFtZXMgZGFzaC1kYXRhLXYtMzk0MzJmOTl7MCV7c3Ryb2tlLWRhc2hvZmZzZXQ6MTg3fTUwJXtzdHJva2UtZGFzaG9mZnNldDo0Ni43NTt0cmFuc2Zvcm06cm90YXRlKDEzNWRlZyl9MTAwJXtzdHJva2UtZGFzaG9mZnNldDoxODc7dHJhbnNmb3JtOnJvdGF0ZSg0NTBkZWcpfX1cXG5cIiwgXCJcIl0pO1xuIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gIHJldHVybiBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcImxldmVsIHNwaW5uZXJfX3dyYXBwZXJcIiB9LCBbXG4gICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJsZXZlbC1pdGVtIGhhcy10ZXh0LWNlbnRlcmVkXCIgfSwgW1xuICAgICAgX3ZtLnNob3dcbiAgICAgICAgPyBfYyhcbiAgICAgICAgICAgIFwic3ZnXCIsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcInNwaW5uZXJcIixcbiAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICB3aWR0aDogXCIzMHB4XCIsXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiBcIjMwcHhcIixcbiAgICAgICAgICAgICAgICB2aWV3Qm94OiBcIjAgMCA2NiA2NlwiLFxuICAgICAgICAgICAgICAgIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgX2MoXCJjaXJjbGVcIiwge1xuICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcInBhdGhcIixcbiAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgZmlsbDogXCJub25lXCIsXG4gICAgICAgICAgICAgICAgICBcInN0cm9rZS13aWR0aFwiOiBcIjZcIixcbiAgICAgICAgICAgICAgICAgIFwic3Ryb2tlLWxpbmVjYXBcIjogXCJyb3VuZFwiLFxuICAgICAgICAgICAgICAgICAgY3g6IFwiMzNcIixcbiAgICAgICAgICAgICAgICAgIGN5OiBcIjMzXCIsXG4gICAgICAgICAgICAgICAgICByOiBcIjMwXCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBdXG4gICAgICAgICAgKVxuICAgICAgICA6IF92bS5fZSgpXG4gICAgXSlcbiAgXSlcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCI8dGVtcGxhdGU+XG48ZGl2IGNsYXNzPVwibGV2ZWwgc3Bpbm5lcl9fd3JhcHBlclwiPlxuICA8ZGl2IGNsYXNzPVwibGV2ZWwtaXRlbSBoYXMtdGV4dC1jZW50ZXJlZFwiPlxuICAgIDxzdmcgY2xhc3M9XCJzcGlubmVyXCIgdi1pZj1cInNob3dcIiB3aWR0aD1cIjMwcHhcIiBoZWlnaHQ9XCIzMHB4XCIgdmlld0JveD1cIjAgMCA2NiA2NlwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cbiAgICAgICA8Y2lyY2xlIGNsYXNzPVwicGF0aFwiIGZpbGw9XCJub25lXCIgc3Ryb2tlLXdpZHRoPVwiNlwiIHN0cm9rZS1saW5lY2FwPVwicm91bmRcIiBjeD1cIjMzXCIgY3k9XCIzM1wiIHI9XCIzMFwiPjwvY2lyY2xlPlxuICAgIDwvc3ZnPlxuICA8L2Rpdj5cbjwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgcHJvcHM6IHtcbiAgICBzaG93OiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogZmFsc2VcbiAgICB9XG4gIH1cbn1cbjwvc2NyaXB0PlxuXG48c3R5bGUgbGFuZz1cInNjc3NcIiBzY29wZWQ+XG4kb2Zmc2V0OiAxODc7XG4kZHVyYXRpb246IDEuNHM7XG5cbi5zcGlubmVyX193cmFwcGVyIHtcbiAgbWFyZ2luLXRvcDogNDBweDtcbiAgaGVpZ2h0OiAzMHB4O1xufVxuXG4uc3Bpbm5lciB7XG4gIGFuaW1hdGlvbjogcm90YXRvciAkZHVyYXRpb24gbGluZWFyIGluZmluaXRlO1xufVxuXG5Aa2V5ZnJhbWVzIHJvdGF0b3Ige1xuICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XG4gIDEwMCUgeyB0cmFuc2Zvcm06IHJvdGF0ZSgyNzBkZWcpOyB9XG59XG5cbi5wYXRoIHtcbiAgc3Ryb2tlLWRhc2hhcnJheTogJG9mZnNldDtcbiAgc3Ryb2tlLWRhc2hvZmZzZXQ6IDA7XG4gIHRyYW5zZm9ybS1vcmlnaW46IGNlbnRlcjtcbiAgc3Ryb2tlOiAjNGE4YmZhO1xuICBhbmltYXRpb246XG4gICAgZGFzaCAkZHVyYXRpb24gZWFzZS1pbi1vdXQgaW5maW5pdGU7XG59XG5cbkBrZXlmcmFtZXMgZGFzaCB7XG4gMCUgeyBzdHJva2UtZGFzaG9mZnNldDogJG9mZnNldDsgfVxuIDUwJSB7XG4gICBzdHJva2UtZGFzaG9mZnNldDogJG9mZnNldC80O1xuICAgdHJhbnNmb3JtOnJvdGF0ZSgxMzVkZWcpO1xuIH1cbiAxMDAlIHtcbiAgIHN0cm9rZS1kYXNob2Zmc2V0OiAkb2Zmc2V0O1xuICAgdHJhbnNmb3JtOnJvdGF0ZSg0NTBkZWcpO1xuIH1cbn1cbjwvc3R5bGU+IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1NwaW5uZXIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vU3Bpbm5lci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL1NwaW5uZXIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTM5NDMyZjk5JnNjb3BlZD10cnVlJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL1NwaW5uZXIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9TcGlubmVyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9TcGlubmVyLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTM5NDMyZjk5Jmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiMzk0MzJmOTlcIixcbiAgbnVsbFxuICBcbilcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHtcbiAgdmFyIGFwaSA9IHJlcXVpcmUoXCIvVXNlcnMvQXJoZXkvQ29kZS93ZWItbGVhcm4vbm9kZV9tb2R1bGVzL3Z1ZS1ob3QtcmVsb2FkLWFwaS9kaXN0L2luZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFhcGkuaXNSZWNvcmRlZCgnMzk0MzJmOTknKSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnMzk0MzJmOTknLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnMzk0MzJmOTknLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL1NwaW5uZXIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTM5NDMyZjk5JnNjb3BlZD10cnVlJlwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBhcGkucmVyZW5kZXIoJzM5NDMyZjk5Jywge1xuICAgICAgICByZW5kZXI6IHJlbmRlcixcbiAgICAgICAgc3RhdGljUmVuZGVyRm5zOiBzdGF0aWNSZW5kZXJGbnNcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxufVxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJzcmMvY29tcG9uZW50cy9TcGlubmVyLnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsInZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXG4gICAgXCJzZWN0aW9uXCIsXG4gICAge1xuICAgICAgZGlyZWN0aXZlczogW1xuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogXCJpbmZpbml0ZS1zY3JvbGxcIixcbiAgICAgICAgICByYXdOYW1lOiBcInYtaW5maW5pdGUtc2Nyb2xsXCIsXG4gICAgICAgICAgdmFsdWU6IF92bS5sb2FkTW9yZSxcbiAgICAgICAgICBleHByZXNzaW9uOiBcImxvYWRNb3JlXCJcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIHN0YXRpY0NsYXNzOiBcInNlY3Rpb25cIixcbiAgICAgIGF0dHJzOiB7IFwiaW5maW5pdGUtc2Nyb2xsLWRpc2FibGVkXCI6IFwibG9hZGluZ1wiIH1cbiAgICB9LFxuICAgIFtcbiAgICAgIF9jKFxuICAgICAgICBcImRpdlwiLFxuICAgICAgICB7IHN0YXRpY0NsYXNzOiBcImNvbnRhaW5lclwiIH0sXG4gICAgICAgIFtcbiAgICAgICAgICBfYyhcInZpZGVvLWxpc3RcIiwgeyBhdHRyczogeyB2aWRlb3M6IF92bS52aWRlb3MgfSB9KSxcbiAgICAgICAgICBfYyhcInNwaW5uZXJcIiwgeyBhdHRyczogeyBzaG93OiBfdm0ubG9hZGluZyB9IH0pXG4gICAgICAgIF0sXG4gICAgICAgIDFcbiAgICAgIClcbiAgICBdXG4gIClcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vdmlkZW9zLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3ZpZGVvcy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCI8dGVtcGxhdGUgbGFuZz1cInB1Z1wiPlxuc2VjdGlvbi5zZWN0aW9uKHYtaW5maW5pdGUtc2Nyb2xsPVwibG9hZE1vcmVcIixpbmZpbml0ZS1zY3JvbGwtZGlzYWJsZWQ9XCJsb2FkaW5nXCIpXG4gIC5jb250YWluZXJcbiAgICB2aWRlby1saXN0KDp2aWRlb3M9XCJ2aWRlb3NcIilcbiAgICBzcGlubmVyKDpzaG93PVwibG9hZGluZ1wiKVxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCBzdG9yZSBmcm9tICd+c3RvcmUnXG5pbXBvcnQgdXRpbCBmcm9tICd+dXRpbCdcbmltcG9ydCBWaWRlb0xpc3QgZnJvbSAnfmNvbXBvbmVudHMvVmlkZW9MaXN0LnZ1ZSdcbmltcG9ydCBTcGlubmVyIGZyb20gJ35jb21wb25lbnRzL1NwaW5uZXIudnVlJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGNvbXBvbmVudHM6IHtcbiAgICBWaWRlb0xpc3QsXG4gICAgU3Bpbm5lclxuICB9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICB2aWRlb3M6IFtdLFxuICAgICAgbG9hZGluZzogZmFsc2UsXG4gICAgICBuZXh0UGFnZTogbnVsbCxcbiAgICAgIGxpbWl0OiAyMFxuICAgIH1cbiAgfSxcbiAgY3JlYXRlZCgpIHtcbiAgICB0aGlzLnZpZGVvcyA9IFtdXG4gICAgdGhpcy5uZXh0UGFnZSA9IG51bGxcbiAgICB0aGlzLmxvYWRWaWRlb3MoKVxuICB9LFxuICB3YXRjaDoge1xuICAgICRyb3V0ZSgpIHtcbiAgICAgIHRoaXMudmlkZW9zID0gW11cbiAgICAgIHRoaXMubmV4dFBhZ2UgPSBudWxsXG4gICAgICB0aGlzLmxvYWRWaWRlb3MoKVxuICAgIH1cbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIGxvYWRWaWRlb3MoKSB7XG4gICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlXG5cbiAgICAgIHN0b3JlLmZldGNoVG9waWModGhpcy4kcm91dGUucGFyYW1zLmlkKS50aGVuKHRvcGljID0+IHtcbiAgICAgICAgY29uc3QgcGFyYW1zID0ge1xuICAgICAgICAgIHE6IHV0aWwucHJlcGFyZVF1ZXJ5KHRvcGljKSxcbiAgICAgICAgICBvcmRlcjogdGhpcy4kcm91dGUubWV0YS5vcmRlcixcbiAgICAgICAgICBtYXhSZXN1bHRzOiB0aGlzLmxpbWl0LFxuICAgICAgICAgIHBhZ2VUb2tlbjogdGhpcy5uZXh0UGFnZSxcbiAgICAgICAgICB2aWRlb0NhdGVnb3J5SWQ6IDI3IC8vIEVkdWNhdGlvblxuICAgICAgICB9XG5cbiAgICAgICAgc3RvcmUuZmV0Y2hWaWRlb3MocGFyYW1zKS50aGVuKHJlc3VsdCA9PiB7XG4gICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2VcbiAgICAgICAgICB0aGlzLiRQcm9ncmVzcy5maW5pc2goKVxuICAgICAgICAgIGlmKCFyZXN1bHQudmlkZW9zLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy5uZXh0UGFnZSA9IG51bGxcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgIH1cbiAgICAgICAgICB0aGlzLm5leHRQYWdlID0gcmVzdWx0Lm5leHRQYWdlVG9rZW5cbiAgICAgICAgICByZXN1bHQudmlkZW9zLmZvckVhY2godmlkZW8gPT4ge1xuICAgICAgICAgICAgdGhpcy52aWRlb3MucHVzaCh2aWRlbylcbiAgICAgICAgICB9KVxuICAgICAgICB9KS5jYXRjaCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2VcbiAgICAgICAgICB0aGlzLiRQcm9ncmVzcy5mYWlsKClcbiAgICAgICAgfSlcbiAgICAgIH0pLmNhdGNoKCgpID0+IHtcbiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2VcbiAgICAgICAgdGhpcy4kUHJvZ3Jlc3MuZmFpbCgpXG4gICAgICB9KVxuICAgIH0sXG4gICAgbG9hZE1vcmUoKSB7XG4gICAgICBpZighdGhpcy5uZXh0UGFnZSkgeyByZXR1cm4gfVxuICAgICAgdGhpcy5sb2FkVmlkZW9zKClcbiAgICB9XG4gIH1cbn1cbjwvc2NyaXB0PiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vdmlkZW9zLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD01ZGU1MWQ0ZiZsYW5nPXB1ZyZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi92aWRlb3MudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi92aWRlb3MudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHtcbiAgdmFyIGFwaSA9IHJlcXVpcmUoXCIvVXNlcnMvQXJoZXkvQ29kZS93ZWItbGVhcm4vbm9kZV9tb2R1bGVzL3Z1ZS1ob3QtcmVsb2FkLWFwaS9kaXN0L2luZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFhcGkuaXNSZWNvcmRlZCgnNWRlNTFkNGYnKSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnNWRlNTFkNGYnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnNWRlNTFkNGYnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL3ZpZGVvcy52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NWRlNTFkNGYmbGFuZz1wdWcmXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwaS5yZXJlbmRlcignNWRlNTFkNGYnLCB7XG4gICAgICAgIHJlbmRlcjogcmVuZGVyLFxuICAgICAgICBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZuc1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInNyYy9wYWdlcy90b3BpY3MvdmlkZW9zLnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=