(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{151:function(t,e,o){(function(t,o){var i,n=30,r="...",s=1/0,c=17976931348623157e292,a=NaN,l="[object RegExp]",u="[object Symbol]",p=/^\s+|\s+$/g,d=/\w*$/,f=/^[-+]0x[0-9a-f]+$/i,h=/^0b[01]+$/i,m=/^0o[0-7]+$/i,v="[\\ud800-\\udfff]",b="[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]",g="\\ud83c[\\udffb-\\udfff]",y="[^\\ud800-\\udfff]",j="(?:\\ud83c[\\udde6-\\uddff]){2}",x="[\\ud800-\\udbff][\\udc00-\\udfff]",w="(?:"+b+"|"+g+")"+"?",C="[\\ufe0e\\ufe0f]?"+w+("(?:\\u200d(?:"+[y,j,x].join("|")+")[\\ufe0e\\ufe0f]?"+w+")*"),_="(?:"+[y+b+"?",b,j,x,v].join("|")+")",k=RegExp(g+"(?="+g+")|"+_+C,"g"),P=RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0\\ufe0e\\ufe0f]"),S=parseInt,$="object"==typeof t&&t&&t.Object===Object&&t,I="object"==typeof self&&self&&self.Object===Object&&self,O=$||I||Function("return this")(),T=e&&!e.nodeType&&e,E=T&&"object"==typeof o&&o&&!o.nodeType&&o,M=E&&E.exports===T&&$.process,A=function(){try{return M&&M.binding("util")}catch(t){}}(),R=A&&A.isRegExp,V=(i="length",function(t){return null==t?void 0:t[i]});function N(t){return P.test(t)}function L(t){return N(t)?function(t){var e=k.lastIndex=0;for(;k.test(t);)e++;return e}(t):V(t)}function q(t){return N(t)?function(t){return t.match(k)||[]}(t):function(t){return t.split("")}(t)}var J=Object.prototype.toString,D=O.Symbol,B=D?D.prototype:void 0,H=B?B.toString:void 0;function W(t){if("string"==typeof t)return t;if(U(t))return H?H.call(t):"";var e=t+"";return"0"==e&&1/t==-s?"-0":e}function Y(t,e,o){var i=t.length;return o=void 0===o?i:o,!e&&o>=i?t:function(t,e,o){var i=-1,n=t.length;e<0&&(e=-e>n?0:n+e),(o=o>n?n:o)<0&&(o+=n),n=e>o?0:o-e>>>0,e>>>=0;for(var r=Array(n);++i<n;)r[i]=t[i+e];return r}(t,e,o)}function F(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}var G,Q=R?(G=R,function(t){return G(t)}):function(t){return F(t)&&J.call(t)==l};function U(t){return"symbol"==typeof t||function(t){return!!t&&"object"==typeof t}(t)&&J.call(t)==u}function z(t){return t?(t=function(t){if("number"==typeof t)return t;if(U(t))return a;if(F(t)){var e="function"==typeof t.valueOf?t.valueOf():t;t=F(e)?e+"":e}if("string"!=typeof t)return 0===t?t:+t;t=t.replace(p,"");var o=h.test(t);return o||m.test(t)?S(t.slice(2),o?2:8):f.test(t)?a:+t}(t))===s||t===-s?(t<0?-1:1)*c:t==t?t:0:0===t?t:0}function K(t){return null==t?"":W(t)}o.exports=function(t,e){var o=n,i=r;if(F(e)){var s="separator"in e?e.separator:s;o="length"in e?function(t){var e=z(t),o=e%1;return e==e?o?e-o:e:0}(e.length):o,i="omission"in e?W(e.omission):i}var c=(t=K(t)).length;if(N(t)){var a=q(t);c=a.length}if(o>=c)return t;var l=o-L(i);if(l<1)return i;var u=a?Y(a,0,l).join(""):t.slice(0,l);if(void 0===s)return u+i;if(a&&(l+=u.length-l),Q(s)){if(t.slice(l).search(s)){var p,f=u;for(s.global||(s=RegExp(s.source,K(d.exec(s))+"g")),s.lastIndex=0;p=s.exec(f);)var h=p.index;u=u.slice(0,void 0===h?l:h)}}else if(t.indexOf(W(s),l)!=l){var m=u.lastIndexOf(s);m>-1&&(u=u.slice(0,m))}return u+i}}).call(this,o(2),o(71)(t))},183:function(t,e,o){"use strict";o.r(e);var i=o(68),n=o.n(i),r=o(81),s=o.n(r),c=o(65),a=o.n(c),l=o(66),u=o.n(l),p=o(151),d=o.n(p),f=o(23),h=o(3),m={components:{Player:function(){return o.e(18).then(o.bind(null,186))},ChannelRecentVideos:function(){return o.e(16).then(o.bind(null,193))},TopicRelatedVideos:function(){return o.e(24).then(o.bind(null,192))}},data:function(){return{video:null,loaded:!1,params:{title:"",description:""},error:null}},computed:{publishedAt:function(){return"Published on "+n()(this.video.publishedAt).format("MMM D, YYYY")},viewCount:function(){return s()(this.video.viewCount).format("0,0")+" views"},description:function(){return a()(u()(this.video.description,!1))}},created:function(){this.video=null,this.loaded=!1,this.loadVideo()},watch:{$route:function(){this.video=null,this.loaded=!1,this.loadVideo()}},methods:{loadVideo:function(){var t=this;f.a.fetchVideo(this.$route.params.id).then(function(e){f.a.fetchChannel(e.channelId).then(function(o){e.channel=o,e.topics=[],t.video=e,t.loaded=!0,t.params.title=e.title,t.params.description=d()(e.description.replace(/\r?\n|\r/g,""),{length:155,separator:" "}),t.$emit("updateHead");var i=e.tags.join(",");i&&f.a.fetchTopics({id:i}).then(function(e){t.video.topics=e})})}).catch(function(e){t.loaded=!0,t.error=e.message})}},head:{title:function(){return{inner:this.params.title,separator:"-",complement:h.a.app.name}},meta:function(){return[{name:"description",content:this.params.description}]}}},v=o(4),b=Object(v.a)(m,function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("main",[t.loaded&&t.video&&!t.error?o("div",{staticClass:"hero is-black is-large"},[o("div",{staticClass:"hero-body is-paddingless"},[o("div",{staticClass:"container"},[o("player",{attrs:{id:t.video.id,autoplay:""}})],1)])]):t._e(),t.loaded&&t.video&&!t.error?o("section",{staticClass:"section"},[o("div",{staticClass:"container"},[o("div",{staticClass:"media"},[o("div",{staticClass:"media-left"},[t.video.channel?o("figure",{staticClass:"image is-48x48"},[o("img",{staticClass:"is-circle",attrs:{src:t.video.channel.thumbnails.default.url}})]):t._e()]),o("div",{staticClass:"media-content"},[o("div",{staticClass:"content"},[o("h2",{staticClass:"title is-5"},[o("strong",[t._v(t._s(t.video.title))])]),o("p",{staticClass:"subtitle is-6"},[o("router-link",{attrs:{to:{name:"channel",params:{id:t.video.channelId}}}},[t._v(t._s(t.video.channelTitle)+" ")]),t._v("* "+t._s(t.publishedAt))],1)])]),o("div",{staticClass:"media-right"},[o("span",[t._v(t._s(t.viewCount))])])]),o("div",{staticClass:"content has-margintop"},[o("p",{domProps:{innerHTML:t._s(t.description)}}),o("div",{staticClass:"control is-grouped"},t._l(t.video.topics,function(e){return o("div",{staticClass:"control"},[o("router-link",{staticClass:"button",attrs:{to:{name:"topic",params:{id:e.id}},exact:""}},[t._v(t._s(e.title))])],1)}),0)])]),t._l(t.video.topics,function(t){return o("div",[o("topic-related-videos",{attrs:{topic:t}})],1)}),o("channel-recent-videos",{attrs:{channel:t.video.channel}})],2):t._e(),t.loaded&&t.error?o("div",{staticClass:"hero is-large"},[t._m(0)]):t._e()])},[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"hero-body"},[e("div",{staticClass:"container has-text-centered"},[e("h2",{staticClass:"title is-3"},[this._v("Sorry, but this video is somehow not loaded ðŸ˜ž")])])])}],!1,null,null,null);e.default=b.exports},23:function(t,e,o){"use strict";var i=o(63),n=o.n(i),r=o(67),s=o.n(r),c=o(21),a=o.n(c),l=o(22),u=o.n(l),p=o(3),d={list:function(t){return a()(t,p.a.api.videos.params),u.a.get(p.a.api.videos.endpoint,{params:t}).then(function(t){return Promise.resolve(t.data)}).catch(function(t){return Promise.reject(t)})}},f={list:function(t){return a()(t,p.a.api.search.params),u.a.get(p.a.api.search.endpoint,{params:t}).then(function(t){return Promise.resolve(t.data)}).catch(function(t){return Promise.reject(t)})}},h={list:function(t){return a()(t,p.a.api.channels.params),u.a.get(p.a.api.channels.endpoint,{params:t}).then(function(t){return Promise.resolve(t.data)}).catch(function(t){return Promise.reject(t)})}},m=[],v=o(24);v.keys().forEach(function(t){m.push(v(t))});var b=m,g=d,y=f,j=h,x={list:function(t){return new Promise(function(e,o){var i,n,r,s=b;if(t&&(i=t.id||null,n=t.order||null,r=t.limit||null),i){var c=i.split(",");s=s.filter(function(t){for(var e=0;e<c.length;e++)return 0===t.id.localeCompare(c[e])||0===t.title.toLowerCase().localeCompare(c[e])})}n&&"score"===n?s.sort(function(t,e){return e[n]-t[n]}):s.sort(function(t,e){return t.id.localeCompare(e.id)}),r&&(s=s.slice(0,r)),e({items:s})})}},w=o(7),C=o(65),_=o.n(C),k=o(66),P=o.n(k),S=function(t){var e=[];if(t.snippet.tags)for(var o=0;o<t.snippet.tags.length;o++)e.push(t.snippet.tags[o].toLowerCase());var i=0,n=0,r=0;"statistics"in t&&(i=parseInt(t.statistics.likeCount),n=parseInt(t.statistics.dislikeCount),r=parseInt(t.statistics.viewCount));var s=i-n;return{id:t.id,title:t.snippet.title,publishedAt:t.snippet.publishedAt,channelId:t.snippet.channelId,description:t.snippet.description,thumbnails:t.snippet.thumbnails,channelTitle:t.snippet.channelTitle,tags:e,duration:t.contentDetails.duration,viewCount:r,likeCount:i,dislikeCount:n,rating:s}},$=function(t){return{id:t.id,title:t.snippet.title,description:_()(P()(t.snippet.description,!1)),thumbnails:t.snippet.thumbnails,publishedAt:t.snippet.publishedAt,viewCount:parseInt(t.statistics.viewCount),subscriberCount:parseInt(t.statistics.subscriberCount),profileColor:t.brandingSettings.channel.profileColor,image:t.brandingSettings.image}},I=function(t){return{id:t.id,title:t.title,score:t.score,site:t.site||null,logo:"./src/topics/icons/$1.svg".replace(/\$1/,t.id),color:t.color}},O={currentChannel:{},fetchVideo:function(t){return new Promise(function(e,o){g.list({id:t}).then(function(t){var o=S(t.items[0]);e(o)}).catch(function(t){w.a.$emit("api.error",t),o(t)})})},fetchVideos:function(t){return new Promise(function(e,o){a()(t,{type:"video"}),y.list(t).then(function(i){var r=i.nextPageToken,c=n()(i.items,"id.videoId").join(",");g.list({id:c}).then(function(o){var i=o.items.map(S);i=s()(i,t.order,"desc"),e({videos:i,nextPageToken:r})}).catch(function(t){w.a.$emit("api.error",t),o(t)})}).catch(function(t){w.a.$emit("api.error",t),o(t)})})},fetchTopic:function(t){return new Promise(function(e,o){x.list({id:t}).then(function(t){var o=I(t.items[0]);e(o)}).catch(function(t){w.a.$emit("api.error",t),o(t)})})},fetchTopics:function(t){return new Promise(function(e,o){x.list(t).then(function(t){var o=t.items.map(I);e(o)}).catch(function(t){w.a.$emit("api.error",t),o(t)})})},fetchChannel:function(t){return new Promise(function(e,o){j.list({id:t}).then(function(t){var o=O.currentChannel=$(t.items[0]);e(o)}).catch(function(t){w.a.$emit("api.error",t),o(t)})})}};e.a=O},24:function(t,e,o){var i={"./angularjs.yml":25,"./babel.yml":26,"./bootstrap.yml":27,"./bower.yml":28,"./clojure.yml":29,"./css.yml":30,"./electron.yml":31,"./ember.yml":32,"./firebase.yml":33,"./grunt.yml":34,"./gulp.yml":35,"./html.yml":36,"./java.yml":37,"./javascript.yml":38,"./jquery.yml":39,"./laravel.yml":40,"./meanio.yml":41,"./meteor.yml":42,"./mongodb.yml":43,"./mysql.yml":44,"./nodejs.yml":45,"./npm.yml":46,"./nuxtjs.yml":47,"./phonegap.yml":48,"./php.yml":49,"./postcss.yml":50,"./python.yml":51,"./reactjs.yml":52,"./redux.yml":53,"./riot.yml":54,"./sass.yml":55,"./snapsvg.yml":56,"./socket.io.yml":57,"./vuejs.yml":58,"./webpack.yml":59,"./webtorrent.yml":60,"./woocommerce.yml":61,"./wordpress.yml":62};function n(t){var e=r(t);return o(e)}function r(t){if(!o.o(i,t)){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}return i[t]}n.keys=function(){return Object.keys(i)},n.resolve=r,t.exports=n,n.id=24},25:function(t,e){t.exports={id:"angularjs",title:"AngularJS",score:209904,color:"#e23137",site:"https://angularjs.org"}},26:function(t,e){t.exports={id:"babel",title:"Babel.js",score:2105,color:"#f5da55",site:"https://babeljs.io"}},27:function(t,e){t.exports={id:"bootstrap",title:"Bootstrap",score:73163,color:"#563d7c",site:"http://getbootstrap.com"}},28:function(t,e){t.exports={id:"bower",title:"Bower.io",score:2843,color:"#ffcc2e",site:"https://bower.io"}},29:function(t,e){t.exports={id:"clojure",title:"Clojure",score:12876,color:"#5881d8",site:"https://clojure.org"}},30:function(t,e){t.exports={id:"css",title:"CSS",score:546840,color:"#2966f1"}},31:function(t,e){t.exports={id:"electron",title:"Electron.js",score:1893,color:"#2f3241",site:"http://electron.atom.io"}},32:function(t,e){t.exports={id:"ember",title:"Ember.js",score:20259,color:"#e46651",site:"http://emberjs.com"}},33:function(t,e){t.exports={id:"firebase",title:"Firebase",score:19018,color:"#ffcb2c",site:"https://www.firebase.com/"}},34:function(t,e){t.exports={id:"grunt",title:"Grunt.js",score:8428,color:"#fba918",site:"http://gruntjs.com"}},35:function(t,e){t.exports={id:"gulp",title:"Gulp.js",score:8149,color:"#cf4645",site:"http://gulpjs.com"}},36:function(t,e){t.exports={id:"html",title:"HTML",score:765473,color:"#f16529"}},37:function(t,e){t.exports={id:"java",title:"Java",score:1443028,color:"#5382a1",site:"https://www.java.com"}},38:function(t,e){t.exports={id:"javascript",title:"JavaScript",score:1658365,color:"#f7df1f"}},39:function(t,e){t.exports={id:"jquery",title:"jQuery",score:921565,color:"#21609b",site:"https://jquery.com"}},40:function(t,e){t.exports={id:"laravel",title:"Laravel",score:93720,color:"#f35046",site:"https://laravel.com"}},41:function(t,e){t.exports={id:"meanio",title:"MEAN.IO",score:271,color:"#007d96",site:"http://mean.io"}},42:function(t,e){t.exports={id:"meteor",title:"Meteor.js",score:24266,color:"#1b2734",site:"https://www.meteor.com"}},43:function(t,e){t.exports={id:"mongodb",title:"MongoDB",score:73526,color:"#8e714e",site:"https://www.mongodb.com"}},44:function(t,e){t.exports={id:"mysql",title:"MySQL",score:528255,color:"#4479a1",site:"https://www.mysql.com"}},45:function(t,e){t.exports={id:"nodejs",title:"Node.js",score:149856,color:"#539e43",site:"http://nodejs.org"}},46:function(t,e){t.exports={id:"npm",title:"NPM.js",score:11550,color:"#cb3838",site:"https://www.npmjs.com"}},47:function(t,e){t.exports={id:"nuxtjs",title:"Nuxt.js",score:613,color:"#41b883",site:"https://nuxtjs.org"}},48:function(t,e){t.exports={id:"phonegap",title:"PhoneGap",score:4073,color:"#27a1c5",site:"http://phonegap.com"}},49:function(t,e){t.exports={id:"php",title:"PHP",score:1216592,color:"#777bb3",site:"http://www.php.net"}},50:function(t,e){t.exports={id:"postcss",title:"PostCSS",score:149,color:"#dd3a0a",site:"http://postcss.org"}},51:function(t,e){t.exports={id:"python",title:"Python",score:997620,color:"#244d6e",site:"https://www.python.org"}},52:function(t,e){t.exports={id:"reactjs",title:"ReactJS",score:28219,color:"#52c1de",site:"https://facebook.github.io/react"}},53:function(t,e){t.exports={id:"redux",title:"Redux.js",score:4354,color:"#784abe",site:"http://redux.js.org"}},54:function(t,e){t.exports={id:"riot",title:"Riot.js",score:106,color:"#ff0044",site:"http://riotjs.com"}},55:function(t,e){t.exports={id:"sass",title:"Sass",score:9791,color:"#cd6799",site:"http://sass-lang.com"}},56:function(t,e){t.exports={id:"snapsvg",title:"Snap.svg",score:601,color:"#08b39c",site:"http://snapsvg.io"}},57:function(t,e){t.exports={id:"socket.io",title:"Socket.io",score:10242,color:"#ac87df",site:"http://socket.io"}},58:function(t,e){t.exports={id:"vuejs",title:"Vue.js",score:2723,color:"#41b883",site:"https://vuejs.org"}},59:function(t,e){t.exports={id:"webpack",title:"Webpack",score:7154,color:"#2c3a42",site:"https://webpack.github.io"}},60:function(t,e){t.exports={id:"webtorrent",title:"WebTorrent",score:25,color:"#343b45",site:"https://webtorrent.io"}},61:function(t,e){t.exports={id:"woocommerce",title:"WooCommerce",score:16568,color:"#9b5c8f",site:"https://woocommerce.com"}},62:function(t,e){t.exports={id:"wordpress",title:"Wordpress",score:136251,color:"#464342",site:"https://wordpress.org"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,